{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/landscape/source/css/archive.less","path":"css/archive.less","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/category.less","path":"css/category.less","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/aside.less","path":"css/aside.less","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/app.less","path":"css/app.less","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/article.less","path":"css/article.less","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/icons.less","path":"css/icons.less","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/mixin.less","path":"css/mixin.less","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/comments.less","path":"css/comments.less","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/footer.less","path":"css/footer.less","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/markdown.less","path":"css/markdown.less","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/nav.less","path":"css/nav.less","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/monokai-sublime.less","path":"css/monokai-sublime.less","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/page.less","path":"css/page.less","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/tags.less","path":"css/tags.less","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/reset.less","path":"css/reset.less","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/vars.less","path":"css/vars.less","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/style.less","path":"css/style.less","modified":1,"renderable":1},{"_id":"themes/landscape/source/fonts/icomoon.eot","path":"fonts/icomoon.eot","modified":1,"renderable":1},{"_id":"themes/landscape/source/fonts/icomoon.ttf","path":"fonts/icomoon.ttf","modified":1,"renderable":1},{"_id":"themes/landscape/source/fonts/icomoon.svg","path":"fonts/icomoon.svg","modified":1,"renderable":1},{"_id":"themes/landscape/source/js/scrollspy.min.js","path":"js/scrollspy.min.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/fonts/icomoon.woff","path":"fonts/icomoon.woff","modified":1,"renderable":1},{"_id":"themes/landscape/source/images/favicon.ico","path":"images/favicon.ico","modified":1,"renderable":1},{"_id":"themes/landscape/source/svg/mail.svg","path":"svg/mail.svg","modified":1,"renderable":1},{"_id":"themes/landscape/source/svg/twitter.svg","path":"svg/twitter.svg","modified":1,"renderable":1},{"_id":"themes/landscape/source/svg/github.svg","path":"svg/github.svg","modified":1,"renderable":1},{"_id":"themes/landscape/source/images/avatar.jpg","path":"images/avatar.jpg","modified":1,"renderable":1}],"Cache":[{"_id":"themes/landscape/_config.yml","hash":"5c5dae5debf3fc60918a8d2ebb92133da644c399","modified":1595908825235},{"_id":"themes/landscape/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1593757451062},{"_id":"themes/landscape/README.md","hash":"31035849ceadc43616b642ec585dbee078561eb1","modified":1593757451063},{"_id":"themes/landscape/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1593760139298},{"_id":"source/_posts/ES6-Iterators.md","hash":"c20420834673ac2bf29d583aaf315bb27dab7d9f","modified":1593594746379},{"_id":"source/_posts/IntersectionObserver懒加载.md","hash":"1f808d6816825074afc16c458468db43334c7c91","modified":1593594746379},{"_id":"source/_posts/clip.md","hash":"51110e86ec2c59af96d80b365d79161d2c9c350b","modified":1593594746379},{"_id":"source/_posts/collect.md","hash":"95d921322c9bd81fc1983224e1a286cc7f98c6ca","modified":1593594746382},{"_id":"source/_posts/css3-anmation.md","hash":"834854b6ab77448511df062ac5eff6d187df2481","modified":1593594746382},{"_id":"source/_posts/deepCopy.md","hash":"7dd58cbf991e3e3e592c25e877064e59133021d9","modified":1593594746382},{"_id":"source/_posts/focus-preventScroll.md","hash":"24297065bc418bc85a25328615e480180952f9d8","modified":1593594746382},{"_id":"source/_posts/jc-10.md","hash":"f28bb061d1e253ee735ed901b9dbf3f7a66208cc","modified":1593594746384},{"_id":"source/_posts/goods.md","hash":"8eea33f58e86b72cb84f9304d74e2e81fc7757a2","modified":1593594746383},{"_id":"source/_posts/git-常用命令技巧.md","hash":"a3cb32b6fdc9c7b2a9f67a0daf95c9a7cb8544e4","modified":1593594746382},{"_id":"source/_posts/jc-11.md","hash":"e3bfb4331ac4268dd5f3041ade1d8ebc6b230344","modified":1593594746384},{"_id":"source/_posts/jc-12.md","hash":"27af4bccf57922d0e89b108b8319370123316740","modified":1593594746384},{"_id":"source/_posts/jc-1.md","hash":"8006039a548006cea70b6ee762eb47b3b5c07afe","modified":1593594746383},{"_id":"source/_posts/jc-3.md","hash":"1e660e330e5542c93042681da49204773cc0cf9a","modified":1593594746384},{"_id":"source/_posts/jc-4.md","hash":"1784edae5b8b455984bb2119932402b198cbaae1","modified":1593594746385},{"_id":"source/_posts/jc-2.md","hash":"c18a1e814524201f236bff5b04d2b80f15aad67d","modified":1593594746384},{"_id":"source/_posts/jc-13.md","hash":"8ce9d5e138d8c12d2ac0008a43569c368f5bd6b7","modified":1593594746384},{"_id":"source/_posts/jc-7.md","hash":"c893b47a4b3b4acdda85a9a26fff1b0bd6ebde0c","modified":1593594746385},{"_id":"source/_posts/jc-5.md","hash":"282f1ca371d4713ca19dfface62f34cfaaa65ba6","modified":1593594746385},{"_id":"source/_posts/jc-8.md","hash":"2e5910aba94654eb979a330180fd054e6e73b9bd","modified":1593594746385},{"_id":"source/_posts/jc-6.md","hash":"2a79344ad9f9c0a25b35788e2f424d41d72a52a6","modified":1593594746385},{"_id":"source/_posts/jc-9.md","hash":"152457aa075bca9974859ec0d1bd08b849ec77e1","modified":1593594746385},{"_id":"source/_posts/nodetips.md","hash":"52769e438853638cadd9625b02909dde01cf4fc4","modified":1593594746386},{"_id":"source/_posts/regular.md","hash":"87990fefd84d6260c3efdfa7f6c04e23f5037618","modified":1593594746386},{"_id":"source/_posts/shape.md","hash":"2d824f22a97eab1271ab56f96a543df1f76b2000","modified":1593594746386},{"_id":"source/_posts/vue-router-打开新页面.md","hash":"6c44693b8949cf8796fee206bfd2f6bfa12d62ff","modified":1593594746387},{"_id":"source/_posts/video.md","hash":"3d4f287504ab319284bc164b4f19b936cb0615df","modified":1593594746386},{"_id":"source/_posts/vuex.md","hash":"511d82350712f7ba69d891ebc9a8374628f5804b","modified":1593594746387},{"_id":"source/_posts/weather.md","hash":"46948506719e370b9e5814e70c01b5febe3e30ad","modified":1593594746387},{"_id":"source/_posts/开发问题记录.md","hash":"0ec4a1ea42fc19899cf7cca81d910ed7e55b6da3","modified":1593594746387},{"_id":"source/_posts/微信小程序生成微信头像.md","hash":"0bd4c85d042d0903ed8484c14f91be37bfd35748","modified":1593594746387},{"_id":"source/_posts/修改element源码如何部署代码打包.md","hash":"52b940bc54dcffaa618a68db805a6eaeffc38f20","modified":1596535847864},{"_id":"source/_posts/红皮书第六章-面向对象的设计程序.md","hash":"98a625547752973b1073fb28075023cd5874db35","modified":1597214062854},{"_id":"source/about/index.md","hash":"9ff6e9b1e0867d156c79361fd1521ee7d896cf07","modified":1593594746387},{"_id":"source/_posts/红皮书第五章-引用类型.md","hash":"0028c35ceafa1213565db6dd79e89c6f26195911","modified":1596506949314},{"_id":"source/tags/index.md","hash":"f1ea2687caea3ea080a0f6ff7a742013b718cd90","modified":1593594746388},{"_id":"source/_posts/字符窜数组常用易混淆方法总结.md","hash":"51ca2730849892ada558ffa2dd29ba1064a40f30","modified":1595906831029},{"_id":"themes/landscape/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1593757451063},{"_id":"themes/landscape/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1593757451063},{"_id":"themes/landscape/languages/fr.yml","hash":"84ab164b37c6abf625473e9a0c18f6f815dd5fd9","modified":1593757451063},{"_id":"themes/landscape/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1593757451063},{"_id":"themes/landscape/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1593757451064},{"_id":"themes/landscape/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1593757451064},{"_id":"themes/landscape/layout/archive.ejs","hash":"20a4f9193abdaf8b3ee0e7191f055d075d91e87c","modified":1593757451066},{"_id":"themes/landscape/layout/categories.ejs","hash":"1a302302df07dcb13b92992580c2661de5d3baf0","modified":1593757451066},{"_id":"themes/landscape/layout/category.ejs","hash":"e29542322fe798281a40eed476468aa8afba7d50","modified":1593757451066},{"_id":"themes/landscape/layout/index.ejs","hash":"e29542322fe798281a40eed476468aa8afba7d50","modified":1593757451066},{"_id":"themes/landscape/layout/layout.ejs","hash":"1a6fcfb5e5eacf4c3485781dd45410cc9fea2136","modified":1593763236109},{"_id":"themes/landscape/languages/zh-CN.yml","hash":"ca40697097ab0b3672a80b455d3f4081292d1eed","modified":1593757451064},{"_id":"themes/landscape/layout/page.ejs","hash":"576ae239f3aa9cda0aede19e9a7ff13e92fed13c","modified":1593757451067},{"_id":"themes/landscape/layout/post.ejs","hash":"d948161b862e2e2956f4e940ff3668cdebf1e1b2","modified":1593757451067},{"_id":"themes/landscape/scripts/include.js","hash":"3fd0947904a06209d1f58e97efe77d06abbabcb5","modified":1593757451069},{"_id":"themes/landscape/layout/tags.ejs","hash":"8b3a6ad1d789addeb628ad7a7d5ffc8a4b764bb3","modified":1593757451067},{"_id":"themes/landscape/layout/tag.ejs","hash":"0ef29619219277632a221155e51a85673011e248","modified":1593757451067},{"_id":"themes/landscape/preview.png","hash":"3dd563ba6885b21e85e721daa4e038f748585f8c","modified":1593757451069},{"_id":"themes/landscape/layout/_partial/article.ejs","hash":"40cff2943bda22e0ad6ffc5b4a24917d1a797bea","modified":1593757451064},{"_id":"themes/landscape/layout/_partial/articles.ejs","hash":"73c0e73d7ba9c75ee7750e891d797ea0c6f43bd6","modified":1593757451065},{"_id":"themes/landscape/layout/_partial/archive.ejs","hash":"67891e427712e39d73058f3001eabd8758dd0bbf","modified":1593757451064},{"_id":"themes/landscape/layout/_partial/comments.ejs","hash":"1585a780494dafed3718574d985cbb4aea315aaf","modified":1593757451065},{"_id":"themes/landscape/layout/_partial/header.ejs","hash":"740d7291b058f99626f6fca568a1b92c092079f2","modified":1593757451065},{"_id":"themes/landscape/layout/_partial/nav.ejs","hash":"c87ed02859a3e826dfc990af7e9a0564958a2c1c","modified":1593757451065},{"_id":"themes/landscape/layout/_partial/footer.ejs","hash":"c7feda5b58bea4dd96a3942fe1618fff8d6f5746","modified":1593763314310},{"_id":"themes/landscape/layout/_partial/aside.ejs","hash":"f043ff634e84261067cade78b290d8cf5b656dbf","modified":1593765103433},{"_id":"themes/landscape/source/css/archive.less","hash":"d10f45e30254f4422a26221b9f2e5c287270c7eb","modified":1593757451070},{"_id":"themes/landscape/source/css/category.less","hash":"35bb4dcc5c25c09204c30c3376a33157eef04da7","modified":1593757451070},{"_id":"themes/landscape/source/css/aside.less","hash":"440dc61431d392d63196501b468af0d984a6d519","modified":1593757451070},{"_id":"themes/landscape/source/css/app.less","hash":"d4156b1f509d5e7db99835ba8ce542e14aeeb1ff","modified":1593762957334},{"_id":"themes/landscape/source/css/article.less","hash":"78081a897780b90aee0fe4d4ad5c53b3f8fcfa33","modified":1593762743264},{"_id":"themes/landscape/source/css/icons.less","hash":"f055a61fa6971272efc7ecea708f229d99a2cf58","modified":1593757451071},{"_id":"themes/landscape/source/css/mixin.less","hash":"96f224ac301293c97dd313da67ca727c8ff17837","modified":1593757451071},{"_id":"themes/landscape/source/css/comments.less","hash":"60f22ee2e9aa024672ec862d5968d97a02eb1a3f","modified":1593757451070},{"_id":"themes/landscape/source/css/footer.less","hash":"26e4dcfafa7ea787be679c8e66fa4ce19b31b1ef","modified":1593763372151},{"_id":"themes/landscape/source/css/markdown.less","hash":"4f13db942debe9d3af5c12b9d1d4daa57342670a","modified":1593764158124},{"_id":"themes/landscape/source/css/nav.less","hash":"90049dd816260fb62530164c62df1ba7a8f95cd6","modified":1593757451072},{"_id":"themes/landscape/source/css/monokai-sublime.less","hash":"4cf301989ec56deec414dcfbb0056964854f87d6","modified":1593757451071},{"_id":"themes/landscape/source/css/page.less","hash":"3742302bb8d07760f538677826d64c9a1f7141ef","modified":1593757451072},{"_id":"themes/landscape/source/css/tags.less","hash":"de7b95b114314cfbe1befcbbdf505f455a7927e6","modified":1593757451072},{"_id":"themes/landscape/source/css/reset.less","hash":"f24a70d466e2ca28a28d823b0fcdcdd534ecbb1c","modified":1593757451072},{"_id":"themes/landscape/source/css/vars.less","hash":"60dab5f5ca67e8d3d3f439f6d10f0a40a653f0c7","modified":1593757451073},{"_id":"themes/landscape/source/css/style.less","hash":"e05f72e098298b500375ff6e544419ceb1a395bd","modified":1593757451072},{"_id":"themes/landscape/source/fonts/icomoon.eot","hash":"8300564edcd12262c6b8b97ba225bc00b72f5984","modified":1593757451073},{"_id":"themes/landscape/source/fonts/icomoon.ttf","hash":"6b577c657ccb5de7c321e51942a52922a4e95ec1","modified":1593757451073},{"_id":"themes/landscape/source/fonts/icomoon.svg","hash":"53a7893b9b630440f7381b156d3b7c9566c47523","modified":1593757451073},{"_id":"themes/landscape/source/js/scrollspy.min.js","hash":"076f7db44c3a05147144f736cae159baf1612f72","modified":1593757451075},{"_id":"themes/landscape/source/fonts/icomoon.woff","hash":"5a3b86fa1122f78d9b285fbd390bf142721c51ed","modified":1593757451074},{"_id":"themes/landscape/source/images/favicon.ico","hash":"69cf4573f0ef5dbd0c0246ec206ccfede808f0ae","modified":1593757451074},{"_id":"themes/landscape/source/svg/mail.svg","hash":"3a0421e792a0de74b85abf15fd8e1101984ae8cf","modified":1593757451075},{"_id":"themes/landscape/source/svg/twitter.svg","hash":"05ad5df10a4495e85ae417e241186e5205af930d","modified":1593757451075},{"_id":"themes/landscape/source/svg/github.svg","hash":"f2355900fe0ec5ed2f4e6d4cb271bda5feb90f06","modified":1593764864452},{"_id":"themes/landscape/source/images/avatar.jpg","hash":"b9338098a0fb9474222a011cb29289e973460286","modified":1593757451074},{"_id":"themes/landscape/layout/_partial/post/date.ejs","hash":"12dcac9e7fd9502b65b5167efd69d3bb01625c1c","modified":1593757451066},{"_id":"themes/landscape/layout/_partial/post/tags.ejs","hash":"b57e62180b12ab5493e24a740f126970764ae4c0","modified":1593757451066}],"Category":[{"name":"js-end","_id":"ckdr00y510004e7zc71p4rl5r"},{"name":"css-end","_id":"ckdr00y5e000ee7zc6md9oyyl"},{"name":"gc-end","_id":"ckdr00y5i000le7zcbwd68zba"},{"name":"html-end","_id":"ckdr00y5s0016e7zcv3lqxtny"},{"name":"jc-end","_id":"ckdr00y6d002re7zcuwckoykk"}],"Data":[],"Page":[{"title":"about","date":"2019-05-29T11:34:29.000Z","_content":"","source":"about/index.md","raw":"---\ntitle: about\ndate: 2019-05-29 19:34:29\n---\n","updated":"2020-07-01T09:12:26.387Z","path":"about/index.html","comments":1,"layout":"page","_id":"ckdr00y4y0001e7zc2pxfirlm","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"tags","date":"2019-05-29T11:37:38.000Z","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2019-05-29 19:37:38\n---\n","updated":"2020-07-01T09:12:26.388Z","path":"tags/index.html","comments":1,"layout":"page","_id":"ckdr00y500003e7zc3lvx6zu1","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"简单易懂的 ES6 Iterators 指南和示例","date":"2019-09-30T08:49:18.000Z","_content":"\n## 简介\n\n遍历器（Iterator）就是这样一种机制。它是一种接口，为各种不同的数据结构提供统一的访问机制。任何数据结构只要部署 Iterator 接口，就可以完成遍历操作（即依次处理该数据结构的所有成员）。\n\n<!-- more -->\n\n## 作用\n\nIterator 的作用有三个：\n1、是为各种数据结构，提供一个统一的、简便的访问接口；   \n2、是使得数据结构的成员能够按某种次序排列；   \n3、是 ES6 创造了一种新的遍历命令for...of循环，Iterator 接口主要供for...of消费。   \n## 执行过程\n\nIterator 的遍历过程是这样的。\n\n1、创建一个指针对象，指向当前数据结构的起始位置。也就是说，遍历器对象本质上，就是一个指针对象。\n\n2、第一次调用指针对象的next方法，可以将指针指向数据结构的第一个成员。\n\n3、第二次调用指针对象的next方法，指针就指向数据结构的第二个成员。\n\n4、不断调用指针对象的next方法，直到它指向数据结构的结束位置。\n\n每一次调用next方法，都会返回数据结构的当前成员的信息。具体来说，就是返回一个包含value和done两个属性的对象。其中，value属性是当前成员的值，done属性是一个布尔值，表示遍历是否结束。\n\n## 简单demo\n```javascript\nfunction makeIterator(arr) {\n  var nextIndex = 0;\n  return {\n    next: function () {\n      return nextIndex < arr.length ? \n        {value: arr[nextIndex++], done: false, index: nextIndex} : \n        {value: undefined, done: true, index: nextIndex};\n    }\n  }\n}\n\nvar it = makeIterator(['a','b']);\nconsole.log(it.next()) // {value: \"a\", done: false, index: 1}\nconsole.log(it.next()) // {value: \"b\", done: false, index: 2}\nconsole.log(it.next()) // {value: undefined, done: true, index: 2}\n```\n\n```javascript\nvar str = 'asdzxc123'\nfor (let val of str) {\n  console.log(val)\n}\n\nvar obj = {\n  a: 'a',\n  b: 'b'\n}\nfor (let val of obj) {\n  console.log(val) // Uncaught TypeError: obj is not iterable\n}\n\nlet arr = ['a', 'b', 'c'];\nlet iter = arr[Symbol.iterator]();\nconsole.log(iter.next()) // { value: 'a', done: false }\nconsole.log(iter.next()) // { value: 'b', done: false }\nconsole.log(iter.next()) // { value: 'c', done: false }\nconsole.log(iter.next()) // { value: undefined, done: true }\n\nlet arr = ['a', ['b','c'], 'd'];\nlet iter = arr[Symbol.iterator]();\nconsole.log(iter.next()) // { value: 'a', done: false }\nconsole.log(iter.next()) // {value: Array(2), done: false}\nconsole.log(iter.next()) // { value: 'd', done: false }\n```\n\n## 需求\n\n```javascript\nallAuthors: {\n    fiction: [\n      'Agatha Christie', \n      'J. K. Rowling',\n      'Dr. Seuss'\n    ],\n    scienceFiction: [\n      'Neal Stephenson',\n      'Arthur Clarke',\n      'Isaac Asimov', \n      'Robert Heinlein'\n    ],\n    fantasy: [\n      'J. R. R. Tolkien',\n      'J. K. Rowling',\n      'Terry Pratchett'\n    ],\n  }\n```\n将以上的对象中的数组的每一项都打印出来\n```javascript\nconst myFavouriteAuthors = {\n  allAuthors: {\n    fiction: [\n      'Agatha Christie', \n      'J. K. Rowling',\n      'Dr. Seuss'\n    ],\n    scienceFiction: [\n      'Neal Stephenson',\n      'Arthur Clarke',\n      'Isaac Asimov', \n      'Robert Heinlein'\n    ],\n    fantasy: [\n      'J. R. R. Tolkien',\n      'J. K. Rowling',\n      'Terry Pratchett'\n    ],\n  },\n  [Symbol.iterator]() {\n    let genres = Object.values(this.allAuthors)\n    let currentGenreIndex = 0 // 0 1 2 自增控制判断当前数组是否遍历完成 \n    let currentAuthorIndex = 0 // 每一小项的循环的指针 控制整个循环什么时候结束（返回{value: undefined,,done: true}）\n    return {\n      next() {\n        const authors = genres[currentGenreIndex] // fiction scienceFiction fantasy\n\n        console.log(authors, currentGenreIndex, currentAuthorIndex)\n        \n        // 遍历authors,当没有子项的时候，doNothaveMoreAuthors为true,\n        const doNothaveMoreAuthors = !(currentAuthorIndex < authors.length)\n        if (doNothaveMoreAuthors) {\n          currentGenreIndex++\n          currentAuthorIndex = 0\n        }\n        // 如果genres都遍历完了，那么我们需要告诉迭代器不能提供更多的值。\n        const doNotHaveMoreGenres = !(currentGenreIndex < genres.length)\n        if (doNotHaveMoreGenres) {\n          return {\n            value: undefined,\n            done: true\n          }\n        }\n        // 如果一切正常，从当genre 返回 作者和当前作者索引，以便下次，下一个作者可以返回。\n        return {\n          value: genres[currentGenreIndex][currentAuthorIndex++],\n          done: false\n        }\n      }\n    }\n  }\n}\nfor (const author of myFavouriteAuthors) {\n  console.log(author);\n}\n```\n\n[完整学习Iterator 和 for...of 循环](http://es6.ruanyifeng.com/#docs/iterator)","source":"_posts/ES6-Iterators.md","raw":"---\ntitle: 简单易懂的 ES6 Iterators 指南和示例\ncategories: js-end\ndate: 2019-09-30 16:49:18\ntags: ES6 Iterators\n---\n\n## 简介\n\n遍历器（Iterator）就是这样一种机制。它是一种接口，为各种不同的数据结构提供统一的访问机制。任何数据结构只要部署 Iterator 接口，就可以完成遍历操作（即依次处理该数据结构的所有成员）。\n\n<!-- more -->\n\n## 作用\n\nIterator 的作用有三个：\n1、是为各种数据结构，提供一个统一的、简便的访问接口；   \n2、是使得数据结构的成员能够按某种次序排列；   \n3、是 ES6 创造了一种新的遍历命令for...of循环，Iterator 接口主要供for...of消费。   \n## 执行过程\n\nIterator 的遍历过程是这样的。\n\n1、创建一个指针对象，指向当前数据结构的起始位置。也就是说，遍历器对象本质上，就是一个指针对象。\n\n2、第一次调用指针对象的next方法，可以将指针指向数据结构的第一个成员。\n\n3、第二次调用指针对象的next方法，指针就指向数据结构的第二个成员。\n\n4、不断调用指针对象的next方法，直到它指向数据结构的结束位置。\n\n每一次调用next方法，都会返回数据结构的当前成员的信息。具体来说，就是返回一个包含value和done两个属性的对象。其中，value属性是当前成员的值，done属性是一个布尔值，表示遍历是否结束。\n\n## 简单demo\n```javascript\nfunction makeIterator(arr) {\n  var nextIndex = 0;\n  return {\n    next: function () {\n      return nextIndex < arr.length ? \n        {value: arr[nextIndex++], done: false, index: nextIndex} : \n        {value: undefined, done: true, index: nextIndex};\n    }\n  }\n}\n\nvar it = makeIterator(['a','b']);\nconsole.log(it.next()) // {value: \"a\", done: false, index: 1}\nconsole.log(it.next()) // {value: \"b\", done: false, index: 2}\nconsole.log(it.next()) // {value: undefined, done: true, index: 2}\n```\n\n```javascript\nvar str = 'asdzxc123'\nfor (let val of str) {\n  console.log(val)\n}\n\nvar obj = {\n  a: 'a',\n  b: 'b'\n}\nfor (let val of obj) {\n  console.log(val) // Uncaught TypeError: obj is not iterable\n}\n\nlet arr = ['a', 'b', 'c'];\nlet iter = arr[Symbol.iterator]();\nconsole.log(iter.next()) // { value: 'a', done: false }\nconsole.log(iter.next()) // { value: 'b', done: false }\nconsole.log(iter.next()) // { value: 'c', done: false }\nconsole.log(iter.next()) // { value: undefined, done: true }\n\nlet arr = ['a', ['b','c'], 'd'];\nlet iter = arr[Symbol.iterator]();\nconsole.log(iter.next()) // { value: 'a', done: false }\nconsole.log(iter.next()) // {value: Array(2), done: false}\nconsole.log(iter.next()) // { value: 'd', done: false }\n```\n\n## 需求\n\n```javascript\nallAuthors: {\n    fiction: [\n      'Agatha Christie', \n      'J. K. Rowling',\n      'Dr. Seuss'\n    ],\n    scienceFiction: [\n      'Neal Stephenson',\n      'Arthur Clarke',\n      'Isaac Asimov', \n      'Robert Heinlein'\n    ],\n    fantasy: [\n      'J. R. R. Tolkien',\n      'J. K. Rowling',\n      'Terry Pratchett'\n    ],\n  }\n```\n将以上的对象中的数组的每一项都打印出来\n```javascript\nconst myFavouriteAuthors = {\n  allAuthors: {\n    fiction: [\n      'Agatha Christie', \n      'J. K. Rowling',\n      'Dr. Seuss'\n    ],\n    scienceFiction: [\n      'Neal Stephenson',\n      'Arthur Clarke',\n      'Isaac Asimov', \n      'Robert Heinlein'\n    ],\n    fantasy: [\n      'J. R. R. Tolkien',\n      'J. K. Rowling',\n      'Terry Pratchett'\n    ],\n  },\n  [Symbol.iterator]() {\n    let genres = Object.values(this.allAuthors)\n    let currentGenreIndex = 0 // 0 1 2 自增控制判断当前数组是否遍历完成 \n    let currentAuthorIndex = 0 // 每一小项的循环的指针 控制整个循环什么时候结束（返回{value: undefined,,done: true}）\n    return {\n      next() {\n        const authors = genres[currentGenreIndex] // fiction scienceFiction fantasy\n\n        console.log(authors, currentGenreIndex, currentAuthorIndex)\n        \n        // 遍历authors,当没有子项的时候，doNothaveMoreAuthors为true,\n        const doNothaveMoreAuthors = !(currentAuthorIndex < authors.length)\n        if (doNothaveMoreAuthors) {\n          currentGenreIndex++\n          currentAuthorIndex = 0\n        }\n        // 如果genres都遍历完了，那么我们需要告诉迭代器不能提供更多的值。\n        const doNotHaveMoreGenres = !(currentGenreIndex < genres.length)\n        if (doNotHaveMoreGenres) {\n          return {\n            value: undefined,\n            done: true\n          }\n        }\n        // 如果一切正常，从当genre 返回 作者和当前作者索引，以便下次，下一个作者可以返回。\n        return {\n          value: genres[currentGenreIndex][currentAuthorIndex++],\n          done: false\n        }\n      }\n    }\n  }\n}\nfor (const author of myFavouriteAuthors) {\n  console.log(author);\n}\n```\n\n[完整学习Iterator 和 for...of 循环](http://es6.ruanyifeng.com/#docs/iterator)","slug":"ES6-Iterators","published":1,"updated":"2020-07-01T09:12:26.379Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdr00y4w0000e7zca6rqibe1","content":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>遍历器（Iterator）就是这样一种机制。它是一种接口，为各种不同的数据结构提供统一的访问机制。任何数据结构只要部署 Iterator 接口，就可以完成遍历操作（即依次处理该数据结构的所有成员）。</p>\n<a id=\"more\"></a>\n<h2 id=\"作用\"><a href=\"#作用\" class=\"headerlink\" title=\"作用\"></a>作用</h2><p>Iterator 的作用有三个：<br>1、是为各种数据结构，提供一个统一的、简便的访问接口；<br>2、是使得数据结构的成员能够按某种次序排列；<br>3、是 ES6 创造了一种新的遍历命令for…of循环，Iterator 接口主要供for…of消费。   </p>\n<h2 id=\"执行过程\"><a href=\"#执行过程\" class=\"headerlink\" title=\"执行过程\"></a>执行过程</h2><p>Iterator 的遍历过程是这样的。</p>\n<p>1、创建一个指针对象，指向当前数据结构的起始位置。也就是说，遍历器对象本质上，就是一个指针对象。</p>\n<p>2、第一次调用指针对象的next方法，可以将指针指向数据结构的第一个成员。</p>\n<p>3、第二次调用指针对象的next方法，指针就指向数据结构的第二个成员。</p>\n<p>4、不断调用指针对象的next方法，直到它指向数据结构的结束位置。</p>\n<p>每一次调用next方法，都会返回数据结构的当前成员的信息。具体来说，就是返回一个包含value和done两个属性的对象。其中，value属性是当前成员的值，done属性是一个布尔值，表示遍历是否结束。</p>\n<h2 id=\"简单demo\"><a href=\"#简单demo\" class=\"headerlink\" title=\"简单demo\"></a>简单demo</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">makeIterator</span>(<span class=\"params\">arr</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> nextIndex = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    next: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> nextIndex &lt; arr.length ? </span><br><span class=\"line\">        &#123;<span class=\"attr\">value</span>: arr[nextIndex++], <span class=\"attr\">done</span>: <span class=\"literal\">false</span>, <span class=\"attr\">index</span>: nextIndex&#125; : </span><br><span class=\"line\">        &#123;<span class=\"attr\">value</span>: <span class=\"literal\">undefined</span>, <span class=\"attr\">done</span>: <span class=\"literal\">true</span>, <span class=\"attr\">index</span>: nextIndex&#125;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> it = makeIterator([<span class=\"string\">'a'</span>,<span class=\"string\">'b'</span>]);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(it.next()) <span class=\"comment\">// &#123;value: \"a\", done: false, index: 1&#125;</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(it.next()) <span class=\"comment\">// &#123;value: \"b\", done: false, index: 2&#125;</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(it.next()) <span class=\"comment\">// &#123;value: undefined, done: true, index: 2&#125;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">'asdzxc123'</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> val <span class=\"keyword\">of</span> str) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(val)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">  a: <span class=\"string\">'a'</span>,</span><br><span class=\"line\">  b: <span class=\"string\">'b'</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> val <span class=\"keyword\">of</span> obj) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(val) <span class=\"comment\">// Uncaught TypeError: obj is not iterable</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> arr = [<span class=\"string\">'a'</span>, <span class=\"string\">'b'</span>, <span class=\"string\">'c'</span>];</span><br><span class=\"line\"><span class=\"keyword\">let</span> iter = arr[<span class=\"built_in\">Symbol</span>.iterator]();</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(iter.next()) <span class=\"comment\">// &#123; value: 'a', done: false &#125;</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(iter.next()) <span class=\"comment\">// &#123; value: 'b', done: false &#125;</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(iter.next()) <span class=\"comment\">// &#123; value: 'c', done: false &#125;</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(iter.next()) <span class=\"comment\">// &#123; value: undefined, done: true &#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> arr = [<span class=\"string\">'a'</span>, [<span class=\"string\">'b'</span>,<span class=\"string\">'c'</span>], <span class=\"string\">'d'</span>];</span><br><span class=\"line\"><span class=\"keyword\">let</span> iter = arr[<span class=\"built_in\">Symbol</span>.iterator]();</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(iter.next()) <span class=\"comment\">// &#123; value: 'a', done: false &#125;</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(iter.next()) <span class=\"comment\">// &#123;value: Array(2), done: false&#125;</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(iter.next()) <span class=\"comment\">// &#123; value: 'd', done: false &#125;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"需求\"><a href=\"#需求\" class=\"headerlink\" title=\"需求\"></a>需求</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">allAuthors: &#123;</span><br><span class=\"line\">    fiction: [</span><br><span class=\"line\">      <span class=\"string\">'Agatha Christie'</span>, </span><br><span class=\"line\">      <span class=\"string\">'J. K. Rowling'</span>,</span><br><span class=\"line\">      <span class=\"string\">'Dr. Seuss'</span></span><br><span class=\"line\">    ],</span><br><span class=\"line\">    scienceFiction: [</span><br><span class=\"line\">      <span class=\"string\">'Neal Stephenson'</span>,</span><br><span class=\"line\">      <span class=\"string\">'Arthur Clarke'</span>,</span><br><span class=\"line\">      <span class=\"string\">'Isaac Asimov'</span>, </span><br><span class=\"line\">      <span class=\"string\">'Robert Heinlein'</span></span><br><span class=\"line\">    ],</span><br><span class=\"line\">    fantasy: [</span><br><span class=\"line\">      <span class=\"string\">'J. R. R. Tolkien'</span>,</span><br><span class=\"line\">      <span class=\"string\">'J. K. Rowling'</span>,</span><br><span class=\"line\">      <span class=\"string\">'Terry Pratchett'</span></span><br><span class=\"line\">    ],</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n<p>将以上的对象中的数组的每一项都打印出来<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> myFavouriteAuthors = &#123;</span><br><span class=\"line\">  allAuthors: &#123;</span><br><span class=\"line\">    fiction: [</span><br><span class=\"line\">      <span class=\"string\">'Agatha Christie'</span>, </span><br><span class=\"line\">      <span class=\"string\">'J. K. Rowling'</span>,</span><br><span class=\"line\">      <span class=\"string\">'Dr. Seuss'</span></span><br><span class=\"line\">    ],</span><br><span class=\"line\">    scienceFiction: [</span><br><span class=\"line\">      <span class=\"string\">'Neal Stephenson'</span>,</span><br><span class=\"line\">      <span class=\"string\">'Arthur Clarke'</span>,</span><br><span class=\"line\">      <span class=\"string\">'Isaac Asimov'</span>, </span><br><span class=\"line\">      <span class=\"string\">'Robert Heinlein'</span></span><br><span class=\"line\">    ],</span><br><span class=\"line\">    fantasy: [</span><br><span class=\"line\">      <span class=\"string\">'J. R. R. Tolkien'</span>,</span><br><span class=\"line\">      <span class=\"string\">'J. K. Rowling'</span>,</span><br><span class=\"line\">      <span class=\"string\">'Terry Pratchett'</span></span><br><span class=\"line\">    ],</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  [<span class=\"built_in\">Symbol</span>.iterator]() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> genres = <span class=\"built_in\">Object</span>.values(<span class=\"keyword\">this</span>.allAuthors)</span><br><span class=\"line\">    <span class=\"keyword\">let</span> currentGenreIndex = <span class=\"number\">0</span> <span class=\"comment\">// 0 1 2 自增控制判断当前数组是否遍历完成 </span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> currentAuthorIndex = <span class=\"number\">0</span> <span class=\"comment\">// 每一小项的循环的指针 控制整个循环什么时候结束（返回&#123;value: undefined,,done: true&#125;）</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      next() &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> authors = genres[currentGenreIndex] <span class=\"comment\">// fiction scienceFiction fantasy</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(authors, currentGenreIndex, currentAuthorIndex)</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">// 遍历authors,当没有子项的时候，doNothaveMoreAuthors为true,</span></span><br><span class=\"line\">        <span class=\"keyword\">const</span> doNothaveMoreAuthors = !(currentAuthorIndex &lt; authors.length)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (doNothaveMoreAuthors) &#123;</span><br><span class=\"line\">          currentGenreIndex++</span><br><span class=\"line\">          currentAuthorIndex = <span class=\"number\">0</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">// 如果genres都遍历完了，那么我们需要告诉迭代器不能提供更多的值。</span></span><br><span class=\"line\">        <span class=\"keyword\">const</span> doNotHaveMoreGenres = !(currentGenreIndex &lt; genres.length)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (doNotHaveMoreGenres) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">            value: <span class=\"literal\">undefined</span>,</span><br><span class=\"line\">            done: <span class=\"literal\">true</span></span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">// 如果一切正常，从当genre 返回 作者和当前作者索引，以便下次，下一个作者可以返回。</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">          value: genres[currentGenreIndex][currentAuthorIndex++],</span><br><span class=\"line\">          done: <span class=\"literal\">false</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> author <span class=\"keyword\">of</span> myFavouriteAuthors) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(author);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><a href=\"http://es6.ruanyifeng.com/#docs/iterator\" target=\"_blank\" rel=\"noopener\">完整学习Iterator 和 for…of 循环</a></p>\n","site":{"data":{}},"excerpt":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>遍历器（Iterator）就是这样一种机制。它是一种接口，为各种不同的数据结构提供统一的访问机制。任何数据结构只要部署 Iterator 接口，就可以完成遍历操作（即依次处理该数据结构的所有成员）。</p>","more":"<h2 id=\"作用\"><a href=\"#作用\" class=\"headerlink\" title=\"作用\"></a>作用</h2><p>Iterator 的作用有三个：<br>1、是为各种数据结构，提供一个统一的、简便的访问接口；<br>2、是使得数据结构的成员能够按某种次序排列；<br>3、是 ES6 创造了一种新的遍历命令for…of循环，Iterator 接口主要供for…of消费。   </p>\n<h2 id=\"执行过程\"><a href=\"#执行过程\" class=\"headerlink\" title=\"执行过程\"></a>执行过程</h2><p>Iterator 的遍历过程是这样的。</p>\n<p>1、创建一个指针对象，指向当前数据结构的起始位置。也就是说，遍历器对象本质上，就是一个指针对象。</p>\n<p>2、第一次调用指针对象的next方法，可以将指针指向数据结构的第一个成员。</p>\n<p>3、第二次调用指针对象的next方法，指针就指向数据结构的第二个成员。</p>\n<p>4、不断调用指针对象的next方法，直到它指向数据结构的结束位置。</p>\n<p>每一次调用next方法，都会返回数据结构的当前成员的信息。具体来说，就是返回一个包含value和done两个属性的对象。其中，value属性是当前成员的值，done属性是一个布尔值，表示遍历是否结束。</p>\n<h2 id=\"简单demo\"><a href=\"#简单demo\" class=\"headerlink\" title=\"简单demo\"></a>简单demo</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">makeIterator</span>(<span class=\"params\">arr</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> nextIndex = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    next: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> nextIndex &lt; arr.length ? </span><br><span class=\"line\">        &#123;<span class=\"attr\">value</span>: arr[nextIndex++], <span class=\"attr\">done</span>: <span class=\"literal\">false</span>, <span class=\"attr\">index</span>: nextIndex&#125; : </span><br><span class=\"line\">        &#123;<span class=\"attr\">value</span>: <span class=\"literal\">undefined</span>, <span class=\"attr\">done</span>: <span class=\"literal\">true</span>, <span class=\"attr\">index</span>: nextIndex&#125;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> it = makeIterator([<span class=\"string\">'a'</span>,<span class=\"string\">'b'</span>]);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(it.next()) <span class=\"comment\">// &#123;value: \"a\", done: false, index: 1&#125;</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(it.next()) <span class=\"comment\">// &#123;value: \"b\", done: false, index: 2&#125;</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(it.next()) <span class=\"comment\">// &#123;value: undefined, done: true, index: 2&#125;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">'asdzxc123'</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> val <span class=\"keyword\">of</span> str) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(val)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">  a: <span class=\"string\">'a'</span>,</span><br><span class=\"line\">  b: <span class=\"string\">'b'</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> val <span class=\"keyword\">of</span> obj) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(val) <span class=\"comment\">// Uncaught TypeError: obj is not iterable</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> arr = [<span class=\"string\">'a'</span>, <span class=\"string\">'b'</span>, <span class=\"string\">'c'</span>];</span><br><span class=\"line\"><span class=\"keyword\">let</span> iter = arr[<span class=\"built_in\">Symbol</span>.iterator]();</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(iter.next()) <span class=\"comment\">// &#123; value: 'a', done: false &#125;</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(iter.next()) <span class=\"comment\">// &#123; value: 'b', done: false &#125;</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(iter.next()) <span class=\"comment\">// &#123; value: 'c', done: false &#125;</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(iter.next()) <span class=\"comment\">// &#123; value: undefined, done: true &#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> arr = [<span class=\"string\">'a'</span>, [<span class=\"string\">'b'</span>,<span class=\"string\">'c'</span>], <span class=\"string\">'d'</span>];</span><br><span class=\"line\"><span class=\"keyword\">let</span> iter = arr[<span class=\"built_in\">Symbol</span>.iterator]();</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(iter.next()) <span class=\"comment\">// &#123; value: 'a', done: false &#125;</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(iter.next()) <span class=\"comment\">// &#123;value: Array(2), done: false&#125;</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(iter.next()) <span class=\"comment\">// &#123; value: 'd', done: false &#125;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"需求\"><a href=\"#需求\" class=\"headerlink\" title=\"需求\"></a>需求</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">allAuthors: &#123;</span><br><span class=\"line\">    fiction: [</span><br><span class=\"line\">      <span class=\"string\">'Agatha Christie'</span>, </span><br><span class=\"line\">      <span class=\"string\">'J. K. Rowling'</span>,</span><br><span class=\"line\">      <span class=\"string\">'Dr. Seuss'</span></span><br><span class=\"line\">    ],</span><br><span class=\"line\">    scienceFiction: [</span><br><span class=\"line\">      <span class=\"string\">'Neal Stephenson'</span>,</span><br><span class=\"line\">      <span class=\"string\">'Arthur Clarke'</span>,</span><br><span class=\"line\">      <span class=\"string\">'Isaac Asimov'</span>, </span><br><span class=\"line\">      <span class=\"string\">'Robert Heinlein'</span></span><br><span class=\"line\">    ],</span><br><span class=\"line\">    fantasy: [</span><br><span class=\"line\">      <span class=\"string\">'J. R. R. Tolkien'</span>,</span><br><span class=\"line\">      <span class=\"string\">'J. K. Rowling'</span>,</span><br><span class=\"line\">      <span class=\"string\">'Terry Pratchett'</span></span><br><span class=\"line\">    ],</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n<p>将以上的对象中的数组的每一项都打印出来<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> myFavouriteAuthors = &#123;</span><br><span class=\"line\">  allAuthors: &#123;</span><br><span class=\"line\">    fiction: [</span><br><span class=\"line\">      <span class=\"string\">'Agatha Christie'</span>, </span><br><span class=\"line\">      <span class=\"string\">'J. K. Rowling'</span>,</span><br><span class=\"line\">      <span class=\"string\">'Dr. Seuss'</span></span><br><span class=\"line\">    ],</span><br><span class=\"line\">    scienceFiction: [</span><br><span class=\"line\">      <span class=\"string\">'Neal Stephenson'</span>,</span><br><span class=\"line\">      <span class=\"string\">'Arthur Clarke'</span>,</span><br><span class=\"line\">      <span class=\"string\">'Isaac Asimov'</span>, </span><br><span class=\"line\">      <span class=\"string\">'Robert Heinlein'</span></span><br><span class=\"line\">    ],</span><br><span class=\"line\">    fantasy: [</span><br><span class=\"line\">      <span class=\"string\">'J. R. R. Tolkien'</span>,</span><br><span class=\"line\">      <span class=\"string\">'J. K. Rowling'</span>,</span><br><span class=\"line\">      <span class=\"string\">'Terry Pratchett'</span></span><br><span class=\"line\">    ],</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  [<span class=\"built_in\">Symbol</span>.iterator]() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> genres = <span class=\"built_in\">Object</span>.values(<span class=\"keyword\">this</span>.allAuthors)</span><br><span class=\"line\">    <span class=\"keyword\">let</span> currentGenreIndex = <span class=\"number\">0</span> <span class=\"comment\">// 0 1 2 自增控制判断当前数组是否遍历完成 </span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> currentAuthorIndex = <span class=\"number\">0</span> <span class=\"comment\">// 每一小项的循环的指针 控制整个循环什么时候结束（返回&#123;value: undefined,,done: true&#125;）</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      next() &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> authors = genres[currentGenreIndex] <span class=\"comment\">// fiction scienceFiction fantasy</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(authors, currentGenreIndex, currentAuthorIndex)</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">// 遍历authors,当没有子项的时候，doNothaveMoreAuthors为true,</span></span><br><span class=\"line\">        <span class=\"keyword\">const</span> doNothaveMoreAuthors = !(currentAuthorIndex &lt; authors.length)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (doNothaveMoreAuthors) &#123;</span><br><span class=\"line\">          currentGenreIndex++</span><br><span class=\"line\">          currentAuthorIndex = <span class=\"number\">0</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">// 如果genres都遍历完了，那么我们需要告诉迭代器不能提供更多的值。</span></span><br><span class=\"line\">        <span class=\"keyword\">const</span> doNotHaveMoreGenres = !(currentGenreIndex &lt; genres.length)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (doNotHaveMoreGenres) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">            value: <span class=\"literal\">undefined</span>,</span><br><span class=\"line\">            done: <span class=\"literal\">true</span></span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">// 如果一切正常，从当genre 返回 作者和当前作者索引，以便下次，下一个作者可以返回。</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">          value: genres[currentGenreIndex][currentAuthorIndex++],</span><br><span class=\"line\">          done: <span class=\"literal\">false</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> author <span class=\"keyword\">of</span> myFavouriteAuthors) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(author);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><a href=\"http://es6.ruanyifeng.com/#docs/iterator\" target=\"_blank\" rel=\"noopener\">完整学习Iterator 和 for…of 循环</a></p>"},{"title":"IntersectionObserver懒加载","date":"2019-11-05T03:43:06.000Z","_content":"\n## 前言   \n懒加载，顾名思义，在当前网页，滑动页面到能看到图片的时候再加载图片   \n故问题拆分成两个：   \n1.如何判断图片出现在了当前视口 （即如何判断我们能够看到图片）   \n2.如何控制图片的加载   \n\n<!-- more -->\n\n## 方案一\n这是最常见的老办法：直接贴代码   \n### 核心代码   \n```javascript\nfunction lazyLoad(params, callback) {\n  const wHeight = document.documentElement.clientHeight || document.body.clientHeight //浏览器的高度\n  let sTop  //滚动条的高度\n  const attr = params.attr || 'data-src'\n  const className = params.className || 'lazy'\n  const errorImage = params.errorImage || ''\n  const space = params.interval || 100  /** 函数节流间隔 */\n  const dom = document.getElementsByClassName(className)\n  let before = 0 /** 上一次代码执行时间（节流用） */\n  function loadImage(el) {\n    el.src = el.getAttribute(attr)\n    el.removeAttribute(attr)\n    // 图片加载失败\n    el.onerror = function () {\n      el.src = errorImage\n    }\n  }\n  function judgeImages() {\n    const now = Date.now()\n    if (now - before < space) return\n    before = now\n    sTop = document.documentElement.scrollTop || window.pageYOffset || document.body.scrollTop\n    for(var j=0;j<dom.length;j++){\n        if(dom[j].offsetTop <= sTop + wHeight && dom[j].getAttribute(attr)){\n          loadImage(dom[j])\n        }\n    }\n  }\n  judgeImages()\n  window.addEventListener('scroll', judgeImages)\n}\nlazyLoad({\n  attr: 'data-src',\n  className: 'lazy',\n  interval: '100',\n  errorImage: 'imgs/6.png'\n})\n```\n```javascript\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n  <title>Document</title>\n</head>\n<body>\n<ul class=\"photos\">\n  <li>1：<img class=\"lazy\" src=\"imgs/6.png\" data-src=\"imgs/1.png\"></li>\n  <li>2：<img class=\"lazy\" src=\"imgs/6.png\" data-src=\"imgs/2.png\"></li>\n  <li>3：<img class=\"lazy\" src=\"imgs/6.png\" data-src=\"imgs/3.png\"></li>\n  <li>4：<img class=\"lazy\" src=\"imgs/6.png\" data-src=\"imgs/4.png\"></li>\n  <li>5：<img class=\"lazy\" src=\"imgs/6.png\" data-src=\"imgs/5.png\"></li>\n</ul>\n</body>\n<script type=\"text/javascript\">\nfunction lazyLoad(params, callback) {\n  const wHeight = document.documentElement.clientHeight || document.body.clientHeight //浏览器的高度\n  let sTop  //滚动条的高度\n  const attr = params.attr || 'data-src'\n  const className = params.className || 'lazy'\n  const errorImage = params.errorImage || ''\n  const space = params.interval || 100  /** 函数节流间隔 */\n  const dom = document.getElementsByClassName(className)\n  let before = 0 /** 上一次代码执行时间（节流用） */\n  function loadImage(el) {\n    el.src = el.getAttribute(attr)\n    el.removeAttribute(attr)\n    // 图片加载失败\n    el.onerror = function () {\n      el.src = errorImage\n    }\n  }\n  function judgeImages() {\n    const now = Date.now()\n    if (now - before < space) return\n    before = now\n    sTop = document.documentElement.scrollTop || window.pageYOffset || document.body.scrollTop\n    for(var j=0;j<dom.length;j++){\n        if(dom[j].offsetTop <= sTop + wHeight && dom[j].getAttribute(attr)){\n          loadImage(dom[j])\n        }\n    }\n  }\n  judgeImages()\n  window.addEventListener('scroll', judgeImages)\n}\nlazyLoad({\n  attr: 'data-src',\n  className: 'lazy',\n  interval: '100',\n  errorImage: 'imgs/6.png'\n})\n</script>\n</html>\n```\n\n## 方法二\n\nrootBounds 是在根元素（默认就是viewport）矩形区域的信息，调用getBoundingClientRect()的返回值；   \nboundingClientRect 是在目标元素（默认就是viewport），矩形区域的信息，调用getBoundingClientRect()的返回值；   \nintersectionRect 是目标元素与根元素交叉区域的信息，并且能清楚地告诉你目标元素的哪个部分是可见的。   \nintersectionRatio 目标元素的可见比例，密切相关的一个东西，它能告诉你元素当中有多大一部分是可见的（下图）。有了这个信息，你可以有效地实现一些功能，比如当资源在屏幕上可见之前刚好加载出来。   \n\n```\n// api\nvar io = new IntersectionObserver(callback, option);\n\n// 开始观察\nio.observe(document.getElementById('example'));\n// 停止观察\nio.unobserve(element);\n// 关闭观察器\nio.disconnect();\n```\napi具体介绍链接： http://www.ruanyifeng.com/blog/2016/11/intersectionobserver_api.html\n\n代码运行思路：\n```\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n  <title>Document</title>\n  <script type=\"text/javascript\" src=\"http://code.jquery.com/jquery-3.4.1.js\"></script>\n</head>\n<style>\nbody{\n  height: 1000px;\n}\n.div{\n  width: 300px;\n  height: 300px;\n  margin-bottom: 10px;\n  border: 1px solid #dddddd;\n}\n</style>\n<body>\n  <div class=\"div\">1</div>\n  <div class=\"div\">2</div>\n  <div class=\"div\">3</div>\n  <div class=\"div\">4</div>\n  <div class=\"div\">5</div>\n</body>\n<script>\n$(function(){\n  const observer = new IntersectionObserver((changes) => {\n    // changes: 目标元素集合\n    changes.forEach((change) => {\n      if (change.isIntersecting) { // entry.intersectionRatio > 0 && entry.intersectionRatio <= 1 (intersectionRatio 表示相交区域和目标元素的比例值) \n        const div = change.target\n        console.log('div', div, change.intersectionRatio, change.boundingClientRect)\n        observer.unobserve(div) // 图片已加载， 解除观察\n      }\n    })\n  })\n  let divs = document.querySelectorAll('.div')\n  divs.forEach(div => {\n    observer.observe(div)\n  })\n})\n</script>\n</html>\n```\n\n## 方法三\n浏览器觉得懒加载这事可以交给自己做，你们开发者加个属性就好了。实在是...！   \n```html\n<img src=\"aaa.jpg\" loading=\"lazy\">\n```\n> 不过目前浏览器兼容性不太好   \n","source":"_posts/IntersectionObserver懒加载.md","raw":"---\ntitle: IntersectionObserver懒加载\ncategories: js-end\ndate: 2019-11-05 11:43:06\ntags: js\n---\n\n## 前言   \n懒加载，顾名思义，在当前网页，滑动页面到能看到图片的时候再加载图片   \n故问题拆分成两个：   \n1.如何判断图片出现在了当前视口 （即如何判断我们能够看到图片）   \n2.如何控制图片的加载   \n\n<!-- more -->\n\n## 方案一\n这是最常见的老办法：直接贴代码   \n### 核心代码   \n```javascript\nfunction lazyLoad(params, callback) {\n  const wHeight = document.documentElement.clientHeight || document.body.clientHeight //浏览器的高度\n  let sTop  //滚动条的高度\n  const attr = params.attr || 'data-src'\n  const className = params.className || 'lazy'\n  const errorImage = params.errorImage || ''\n  const space = params.interval || 100  /** 函数节流间隔 */\n  const dom = document.getElementsByClassName(className)\n  let before = 0 /** 上一次代码执行时间（节流用） */\n  function loadImage(el) {\n    el.src = el.getAttribute(attr)\n    el.removeAttribute(attr)\n    // 图片加载失败\n    el.onerror = function () {\n      el.src = errorImage\n    }\n  }\n  function judgeImages() {\n    const now = Date.now()\n    if (now - before < space) return\n    before = now\n    sTop = document.documentElement.scrollTop || window.pageYOffset || document.body.scrollTop\n    for(var j=0;j<dom.length;j++){\n        if(dom[j].offsetTop <= sTop + wHeight && dom[j].getAttribute(attr)){\n          loadImage(dom[j])\n        }\n    }\n  }\n  judgeImages()\n  window.addEventListener('scroll', judgeImages)\n}\nlazyLoad({\n  attr: 'data-src',\n  className: 'lazy',\n  interval: '100',\n  errorImage: 'imgs/6.png'\n})\n```\n```javascript\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n  <title>Document</title>\n</head>\n<body>\n<ul class=\"photos\">\n  <li>1：<img class=\"lazy\" src=\"imgs/6.png\" data-src=\"imgs/1.png\"></li>\n  <li>2：<img class=\"lazy\" src=\"imgs/6.png\" data-src=\"imgs/2.png\"></li>\n  <li>3：<img class=\"lazy\" src=\"imgs/6.png\" data-src=\"imgs/3.png\"></li>\n  <li>4：<img class=\"lazy\" src=\"imgs/6.png\" data-src=\"imgs/4.png\"></li>\n  <li>5：<img class=\"lazy\" src=\"imgs/6.png\" data-src=\"imgs/5.png\"></li>\n</ul>\n</body>\n<script type=\"text/javascript\">\nfunction lazyLoad(params, callback) {\n  const wHeight = document.documentElement.clientHeight || document.body.clientHeight //浏览器的高度\n  let sTop  //滚动条的高度\n  const attr = params.attr || 'data-src'\n  const className = params.className || 'lazy'\n  const errorImage = params.errorImage || ''\n  const space = params.interval || 100  /** 函数节流间隔 */\n  const dom = document.getElementsByClassName(className)\n  let before = 0 /** 上一次代码执行时间（节流用） */\n  function loadImage(el) {\n    el.src = el.getAttribute(attr)\n    el.removeAttribute(attr)\n    // 图片加载失败\n    el.onerror = function () {\n      el.src = errorImage\n    }\n  }\n  function judgeImages() {\n    const now = Date.now()\n    if (now - before < space) return\n    before = now\n    sTop = document.documentElement.scrollTop || window.pageYOffset || document.body.scrollTop\n    for(var j=0;j<dom.length;j++){\n        if(dom[j].offsetTop <= sTop + wHeight && dom[j].getAttribute(attr)){\n          loadImage(dom[j])\n        }\n    }\n  }\n  judgeImages()\n  window.addEventListener('scroll', judgeImages)\n}\nlazyLoad({\n  attr: 'data-src',\n  className: 'lazy',\n  interval: '100',\n  errorImage: 'imgs/6.png'\n})\n</script>\n</html>\n```\n\n## 方法二\n\nrootBounds 是在根元素（默认就是viewport）矩形区域的信息，调用getBoundingClientRect()的返回值；   \nboundingClientRect 是在目标元素（默认就是viewport），矩形区域的信息，调用getBoundingClientRect()的返回值；   \nintersectionRect 是目标元素与根元素交叉区域的信息，并且能清楚地告诉你目标元素的哪个部分是可见的。   \nintersectionRatio 目标元素的可见比例，密切相关的一个东西，它能告诉你元素当中有多大一部分是可见的（下图）。有了这个信息，你可以有效地实现一些功能，比如当资源在屏幕上可见之前刚好加载出来。   \n\n```\n// api\nvar io = new IntersectionObserver(callback, option);\n\n// 开始观察\nio.observe(document.getElementById('example'));\n// 停止观察\nio.unobserve(element);\n// 关闭观察器\nio.disconnect();\n```\napi具体介绍链接： http://www.ruanyifeng.com/blog/2016/11/intersectionobserver_api.html\n\n代码运行思路：\n```\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n  <title>Document</title>\n  <script type=\"text/javascript\" src=\"http://code.jquery.com/jquery-3.4.1.js\"></script>\n</head>\n<style>\nbody{\n  height: 1000px;\n}\n.div{\n  width: 300px;\n  height: 300px;\n  margin-bottom: 10px;\n  border: 1px solid #dddddd;\n}\n</style>\n<body>\n  <div class=\"div\">1</div>\n  <div class=\"div\">2</div>\n  <div class=\"div\">3</div>\n  <div class=\"div\">4</div>\n  <div class=\"div\">5</div>\n</body>\n<script>\n$(function(){\n  const observer = new IntersectionObserver((changes) => {\n    // changes: 目标元素集合\n    changes.forEach((change) => {\n      if (change.isIntersecting) { // entry.intersectionRatio > 0 && entry.intersectionRatio <= 1 (intersectionRatio 表示相交区域和目标元素的比例值) \n        const div = change.target\n        console.log('div', div, change.intersectionRatio, change.boundingClientRect)\n        observer.unobserve(div) // 图片已加载， 解除观察\n      }\n    })\n  })\n  let divs = document.querySelectorAll('.div')\n  divs.forEach(div => {\n    observer.observe(div)\n  })\n})\n</script>\n</html>\n```\n\n## 方法三\n浏览器觉得懒加载这事可以交给自己做，你们开发者加个属性就好了。实在是...！   \n```html\n<img src=\"aaa.jpg\" loading=\"lazy\">\n```\n> 不过目前浏览器兼容性不太好   \n","slug":"IntersectionObserver懒加载","published":1,"updated":"2020-07-01T09:12:26.379Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdr00y4z0002e7zcmclstp2n","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>懒加载，顾名思义，在当前网页，滑动页面到能看到图片的时候再加载图片<br>故问题拆分成两个：<br>1.如何判断图片出现在了当前视口 （即如何判断我们能够看到图片）<br>2.如何控制图片的加载   </p>\n<a id=\"more\"></a>\n<h2 id=\"方案一\"><a href=\"#方案一\" class=\"headerlink\" title=\"方案一\"></a>方案一</h2><p>这是最常见的老办法：直接贴代码   </p>\n<h3 id=\"核心代码\"><a href=\"#核心代码\" class=\"headerlink\" title=\"核心代码\"></a>核心代码</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">lazyLoad</span>(<span class=\"params\">params, callback</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> wHeight = <span class=\"built_in\">document</span>.documentElement.clientHeight || <span class=\"built_in\">document</span>.body.clientHeight <span class=\"comment\">//浏览器的高度</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> sTop  <span class=\"comment\">//滚动条的高度</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> attr = params.attr || <span class=\"string\">'data-src'</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> className = params.className || <span class=\"string\">'lazy'</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> errorImage = params.errorImage || <span class=\"string\">''</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> space = params.interval || <span class=\"number\">100</span>  <span class=\"comment\">/** 函数节流间隔 */</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> dom = <span class=\"built_in\">document</span>.getElementsByClassName(className)</span><br><span class=\"line\">  <span class=\"keyword\">let</span> before = <span class=\"number\">0</span> <span class=\"comment\">/** 上一次代码执行时间（节流用） */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">loadImage</span>(<span class=\"params\">el</span>) </span>&#123;</span><br><span class=\"line\">    el.src = el.getAttribute(attr)</span><br><span class=\"line\">    el.removeAttribute(attr)</span><br><span class=\"line\">    <span class=\"comment\">// 图片加载失败</span></span><br><span class=\"line\">    el.onerror = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">      el.src = errorImage</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">judgeImages</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> now = <span class=\"built_in\">Date</span>.now()</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (now - before &lt; space) <span class=\"keyword\">return</span></span><br><span class=\"line\">    before = now</span><br><span class=\"line\">    sTop = <span class=\"built_in\">document</span>.documentElement.scrollTop || <span class=\"built_in\">window</span>.pageYOffset || <span class=\"built_in\">document</span>.body.scrollTop</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> j=<span class=\"number\">0</span>;j&lt;dom.length;j++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(dom[j].offsetTop &lt;= sTop + wHeight &amp;&amp; dom[j].getAttribute(attr))&#123;</span><br><span class=\"line\">          loadImage(dom[j])</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  judgeImages()</span><br><span class=\"line\">  <span class=\"built_in\">window</span>.addEventListener(<span class=\"string\">'scroll'</span>, judgeImages)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">lazyLoad(&#123;</span><br><span class=\"line\">  attr: <span class=\"string\">'data-src'</span>,</span><br><span class=\"line\">  className: <span class=\"string\">'lazy'</span>,</span><br><span class=\"line\">  interval: <span class=\"string\">'100'</span>,</span><br><span class=\"line\">  errorImage: <span class=\"string\">'imgs/6.png'</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html lang=<span class=\"string\">\"en\"</span>&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">  &lt;meta charset=<span class=\"string\">\"UTF-8\"</span>&gt;</span><br><span class=\"line\">  &lt;meta name=<span class=\"string\">\"viewport\"</span> content=<span class=\"string\">\"width=device-width, initial-scale=1.0\"</span>&gt;</span><br><span class=\"line\">  &lt;meta http-equiv=<span class=\"string\">\"X-UA-Compatible\"</span> content=<span class=\"string\">\"ie=edge\"</span>&gt;</span><br><span class=\"line\">  &lt;title&gt;Document&lt;<span class=\"regexp\">/title&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;ul <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"photos\"</span>&gt;</span><br><span class=\"line\">  &lt;li&gt;<span class=\"number\">1</span>：&lt;img <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"lazy\"</span> src=<span class=\"string\">\"imgs/6.png\"</span> data-src=<span class=\"string\">\"imgs/1.png\"</span>&gt;&lt;/li&gt;</span><br><span class=\"line\">  &lt;li&gt;<span class=\"number\">2</span>：&lt;img <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"lazy\"</span> src=<span class=\"string\">\"imgs/6.png\"</span> data-src=<span class=\"string\">\"imgs/2.png\"</span>&gt;&lt;/li&gt;</span><br><span class=\"line\">  &lt;li&gt;<span class=\"number\">3</span>：&lt;img <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"lazy\"</span> src=<span class=\"string\">\"imgs/6.png\"</span> data-src=<span class=\"string\">\"imgs/3.png\"</span>&gt;&lt;/li&gt;</span><br><span class=\"line\">  &lt;li&gt;<span class=\"number\">4</span>：&lt;img <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"lazy\"</span> src=<span class=\"string\">\"imgs/6.png\"</span> data-src=<span class=\"string\">\"imgs/4.png\"</span>&gt;&lt;/li&gt;</span><br><span class=\"line\">  &lt;li&gt;<span class=\"number\">5</span>：&lt;img <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"lazy\"</span> src=<span class=\"string\">\"imgs/6.png\"</span> data-src=<span class=\"string\">\"imgs/5.png\"</span>&gt;&lt;/li&gt;</span><br><span class=\"line\">&lt;<span class=\"regexp\">/ul&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>body&gt;</span><br><span class=\"line\">&lt;script type=<span class=\"string\">\"text/javascript\"</span>&gt;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">lazyLoad</span>(<span class=\"params\">params, callback</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> wHeight = <span class=\"built_in\">document</span>.documentElement.clientHeight || <span class=\"built_in\">document</span>.body.clientHeight <span class=\"comment\">//浏览器的高度</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> sTop  <span class=\"comment\">//滚动条的高度</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> attr = params.attr || <span class=\"string\">'data-src'</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> className = params.className || <span class=\"string\">'lazy'</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> errorImage = params.errorImage || <span class=\"string\">''</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> space = params.interval || <span class=\"number\">100</span>  <span class=\"comment\">/** 函数节流间隔 */</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> dom = <span class=\"built_in\">document</span>.getElementsByClassName(className)</span><br><span class=\"line\">  <span class=\"keyword\">let</span> before = <span class=\"number\">0</span> <span class=\"comment\">/** 上一次代码执行时间（节流用） */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">loadImage</span>(<span class=\"params\">el</span>) </span>&#123;</span><br><span class=\"line\">    el.src = el.getAttribute(attr)</span><br><span class=\"line\">    el.removeAttribute(attr)</span><br><span class=\"line\">    <span class=\"comment\">// 图片加载失败</span></span><br><span class=\"line\">    el.onerror = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">      el.src = errorImage</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">judgeImages</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> now = <span class=\"built_in\">Date</span>.now()</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (now - before &lt; space) <span class=\"keyword\">return</span></span><br><span class=\"line\">    before = now</span><br><span class=\"line\">    sTop = <span class=\"built_in\">document</span>.documentElement.scrollTop || <span class=\"built_in\">window</span>.pageYOffset || <span class=\"built_in\">document</span>.body.scrollTop</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> j=<span class=\"number\">0</span>;j&lt;dom.length;j++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(dom[j].offsetTop &lt;= sTop + wHeight &amp;&amp; dom[j].getAttribute(attr))&#123;</span><br><span class=\"line\">          loadImage(dom[j])</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  judgeImages()</span><br><span class=\"line\">  <span class=\"built_in\">window</span>.addEventListener(<span class=\"string\">'scroll'</span>, judgeImages)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">lazyLoad(&#123;</span><br><span class=\"line\">  attr: <span class=\"string\">'data-src'</span>,</span><br><span class=\"line\">  className: <span class=\"string\">'lazy'</span>,</span><br><span class=\"line\">  interval: <span class=\"string\">'100'</span>,</span><br><span class=\"line\">  errorImage: <span class=\"string\">'imgs/6.png'</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>html&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"方法二\"><a href=\"#方法二\" class=\"headerlink\" title=\"方法二\"></a>方法二</h2><p>rootBounds 是在根元素（默认就是viewport）矩形区域的信息，调用getBoundingClientRect()的返回值；<br>boundingClientRect 是在目标元素（默认就是viewport），矩形区域的信息，调用getBoundingClientRect()的返回值；<br>intersectionRect 是目标元素与根元素交叉区域的信息，并且能清楚地告诉你目标元素的哪个部分是可见的。<br>intersectionRatio 目标元素的可见比例，密切相关的一个东西，它能告诉你元素当中有多大一部分是可见的（下图）。有了这个信息，你可以有效地实现一些功能，比如当资源在屏幕上可见之前刚好加载出来。   </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// api</span><br><span class=\"line\">var io = new IntersectionObserver(callback, option);</span><br><span class=\"line\"></span><br><span class=\"line\">// 开始观察</span><br><span class=\"line\">io.observe(document.getElementById(&apos;example&apos;));</span><br><span class=\"line\">// 停止观察</span><br><span class=\"line\">io.unobserve(element);</span><br><span class=\"line\">// 关闭观察器</span><br><span class=\"line\">io.disconnect();</span><br></pre></td></tr></table></figure>\n<p>api具体介绍链接： <a href=\"http://www.ruanyifeng.com/blog/2016/11/intersectionobserver_api.html\" target=\"_blank\" rel=\"noopener\">http://www.ruanyifeng.com/blog/2016/11/intersectionobserver_api.html</a></p>\n<p>代码运行思路：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html lang=&quot;en&quot;&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">  &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class=\"line\">  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class=\"line\">  &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&gt;</span><br><span class=\"line\">  &lt;title&gt;Document&lt;/title&gt;</span><br><span class=\"line\">  &lt;script type=&quot;text/javascript&quot; src=&quot;http://code.jquery.com/jquery-3.4.1.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">body&#123;</span><br><span class=\"line\">  height: 1000px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.div&#123;</span><br><span class=\"line\">  width: 300px;</span><br><span class=\"line\">  height: 300px;</span><br><span class=\"line\">  margin-bottom: 10px;</span><br><span class=\"line\">  border: 1px solid #dddddd;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">  &lt;div class=&quot;div&quot;&gt;1&lt;/div&gt;</span><br><span class=\"line\">  &lt;div class=&quot;div&quot;&gt;2&lt;/div&gt;</span><br><span class=\"line\">  &lt;div class=&quot;div&quot;&gt;3&lt;/div&gt;</span><br><span class=\"line\">  &lt;div class=&quot;div&quot;&gt;4&lt;/div&gt;</span><br><span class=\"line\">  &lt;div class=&quot;div&quot;&gt;5&lt;/div&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">$(function()&#123;</span><br><span class=\"line\">  const observer = new IntersectionObserver((changes) =&gt; &#123;</span><br><span class=\"line\">    // changes: 目标元素集合</span><br><span class=\"line\">    changes.forEach((change) =&gt; &#123;</span><br><span class=\"line\">      if (change.isIntersecting) &#123; // entry.intersectionRatio &gt; 0 &amp;&amp; entry.intersectionRatio &lt;= 1 (intersectionRatio 表示相交区域和目标元素的比例值) </span><br><span class=\"line\">        const div = change.target</span><br><span class=\"line\">        console.log(&apos;div&apos;, div, change.intersectionRatio, change.boundingClientRect)</span><br><span class=\"line\">        observer.unobserve(div) // 图片已加载， 解除观察</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  let divs = document.querySelectorAll(&apos;.div&apos;)</span><br><span class=\"line\">  divs.forEach(div =&gt; &#123;</span><br><span class=\"line\">    observer.observe(div)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"方法三\"><a href=\"#方法三\" class=\"headerlink\" title=\"方法三\"></a>方法三</h2><p>浏览器觉得懒加载这事可以交给自己做，你们开发者加个属性就好了。实在是…！<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"aaa.jpg\"</span> <span class=\"attr\">loading</span>=<span class=\"string\">\"lazy\"</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>不过目前浏览器兼容性不太好   </p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>懒加载，顾名思义，在当前网页，滑动页面到能看到图片的时候再加载图片<br>故问题拆分成两个：<br>1.如何判断图片出现在了当前视口 （即如何判断我们能够看到图片）<br>2.如何控制图片的加载   </p>","more":"<h2 id=\"方案一\"><a href=\"#方案一\" class=\"headerlink\" title=\"方案一\"></a>方案一</h2><p>这是最常见的老办法：直接贴代码   </p>\n<h3 id=\"核心代码\"><a href=\"#核心代码\" class=\"headerlink\" title=\"核心代码\"></a>核心代码</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">lazyLoad</span>(<span class=\"params\">params, callback</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> wHeight = <span class=\"built_in\">document</span>.documentElement.clientHeight || <span class=\"built_in\">document</span>.body.clientHeight <span class=\"comment\">//浏览器的高度</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> sTop  <span class=\"comment\">//滚动条的高度</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> attr = params.attr || <span class=\"string\">'data-src'</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> className = params.className || <span class=\"string\">'lazy'</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> errorImage = params.errorImage || <span class=\"string\">''</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> space = params.interval || <span class=\"number\">100</span>  <span class=\"comment\">/** 函数节流间隔 */</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> dom = <span class=\"built_in\">document</span>.getElementsByClassName(className)</span><br><span class=\"line\">  <span class=\"keyword\">let</span> before = <span class=\"number\">0</span> <span class=\"comment\">/** 上一次代码执行时间（节流用） */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">loadImage</span>(<span class=\"params\">el</span>) </span>&#123;</span><br><span class=\"line\">    el.src = el.getAttribute(attr)</span><br><span class=\"line\">    el.removeAttribute(attr)</span><br><span class=\"line\">    <span class=\"comment\">// 图片加载失败</span></span><br><span class=\"line\">    el.onerror = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">      el.src = errorImage</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">judgeImages</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> now = <span class=\"built_in\">Date</span>.now()</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (now - before &lt; space) <span class=\"keyword\">return</span></span><br><span class=\"line\">    before = now</span><br><span class=\"line\">    sTop = <span class=\"built_in\">document</span>.documentElement.scrollTop || <span class=\"built_in\">window</span>.pageYOffset || <span class=\"built_in\">document</span>.body.scrollTop</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> j=<span class=\"number\">0</span>;j&lt;dom.length;j++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(dom[j].offsetTop &lt;= sTop + wHeight &amp;&amp; dom[j].getAttribute(attr))&#123;</span><br><span class=\"line\">          loadImage(dom[j])</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  judgeImages()</span><br><span class=\"line\">  <span class=\"built_in\">window</span>.addEventListener(<span class=\"string\">'scroll'</span>, judgeImages)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">lazyLoad(&#123;</span><br><span class=\"line\">  attr: <span class=\"string\">'data-src'</span>,</span><br><span class=\"line\">  className: <span class=\"string\">'lazy'</span>,</span><br><span class=\"line\">  interval: <span class=\"string\">'100'</span>,</span><br><span class=\"line\">  errorImage: <span class=\"string\">'imgs/6.png'</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html lang=<span class=\"string\">\"en\"</span>&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">  &lt;meta charset=<span class=\"string\">\"UTF-8\"</span>&gt;</span><br><span class=\"line\">  &lt;meta name=<span class=\"string\">\"viewport\"</span> content=<span class=\"string\">\"width=device-width, initial-scale=1.0\"</span>&gt;</span><br><span class=\"line\">  &lt;meta http-equiv=<span class=\"string\">\"X-UA-Compatible\"</span> content=<span class=\"string\">\"ie=edge\"</span>&gt;</span><br><span class=\"line\">  &lt;title&gt;Document&lt;<span class=\"regexp\">/title&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;ul <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"photos\"</span>&gt;</span><br><span class=\"line\">  &lt;li&gt;<span class=\"number\">1</span>：&lt;img <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"lazy\"</span> src=<span class=\"string\">\"imgs/6.png\"</span> data-src=<span class=\"string\">\"imgs/1.png\"</span>&gt;&lt;/li&gt;</span><br><span class=\"line\">  &lt;li&gt;<span class=\"number\">2</span>：&lt;img <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"lazy\"</span> src=<span class=\"string\">\"imgs/6.png\"</span> data-src=<span class=\"string\">\"imgs/2.png\"</span>&gt;&lt;/li&gt;</span><br><span class=\"line\">  &lt;li&gt;<span class=\"number\">3</span>：&lt;img <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"lazy\"</span> src=<span class=\"string\">\"imgs/6.png\"</span> data-src=<span class=\"string\">\"imgs/3.png\"</span>&gt;&lt;/li&gt;</span><br><span class=\"line\">  &lt;li&gt;<span class=\"number\">4</span>：&lt;img <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"lazy\"</span> src=<span class=\"string\">\"imgs/6.png\"</span> data-src=<span class=\"string\">\"imgs/4.png\"</span>&gt;&lt;/li&gt;</span><br><span class=\"line\">  &lt;li&gt;<span class=\"number\">5</span>：&lt;img <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"lazy\"</span> src=<span class=\"string\">\"imgs/6.png\"</span> data-src=<span class=\"string\">\"imgs/5.png\"</span>&gt;&lt;/li&gt;</span><br><span class=\"line\">&lt;<span class=\"regexp\">/ul&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>body&gt;</span><br><span class=\"line\">&lt;script type=<span class=\"string\">\"text/javascript\"</span>&gt;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">lazyLoad</span>(<span class=\"params\">params, callback</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> wHeight = <span class=\"built_in\">document</span>.documentElement.clientHeight || <span class=\"built_in\">document</span>.body.clientHeight <span class=\"comment\">//浏览器的高度</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> sTop  <span class=\"comment\">//滚动条的高度</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> attr = params.attr || <span class=\"string\">'data-src'</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> className = params.className || <span class=\"string\">'lazy'</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> errorImage = params.errorImage || <span class=\"string\">''</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> space = params.interval || <span class=\"number\">100</span>  <span class=\"comment\">/** 函数节流间隔 */</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> dom = <span class=\"built_in\">document</span>.getElementsByClassName(className)</span><br><span class=\"line\">  <span class=\"keyword\">let</span> before = <span class=\"number\">0</span> <span class=\"comment\">/** 上一次代码执行时间（节流用） */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">loadImage</span>(<span class=\"params\">el</span>) </span>&#123;</span><br><span class=\"line\">    el.src = el.getAttribute(attr)</span><br><span class=\"line\">    el.removeAttribute(attr)</span><br><span class=\"line\">    <span class=\"comment\">// 图片加载失败</span></span><br><span class=\"line\">    el.onerror = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">      el.src = errorImage</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">judgeImages</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> now = <span class=\"built_in\">Date</span>.now()</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (now - before &lt; space) <span class=\"keyword\">return</span></span><br><span class=\"line\">    before = now</span><br><span class=\"line\">    sTop = <span class=\"built_in\">document</span>.documentElement.scrollTop || <span class=\"built_in\">window</span>.pageYOffset || <span class=\"built_in\">document</span>.body.scrollTop</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> j=<span class=\"number\">0</span>;j&lt;dom.length;j++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(dom[j].offsetTop &lt;= sTop + wHeight &amp;&amp; dom[j].getAttribute(attr))&#123;</span><br><span class=\"line\">          loadImage(dom[j])</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  judgeImages()</span><br><span class=\"line\">  <span class=\"built_in\">window</span>.addEventListener(<span class=\"string\">'scroll'</span>, judgeImages)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">lazyLoad(&#123;</span><br><span class=\"line\">  attr: <span class=\"string\">'data-src'</span>,</span><br><span class=\"line\">  className: <span class=\"string\">'lazy'</span>,</span><br><span class=\"line\">  interval: <span class=\"string\">'100'</span>,</span><br><span class=\"line\">  errorImage: <span class=\"string\">'imgs/6.png'</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>html&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"方法二\"><a href=\"#方法二\" class=\"headerlink\" title=\"方法二\"></a>方法二</h2><p>rootBounds 是在根元素（默认就是viewport）矩形区域的信息，调用getBoundingClientRect()的返回值；<br>boundingClientRect 是在目标元素（默认就是viewport），矩形区域的信息，调用getBoundingClientRect()的返回值；<br>intersectionRect 是目标元素与根元素交叉区域的信息，并且能清楚地告诉你目标元素的哪个部分是可见的。<br>intersectionRatio 目标元素的可见比例，密切相关的一个东西，它能告诉你元素当中有多大一部分是可见的（下图）。有了这个信息，你可以有效地实现一些功能，比如当资源在屏幕上可见之前刚好加载出来。   </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// api</span><br><span class=\"line\">var io = new IntersectionObserver(callback, option);</span><br><span class=\"line\"></span><br><span class=\"line\">// 开始观察</span><br><span class=\"line\">io.observe(document.getElementById(&apos;example&apos;));</span><br><span class=\"line\">// 停止观察</span><br><span class=\"line\">io.unobserve(element);</span><br><span class=\"line\">// 关闭观察器</span><br><span class=\"line\">io.disconnect();</span><br></pre></td></tr></table></figure>\n<p>api具体介绍链接： <a href=\"http://www.ruanyifeng.com/blog/2016/11/intersectionobserver_api.html\" target=\"_blank\" rel=\"noopener\">http://www.ruanyifeng.com/blog/2016/11/intersectionobserver_api.html</a></p>\n<p>代码运行思路：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html lang=&quot;en&quot;&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">  &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class=\"line\">  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class=\"line\">  &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&gt;</span><br><span class=\"line\">  &lt;title&gt;Document&lt;/title&gt;</span><br><span class=\"line\">  &lt;script type=&quot;text/javascript&quot; src=&quot;http://code.jquery.com/jquery-3.4.1.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">body&#123;</span><br><span class=\"line\">  height: 1000px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.div&#123;</span><br><span class=\"line\">  width: 300px;</span><br><span class=\"line\">  height: 300px;</span><br><span class=\"line\">  margin-bottom: 10px;</span><br><span class=\"line\">  border: 1px solid #dddddd;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">  &lt;div class=&quot;div&quot;&gt;1&lt;/div&gt;</span><br><span class=\"line\">  &lt;div class=&quot;div&quot;&gt;2&lt;/div&gt;</span><br><span class=\"line\">  &lt;div class=&quot;div&quot;&gt;3&lt;/div&gt;</span><br><span class=\"line\">  &lt;div class=&quot;div&quot;&gt;4&lt;/div&gt;</span><br><span class=\"line\">  &lt;div class=&quot;div&quot;&gt;5&lt;/div&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">$(function()&#123;</span><br><span class=\"line\">  const observer = new IntersectionObserver((changes) =&gt; &#123;</span><br><span class=\"line\">    // changes: 目标元素集合</span><br><span class=\"line\">    changes.forEach((change) =&gt; &#123;</span><br><span class=\"line\">      if (change.isIntersecting) &#123; // entry.intersectionRatio &gt; 0 &amp;&amp; entry.intersectionRatio &lt;= 1 (intersectionRatio 表示相交区域和目标元素的比例值) </span><br><span class=\"line\">        const div = change.target</span><br><span class=\"line\">        console.log(&apos;div&apos;, div, change.intersectionRatio, change.boundingClientRect)</span><br><span class=\"line\">        observer.unobserve(div) // 图片已加载， 解除观察</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  let divs = document.querySelectorAll(&apos;.div&apos;)</span><br><span class=\"line\">  divs.forEach(div =&gt; &#123;</span><br><span class=\"line\">    observer.observe(div)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"方法三\"><a href=\"#方法三\" class=\"headerlink\" title=\"方法三\"></a>方法三</h2><p>浏览器觉得懒加载这事可以交给自己做，你们开发者加个属性就好了。实在是…！<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"aaa.jpg\"</span> <span class=\"attr\">loading</span>=<span class=\"string\">\"lazy\"</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>不过目前浏览器兼容性不太好   </p>\n</blockquote>"},{"title":"小tips-clip-蛇形跑位","date":"2019-08-28T09:51:11.000Z","_content":"## 效果如下\n![blockchain](https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/clip.gif)\n<!-- more -->\n```\nclip 属性剪裁绝对定位元素。\nrect (top, right, bottom, left)\n```\n> 四个参数分别设置可显示矩形上 下 左 右 的像素值。\n\n```html\n<div class=\"bruce flex-ct-x\">\n  <div class=\"snakelike-border\"></div>\n</div>\n```\n```css\n$green: green;\n$red: red;\n$purple: purple;\n.snakelike-border {\n\tposition: relative;\n\twidth: 190px;\n\theight: 190px;\n\tbackground-color: $green;\n\t&::before,\n\t&::after {\n\t\tposition: absolute;\n\t\tleft: -5px;\n\t\tright: -5px;\n\t\ttop: -5px;\n\t\tbottom: -5px;\n\t\tborder: 5px solid;\n    content: \"\";\n\t\tanimation: move 5s linear infinite;\n\t\t-webkit-animation: move 5s linear infinite;\n}\n\t&::before {\n\t\tborder-color: $red;\n\t}\n\t&::after {\n\t\tborder-color: $purple;\n\t\tanimation-delay: -2.5s;\n\t}\n}\n@keyframes move {\n\t0%,\n\t100% {\n\t\tclip: rect(0 200px 5px 0);\n\t}\n\t25% {\n\t\tclip: rect(0 200px 200px 195px);\n\t}\n\t50% {\n\t\tclip: rect(195px 200px 200px 0);\n\t}\n\t75% {\n\t\tclip: rect(0 5px 200px 0);\n\t}\n}\n```\n## 单个测试\n![blockchain](https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/clip-1.png)\n```css\nclip: rect(0 200px 5px 0);\n```\n\n![blockchain](https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/clip-2.png)\n```css\nclip: rect(0 200px 200px 195px);\n```","source":"_posts/clip.md","raw":"---\ntitle: 小tips-clip-蛇形跑位\ncategories: css-end\ndate: 2019-08-28 17:51:11\ntags: css3 clip\n---\n## 效果如下\n![blockchain](https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/clip.gif)\n<!-- more -->\n```\nclip 属性剪裁绝对定位元素。\nrect (top, right, bottom, left)\n```\n> 四个参数分别设置可显示矩形上 下 左 右 的像素值。\n\n```html\n<div class=\"bruce flex-ct-x\">\n  <div class=\"snakelike-border\"></div>\n</div>\n```\n```css\n$green: green;\n$red: red;\n$purple: purple;\n.snakelike-border {\n\tposition: relative;\n\twidth: 190px;\n\theight: 190px;\n\tbackground-color: $green;\n\t&::before,\n\t&::after {\n\t\tposition: absolute;\n\t\tleft: -5px;\n\t\tright: -5px;\n\t\ttop: -5px;\n\t\tbottom: -5px;\n\t\tborder: 5px solid;\n    content: \"\";\n\t\tanimation: move 5s linear infinite;\n\t\t-webkit-animation: move 5s linear infinite;\n}\n\t&::before {\n\t\tborder-color: $red;\n\t}\n\t&::after {\n\t\tborder-color: $purple;\n\t\tanimation-delay: -2.5s;\n\t}\n}\n@keyframes move {\n\t0%,\n\t100% {\n\t\tclip: rect(0 200px 5px 0);\n\t}\n\t25% {\n\t\tclip: rect(0 200px 200px 195px);\n\t}\n\t50% {\n\t\tclip: rect(195px 200px 200px 0);\n\t}\n\t75% {\n\t\tclip: rect(0 5px 200px 0);\n\t}\n}\n```\n## 单个测试\n![blockchain](https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/clip-1.png)\n```css\nclip: rect(0 200px 5px 0);\n```\n\n![blockchain](https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/clip-2.png)\n```css\nclip: rect(0 200px 200px 195px);\n```","slug":"clip","published":1,"updated":"2020-07-01T09:12:26.379Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdr00y530006e7zchmd9sq91","content":"<h2 id=\"效果如下\"><a href=\"#效果如下\" class=\"headerlink\" title=\"效果如下\"></a>效果如下</h2><p><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/clip.gif\" alt=\"blockchain\"><br><a id=\"more\"></a><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">clip 属性剪裁绝对定位元素。</span><br><span class=\"line\">rect (top, right, bottom, left)</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>四个参数分别设置可显示矩形上 下 左 右 的像素值。</p>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"bruce flex-ct-x\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"snakelike-border\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$green: green;</span><br><span class=\"line\">$red: red;</span><br><span class=\"line\">$purple: purple;</span><br><span class=\"line\"><span class=\"selector-class\">.snakelike-border</span> &#123;</span><br><span class=\"line\">\t<span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">\t<span class=\"attribute\">width</span>: <span class=\"number\">190px</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">height</span>: <span class=\"number\">190px</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">background-color</span>: $green;</span><br><span class=\"line\">\t&amp;::before,</span><br><span class=\"line\">\t&amp;<span class=\"selector-pseudo\">::after</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">\t\t<span class=\"attribute\">left</span>: -<span class=\"number\">5px</span>;</span><br><span class=\"line\">\t\t<span class=\"attribute\">right</span>: -<span class=\"number\">5px</span>;</span><br><span class=\"line\">\t\t<span class=\"attribute\">top</span>: -<span class=\"number\">5px</span>;</span><br><span class=\"line\">\t\t<span class=\"attribute\">bottom</span>: -<span class=\"number\">5px</span>;</span><br><span class=\"line\">\t\t<span class=\"attribute\">border</span>: <span class=\"number\">5px</span> solid;</span><br><span class=\"line\">    <span class=\"attribute\">content</span>: <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">\t\t<span class=\"attribute\">animation</span>: move <span class=\"number\">5s</span> linear infinite;</span><br><span class=\"line\">\t\t<span class=\"attribute\">-webkit-animation</span>: move <span class=\"number\">5s</span> linear infinite;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">\t&amp;<span class=\"selector-pseudo\">::before</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"attribute\">border-color</span>: $red;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t&amp;<span class=\"selector-pseudo\">::after</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"attribute\">border-color</span>: $purple;</span><br><span class=\"line\">\t\t<span class=\"attribute\">animation-delay</span>: -<span class=\"number\">2.5s</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">@<span class=\"keyword\">keyframes</span> move &#123;</span><br><span class=\"line\">\t0%,</span><br><span class=\"line\">\t100% &#123;</span><br><span class=\"line\">\t\t<span class=\"attribute\">clip</span>: <span class=\"built_in\">rect</span>(0 200px 5px 0);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t25% &#123;</span><br><span class=\"line\">\t\t<span class=\"attribute\">clip</span>: <span class=\"built_in\">rect</span>(0 200px 200px 195px);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t50% &#123;</span><br><span class=\"line\">\t\t<span class=\"attribute\">clip</span>: <span class=\"built_in\">rect</span>(195px 200px 200px 0);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t75% &#123;</span><br><span class=\"line\">\t\t<span class=\"attribute\">clip</span>: <span class=\"built_in\">rect</span>(0 5px 200px 0);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"单个测试\"><a href=\"#单个测试\" class=\"headerlink\" title=\"单个测试\"></a>单个测试</h2><p><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/clip-1.png\" alt=\"blockchain\"><br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">clip</span>: <span class=\"selector-tag\">rect</span>(0 200<span class=\"selector-tag\">px</span> 5<span class=\"selector-tag\">px</span> 0);</span><br></pre></td></tr></table></figure></p>\n<p><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/clip-2.png\" alt=\"blockchain\"><br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">clip</span>: <span class=\"selector-tag\">rect</span>(0 200<span class=\"selector-tag\">px</span> 200<span class=\"selector-tag\">px</span> 195<span class=\"selector-tag\">px</span>);</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"<h2 id=\"效果如下\"><a href=\"#效果如下\" class=\"headerlink\" title=\"效果如下\"></a>效果如下</h2><p><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/clip.gif\" alt=\"blockchain\"><br>","more":"<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">clip 属性剪裁绝对定位元素。</span><br><span class=\"line\">rect (top, right, bottom, left)</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>四个参数分别设置可显示矩形上 下 左 右 的像素值。</p>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"bruce flex-ct-x\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"snakelike-border\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$green: green;</span><br><span class=\"line\">$red: red;</span><br><span class=\"line\">$purple: purple;</span><br><span class=\"line\"><span class=\"selector-class\">.snakelike-border</span> &#123;</span><br><span class=\"line\">\t<span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">\t<span class=\"attribute\">width</span>: <span class=\"number\">190px</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">height</span>: <span class=\"number\">190px</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">background-color</span>: $green;</span><br><span class=\"line\">\t&amp;::before,</span><br><span class=\"line\">\t&amp;<span class=\"selector-pseudo\">::after</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">\t\t<span class=\"attribute\">left</span>: -<span class=\"number\">5px</span>;</span><br><span class=\"line\">\t\t<span class=\"attribute\">right</span>: -<span class=\"number\">5px</span>;</span><br><span class=\"line\">\t\t<span class=\"attribute\">top</span>: -<span class=\"number\">5px</span>;</span><br><span class=\"line\">\t\t<span class=\"attribute\">bottom</span>: -<span class=\"number\">5px</span>;</span><br><span class=\"line\">\t\t<span class=\"attribute\">border</span>: <span class=\"number\">5px</span> solid;</span><br><span class=\"line\">    <span class=\"attribute\">content</span>: <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">\t\t<span class=\"attribute\">animation</span>: move <span class=\"number\">5s</span> linear infinite;</span><br><span class=\"line\">\t\t<span class=\"attribute\">-webkit-animation</span>: move <span class=\"number\">5s</span> linear infinite;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">\t&amp;<span class=\"selector-pseudo\">::before</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"attribute\">border-color</span>: $red;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t&amp;<span class=\"selector-pseudo\">::after</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"attribute\">border-color</span>: $purple;</span><br><span class=\"line\">\t\t<span class=\"attribute\">animation-delay</span>: -<span class=\"number\">2.5s</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">@<span class=\"keyword\">keyframes</span> move &#123;</span><br><span class=\"line\">\t0%,</span><br><span class=\"line\">\t100% &#123;</span><br><span class=\"line\">\t\t<span class=\"attribute\">clip</span>: <span class=\"built_in\">rect</span>(0 200px 5px 0);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t25% &#123;</span><br><span class=\"line\">\t\t<span class=\"attribute\">clip</span>: <span class=\"built_in\">rect</span>(0 200px 200px 195px);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t50% &#123;</span><br><span class=\"line\">\t\t<span class=\"attribute\">clip</span>: <span class=\"built_in\">rect</span>(195px 200px 200px 0);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t75% &#123;</span><br><span class=\"line\">\t\t<span class=\"attribute\">clip</span>: <span class=\"built_in\">rect</span>(0 5px 200px 0);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"单个测试\"><a href=\"#单个测试\" class=\"headerlink\" title=\"单个测试\"></a>单个测试</h2><p><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/clip-1.png\" alt=\"blockchain\"><br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">clip</span>: <span class=\"selector-tag\">rect</span>(0 200<span class=\"selector-tag\">px</span> 5<span class=\"selector-tag\">px</span> 0);</span><br></pre></td></tr></table></figure></p>\n<p><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/clip-2.png\" alt=\"blockchain\"><br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">clip</span>: <span class=\"selector-tag\">rect</span>(0 200<span class=\"selector-tag\">px</span> 200<span class=\"selector-tag\">px</span> 195<span class=\"selector-tag\">px</span>);</span><br></pre></td></tr></table></figure></p>"},{"title":"常用的前端库汇总","date":"2019-08-13T03:53:19.000Z","_content":"\n# Commonly-used-to-collect\n> 🎉 整理我平时关注的前端库。\n\n## 导航：\n\n1.[Vue](#vue)\n+ [API](#vueApi) \n+ [UI库](#vueUI库) \n+ [实用库](#vue实用库) \n+ [应用实例](#vue应用实例) \n+ [Demo示例](#vueDemo示例) \n\n2.[React](#react)\n+ [API](#reactApi) \n+ [UI库](#reactUI库) \n+ [实用库](#react实用库) \n\n3.[小程序](#小程序)\n+ [微信](#微信Api)\n+ [支付宝](#支付宝Api)\n+ [今日头条](#今日头条Api)\n+ [百度](#百度Api)\n\n4.[webpack](#webpack)\n\n5.[typeScript](#typeScript)\n<!-- more -->\n## 前端框架\n\n- [vue](https://github.com/vuejs/vue)\n- [react](https://github.com/facebook/react)\n- [umi](https://github.com/umijs/umi) - 蚂蚁金服的前端框架。\n- [taro](https://github.com/NervJS/taro) - 生成能运行在微信/百度/支付宝/字节跳动/ QQ 小程序、快应用、H5、React Native 等的应用\n- [quasar](https://github.com/quasarframework/quasar) - 基于 vue，一套代码多处适用。\n- [mapvue](http://mpvue.com/) - 美团基于 Vue.js 开发小程序的前端框架\n\n## vue\n### vueApi:\n- [vue](https://cn.vuejs.org/v2/api/#v-text)\n- [vue-router](https://router.vuejs.org/zh/)\n### vueUI库：\n- [elementUi](https://element.eleme.cn/#/zh-CN/component/installation) - 饿了么出品的Vue2的web UI工具套件\n- [VUX](https://vux.li/) - 基于Vue和WeUI的组件库(个人维护)\n- [mint-ui](http://mint-ui.github.io/#!/zh-cn) - Vue 2的移动UI元素\n- [iview](http://v1.iviewui.com/) - 基于 Vuejs 的开源 UI 组件库\n- [vuetify](https://vuetifyjs.com/zh-Hans/) - 为移动而生的Vue JS 2组件框架\n- [vue-element-admin](https://panjiachen.github.io/vue-element-admin-site/zh/) - Vue管理面板框架\n- [Keen-UI](https://github.com/JosephusPaye/Keen-UI) ★2749 - 轻量级的基本UI组件合集 \n- [vonic](https://github.com/wangdahoo/vonic) ★1913 - 快速构建移动端单页应用 \n- [vue-multiselect](https://github.com/monterail/vue-multiselect) ★1539 - Vue.js选择框解决方案 \n- [eme](https://github.com/egoist/eme) ★1529 - 优雅的Markdown编辑器 \n- [vueAdmin](https://github.com/taylorchen709/vueAdmin) ★1455 - 基于vuejs2和element的简单的管理员模板 \n- [bootstrap-vue](https://github.com/pi0/bootstrap-vue) ★1267 - 应用于Vuejs2的Twitter的Bootstrap 4组件 \n- [Vue.Draggable](https://github.com/David-Desmaisons/Vue.Draggable) ★1191 - 实现拖放和视图模型数组同步 \n- [eagle.js](https://github.com/Zulko/eagle.js) ★1128 - hacker的幻灯片演示框架 \n- [vue-awesome-swiper](https://github.com/surmon-china/vue-awesome-swiper) ★1012 - vue.js触摸滑动组件 \n- [vue-table](https://github.com/ratiw/vue-table) ★1009 - 简化数据表格 \n- [vue-chat](https://github.com/Coffcer/vue-chat) ★859 - vuejs和vuex及webpack的聊天示例 \n- [vue-blu](https://github.com/chenz24/vue-blu) ★850 - 帮助你轻松创建web应用 \n- [vue-recyclerview](https://github.com/hilongjw/vue-recyclerview) ★849 - 管理大列表的vue-recyclerview \n- [VueCircleMenu](https://github.com/OYsun/VueCircleMenu) ★838 - 漂亮的vue圆环菜单 \n- [vue-infinite-scroll](https://github.com/ElemeFE/vue-infinite-scroll) ★779 - VueJS的无限滚动指令 \n- [buefy](https://github.com/rafaelpimpa/buefy) ★755 - 响应式UI组件轻量级库 \n- [vue-beauty](https://github.com/FE-Driver/vue-beauty) ★749 - 由vue和ant design创建的优美UI组件 \n- [vue-waterfall](https://github.com/MopTym/vue-waterfall) ★737 - Vue.js的瀑布布局组件 \n- [radon-ui](https://github.com/luojilab/radon-ui) ★715 - 快速开发产品的Vue组件库 \n- [vue-loop](https://github.com/lookstudios/vue-loop) ★701 - 无限的内容循环 \n- [vue-chartjs](https://github.com/apertureless/vue-chartjs) ★694 - vue中的Chartjs的封装 \n- [vue-carbon](https://github.com/myronliu347/vue-carbon) ★684 - 基于 vue 开发MD风格的移动端 \n- [vue-syntax-highlight](https://github.com/vuejs/vue-syntax-highlight) ★655 - Sublime Text语法高亮 \n- [vue-echarts](https://github.com/Justineo/vue-echarts) ★649 - VueJS的ECharts组件 \n- [vue-quill-editor](https://github.com/surmon-china/vue-quill-editor) ★615 - 基于Quill适用于Vue2的富文本编辑器 \n- [vue-amap](https://github.com/ElemeFE/vue-amap) ★571 - 基于Vue 2和高德地图的地图组件 \n- [vue-calendar](https://github.com/jinzhe/vue-calendar) ★536 - 日期选择插件 \n- [vue-infinite-loading](https://github.com/PeachScript/vue-infinite-loading) ★501 - VueJS的无限滚动插件 \n- [vue-swipe](https://github.com/ElemeFE/vue-swipe) ★481 - VueJS触摸滑块 \n- [vue-music-player](https://github.com/microzz/vue-music-player) ★451 - Vuejs写一个音乐播放器 \n- [vue-scroller](https://github.com/wangdahoo/vue-scroller) ★444 - Vonic UI的功能性组件 \n- [vue-datepicker](https://github.com/hilongjw/vue-datepicker) ★436 - 日历和日期选择组件 \n- [vue-core-image-upload](https://github.com/Vanthink-UED/vue-core-image-upload) ★393 - 轻量级的vue上传插件 \n- [vue-progressbar](https://github.com/hilongjw/vue-progressbar) ★379 - vue轻量级进度条 \n- [Gokotta](https://github.com/Zhangdroid/Gokotta) ★375 - 简单的音乐播放器 \n- [vue-sortable](https://github.com/sagalbot/vue-sortable) ★373 - 轻松添加拖拽排序 \n- [vue-picture-input](https://github.com/alessiomaffeis/vue-picture-input) ★352 - 移动友好的图片文件输入组件 \n- [vue-echarts-v3](https://github.com/xlsdg/vue-echarts-v3) ★351 - VueJS组件封装 \n- [markcook](https://github.com/jrainlau/markcook) ★343 - 好看的markdown编辑器 \n- [vue-video-player](https://github.com/surmon-china/vue-video-player) ★336 - VueJS视频及直播播放器 \n- [vue-google-maps](https://github.com/GuillaumeLeclerc/vue-google-maps) ★334 - 带有双向数据绑定Google地图组件 \n- [vue-trend](https://github.com/QingWei-Li/vue-trend) ★332 - 简单优雅的星光线条 \n- [vuejs-datepicker](https://github.com/charliekassel/vuejs-datepicker) ★314 - vue日期选择器组件 \n- [vue-fullcalendar](https://github.com/Wanderxx/vue-fullcalendar) ★313 - 基于vue.js的全日历组件 \n- [vue-html5-editor](https://github.com/PeakTai/vue-html5-editor) ★303 - html5所见即所得编辑器 \n- [vue-upload-component](https://github.com/lian-yue/vue-upload-component) ★298 - Vuejs文件上传组件 \n- [DataVisualization](https://github.com/SimonZhangITer/DataVisualization) ★298 - 数据可视化 \n- [vue-tables-2](https://github.com/matfish2/vue-tables-2) ★291 - 显示数据的bootstrap样式网格 \n- [VueStar](https://github.com/OYsun/VueStar) ★270 - 带星星动画的vue点赞按钮 \n- [vue-data-tables](https://github.com/njleonzhang/vue-data-tables) ★266 - VueJS2数据表格 \n- [vue-paginate](https://github.com/TahaSh/vue-paginate) ★261 - 分页数据的简约VueJS插件 \n- [vue-ydui](https://github.com/ydcss/vue-ydui) ★247 - 基于Vue2的移动端和微信UI \n- [vue-mugen-scroll](https://github.com/egoist/vue-mugen-scroll) ★239 - 无限滚动组件 \n- [vue-virtual-scroller](https://github.com/Akryum/vue-virtual-scroller) ★238 - 带任意数目数据的顺畅的滚动 \n- [vue2-calendar](https://github.com/icai/vue2-calendar) ★236 - 支持lunar和日期事件的日期选择器 \n- [vue-dropzone](https://github.com/rowanwins/vue-dropzone) ★233 - 用于文件上传的Vue组件 \n- [vue2-douban-market](https://github.com/Awheat/vue2-douban-market) ★233 - 仿豆瓣市集webapp项目 \n- [vue-js-modal](https://github.com/euvl/vue-js-modal) ★228 - 移动友好的Vuejs2的modal \n- [vue-slider](https://github.com/warpcgd/vue-slider) ★224 - vue 滑动组件 \n- [vue-datetime-picker](https://github.com/Haixing-Hu/vue-datetime-picker) ★224 - 日期时间选择控件 \n- [rubik](https://github.com/ccforward/rubik) ★217 - 基于Vuejs2的开源 UI 组件库 \n- [vue-datasource](https://github.com/coderdiaz/vue-datasource) ★210 - 创建VueJS动态表格 \n- [vue-image-crop-upload](https://github.com/dai-siki/vue-image-crop-upload) ★205 - vue图片剪裁上传组件 \n- [Vueditor](https://github.com/hifarer/Vueditor) ★204 - 所见即所得的编辑器 \n- [mint-loadmore](https://github.com/mint-ui/mint-loadmore) ★203 - VueJS的双向下拉刷新组件 \n- [vue-slider-component](https://github.com/NightCatSama/vue-slider-component) ★202 - 在vue1和vue2中使用滑块 \n- [vue-chat](https://github.com/microzz/vue-chat) ★200 - Vue全家桶+Socket.io+Express/Koa2打造一个智能聊天室 \n- [mavonEditor](https://github.com/hinesboy/mavonEditor) ★179 - 基于Vue的markdown编辑器 \n- [vue-carousel-3d](https://github.com/Wlada/vue-carousel-3d) ★173 - VueJS的3D轮播组件 \n- [vue-baidu-map](https://github.com/Dafrok/vue-baidu-map) ★170 - 基于 Vue 2的百度地图组件库 \n- [sweet-modal-vue](https://github.com/adeptoas/sweet-modal-vue) ★170 - 精美的点击提示对话框 \n- [vue-particles](https://github.com/creotip/vue-particles) ★168 - 粒子背景的vue组件 \n- [vue-swiper](https://github.com/weilao/vue-swiper) ★167 - 易于使用的滑块组件 \n- [vue-simplemde](https://github.com/F-loat/vue-simplemde) ★166 - VueJS的Markdown编辑器组件 \n- [vue-slide](https://github.com/hilongjw/vue-slide) ★161 - vue轻量级滑动组件 \n- [vue-dragula](https://github.com/Astray-git/vue-dragula) ★157 - 使拖放变得简单 \n- [vue-drag-and-drop-list](https://github.com/Alex-fun/vue-drag-and-drop-list) ★156 - 创建排序列表的Vue指令 \n- [vue2-editor](https://github.com/davidroyer/vue2-editor) ★155 - HTML编辑器 \n- [vue-charts](https://github.com/hchstera/vue-charts) ★152 - 轻松渲染一个图表 \n- [vue-data-grid](https://github.com/LucienLee/vue-data-grid) ★151 - VueJS复杂桌面交互示例 \n- [vuwe](https://github.com/vuwe/vuwe) ★150 - 基于微信WeUI所开发的专用于Vue2的组件库 \n- [vue-progressive-image](https://github.com/MatteoGabriele/vue-progressive-image) ★148 - Vue的渐进图像加载插件 \n- [vue-msgbox](https://github.com/ElemeFE/vue-msgbox) ★148 - vuejs的消息框 \n- [vue-lazyload-img](https://github.com/JALBAA/vue-lazyload-img) ★147 - 移动优化的vue图片懒加载插件 \n- [vue-dragging](https://github.com/hilongjw/vue-dragging) ★146 - 使元素可以拖拽 \n- [vue-instant](https://github.com/santiblanko/vue-instant) ★143 - 轻松创建自动提示的自定义搜索控件 \n- [vue-social-sharing](https://github.com/nicolasbeauvais/vue-social-sharing) ★142 - 社交分享组件 \n- [vue-images](https://github.com/littlewin-wang/vue-images) ★139 - 显示一组图片的lightbox组件 \n- [vue-impression](https://github.com/NewDadaFE/vue-impression) ★134 - 移动Vuejs2 UI元素 \n- [vue-mdEditor](https://github.com/ovenslove/vue-mdEditor) ★131 - 基于VUE的markdown文本编辑器 \n- [vue-typer](https://github.com/cngu/vue-typer) ★130 - 模拟用户输入选择和删除文本的Vue组件 \n- [vue-highcharts](https://github.com/weizhenye/vue-highcharts) ★130 - HighCharts组件 \n- [vue-tooltip](https://github.com/Akryum/vue-tooltip) ★129 - 带绑定信息提示的提示工具 \n- [vue-svgicon](https://github.com/MMF-FE/vue-svgicon) ★127 - 创建svg图标组件的工具 \n- [wdui](https://github.com/wdfe/wdui) ★124 - 基于Vue2的UI组件库 \n- [vue2-loading-bar](https://github.com/BosNaufal/vue2-loading-bar) ★118 - 最简单的仿Youtube加载条视图 \n- [vue-tabs-component](https://github.com/spatie/vue-tabs-component) ★116 - 渲染tabs的Vue组件 \n- [MagicMusic](https://github.com/hzzly/MagicMusic) ★113 - 不一样的音乐 \n- [vue-region-picker](https://github.com/QingWei-Li/vue-region-picker) ★111 - 选择中国的省份市和地区 \n- [vue-datatable](https://github.com/galenyuan/vue-datatable) ★102 - 使用Vuejs创建的DataTableView \n- [vue-loading](https://github.com/Coffcer/vue-loading) ★102 - 元素中加载block的Vue指令 \n- [vodal](https://github.com/chenjiahan/vodal) ★99 - 动画的vue模态 \n- [vue-img-inputer](https://github.com/waynecz/vue-img-inputer) ★97 - 基于Vue2的图片输入框 \n- [vue-video](https://github.com/hilongjw/vue-video) ★96 - Vue.js的HTML5视频播放器 \n- [vue-touch-ripple](https://github.com/surmon-china/vue-touch-ripple) ★95 - vuejs的触摸ripple组件 \n- [vue-event-calendar](https://github.com/GeoffZhu/vue-event-calendar) ★91 - 简单小巧的事件日历组件 \n- [v-bar](https://github.com/luiguild/v-bar) ★91 - 虚拟响应跨浏览器滚动条 \n- [vue2-timepicker](https://github.com/phoenixwong/vue2-timepicker) ★84 - 下拉时间选择器 \n- [vuejs-paginate](https://github.com/lokyoung/vuejs-paginate) ★80 - 分页VueJS组件 \n- [vue-toast-mobile](https://github.com/ElemeFE/vue-toast-mobile) ★79 - VueJS的toast插件 \n- [vue-datepicker](https://github.com/weifeiyue/vue-datepicker) ★78 - 漂亮的Vue日期选择器组件 \n- [vue-easy-slider](https://github.com/shhdgit/vue-easy-slider) ★77 - Vue 2.x的滑块组件 \n- [vue-float-label](https://github.com/bkzl/vue-float-label) ★76 - VueJS浮动标签模式 \n- [vue-scrollbar](https://github.com/BosNaufal/vue-scrollbar) ★76 - 最简单的滚动区域组件 \n- [vant](https://github.com/youzan/vant) ★74 - 有赞出品的Vue2.0移动UI \n- [vue-json-tree-view](https://github.com/arvidkahl/vue-json-tree-view) ★74 - Vue的JSON树视图 \n- [vue-slick](https://github.com/staskjs/vue-slick) ★73 - 实现流畅轮播框的vue组件 \n- [vue-keynote](https://github.com/znck/vue-keynote) ★73 - 实现声明性代码幻灯片 \n- [vue-google-signin-button](https://github.com/phanan/vue-google-signin-button) ★73 - 导入谷歌登录按钮 \n- [vue-rate](https://github.com/SinanMtl/vue-rate) ★68 - Vue评分组件 \n- [awesome-mask](https://github.com/moip/awesome-mask) ★67 - 拥有独一无二mask的表单 \n- [vue-radial-progress](https://github.com/wyzant-dev/vue-radial-progress) ★65 - Vue.js放射性进度条组件 \n- [vue-quill](https://github.com/CroudSupport/vue-quill) ★65 - vue组件构建quill编辑器 \n- [vue-date-picker](https://github.com/Bubblings/vue-date-picker) ★63 - VueJS日期选择器组件 \n- [coffeebreak](https://github.com/Kocisov/coffeebreak) ★62 - 实时编辑CSS组件工具 \n- [vue-good-wizard](https://github.com/xaksis/vue-good-wizard) ★61 - VueJS 2.x wizard plugin \n- [vue-loading](https://github.com/jkchao/vue-loading) ★60 - 使用SVG加载 \n- [datepicker](https://github.com/vue-bulma/datepicker) ★59 - 基于flatpickr的时间选择组件 \n- [vue-placeholders](https://github.com/lithiumjake/vue-placeholders) ★58 - 处理占位符图片和乱码 \n- [we-vue](https://github.com/tianyong90/we-vue) ★55 - Vue2及weui1开发的组件 \n- [vue-fullcalendar](https://github.com/CroudSupport/vue-fullcalendar) ★55 - vue FullCalendar封装 \n- [vue-chartkick](https://github.com/ankane/vue-chartkick) ★53 - VueJS一行代码实现优美图表 \n- [cxlt-vue2-toastr](https://github.com/chengxulvtu/cxlt-vue2-toastr) ★52 - 弹出提示的Vue2组件 \n- [vue-formly](https://github.com/formly-js/vue-formly) ★51 - VueJS的JS表单 \n- [vue2-autocomplete](https://github.com/BosNaufal/vue2-autocomplete) ★51 - vue2的自动完成组件 \n- [vue-morris](https://github.com/bbonnin/vue-morris) ★50 - Vuejs组件封装Morrisjs库 \n- [veui](https://github.com/ecomfe/veui) ★50 - VueJS百度企业UI \n- [vue-components](https://github.com/yunfeihuang/vue-components) ★49 - 移动端UI组件库 \n- [vue-star-rating](https://github.com/craigh411/vue-star-rating) ★49 - 简单高度自定义的星星评级组件 \n- [vue-tagsinput](https://github.com/Ginhing/vue-tagsinput) ★48 - 基于VueJS的标签组件 \n- [vue-tabs](https://github.com/alexqdjay/vue-tabs) ★47 - 多tab页轻型框架 \n- [vue-popup-mixin](https://github.com/myronliu347/vue-popup-mixin) ★47 - 用于管理弹出框的遮盖层 \n- [vue-ripple-directive](https://github.com/PygmySlowLoris/vue-ripple-directive) ★45 - 使用Vue指令的Material波纹效果 \n- [vue-cropper](https://github.com/xyxiao001/vue-cropper) ★42 - 一个简单的vue 的图片裁剪插件 \n- [vue-ztree](https://github.com/lisiyizu/vue-ztree) ★41 - 用 vue 写的树层级组件 \n- [vue-touch-keyboard](https://github.com/icebob/vue-touch-keyboard) ★41 - VueJS虚拟键盘组件 \n- [cubeex](https://github.com/fangyongbao/cubeex) ★40 - 包含一套完整的移动UI \n- [vue-chart](https://github.com/miaolz123/vue-chart) ★40 - 强大的高速的vue图表解析 \n- [vue-music-master](https://github.com/yunyi1895/vue-music-master) ★40 - vue手机端网页音乐播放器 \n- [vue-bootstrap-table](https://github.com/jbaysolutions/vue-bootstrap-table) ★39 - 可排序可检索的表格 \n- [vue-emoji](https://github.com/jkchao/vue-emoji) ★39 - 好用的emoji插件 \n- [handsontable](https://github.com/vue-bulma/handsontable) ★39 - 网页表格组件 \n- [vue-form-2](https://github.com/matfish2/vue-form-2) ★37 - 全面的HTML表单管理的解决方案 \n- [vue-area](https://github.com/blue0728/vue-area) ★37 - 省市区三级联动插件 \n- [vue-side-nav](https://github.com/vue-comps/vue-side-nav) ★37 - 响应式的侧边导航 \n- [vue-image-scroll](https://github.com/ShanaMaid/vue-image-scroll) ★36 - 仿网易云音乐的vue图片滚动插件 \n- [vue-pull-to-refresh](https://github.com/bajian/vue-pull-to-refresh) ★35 - Vue2的上拉下拉 \n- [mint-indicator](https://github.com/mint-ui/mint-indicator) ★35 - VueJS移动加载指示器插件 \n- [vue-image-clip](https://github.com/legeneek/vue-image-clip) ★34 - 基于vue的图像剪辑组件 \n- [vue-material-design](https://github.com/loujiayu/vue-material-design) ★34 - Vue MD风格组件 \n- [vue-simple-upload](https://github.com/saivarunk/vue-simple-upload) ★31 - 简单的VueJS上传组件 \n- [chartjs](https://github.com/vue-bulma/chartjs) ★29 - Vue Bulma的chartjs组件 \n- [vue-lazy-background-images](https://github.com/darrynten/vue-lazy-background-images) ★29 - 懒加载背景组件的Vue组件 \n- [vue-ripple](https://github.com/BosNaufal/vue-ripple) ★29 - 制作谷歌MD风格涟漪效果的Vue组件 \n- [vue-scroll](https://github.com/suguangwen/vue-scroll) ★27 - vue滚动 \n- [laravel-vue-pagination](https://github.com/gilbitron/laravel-vue-pagination) ★26 - VueJS分页组件 \n- [vue-datepicker-simple](https://github.com/dai-siki/vue-datepicker-simple) ★26 - 基于vue的日期选择器 \n- [vue-m-carousel](https://github.com/shiye515/vue-m-carousel) ★26 - vue 移动端轮播组件 \n- [vue-parallax](https://github.com/vue-comps/vue-parallax) ★23 - 整洁的视觉效果 \n- [vue-img-loader](https://github.com/JackGit/vue-img-loader) ★22 - 图片加载UI组件 \n- [vue-tree](https://github.com/weibangtuo/vue-tree) ★22 - vue树视图组件 \n- [vue-verify-pop](https://github.com/aweiu/vue-verify-pop) ★22 - 带气泡提示的vue校验插件 \n- [vue-waves](https://github.com/Teddy-Zhu/vue-waves) ★22 - waves的VueJS版本 \n- [vue-smoothscroll](https://github.com/Teddy-Zhu/vue-smoothscroll) ★20 - smoothscroll的VueJS版本 \n- [vue-city](https://github.com/xinxingyu/vue-city) ★19 - 城市选择器 \n- [vue-laypage](https://github.com/sinchang/vue-laypage) ★17 - 简单的VueJS分页组件 \n- [vue-typewriter](https://github.com/eduardostuart/vue-typewriter) ★15 - vue组件类型 \n- [vue-ios-alertview](https://github.com/Treri/vue-ios-alertview) ★14 - iOS7+ 风格的alertview服务 \n- [vue-cmap](https://github.com/doodlewind/vue-cmap) ★14 - Vue China map可视化组件 \n- [paco-ui-vue](https://github.com/yeseason/paco-ui-vue) ★12 - PACOUI的vue组件 \n- [vue-cascading-address](https://github.com/savokiss/vue-cascading-address) ★9 - vue地区选择器 \n- [dd-vue-component](https://github.com/ibufu/dd-vue-component) ★7 - 订单来了的公共组件库 \n- [vue-button](https://github.com/steven5538/vue-button) ★5 - Vue按钮组件 \n\n### vue实用库 \n\n- [vuex](https://github.com/vuejs/vuex) ★8043 - 专为 Vue.js 应用程序开发的状态管理模式 \n- [vue-loader](https://github.com/vuejs/vue-loader) ★1847 - Vue.js 针对Webpack的组件装载插件 \n- [vue-validator](https://github.com/vuejs/vue-validator) ★1807 - vue的验证器插件 \n- [vue-lazyload](https://github.com/hilongjw/vue-lazyload) ★1224 - 用于懒加载的Vue模块 \n- [vuelidate](https://github.com/monterail/vuelidate) ★1075 - 简单轻量级的基于模块的Vue.js验证 \n- [vue-i18n](https://github.com/kazupon/vue-i18n) ★1053 - VueJS的多语言切换插件 \n- [qingcheng](https://github.com/zerqu/qingcheng) ★736 - qingcheng主题 \n- [Vue-Socketio](https://github.com/MetinSeylan/Vue-Socket.io) ★533 - VueJS的socketio实现 \n- [vue-awesome](https://github.com/Justineo/vue-awesome) ★532 - VueJS字体Awesome组件 \n- [vue-desktop](https://github.com/ElemeFE/vue-desktop) ★496 - 创建管理面板网站的UI库 \n- [vue-axios](https://github.com/imcvampire/vue-axios) ★491 - 将axios整合到VueJS的封装 \n- [vue-meta](https://github.com/declandewet/vue-meta) ★467 - 管理app的meta信息 \n- [vue-head](https://github.com/ktquez/vue-head) ★396 - head标签的meta信息操作 \n- [meteor-vue-component](https://github.com/Akryum/meteor-vue-component) ★382 - vue和meteor整合 \n- [avoriaz](https://github.com/eddyerburgh/avoriaz) ★338 - VueJS测试实用工具库 \n- [portal-vue](https://github.com/LinusBorg/portal-vue) ★239 - 在组件外部渲染DOM \n- [vue-flatpickr](https://github.com/jrainlau/vue-flatpickr) ★228 - 封装Flatpickr的Vue组件 \n- [vue-timeago](https://github.com/egoist/vue-timeago) ★195 - VueJS的时间前组件 \n- [blessed-vue](https://github.com/lyonlai/blessed-vue) ★181 - 编写命令行UI的VueJS运行时 \n- [vue-unit](https://github.com/wrseward/vue-unit) ★179 - 创建单元测试组件 \n- [vue-authenticate](https://github.com/dgrubelic/vue-authenticate) ★177 - 简单的VueJS身份认证库 \n- [vue-scrollTo](https://github.com/rigor789/vue-scrollTo) ★174 - 滚动到元素的VueJS指令 \n- [vue-svg-icon](https://github.com/cenkai88/vue-svg-icon) ★157 - vue2的可变彩色svg图标方案 \n- [vue-focus](https://github.com/simplesmiler/vue-focus) ★148 - 可重用VueJS组件的焦点指令 \n- [meteor-vue](https://github.com/zhouzhuojie/meteor-vue) ★134 - VueJS和Meteor的桥接 \n- [element-admin](https://github.com/lynzz/element-admin) ★130 - 支持 vuecli 的 Element UI 的后台模板 \n- [vuep](https://github.com/QingWei-Li/vuep) ★118 - 用实时编辑和预览来渲染Vue组件 \n- [vuet](https://github.com/medevicex/vuet) ★116 - 一个跨页面、跨组件的状态管理插件 \n- [vue-bootstrap-modal](https://github.com/Coffcer/vue-bootstrap-modal) ★112 - vue的Bootstrap样式组件 \n- [vue-animate](https://github.com/haydenbbickerton/vue-animate) ★106 - 跨浏览器CSS3动画库 \n- [vue-property-decorator](https://github.com/kaorun343/vue-property-decorator) ★104 - VueJS和属性Decorator \n- [vue-aplayer](https://github.com/SevenOutman/vue-aplayer) ★100 - 便于配置的音乐播放器vue2组件 \n- [vue-password-strength-meter](https://github.com/apertureless/vue-password-strength-meter) ★97 - 交互式密码强度计 \n- [vue-websocket](https://github.com/icebob/vue-websocket) ★91 - VueJS的Websocket插件 \n- [vue-local-storage](https://github.com/pinguinjkeke/vue-local-storage) ★88 - 具有类型支持的Vuejs本地储存插件 \n- [vue-recyclist](https://github.com/xtongs/vue-recyclist) ★88 - vuejs无限滚动列表 \n- [vue-lazy-render](https://github.com/yeyuqiudeng/vue-lazy-render) ★87 - 用于Vue组件的延迟渲染 \n- [vue-qart](https://github.com/superman66/vue-qart) ★86 - 用于qartjs的Vue2指令 \n- [vue-framework7](https://github.com/lmk123/vue-framework7) ★85 - 结合VueJS使用的Framework7组件 \n- [vue-cordova](https://github.com/kartsims/vue-cordova) ★85 - Cordova的VueJS插件 \n- [http-vue-loader](https://github.com/FranckFreiburger/http-vue-loader) ★84 - 从html及js环境加载vue文件 \n- [vue-parallax](https://github.com/apertureless/vue-parallax) ★84 - 快速60fps视差滚动效果组件 \n- [vue-clipboard](https://github.com/xiaokaike/vue-clipboard) ★84 - VueJS的剪贴板 \n- [vue-kindergarten](https://github.com/JiriChara/vue-kindergarten) ★83 - 将kindergarten集成到VueJS应用 \n- [vue-events](https://github.com/cklmercer/vue-events) ★83 - 简化事件的VueJS插件 \n- [vue-notifications](https://github.com/se-panfilov/vue-notifications) ★80 - 非阻塞通知库 \n- [vue-online](https://github.com/Sopamo/vue-online) ★77 - reactive的在线和离线组件 \n- [vue-shortkey](https://github.com/iFgR/vue-shortkey) ★74 - 应用于Vue.js的Vue-ShortKey 插件 \n- [vue-bus](https://github.com/yangmingshan/vue-bus) ★71 - VueJS的事件总线 \n- [vuex-i18n](https://github.com/dkfbasel/vuex-i18n) ★71 - 定位插件 \n- [uiv](https://github.com/wxsms/uiv) ★70 - Vue实现的Bootstrap组件 \n- [vue-router-transition](https://github.com/weinot/vue-router-transition) ★69 - 页面过渡插件 \n- [vue-gesture](https://github.com/mlyknown/vue-gesture) ★69 - VueJS的手势事件插件 \n- [vue-clip](https://github.com/thetutlage/vue-clip) ★67 - 简约的破解文件上传器 \n- [vue-electron](https://github.com/SimulatedGREG/vue-electron) ★66 - 将选择的API封装到Vue对象中的插件 \n- [cleave](https://github.com/vue-bulma/cleave) ★64 - 基于cleave.js的Cleave组件 \n- [vuemit](https://github.com/gocanto/vuemit) ★63 - 处理VueJS事件 \n- [vue-worker](https://github.com/israelss/vue-worker) ★56 - 使用webworkers的Vue插件 \n- [vue-acl](https://github.com/leonardovilarinho/vue-acl) ★54 - VueJS访问控制列表插件 \n- [vue-ts-loader](https://github.com/HerringtonDarkholme/vue-ts-loader) ★54 - 在Vue装载机检查脚本 \n- [Vue.resize](https://github.com/David-Desmaisons/Vue.resize) ★51 - 检测HTML调整大小事件的vue指令 \n- [vuedeux](https://github.com/Vuedeux/vuedeux) ★50 - 轻量级开源实用用层 \n- [vue-ls](https://github.com/RobinCK/vue-ls) ★49 - 适配Vuecontext中LocalStorage的Vue插件 \n- [lazy-vue](https://github.com/gocanto/lazy-vue) ★48 - 懒加载图片 \n- [vue-pagination-2](https://github.com/matfish2/vue-pagination-2) ★46 - 简单通用的分页组件 \n- [v-media-query](https://github.com/AStaroverov/v-media-query) ★44 - vue中添加用于配合媒体查询的方法 \n- [vue-observe-visibility](https://github.com/Akryum/vue-observe-visibility) ★42 - 当元素在页面上可见或隐藏时检测 \n- [vue-lazy-component](https://github.com/Coffcer/vue-lazy-component) ★38 - 懒加载组件或者元素的Vue指令 \n- [vue-reactive-storage](https://github.com/ropbla9/vue-reactive-storage) ★37 - vue插件的Reactive层 \n- [vue-helmet](https://github.com/miaolz123/vue-helmet) ★37 - HTML标题管理器 \n- [voir](https://github.com/richardanaya/voir) ★35 - 保持mutation与视图组件的分离 \n- [vuex-shared-mutations](https://github.com/xanf/vuex-shared-mutations) ★34 - 分享某种Vuex mutations \n- [vue-drag-zone](https://github.com/surmon-china/vue-drag-zone) ★28 - 适用于Vue2的dom拖动组件 \n- [vue-eslint-parser](https://github.com/mysticatea/vue-eslint-parser) ★27 - ESLint自定义解析 \n- [modal](https://github.com/vue-bulma/modal) ★26 - Vue Bulma的modal组件 \n- [vue-plan](https://github.com/wakeupmypig/vue-plan) ★25 - Vuex-状态管理 \n- [vue-file-base64](https://github.com/BosNaufal/vue-file-base64) ★22 - 将文件转换为Base64的vue组件 \n- [vue-methods-promise](https://github.com/lzxb/vue-methods-promise) ★21 - 使vue方法支持promise \n- [Vue.ImagesLoaded](https://github.com/David-Desmaisons/Vue.ImagesLoaded) ★20 - 检测图片加载的VueJS指令 \n- [Famous-Vue](https://github.com/irwansyahwii/Famous-Vue) ★16 - Famous库的vue组件 \n- [leo-vue-validator](https://github.com/LeoHuiyi/leo-vue-validator) ★15 - 异步的表单验证组件 \n- [vue-titlecase](https://github.com/Haixing-Hu/vue-titlecase) ★13 - 用于字符串titlecased的VueJS过滤器 \n- [Vue-Easy-Validator](https://github.com/MetinSeylan/Vue-Easy-Validator) ★12 - 简单的表单验证 \n- [vue-zoombox](https://github.com/vue-comps/vue-zoombox) ★12 - 一个高级zoombox \n- [vue-truncate-filter](https://github.com/imcvampire/vue-truncate-filter) ★10 - 截断字符串的VueJS过滤器 \n- [vue-router-storage](https://github.com/ElderJames/vue-router-storage) ★9 - vue历史路由持久化的解决方案 \n- [vue-input-autosize](https://github.com/syropian/vue-input-autosize) ★9 - 基于内容自动调整文本输入的大小 \n- [vue-data-validator](https://github.com/phphe/vue-data-validator) ★4 - Vuejs2的数据验证插件 \n- [vue-lazyloadImg](https://github.com/yodfz/vue-lazyloadImg) ★4 - 图片懒加载插件 \n\n### vue应用实例 \n\n- [koel](https://github.com/phanan/koel) ★7773 - 基于网络的个人音频流媒体服务 \n- [pagekit](https://github.com/pagekit/pagekit) ★4225 - 轻量级的CMS建站系统 \n- [vue-manage-system](https://github.com/lin-xin/vue-manage-system) ★2057 - 后台管理系统解决方案 \n- [vuedo](https://github.com/Vuedo/vuedo) ★1265 - 博客平台 \n- [jackblog-vue](https://github.com/jackhutu/jackblog-vue) ★1120 - 个人博客系统 \n- [PJ Blog](https://github.com/jcc/blog) ★1018 - 开源博客 \n- [vue-cnode](https://github.com/lzxb/vue-cnode) ★787 - 重写vue版cnode社区 \n- [vms](https://github.com/ericjjj/vms) ★629 - vuejs2管理系统 \n- [CMS-of-Blog](https://github.com/ycwalker/CMS-of-Blog) ★541 - 博客内容管理器 \n- [goldfish](https://github.com/Caiyeon/goldfish) ★518 - 用于HashiCorp Vault的Admin UI \n- [rss-reader](https://github.com/mrgodhani/rss-reader) ★368 - 简单的rss阅读器 \n- [vue-ghpages-blog](https://github.com/viko16/vue-ghpages-blog) ★254 - 依赖GitHub Pages无需本地生成的静态博客 \n- [vue-blog](https://github.com/surmon-china/vue-blog) ★143 - 使用Vue2.0 和Vuex的vue-blog \n- [swoole-vue-webim](https://github.com/wh469012917/swoole-vue-webim) ★137 - Web版的聊天应用 \n- [tomato5](https://github.com/zhangxin840/tomato5) ★134 - 实时的协作工具 \n- [Loopa-News](https://github.com/Angarsk8/Loopa-News) ★133 - 开源社会新闻应用 \n- [vue2-management-platform](https://github.com/reg21st/vue2-management-platform) ★74 - vue2.0+ elementUI 后台管理平台 \n- [vue-dashing-js](https://github.com/thelinuxlich/vue-dashing-js) ★70 - nuvo-dashing-js的fork \n- [fewords](https://github.com/sapjax/fewords) ★63 - 功能极其简单的笔记本 \n- [adminify](https://github.com/wxs77577/adminify) ★46 - 一个基于Vuetify material的Admin面板 \n\n### vueDemo示例 \n\n- [vue2-elm](https://github.com/bailicangdu/vue2-elm) ★8036 - 重写饿了么webapp \n- [Vue-cnodejs](https://github.com/shinygang/Vue-cnodejs) ★2491 - 基于vue重写Cnodejs.org的webapp \n- [NeteaseCloudWebApp](https://github.com/javaSwing/NeteaseCloudWebApp) ★1549 - 高仿网易云音乐的webapp \n- [vue2-happyfri](https://github.com/bailicangdu/vue2-happyfri) ★1535 - vue2及vuex的入门练习项目 \n- [vue-zhihu-daily](https://github.com/hilongjw/vue-zhihu-daily) ★1010 - 知乎日报 with Vuejs \n- [vue2-demo](https://github.com/lzxb/vue2-demo) ★994 - 从零构建vue2 + vue-router + vuex 开发环境 \n- [vue-wechat](https://github.com/useryangtao/vue-wechat) ★939 - vue.js开发微信app界面 \n- [eleme](https://github.com/liangxiaojuan/eleme) ★882 - 高仿饿了么app商家详情 \n- [vue-demo](https://github.com/kenberkeley/vue-demo) ★755 - vue简易留言板 \n- [bilibili-vue](https://github.com/lybenson/bilibili-vue) ★694 - 全栈式开发bilibili首页 \n- [spa-starter-kit](https://github.com/codecasts/spa-starter-kit) ★646 - 单页应用启动套件 \n- [VueDemo_Sell_Eleme](https://github.com/SimonZhangITer/VueDemo_Sell_Eleme) ★636 - Vue2高仿饿了么外卖平台 \n- [vue-music](https://github.com/Sioxas/vue-music) ★621 - Vue 音乐搜索播放 \n- [douban](https://github.com/jeneser/douban) ★606 - 基于vue全家桶的精致豆瓣DEMO \n- [vue-Meizi](https://github.com/liangxiaojuan/vue-Meizi) ★604 - vue最新实战项目 \n- [maizuo](https://github.com/zhengguorong/maizuo) ★603 - vue/vuex/redux仿卖座网 \n- [vue-WeChat](https://github.com/zhaohaodang/vue-WeChat) ★558 - 基于Vue2高仿微信App的单页应用 \n- [vue-demo-kugou](https://github.com/lavyun/vue-demo-kugou) ★500 - vuejs仿写酷狗音乐webapp \n- [vue2-manage](https://github.com/bailicangdu/vue2-manage) ★457 - 基于 vue + element-ui 的后台管理系统 \n- [zhihudaily-vue](https://github.com/yatessss/zhihudaily-vue) ★455 - 知乎日报web版 \n- [vue-163-music](https://github.com/ShanaMaid/vue-163-music) ★448 - vue仿网易云音乐客户端版 \n- [vue-axios-github](https://github.com/superman66/vue-axios-github) ★448 - 登录拦截登出功能 \n- [douban](https://github.com/jiakeqi/douban) ★440 - 模仿豆瓣前端 \n- [vue-shopping](https://github.com/andylei18/vue-shopping) ★404 - 蘑菇街移动端 \n- [vue2.0-taopiaopiao](https://github.com/canfoo/vue2.0-taopiaopiao) ★402 - vue2.0与express构建淘票票页面 \n- [xyy-vue](https://github.com/hzzly/xyy-vue) ★396 - 大学生交流平台 \n- [easy-vue](https://github.com/TIGERB/easy-vue) ★370 - 使用Vue实现简易web \n- [vue2.x-douban](https://github.com/superman66/vue2.x-douban) ★360 - Vue2实现简易豆瓣电影webApp \n- [vue2-MiniQQ](https://github.com/jiangqizheng/vue2-MiniQQ) ★351 - 基于Vue2实现的仿手机QQ单页面应用 \n- [mi-by-vue](https://github.com/wendaosanshou/mi-by-vue) ★291 - VueJS仿小米官网 \n- [daily-zhihu](https://github.com/walleeeee/daily-zhihu) ★275 - 基于Vue2的知乎日报单页应用 \n- [vue-leancloud-blog](https://github.com/jiangjiu/vue-leancloud-blog) ★268 - 一个前后端完全分离的单页应用 \n- [VueMusic-PC](https://github.com/Reusjs/VueMusic-PC) ★260 - Vue.js高还原网易云音乐系列 \n- [node-vue-server-webpack](https://github.com/yjj5855/node-vue-server-webpack) ★253 - Node.js+Vue.js+webpack快速开发框架 \n- [beauty](https://github.com/beauty-enjoy/beauty) ★245 - 豆瓣美女clone \n- [vue-adminLte-vue-router](https://github.com/liujians/vue-adminLte-vue-router) ★243 - vue和adminLte整合应用 \n- [vue-fis3](https://github.com/okoala/vue-fis3) ★217 - 流行开源工具集成demo \n- [notepad](https://github.com/lin-xin/notepad) ★216 - 本地存储的记事本 \n- [vue-demo-maizuo](https://github.com/ChuckCZC/vue-demo-maizuo) ★210 - 使用Vue2全家桶仿制卖座电影 \n- [Pixel-Web](https://github.com/Werb/Pixel-Web) ★198 - 一个 Vue 微博客户端 \n- [netease_yanxuan](https://github.com/MengZhaoFly/netease_yanxuan) ★198 - vue版网易严选 \n- [tmdb-app](https://github.com/dmtrbrl/tmdb-app) ★194 - TMDbVueJS应用 \n- [vue-express-mongodb](https://github.com/xrr2016/vue-express-mongodb) ★189 - 简单的前后端分离案例 \n- [vue-zhihudaily](https://github.com/iHaPBoy/vue-zhihudaily) ★187 - 知乎日报 Web 版本 \n- [Vdo](https://github.com/RalfZhang/Vdo) ★179 - VueJS与MD重构豆瓣 \n- [vue-blog](https://github.com/BUPT-HJM/vue-blog) ★171 - 单用户博客 \n- [Wuji](https://github.com/xiaobinwu/Wuji) ★168 - 吾记网页版 \n- [hello-vue-django](https://github.com/rokups/hello-vue-django) ★160 - 使用带有Django的vuejs的样板项目 \n- [Zhihu-Daily-Vue.js](https://github.com/pomelo-chuan/Zhihu-Daily-Vue.js) ★157 - Vuejs单页网页应用 \n- [tencent-sports](https://github.com/renjie1996/tencent-sports) ★154 - Vue全家桶仿腾讯体育 \n- [gouyan-movie-vue](https://github.com/zhixuanziben/gouyan-movie-vue) ★151 - 基于vue的在线电影影讯网站 \n- [x-blog](https://github.com/CommanderXL/x-blog) ★145 - 开源的个人blog项目 \n- [vue-musicApp](https://github.com/lxyisme/vue-musicApp) ★132 - 使用vue全家桶制作的音乐播放器 \n- [vue-cnode](https://github.com/wszgxa/vue-cnode) ★131 - vue单页应用demo \n- [webpack-vue-vueRouter](https://github.com/193Eric/webpack-vue-vueRouter) ★130 - webpack及vue开发的简单项目实例 \n- [vue-koa-demo](https://github.com/Molunerfinn/vue-koa-demo) ★128 - 使用Vue2和Koa1的全栈demo \n- [vueBlog](https://github.com/elva2596/vueBlog) ★127 - 前后端分离博客 \n- [websocket_chat](https://github.com/secreter/websocket_chat) ★127 - 基于vue和websocket的多人在线聊天室 \n- [houtai](https://github.com/peng1992/houtai) ★125 - 基于vue和Element的后台管理系统 \n- [vue-toutiao](https://github.com/hcy1996/vue-toutiao) ★121 - vuejs高仿今日头条移动端 \n- [vue-cnode](https://github.com/microzz/vue-cnode) ★121 - 开源的CNode社区 \n- [vue-mini-shop](https://github.com/BosNaufal/vue-mini-shop) ★121 - VueJS在线商店 \n- [photoShare](https://github.com/beidan/photoShare) ★120 - 基于图片分享的社交平台 \n- [iview2-management-system](https://github.com/vanishcode/iview2-management-system) ★119 - 后台管理系统解决方案简单示例 \n- [doubanMovie](https://github.com/monkeyWangs/doubanMovie) ★119 - 豆瓣电影展示 \n- [eleme-vue2](https://github.com/hbxywdk/eleme-vue2) ★112 - 仿饿了么H5纯前端Vue版 \n- [vue-zhihu-daily](https://github.com/cccyb/vue-zhihu-daily) ★111 - 基于Vue全家桶开发的知乎日报 \n- [Vue-News](https://github.com/biaodigit/Vue-News) ★107 - 基于vue全家桶的仿知乎日报单页应用 \n- [douban-movie](https://github.com/xingbofeng/douban-movie) ★107 - 仿豆瓣电影wap端 \n- [generator-loopback-vue](https://github.com/qxl1231/generator-loopback-vue) ★104 - 典型前后端分离项目模板 \n- [vue-quasar-admin-example](https://github.com/odranoelBR/vue-quasar-admin-example) ★99 - 将Quasar和VueJS应用于SPA项目 \n- [vue-zhihudaily-2.0](https://github.com/cs1707/vue-zhihudaily-2.0) ★97 - 使用Vue2.0+vue-router+vuex创建的zhihudaily \n- [vue-todos](https://github.com/liangxiaojuan/vue-todos) ★95 - vue最新实战项目教程 \n- [vue-music](https://github.com/ddqre12345/vue-music) ★91 - 网易云音乐Demo \n- [vue-qqmusic](https://github.com/Panda-Hope/vue-qqmusic) ★90 - Vue全家桶+Mint-Ui打造高仿QQMusic \n- [vue2.x-Cnode](https://github.com/vincentSea/vue2.x-Cnode) ★88 - 基于vue全家桶的Cnode社区 \n- [vue-ruby-china](https://github.com/hql123/vue-ruby-china) ★86 - VueJS框架搭建的rubychina平台 \n- [doubanMovie-SSR](https://github.com/monkeyWangs/doubanMovie-SSR) ★85 - Vue豆瓣电影服务端渲染 \n- [vue-jd](https://github.com/huangche007/vue-jd) ★76 - 京东移动web商城 \n- [vue-nReader](https://github.com/zimplexing/vue-nReader) ★73 - 使用vue2.0 + vue-router + vuex 的一个多页面小说阅读webapp \n- [VueBlog](https://github.com/FatDong1/VueBlog) ★73 - 前后端分离的个人博客 \n- [Zhihu_Daily](https://github.com/littlewin-wang/Zhihu_Daily) ★73 - 基于Vue和Nodejs的Web单页应用 \n- [vue-koa2-login](https://github.com/sinner77/vue-koa2-login) ★67 - 使用 VueJS & NodeJS 实现的登录注册 \n- [webApp](https://github.com/houbx/webApp) ★64 - Vue2的移动端webApp音乐播放器 \n- [vue-trip](https://github.com/wenye123/vue-trip) ★64 - vue2做的出行webapp \n- [seeMusic](https://github.com/Alex-xd/seeMusic) ★63 - 跨平台云音乐播放器 \n- [github-explorer](https://github.com/SidKwok/github-explorer) ★63 - 寻找最有趣的GitHub库 \n- [vue-cli-multipage-bootstrap](https://github.com/zhoou/vue-cli-multipage-bootstrap) ★60 - 将vue官方在线示例整合到组件中 \n- [vue-XiaoMi-Shop](https://github.com/beautifulBoys/vue-XiaoMi-Shop) ★59 - 高仿小米商城的项目 \n- [Vue-NetEaseCloudMusic](https://github.com/leehomeok/Vue-NetEaseCloudMusic) ★59 - 模仿IOS版网易云音乐的手机网站 \n- [life-app-vue](https://github.com/shaqihe/life-app-vue) ★59 - 使用vue2完成多功能集合到小webapp \n- [doubanApp](https://github.com/MrMoveon/doubanApp) ★55 - 用vue2实现仿豆瓣app \n- [ios7-vue](https://github.com/QRL909109/ios7-vue) ★52 - 使用vue2.0 vue-router vuex模拟ios7 \n- [canvas-vue](https://github.com/hzzly/canvas-vue) ★50 - 一个Vue+Cnavas酷炫后台管理 \n- [vue-bushishiren](https://github.com/nswbmw/vue-bushishiren) ★49 - 不是诗人应用 \n- [vue-ssr-boilerplate](https://github.com/albertchan/vue-ssr-boilerplate) ★48 - 精简版的ofvue-hackernews-2 \n- [vuecommunity](https://github.com/gaohongwei11/vuecommunity) ★47 - vue.js中文社区 \n- [vue-music163](https://github.com/pluto1114/vue-music163) ★47 - 音乐VueJS项目 \n- [Vue2-MV](https://github.com/safaring/Vue2-MV) ★45 - 仿网易云音乐MV的webapp \n- [musiccloudWebapp](https://github.com/hua1995116/musiccloudWebapp) ★44 - 用vuejs仿网易云音乐 \n- [cnode-vue](https://github.com/BubblyPoker/cnode-vue) ★40 - 基于vue和vue-router构建的cnodejs web网站SPA \n- [Framework7-VueJS](https://github.com/tyllo/Framework7-VueJS) ★38 - 使用移动框架的示例 \n- [m-eleme](https://github.com/JerryYgh/m-eleme) ★37 - 基于Vue全家桶仿饿了么移动端webapp \n- [sls-vuex2-demo](https://github.com/sailengsi/sls-vuex2-demo) ★37 - vuex2商城购物车demo \n- [eagles](https://github.com/silianpan/eagles) ★36 - 各种组件封装 \n- [Todos_Vuejs](https://github.com/fishenal/Todos_Vuejs) ★35 - vuejs2搭建的极简的todolist \n- [vue-cnode](https://github.com/jiananle/vue-cnode) ★35 - 用 Vue 做的 CNode 官网 \n- [HyaReader](https://github.com/GitaiQAQ/HyaReader) ★35 - 移动友好的阅读器 \n- [Vue-Admin](https://github.com/lanux/Vue-Admin) ★33 - 基于Vue2的Admin系统 \n- [vue2-hybridapp-haoshiqi](https://github.com/liupeijun/vue2-hybridapp-haoshiqi) ★32 - 实现单页面webapp以及hybridapp \n- [zhihu-daily](https://github.com/xrr2016/zhihu-daily) ★32 - 轻松查看知乎日报内容 \n- [gank](https://github.com/xandeer/gank) ★32 - gankio资源的阅读应用 \n- [vue-h5plus](https://github.com/NewsNIng/vue-h5plus) ★31 - 前卫的vue及html5plus跨平台demo \n- [vue-cnode-mobile](https://github.com/soulcm/vue-cnode-mobile) ★29 - 搭建cnode社区 \n- [vue-weather](https://github.com/alanWongsGithub/vue-weather) ★26 - 基于vue.js 2.0的百度天气应用 \n- [vue-user-center](https://github.com/doterlin/vue-user-center) ★26 - vuejs直播类应用web端个人中心 \n- [zhihu-daily-vue](https://github.com/moonou/zhihu-daily-vue) ★22 - 知乎日报 \n- [vue-cnode](https://github.com/Damonlw/vue-cnode) ★22 - 使用cNode社区提供的接口 \n- [vue-starter](https://github.com/BosNaufal/vue-starter) ★22 - VueJs项目的简单启动页 \n- [node-vue-fabaocn](https://github.com/wx1993/node-vue-fabaocn) ★21 - 基于 node 和 vue 实现的移动官网 \n- [vue-memo](https://github.com/youknowznm/vue-memo) ★20 - 用 vue写的记事本应用 \n- [v-notes](https://github.com/Halfeld/v-notes) ★20 - 简单美观的记事本 \n- [vue-flexible-app](https://github.com/momopig/vue-flexible-app) ★19 - vue开发的一个简易app \n- [simply-calculator-vuejs](https://github.com/CaiYiLiang/simply-calculator-vuejs) ★19 - 用VueJS实现简易计算器 \n- [vue-dropload](https://github.com/ITCNZ/vue-dropload) ★19 - 用以测试下拉加载与简单路由 \n- [Vuejs-SalePlatform](https://github.com/fishenal/Vuejs-SalePlatform) ★19 - vuejs搭建的售卖平台demo \n- [vue-shopping-mall](https://github.com/hj624608494/vue-shopping-mall) ★16 - 基于Vue.js 2.x系列 + vue2-router + axios + iview 商城 \n- [qqmusic](https://github.com/yangbo5207/qqmusic) ★13 - QQ音乐vue \n- [vue-weather](https://github.com/deshes/vue-weather) ★12 - VueJS天气demo \n\n## react\n\n### reactApi\n- [react](https://hulufei.gitbooks.io/react-tutorial/content/introduction.html)\n- [react](http://cn.redux.js.org/docs/introduction/Motivation.html)\n\n### reactUI库\n- [ant-design](https://ant.design/index-cn)- 蚂蚁金服的 React UI 库\n- [react-loadable](http://cn.redux.js.org/docs/introduction/Motivation.html)- 按需加载 react 组件\n- [material-ui](https://github.com/mui-org/material-ui) - UI 库\n### react实用库\n- [react-dnd](https://github.com/react-dnd/react-dnd) - 拖拽实现\n\n## 小程序\n\n### 微信Api\n[微信Api](https://developers.weixin.qq.com/miniprogram/dev/framework/app-service/api.html)\n### 支付宝Api\n[支付宝Api](https://docs.alipay.com/mini/developer/getting-started)\n### 微信Api\n[今日头条Api](https://developer.toutiao.com/docs/framework/)\n### 微信Api\n[百度Api](https://smartprogram.baidu.com/developer/index.html)\n\n## webpack\n- [webpack](https://www.webpackjs.com/)\n\n## typeScript\n- [webpack](https://www.tslang.cn/docs/handbook/jsx.html)\n\n\n> 如果有补充的可以提交issure,帮助我完善来帮助方便更多的人，让更多的人节省不必要的时间。\n\n[github:](https://github.com/xiaosongread/Commonly-used-to-collect)","source":"_posts/collect.md","raw":"---\ntitle: 常用的前端库汇总\ncategories: gc-end\ndate: 2019-08-13 11:53:19\ntags: vue react webpack\n---\n\n# Commonly-used-to-collect\n> 🎉 整理我平时关注的前端库。\n\n## 导航：\n\n1.[Vue](#vue)\n+ [API](#vueApi) \n+ [UI库](#vueUI库) \n+ [实用库](#vue实用库) \n+ [应用实例](#vue应用实例) \n+ [Demo示例](#vueDemo示例) \n\n2.[React](#react)\n+ [API](#reactApi) \n+ [UI库](#reactUI库) \n+ [实用库](#react实用库) \n\n3.[小程序](#小程序)\n+ [微信](#微信Api)\n+ [支付宝](#支付宝Api)\n+ [今日头条](#今日头条Api)\n+ [百度](#百度Api)\n\n4.[webpack](#webpack)\n\n5.[typeScript](#typeScript)\n<!-- more -->\n## 前端框架\n\n- [vue](https://github.com/vuejs/vue)\n- [react](https://github.com/facebook/react)\n- [umi](https://github.com/umijs/umi) - 蚂蚁金服的前端框架。\n- [taro](https://github.com/NervJS/taro) - 生成能运行在微信/百度/支付宝/字节跳动/ QQ 小程序、快应用、H5、React Native 等的应用\n- [quasar](https://github.com/quasarframework/quasar) - 基于 vue，一套代码多处适用。\n- [mapvue](http://mpvue.com/) - 美团基于 Vue.js 开发小程序的前端框架\n\n## vue\n### vueApi:\n- [vue](https://cn.vuejs.org/v2/api/#v-text)\n- [vue-router](https://router.vuejs.org/zh/)\n### vueUI库：\n- [elementUi](https://element.eleme.cn/#/zh-CN/component/installation) - 饿了么出品的Vue2的web UI工具套件\n- [VUX](https://vux.li/) - 基于Vue和WeUI的组件库(个人维护)\n- [mint-ui](http://mint-ui.github.io/#!/zh-cn) - Vue 2的移动UI元素\n- [iview](http://v1.iviewui.com/) - 基于 Vuejs 的开源 UI 组件库\n- [vuetify](https://vuetifyjs.com/zh-Hans/) - 为移动而生的Vue JS 2组件框架\n- [vue-element-admin](https://panjiachen.github.io/vue-element-admin-site/zh/) - Vue管理面板框架\n- [Keen-UI](https://github.com/JosephusPaye/Keen-UI) ★2749 - 轻量级的基本UI组件合集 \n- [vonic](https://github.com/wangdahoo/vonic) ★1913 - 快速构建移动端单页应用 \n- [vue-multiselect](https://github.com/monterail/vue-multiselect) ★1539 - Vue.js选择框解决方案 \n- [eme](https://github.com/egoist/eme) ★1529 - 优雅的Markdown编辑器 \n- [vueAdmin](https://github.com/taylorchen709/vueAdmin) ★1455 - 基于vuejs2和element的简单的管理员模板 \n- [bootstrap-vue](https://github.com/pi0/bootstrap-vue) ★1267 - 应用于Vuejs2的Twitter的Bootstrap 4组件 \n- [Vue.Draggable](https://github.com/David-Desmaisons/Vue.Draggable) ★1191 - 实现拖放和视图模型数组同步 \n- [eagle.js](https://github.com/Zulko/eagle.js) ★1128 - hacker的幻灯片演示框架 \n- [vue-awesome-swiper](https://github.com/surmon-china/vue-awesome-swiper) ★1012 - vue.js触摸滑动组件 \n- [vue-table](https://github.com/ratiw/vue-table) ★1009 - 简化数据表格 \n- [vue-chat](https://github.com/Coffcer/vue-chat) ★859 - vuejs和vuex及webpack的聊天示例 \n- [vue-blu](https://github.com/chenz24/vue-blu) ★850 - 帮助你轻松创建web应用 \n- [vue-recyclerview](https://github.com/hilongjw/vue-recyclerview) ★849 - 管理大列表的vue-recyclerview \n- [VueCircleMenu](https://github.com/OYsun/VueCircleMenu) ★838 - 漂亮的vue圆环菜单 \n- [vue-infinite-scroll](https://github.com/ElemeFE/vue-infinite-scroll) ★779 - VueJS的无限滚动指令 \n- [buefy](https://github.com/rafaelpimpa/buefy) ★755 - 响应式UI组件轻量级库 \n- [vue-beauty](https://github.com/FE-Driver/vue-beauty) ★749 - 由vue和ant design创建的优美UI组件 \n- [vue-waterfall](https://github.com/MopTym/vue-waterfall) ★737 - Vue.js的瀑布布局组件 \n- [radon-ui](https://github.com/luojilab/radon-ui) ★715 - 快速开发产品的Vue组件库 \n- [vue-loop](https://github.com/lookstudios/vue-loop) ★701 - 无限的内容循环 \n- [vue-chartjs](https://github.com/apertureless/vue-chartjs) ★694 - vue中的Chartjs的封装 \n- [vue-carbon](https://github.com/myronliu347/vue-carbon) ★684 - 基于 vue 开发MD风格的移动端 \n- [vue-syntax-highlight](https://github.com/vuejs/vue-syntax-highlight) ★655 - Sublime Text语法高亮 \n- [vue-echarts](https://github.com/Justineo/vue-echarts) ★649 - VueJS的ECharts组件 \n- [vue-quill-editor](https://github.com/surmon-china/vue-quill-editor) ★615 - 基于Quill适用于Vue2的富文本编辑器 \n- [vue-amap](https://github.com/ElemeFE/vue-amap) ★571 - 基于Vue 2和高德地图的地图组件 \n- [vue-calendar](https://github.com/jinzhe/vue-calendar) ★536 - 日期选择插件 \n- [vue-infinite-loading](https://github.com/PeachScript/vue-infinite-loading) ★501 - VueJS的无限滚动插件 \n- [vue-swipe](https://github.com/ElemeFE/vue-swipe) ★481 - VueJS触摸滑块 \n- [vue-music-player](https://github.com/microzz/vue-music-player) ★451 - Vuejs写一个音乐播放器 \n- [vue-scroller](https://github.com/wangdahoo/vue-scroller) ★444 - Vonic UI的功能性组件 \n- [vue-datepicker](https://github.com/hilongjw/vue-datepicker) ★436 - 日历和日期选择组件 \n- [vue-core-image-upload](https://github.com/Vanthink-UED/vue-core-image-upload) ★393 - 轻量级的vue上传插件 \n- [vue-progressbar](https://github.com/hilongjw/vue-progressbar) ★379 - vue轻量级进度条 \n- [Gokotta](https://github.com/Zhangdroid/Gokotta) ★375 - 简单的音乐播放器 \n- [vue-sortable](https://github.com/sagalbot/vue-sortable) ★373 - 轻松添加拖拽排序 \n- [vue-picture-input](https://github.com/alessiomaffeis/vue-picture-input) ★352 - 移动友好的图片文件输入组件 \n- [vue-echarts-v3](https://github.com/xlsdg/vue-echarts-v3) ★351 - VueJS组件封装 \n- [markcook](https://github.com/jrainlau/markcook) ★343 - 好看的markdown编辑器 \n- [vue-video-player](https://github.com/surmon-china/vue-video-player) ★336 - VueJS视频及直播播放器 \n- [vue-google-maps](https://github.com/GuillaumeLeclerc/vue-google-maps) ★334 - 带有双向数据绑定Google地图组件 \n- [vue-trend](https://github.com/QingWei-Li/vue-trend) ★332 - 简单优雅的星光线条 \n- [vuejs-datepicker](https://github.com/charliekassel/vuejs-datepicker) ★314 - vue日期选择器组件 \n- [vue-fullcalendar](https://github.com/Wanderxx/vue-fullcalendar) ★313 - 基于vue.js的全日历组件 \n- [vue-html5-editor](https://github.com/PeakTai/vue-html5-editor) ★303 - html5所见即所得编辑器 \n- [vue-upload-component](https://github.com/lian-yue/vue-upload-component) ★298 - Vuejs文件上传组件 \n- [DataVisualization](https://github.com/SimonZhangITer/DataVisualization) ★298 - 数据可视化 \n- [vue-tables-2](https://github.com/matfish2/vue-tables-2) ★291 - 显示数据的bootstrap样式网格 \n- [VueStar](https://github.com/OYsun/VueStar) ★270 - 带星星动画的vue点赞按钮 \n- [vue-data-tables](https://github.com/njleonzhang/vue-data-tables) ★266 - VueJS2数据表格 \n- [vue-paginate](https://github.com/TahaSh/vue-paginate) ★261 - 分页数据的简约VueJS插件 \n- [vue-ydui](https://github.com/ydcss/vue-ydui) ★247 - 基于Vue2的移动端和微信UI \n- [vue-mugen-scroll](https://github.com/egoist/vue-mugen-scroll) ★239 - 无限滚动组件 \n- [vue-virtual-scroller](https://github.com/Akryum/vue-virtual-scroller) ★238 - 带任意数目数据的顺畅的滚动 \n- [vue2-calendar](https://github.com/icai/vue2-calendar) ★236 - 支持lunar和日期事件的日期选择器 \n- [vue-dropzone](https://github.com/rowanwins/vue-dropzone) ★233 - 用于文件上传的Vue组件 \n- [vue2-douban-market](https://github.com/Awheat/vue2-douban-market) ★233 - 仿豆瓣市集webapp项目 \n- [vue-js-modal](https://github.com/euvl/vue-js-modal) ★228 - 移动友好的Vuejs2的modal \n- [vue-slider](https://github.com/warpcgd/vue-slider) ★224 - vue 滑动组件 \n- [vue-datetime-picker](https://github.com/Haixing-Hu/vue-datetime-picker) ★224 - 日期时间选择控件 \n- [rubik](https://github.com/ccforward/rubik) ★217 - 基于Vuejs2的开源 UI 组件库 \n- [vue-datasource](https://github.com/coderdiaz/vue-datasource) ★210 - 创建VueJS动态表格 \n- [vue-image-crop-upload](https://github.com/dai-siki/vue-image-crop-upload) ★205 - vue图片剪裁上传组件 \n- [Vueditor](https://github.com/hifarer/Vueditor) ★204 - 所见即所得的编辑器 \n- [mint-loadmore](https://github.com/mint-ui/mint-loadmore) ★203 - VueJS的双向下拉刷新组件 \n- [vue-slider-component](https://github.com/NightCatSama/vue-slider-component) ★202 - 在vue1和vue2中使用滑块 \n- [vue-chat](https://github.com/microzz/vue-chat) ★200 - Vue全家桶+Socket.io+Express/Koa2打造一个智能聊天室 \n- [mavonEditor](https://github.com/hinesboy/mavonEditor) ★179 - 基于Vue的markdown编辑器 \n- [vue-carousel-3d](https://github.com/Wlada/vue-carousel-3d) ★173 - VueJS的3D轮播组件 \n- [vue-baidu-map](https://github.com/Dafrok/vue-baidu-map) ★170 - 基于 Vue 2的百度地图组件库 \n- [sweet-modal-vue](https://github.com/adeptoas/sweet-modal-vue) ★170 - 精美的点击提示对话框 \n- [vue-particles](https://github.com/creotip/vue-particles) ★168 - 粒子背景的vue组件 \n- [vue-swiper](https://github.com/weilao/vue-swiper) ★167 - 易于使用的滑块组件 \n- [vue-simplemde](https://github.com/F-loat/vue-simplemde) ★166 - VueJS的Markdown编辑器组件 \n- [vue-slide](https://github.com/hilongjw/vue-slide) ★161 - vue轻量级滑动组件 \n- [vue-dragula](https://github.com/Astray-git/vue-dragula) ★157 - 使拖放变得简单 \n- [vue-drag-and-drop-list](https://github.com/Alex-fun/vue-drag-and-drop-list) ★156 - 创建排序列表的Vue指令 \n- [vue2-editor](https://github.com/davidroyer/vue2-editor) ★155 - HTML编辑器 \n- [vue-charts](https://github.com/hchstera/vue-charts) ★152 - 轻松渲染一个图表 \n- [vue-data-grid](https://github.com/LucienLee/vue-data-grid) ★151 - VueJS复杂桌面交互示例 \n- [vuwe](https://github.com/vuwe/vuwe) ★150 - 基于微信WeUI所开发的专用于Vue2的组件库 \n- [vue-progressive-image](https://github.com/MatteoGabriele/vue-progressive-image) ★148 - Vue的渐进图像加载插件 \n- [vue-msgbox](https://github.com/ElemeFE/vue-msgbox) ★148 - vuejs的消息框 \n- [vue-lazyload-img](https://github.com/JALBAA/vue-lazyload-img) ★147 - 移动优化的vue图片懒加载插件 \n- [vue-dragging](https://github.com/hilongjw/vue-dragging) ★146 - 使元素可以拖拽 \n- [vue-instant](https://github.com/santiblanko/vue-instant) ★143 - 轻松创建自动提示的自定义搜索控件 \n- [vue-social-sharing](https://github.com/nicolasbeauvais/vue-social-sharing) ★142 - 社交分享组件 \n- [vue-images](https://github.com/littlewin-wang/vue-images) ★139 - 显示一组图片的lightbox组件 \n- [vue-impression](https://github.com/NewDadaFE/vue-impression) ★134 - 移动Vuejs2 UI元素 \n- [vue-mdEditor](https://github.com/ovenslove/vue-mdEditor) ★131 - 基于VUE的markdown文本编辑器 \n- [vue-typer](https://github.com/cngu/vue-typer) ★130 - 模拟用户输入选择和删除文本的Vue组件 \n- [vue-highcharts](https://github.com/weizhenye/vue-highcharts) ★130 - HighCharts组件 \n- [vue-tooltip](https://github.com/Akryum/vue-tooltip) ★129 - 带绑定信息提示的提示工具 \n- [vue-svgicon](https://github.com/MMF-FE/vue-svgicon) ★127 - 创建svg图标组件的工具 \n- [wdui](https://github.com/wdfe/wdui) ★124 - 基于Vue2的UI组件库 \n- [vue2-loading-bar](https://github.com/BosNaufal/vue2-loading-bar) ★118 - 最简单的仿Youtube加载条视图 \n- [vue-tabs-component](https://github.com/spatie/vue-tabs-component) ★116 - 渲染tabs的Vue组件 \n- [MagicMusic](https://github.com/hzzly/MagicMusic) ★113 - 不一样的音乐 \n- [vue-region-picker](https://github.com/QingWei-Li/vue-region-picker) ★111 - 选择中国的省份市和地区 \n- [vue-datatable](https://github.com/galenyuan/vue-datatable) ★102 - 使用Vuejs创建的DataTableView \n- [vue-loading](https://github.com/Coffcer/vue-loading) ★102 - 元素中加载block的Vue指令 \n- [vodal](https://github.com/chenjiahan/vodal) ★99 - 动画的vue模态 \n- [vue-img-inputer](https://github.com/waynecz/vue-img-inputer) ★97 - 基于Vue2的图片输入框 \n- [vue-video](https://github.com/hilongjw/vue-video) ★96 - Vue.js的HTML5视频播放器 \n- [vue-touch-ripple](https://github.com/surmon-china/vue-touch-ripple) ★95 - vuejs的触摸ripple组件 \n- [vue-event-calendar](https://github.com/GeoffZhu/vue-event-calendar) ★91 - 简单小巧的事件日历组件 \n- [v-bar](https://github.com/luiguild/v-bar) ★91 - 虚拟响应跨浏览器滚动条 \n- [vue2-timepicker](https://github.com/phoenixwong/vue2-timepicker) ★84 - 下拉时间选择器 \n- [vuejs-paginate](https://github.com/lokyoung/vuejs-paginate) ★80 - 分页VueJS组件 \n- [vue-toast-mobile](https://github.com/ElemeFE/vue-toast-mobile) ★79 - VueJS的toast插件 \n- [vue-datepicker](https://github.com/weifeiyue/vue-datepicker) ★78 - 漂亮的Vue日期选择器组件 \n- [vue-easy-slider](https://github.com/shhdgit/vue-easy-slider) ★77 - Vue 2.x的滑块组件 \n- [vue-float-label](https://github.com/bkzl/vue-float-label) ★76 - VueJS浮动标签模式 \n- [vue-scrollbar](https://github.com/BosNaufal/vue-scrollbar) ★76 - 最简单的滚动区域组件 \n- [vant](https://github.com/youzan/vant) ★74 - 有赞出品的Vue2.0移动UI \n- [vue-json-tree-view](https://github.com/arvidkahl/vue-json-tree-view) ★74 - Vue的JSON树视图 \n- [vue-slick](https://github.com/staskjs/vue-slick) ★73 - 实现流畅轮播框的vue组件 \n- [vue-keynote](https://github.com/znck/vue-keynote) ★73 - 实现声明性代码幻灯片 \n- [vue-google-signin-button](https://github.com/phanan/vue-google-signin-button) ★73 - 导入谷歌登录按钮 \n- [vue-rate](https://github.com/SinanMtl/vue-rate) ★68 - Vue评分组件 \n- [awesome-mask](https://github.com/moip/awesome-mask) ★67 - 拥有独一无二mask的表单 \n- [vue-radial-progress](https://github.com/wyzant-dev/vue-radial-progress) ★65 - Vue.js放射性进度条组件 \n- [vue-quill](https://github.com/CroudSupport/vue-quill) ★65 - vue组件构建quill编辑器 \n- [vue-date-picker](https://github.com/Bubblings/vue-date-picker) ★63 - VueJS日期选择器组件 \n- [coffeebreak](https://github.com/Kocisov/coffeebreak) ★62 - 实时编辑CSS组件工具 \n- [vue-good-wizard](https://github.com/xaksis/vue-good-wizard) ★61 - VueJS 2.x wizard plugin \n- [vue-loading](https://github.com/jkchao/vue-loading) ★60 - 使用SVG加载 \n- [datepicker](https://github.com/vue-bulma/datepicker) ★59 - 基于flatpickr的时间选择组件 \n- [vue-placeholders](https://github.com/lithiumjake/vue-placeholders) ★58 - 处理占位符图片和乱码 \n- [we-vue](https://github.com/tianyong90/we-vue) ★55 - Vue2及weui1开发的组件 \n- [vue-fullcalendar](https://github.com/CroudSupport/vue-fullcalendar) ★55 - vue FullCalendar封装 \n- [vue-chartkick](https://github.com/ankane/vue-chartkick) ★53 - VueJS一行代码实现优美图表 \n- [cxlt-vue2-toastr](https://github.com/chengxulvtu/cxlt-vue2-toastr) ★52 - 弹出提示的Vue2组件 \n- [vue-formly](https://github.com/formly-js/vue-formly) ★51 - VueJS的JS表单 \n- [vue2-autocomplete](https://github.com/BosNaufal/vue2-autocomplete) ★51 - vue2的自动完成组件 \n- [vue-morris](https://github.com/bbonnin/vue-morris) ★50 - Vuejs组件封装Morrisjs库 \n- [veui](https://github.com/ecomfe/veui) ★50 - VueJS百度企业UI \n- [vue-components](https://github.com/yunfeihuang/vue-components) ★49 - 移动端UI组件库 \n- [vue-star-rating](https://github.com/craigh411/vue-star-rating) ★49 - 简单高度自定义的星星评级组件 \n- [vue-tagsinput](https://github.com/Ginhing/vue-tagsinput) ★48 - 基于VueJS的标签组件 \n- [vue-tabs](https://github.com/alexqdjay/vue-tabs) ★47 - 多tab页轻型框架 \n- [vue-popup-mixin](https://github.com/myronliu347/vue-popup-mixin) ★47 - 用于管理弹出框的遮盖层 \n- [vue-ripple-directive](https://github.com/PygmySlowLoris/vue-ripple-directive) ★45 - 使用Vue指令的Material波纹效果 \n- [vue-cropper](https://github.com/xyxiao001/vue-cropper) ★42 - 一个简单的vue 的图片裁剪插件 \n- [vue-ztree](https://github.com/lisiyizu/vue-ztree) ★41 - 用 vue 写的树层级组件 \n- [vue-touch-keyboard](https://github.com/icebob/vue-touch-keyboard) ★41 - VueJS虚拟键盘组件 \n- [cubeex](https://github.com/fangyongbao/cubeex) ★40 - 包含一套完整的移动UI \n- [vue-chart](https://github.com/miaolz123/vue-chart) ★40 - 强大的高速的vue图表解析 \n- [vue-music-master](https://github.com/yunyi1895/vue-music-master) ★40 - vue手机端网页音乐播放器 \n- [vue-bootstrap-table](https://github.com/jbaysolutions/vue-bootstrap-table) ★39 - 可排序可检索的表格 \n- [vue-emoji](https://github.com/jkchao/vue-emoji) ★39 - 好用的emoji插件 \n- [handsontable](https://github.com/vue-bulma/handsontable) ★39 - 网页表格组件 \n- [vue-form-2](https://github.com/matfish2/vue-form-2) ★37 - 全面的HTML表单管理的解决方案 \n- [vue-area](https://github.com/blue0728/vue-area) ★37 - 省市区三级联动插件 \n- [vue-side-nav](https://github.com/vue-comps/vue-side-nav) ★37 - 响应式的侧边导航 \n- [vue-image-scroll](https://github.com/ShanaMaid/vue-image-scroll) ★36 - 仿网易云音乐的vue图片滚动插件 \n- [vue-pull-to-refresh](https://github.com/bajian/vue-pull-to-refresh) ★35 - Vue2的上拉下拉 \n- [mint-indicator](https://github.com/mint-ui/mint-indicator) ★35 - VueJS移动加载指示器插件 \n- [vue-image-clip](https://github.com/legeneek/vue-image-clip) ★34 - 基于vue的图像剪辑组件 \n- [vue-material-design](https://github.com/loujiayu/vue-material-design) ★34 - Vue MD风格组件 \n- [vue-simple-upload](https://github.com/saivarunk/vue-simple-upload) ★31 - 简单的VueJS上传组件 \n- [chartjs](https://github.com/vue-bulma/chartjs) ★29 - Vue Bulma的chartjs组件 \n- [vue-lazy-background-images](https://github.com/darrynten/vue-lazy-background-images) ★29 - 懒加载背景组件的Vue组件 \n- [vue-ripple](https://github.com/BosNaufal/vue-ripple) ★29 - 制作谷歌MD风格涟漪效果的Vue组件 \n- [vue-scroll](https://github.com/suguangwen/vue-scroll) ★27 - vue滚动 \n- [laravel-vue-pagination](https://github.com/gilbitron/laravel-vue-pagination) ★26 - VueJS分页组件 \n- [vue-datepicker-simple](https://github.com/dai-siki/vue-datepicker-simple) ★26 - 基于vue的日期选择器 \n- [vue-m-carousel](https://github.com/shiye515/vue-m-carousel) ★26 - vue 移动端轮播组件 \n- [vue-parallax](https://github.com/vue-comps/vue-parallax) ★23 - 整洁的视觉效果 \n- [vue-img-loader](https://github.com/JackGit/vue-img-loader) ★22 - 图片加载UI组件 \n- [vue-tree](https://github.com/weibangtuo/vue-tree) ★22 - vue树视图组件 \n- [vue-verify-pop](https://github.com/aweiu/vue-verify-pop) ★22 - 带气泡提示的vue校验插件 \n- [vue-waves](https://github.com/Teddy-Zhu/vue-waves) ★22 - waves的VueJS版本 \n- [vue-smoothscroll](https://github.com/Teddy-Zhu/vue-smoothscroll) ★20 - smoothscroll的VueJS版本 \n- [vue-city](https://github.com/xinxingyu/vue-city) ★19 - 城市选择器 \n- [vue-laypage](https://github.com/sinchang/vue-laypage) ★17 - 简单的VueJS分页组件 \n- [vue-typewriter](https://github.com/eduardostuart/vue-typewriter) ★15 - vue组件类型 \n- [vue-ios-alertview](https://github.com/Treri/vue-ios-alertview) ★14 - iOS7+ 风格的alertview服务 \n- [vue-cmap](https://github.com/doodlewind/vue-cmap) ★14 - Vue China map可视化组件 \n- [paco-ui-vue](https://github.com/yeseason/paco-ui-vue) ★12 - PACOUI的vue组件 \n- [vue-cascading-address](https://github.com/savokiss/vue-cascading-address) ★9 - vue地区选择器 \n- [dd-vue-component](https://github.com/ibufu/dd-vue-component) ★7 - 订单来了的公共组件库 \n- [vue-button](https://github.com/steven5538/vue-button) ★5 - Vue按钮组件 \n\n### vue实用库 \n\n- [vuex](https://github.com/vuejs/vuex) ★8043 - 专为 Vue.js 应用程序开发的状态管理模式 \n- [vue-loader](https://github.com/vuejs/vue-loader) ★1847 - Vue.js 针对Webpack的组件装载插件 \n- [vue-validator](https://github.com/vuejs/vue-validator) ★1807 - vue的验证器插件 \n- [vue-lazyload](https://github.com/hilongjw/vue-lazyload) ★1224 - 用于懒加载的Vue模块 \n- [vuelidate](https://github.com/monterail/vuelidate) ★1075 - 简单轻量级的基于模块的Vue.js验证 \n- [vue-i18n](https://github.com/kazupon/vue-i18n) ★1053 - VueJS的多语言切换插件 \n- [qingcheng](https://github.com/zerqu/qingcheng) ★736 - qingcheng主题 \n- [Vue-Socketio](https://github.com/MetinSeylan/Vue-Socket.io) ★533 - VueJS的socketio实现 \n- [vue-awesome](https://github.com/Justineo/vue-awesome) ★532 - VueJS字体Awesome组件 \n- [vue-desktop](https://github.com/ElemeFE/vue-desktop) ★496 - 创建管理面板网站的UI库 \n- [vue-axios](https://github.com/imcvampire/vue-axios) ★491 - 将axios整合到VueJS的封装 \n- [vue-meta](https://github.com/declandewet/vue-meta) ★467 - 管理app的meta信息 \n- [vue-head](https://github.com/ktquez/vue-head) ★396 - head标签的meta信息操作 \n- [meteor-vue-component](https://github.com/Akryum/meteor-vue-component) ★382 - vue和meteor整合 \n- [avoriaz](https://github.com/eddyerburgh/avoriaz) ★338 - VueJS测试实用工具库 \n- [portal-vue](https://github.com/LinusBorg/portal-vue) ★239 - 在组件外部渲染DOM \n- [vue-flatpickr](https://github.com/jrainlau/vue-flatpickr) ★228 - 封装Flatpickr的Vue组件 \n- [vue-timeago](https://github.com/egoist/vue-timeago) ★195 - VueJS的时间前组件 \n- [blessed-vue](https://github.com/lyonlai/blessed-vue) ★181 - 编写命令行UI的VueJS运行时 \n- [vue-unit](https://github.com/wrseward/vue-unit) ★179 - 创建单元测试组件 \n- [vue-authenticate](https://github.com/dgrubelic/vue-authenticate) ★177 - 简单的VueJS身份认证库 \n- [vue-scrollTo](https://github.com/rigor789/vue-scrollTo) ★174 - 滚动到元素的VueJS指令 \n- [vue-svg-icon](https://github.com/cenkai88/vue-svg-icon) ★157 - vue2的可变彩色svg图标方案 \n- [vue-focus](https://github.com/simplesmiler/vue-focus) ★148 - 可重用VueJS组件的焦点指令 \n- [meteor-vue](https://github.com/zhouzhuojie/meteor-vue) ★134 - VueJS和Meteor的桥接 \n- [element-admin](https://github.com/lynzz/element-admin) ★130 - 支持 vuecli 的 Element UI 的后台模板 \n- [vuep](https://github.com/QingWei-Li/vuep) ★118 - 用实时编辑和预览来渲染Vue组件 \n- [vuet](https://github.com/medevicex/vuet) ★116 - 一个跨页面、跨组件的状态管理插件 \n- [vue-bootstrap-modal](https://github.com/Coffcer/vue-bootstrap-modal) ★112 - vue的Bootstrap样式组件 \n- [vue-animate](https://github.com/haydenbbickerton/vue-animate) ★106 - 跨浏览器CSS3动画库 \n- [vue-property-decorator](https://github.com/kaorun343/vue-property-decorator) ★104 - VueJS和属性Decorator \n- [vue-aplayer](https://github.com/SevenOutman/vue-aplayer) ★100 - 便于配置的音乐播放器vue2组件 \n- [vue-password-strength-meter](https://github.com/apertureless/vue-password-strength-meter) ★97 - 交互式密码强度计 \n- [vue-websocket](https://github.com/icebob/vue-websocket) ★91 - VueJS的Websocket插件 \n- [vue-local-storage](https://github.com/pinguinjkeke/vue-local-storage) ★88 - 具有类型支持的Vuejs本地储存插件 \n- [vue-recyclist](https://github.com/xtongs/vue-recyclist) ★88 - vuejs无限滚动列表 \n- [vue-lazy-render](https://github.com/yeyuqiudeng/vue-lazy-render) ★87 - 用于Vue组件的延迟渲染 \n- [vue-qart](https://github.com/superman66/vue-qart) ★86 - 用于qartjs的Vue2指令 \n- [vue-framework7](https://github.com/lmk123/vue-framework7) ★85 - 结合VueJS使用的Framework7组件 \n- [vue-cordova](https://github.com/kartsims/vue-cordova) ★85 - Cordova的VueJS插件 \n- [http-vue-loader](https://github.com/FranckFreiburger/http-vue-loader) ★84 - 从html及js环境加载vue文件 \n- [vue-parallax](https://github.com/apertureless/vue-parallax) ★84 - 快速60fps视差滚动效果组件 \n- [vue-clipboard](https://github.com/xiaokaike/vue-clipboard) ★84 - VueJS的剪贴板 \n- [vue-kindergarten](https://github.com/JiriChara/vue-kindergarten) ★83 - 将kindergarten集成到VueJS应用 \n- [vue-events](https://github.com/cklmercer/vue-events) ★83 - 简化事件的VueJS插件 \n- [vue-notifications](https://github.com/se-panfilov/vue-notifications) ★80 - 非阻塞通知库 \n- [vue-online](https://github.com/Sopamo/vue-online) ★77 - reactive的在线和离线组件 \n- [vue-shortkey](https://github.com/iFgR/vue-shortkey) ★74 - 应用于Vue.js的Vue-ShortKey 插件 \n- [vue-bus](https://github.com/yangmingshan/vue-bus) ★71 - VueJS的事件总线 \n- [vuex-i18n](https://github.com/dkfbasel/vuex-i18n) ★71 - 定位插件 \n- [uiv](https://github.com/wxsms/uiv) ★70 - Vue实现的Bootstrap组件 \n- [vue-router-transition](https://github.com/weinot/vue-router-transition) ★69 - 页面过渡插件 \n- [vue-gesture](https://github.com/mlyknown/vue-gesture) ★69 - VueJS的手势事件插件 \n- [vue-clip](https://github.com/thetutlage/vue-clip) ★67 - 简约的破解文件上传器 \n- [vue-electron](https://github.com/SimulatedGREG/vue-electron) ★66 - 将选择的API封装到Vue对象中的插件 \n- [cleave](https://github.com/vue-bulma/cleave) ★64 - 基于cleave.js的Cleave组件 \n- [vuemit](https://github.com/gocanto/vuemit) ★63 - 处理VueJS事件 \n- [vue-worker](https://github.com/israelss/vue-worker) ★56 - 使用webworkers的Vue插件 \n- [vue-acl](https://github.com/leonardovilarinho/vue-acl) ★54 - VueJS访问控制列表插件 \n- [vue-ts-loader](https://github.com/HerringtonDarkholme/vue-ts-loader) ★54 - 在Vue装载机检查脚本 \n- [Vue.resize](https://github.com/David-Desmaisons/Vue.resize) ★51 - 检测HTML调整大小事件的vue指令 \n- [vuedeux](https://github.com/Vuedeux/vuedeux) ★50 - 轻量级开源实用用层 \n- [vue-ls](https://github.com/RobinCK/vue-ls) ★49 - 适配Vuecontext中LocalStorage的Vue插件 \n- [lazy-vue](https://github.com/gocanto/lazy-vue) ★48 - 懒加载图片 \n- [vue-pagination-2](https://github.com/matfish2/vue-pagination-2) ★46 - 简单通用的分页组件 \n- [v-media-query](https://github.com/AStaroverov/v-media-query) ★44 - vue中添加用于配合媒体查询的方法 \n- [vue-observe-visibility](https://github.com/Akryum/vue-observe-visibility) ★42 - 当元素在页面上可见或隐藏时检测 \n- [vue-lazy-component](https://github.com/Coffcer/vue-lazy-component) ★38 - 懒加载组件或者元素的Vue指令 \n- [vue-reactive-storage](https://github.com/ropbla9/vue-reactive-storage) ★37 - vue插件的Reactive层 \n- [vue-helmet](https://github.com/miaolz123/vue-helmet) ★37 - HTML标题管理器 \n- [voir](https://github.com/richardanaya/voir) ★35 - 保持mutation与视图组件的分离 \n- [vuex-shared-mutations](https://github.com/xanf/vuex-shared-mutations) ★34 - 分享某种Vuex mutations \n- [vue-drag-zone](https://github.com/surmon-china/vue-drag-zone) ★28 - 适用于Vue2的dom拖动组件 \n- [vue-eslint-parser](https://github.com/mysticatea/vue-eslint-parser) ★27 - ESLint自定义解析 \n- [modal](https://github.com/vue-bulma/modal) ★26 - Vue Bulma的modal组件 \n- [vue-plan](https://github.com/wakeupmypig/vue-plan) ★25 - Vuex-状态管理 \n- [vue-file-base64](https://github.com/BosNaufal/vue-file-base64) ★22 - 将文件转换为Base64的vue组件 \n- [vue-methods-promise](https://github.com/lzxb/vue-methods-promise) ★21 - 使vue方法支持promise \n- [Vue.ImagesLoaded](https://github.com/David-Desmaisons/Vue.ImagesLoaded) ★20 - 检测图片加载的VueJS指令 \n- [Famous-Vue](https://github.com/irwansyahwii/Famous-Vue) ★16 - Famous库的vue组件 \n- [leo-vue-validator](https://github.com/LeoHuiyi/leo-vue-validator) ★15 - 异步的表单验证组件 \n- [vue-titlecase](https://github.com/Haixing-Hu/vue-titlecase) ★13 - 用于字符串titlecased的VueJS过滤器 \n- [Vue-Easy-Validator](https://github.com/MetinSeylan/Vue-Easy-Validator) ★12 - 简单的表单验证 \n- [vue-zoombox](https://github.com/vue-comps/vue-zoombox) ★12 - 一个高级zoombox \n- [vue-truncate-filter](https://github.com/imcvampire/vue-truncate-filter) ★10 - 截断字符串的VueJS过滤器 \n- [vue-router-storage](https://github.com/ElderJames/vue-router-storage) ★9 - vue历史路由持久化的解决方案 \n- [vue-input-autosize](https://github.com/syropian/vue-input-autosize) ★9 - 基于内容自动调整文本输入的大小 \n- [vue-data-validator](https://github.com/phphe/vue-data-validator) ★4 - Vuejs2的数据验证插件 \n- [vue-lazyloadImg](https://github.com/yodfz/vue-lazyloadImg) ★4 - 图片懒加载插件 \n\n### vue应用实例 \n\n- [koel](https://github.com/phanan/koel) ★7773 - 基于网络的个人音频流媒体服务 \n- [pagekit](https://github.com/pagekit/pagekit) ★4225 - 轻量级的CMS建站系统 \n- [vue-manage-system](https://github.com/lin-xin/vue-manage-system) ★2057 - 后台管理系统解决方案 \n- [vuedo](https://github.com/Vuedo/vuedo) ★1265 - 博客平台 \n- [jackblog-vue](https://github.com/jackhutu/jackblog-vue) ★1120 - 个人博客系统 \n- [PJ Blog](https://github.com/jcc/blog) ★1018 - 开源博客 \n- [vue-cnode](https://github.com/lzxb/vue-cnode) ★787 - 重写vue版cnode社区 \n- [vms](https://github.com/ericjjj/vms) ★629 - vuejs2管理系统 \n- [CMS-of-Blog](https://github.com/ycwalker/CMS-of-Blog) ★541 - 博客内容管理器 \n- [goldfish](https://github.com/Caiyeon/goldfish) ★518 - 用于HashiCorp Vault的Admin UI \n- [rss-reader](https://github.com/mrgodhani/rss-reader) ★368 - 简单的rss阅读器 \n- [vue-ghpages-blog](https://github.com/viko16/vue-ghpages-blog) ★254 - 依赖GitHub Pages无需本地生成的静态博客 \n- [vue-blog](https://github.com/surmon-china/vue-blog) ★143 - 使用Vue2.0 和Vuex的vue-blog \n- [swoole-vue-webim](https://github.com/wh469012917/swoole-vue-webim) ★137 - Web版的聊天应用 \n- [tomato5](https://github.com/zhangxin840/tomato5) ★134 - 实时的协作工具 \n- [Loopa-News](https://github.com/Angarsk8/Loopa-News) ★133 - 开源社会新闻应用 \n- [vue2-management-platform](https://github.com/reg21st/vue2-management-platform) ★74 - vue2.0+ elementUI 后台管理平台 \n- [vue-dashing-js](https://github.com/thelinuxlich/vue-dashing-js) ★70 - nuvo-dashing-js的fork \n- [fewords](https://github.com/sapjax/fewords) ★63 - 功能极其简单的笔记本 \n- [adminify](https://github.com/wxs77577/adminify) ★46 - 一个基于Vuetify material的Admin面板 \n\n### vueDemo示例 \n\n- [vue2-elm](https://github.com/bailicangdu/vue2-elm) ★8036 - 重写饿了么webapp \n- [Vue-cnodejs](https://github.com/shinygang/Vue-cnodejs) ★2491 - 基于vue重写Cnodejs.org的webapp \n- [NeteaseCloudWebApp](https://github.com/javaSwing/NeteaseCloudWebApp) ★1549 - 高仿网易云音乐的webapp \n- [vue2-happyfri](https://github.com/bailicangdu/vue2-happyfri) ★1535 - vue2及vuex的入门练习项目 \n- [vue-zhihu-daily](https://github.com/hilongjw/vue-zhihu-daily) ★1010 - 知乎日报 with Vuejs \n- [vue2-demo](https://github.com/lzxb/vue2-demo) ★994 - 从零构建vue2 + vue-router + vuex 开发环境 \n- [vue-wechat](https://github.com/useryangtao/vue-wechat) ★939 - vue.js开发微信app界面 \n- [eleme](https://github.com/liangxiaojuan/eleme) ★882 - 高仿饿了么app商家详情 \n- [vue-demo](https://github.com/kenberkeley/vue-demo) ★755 - vue简易留言板 \n- [bilibili-vue](https://github.com/lybenson/bilibili-vue) ★694 - 全栈式开发bilibili首页 \n- [spa-starter-kit](https://github.com/codecasts/spa-starter-kit) ★646 - 单页应用启动套件 \n- [VueDemo_Sell_Eleme](https://github.com/SimonZhangITer/VueDemo_Sell_Eleme) ★636 - Vue2高仿饿了么外卖平台 \n- [vue-music](https://github.com/Sioxas/vue-music) ★621 - Vue 音乐搜索播放 \n- [douban](https://github.com/jeneser/douban) ★606 - 基于vue全家桶的精致豆瓣DEMO \n- [vue-Meizi](https://github.com/liangxiaojuan/vue-Meizi) ★604 - vue最新实战项目 \n- [maizuo](https://github.com/zhengguorong/maizuo) ★603 - vue/vuex/redux仿卖座网 \n- [vue-WeChat](https://github.com/zhaohaodang/vue-WeChat) ★558 - 基于Vue2高仿微信App的单页应用 \n- [vue-demo-kugou](https://github.com/lavyun/vue-demo-kugou) ★500 - vuejs仿写酷狗音乐webapp \n- [vue2-manage](https://github.com/bailicangdu/vue2-manage) ★457 - 基于 vue + element-ui 的后台管理系统 \n- [zhihudaily-vue](https://github.com/yatessss/zhihudaily-vue) ★455 - 知乎日报web版 \n- [vue-163-music](https://github.com/ShanaMaid/vue-163-music) ★448 - vue仿网易云音乐客户端版 \n- [vue-axios-github](https://github.com/superman66/vue-axios-github) ★448 - 登录拦截登出功能 \n- [douban](https://github.com/jiakeqi/douban) ★440 - 模仿豆瓣前端 \n- [vue-shopping](https://github.com/andylei18/vue-shopping) ★404 - 蘑菇街移动端 \n- [vue2.0-taopiaopiao](https://github.com/canfoo/vue2.0-taopiaopiao) ★402 - vue2.0与express构建淘票票页面 \n- [xyy-vue](https://github.com/hzzly/xyy-vue) ★396 - 大学生交流平台 \n- [easy-vue](https://github.com/TIGERB/easy-vue) ★370 - 使用Vue实现简易web \n- [vue2.x-douban](https://github.com/superman66/vue2.x-douban) ★360 - Vue2实现简易豆瓣电影webApp \n- [vue2-MiniQQ](https://github.com/jiangqizheng/vue2-MiniQQ) ★351 - 基于Vue2实现的仿手机QQ单页面应用 \n- [mi-by-vue](https://github.com/wendaosanshou/mi-by-vue) ★291 - VueJS仿小米官网 \n- [daily-zhihu](https://github.com/walleeeee/daily-zhihu) ★275 - 基于Vue2的知乎日报单页应用 \n- [vue-leancloud-blog](https://github.com/jiangjiu/vue-leancloud-blog) ★268 - 一个前后端完全分离的单页应用 \n- [VueMusic-PC](https://github.com/Reusjs/VueMusic-PC) ★260 - Vue.js高还原网易云音乐系列 \n- [node-vue-server-webpack](https://github.com/yjj5855/node-vue-server-webpack) ★253 - Node.js+Vue.js+webpack快速开发框架 \n- [beauty](https://github.com/beauty-enjoy/beauty) ★245 - 豆瓣美女clone \n- [vue-adminLte-vue-router](https://github.com/liujians/vue-adminLte-vue-router) ★243 - vue和adminLte整合应用 \n- [vue-fis3](https://github.com/okoala/vue-fis3) ★217 - 流行开源工具集成demo \n- [notepad](https://github.com/lin-xin/notepad) ★216 - 本地存储的记事本 \n- [vue-demo-maizuo](https://github.com/ChuckCZC/vue-demo-maizuo) ★210 - 使用Vue2全家桶仿制卖座电影 \n- [Pixel-Web](https://github.com/Werb/Pixel-Web) ★198 - 一个 Vue 微博客户端 \n- [netease_yanxuan](https://github.com/MengZhaoFly/netease_yanxuan) ★198 - vue版网易严选 \n- [tmdb-app](https://github.com/dmtrbrl/tmdb-app) ★194 - TMDbVueJS应用 \n- [vue-express-mongodb](https://github.com/xrr2016/vue-express-mongodb) ★189 - 简单的前后端分离案例 \n- [vue-zhihudaily](https://github.com/iHaPBoy/vue-zhihudaily) ★187 - 知乎日报 Web 版本 \n- [Vdo](https://github.com/RalfZhang/Vdo) ★179 - VueJS与MD重构豆瓣 \n- [vue-blog](https://github.com/BUPT-HJM/vue-blog) ★171 - 单用户博客 \n- [Wuji](https://github.com/xiaobinwu/Wuji) ★168 - 吾记网页版 \n- [hello-vue-django](https://github.com/rokups/hello-vue-django) ★160 - 使用带有Django的vuejs的样板项目 \n- [Zhihu-Daily-Vue.js](https://github.com/pomelo-chuan/Zhihu-Daily-Vue.js) ★157 - Vuejs单页网页应用 \n- [tencent-sports](https://github.com/renjie1996/tencent-sports) ★154 - Vue全家桶仿腾讯体育 \n- [gouyan-movie-vue](https://github.com/zhixuanziben/gouyan-movie-vue) ★151 - 基于vue的在线电影影讯网站 \n- [x-blog](https://github.com/CommanderXL/x-blog) ★145 - 开源的个人blog项目 \n- [vue-musicApp](https://github.com/lxyisme/vue-musicApp) ★132 - 使用vue全家桶制作的音乐播放器 \n- [vue-cnode](https://github.com/wszgxa/vue-cnode) ★131 - vue单页应用demo \n- [webpack-vue-vueRouter](https://github.com/193Eric/webpack-vue-vueRouter) ★130 - webpack及vue开发的简单项目实例 \n- [vue-koa-demo](https://github.com/Molunerfinn/vue-koa-demo) ★128 - 使用Vue2和Koa1的全栈demo \n- [vueBlog](https://github.com/elva2596/vueBlog) ★127 - 前后端分离博客 \n- [websocket_chat](https://github.com/secreter/websocket_chat) ★127 - 基于vue和websocket的多人在线聊天室 \n- [houtai](https://github.com/peng1992/houtai) ★125 - 基于vue和Element的后台管理系统 \n- [vue-toutiao](https://github.com/hcy1996/vue-toutiao) ★121 - vuejs高仿今日头条移动端 \n- [vue-cnode](https://github.com/microzz/vue-cnode) ★121 - 开源的CNode社区 \n- [vue-mini-shop](https://github.com/BosNaufal/vue-mini-shop) ★121 - VueJS在线商店 \n- [photoShare](https://github.com/beidan/photoShare) ★120 - 基于图片分享的社交平台 \n- [iview2-management-system](https://github.com/vanishcode/iview2-management-system) ★119 - 后台管理系统解决方案简单示例 \n- [doubanMovie](https://github.com/monkeyWangs/doubanMovie) ★119 - 豆瓣电影展示 \n- [eleme-vue2](https://github.com/hbxywdk/eleme-vue2) ★112 - 仿饿了么H5纯前端Vue版 \n- [vue-zhihu-daily](https://github.com/cccyb/vue-zhihu-daily) ★111 - 基于Vue全家桶开发的知乎日报 \n- [Vue-News](https://github.com/biaodigit/Vue-News) ★107 - 基于vue全家桶的仿知乎日报单页应用 \n- [douban-movie](https://github.com/xingbofeng/douban-movie) ★107 - 仿豆瓣电影wap端 \n- [generator-loopback-vue](https://github.com/qxl1231/generator-loopback-vue) ★104 - 典型前后端分离项目模板 \n- [vue-quasar-admin-example](https://github.com/odranoelBR/vue-quasar-admin-example) ★99 - 将Quasar和VueJS应用于SPA项目 \n- [vue-zhihudaily-2.0](https://github.com/cs1707/vue-zhihudaily-2.0) ★97 - 使用Vue2.0+vue-router+vuex创建的zhihudaily \n- [vue-todos](https://github.com/liangxiaojuan/vue-todos) ★95 - vue最新实战项目教程 \n- [vue-music](https://github.com/ddqre12345/vue-music) ★91 - 网易云音乐Demo \n- [vue-qqmusic](https://github.com/Panda-Hope/vue-qqmusic) ★90 - Vue全家桶+Mint-Ui打造高仿QQMusic \n- [vue2.x-Cnode](https://github.com/vincentSea/vue2.x-Cnode) ★88 - 基于vue全家桶的Cnode社区 \n- [vue-ruby-china](https://github.com/hql123/vue-ruby-china) ★86 - VueJS框架搭建的rubychina平台 \n- [doubanMovie-SSR](https://github.com/monkeyWangs/doubanMovie-SSR) ★85 - Vue豆瓣电影服务端渲染 \n- [vue-jd](https://github.com/huangche007/vue-jd) ★76 - 京东移动web商城 \n- [vue-nReader](https://github.com/zimplexing/vue-nReader) ★73 - 使用vue2.0 + vue-router + vuex 的一个多页面小说阅读webapp \n- [VueBlog](https://github.com/FatDong1/VueBlog) ★73 - 前后端分离的个人博客 \n- [Zhihu_Daily](https://github.com/littlewin-wang/Zhihu_Daily) ★73 - 基于Vue和Nodejs的Web单页应用 \n- [vue-koa2-login](https://github.com/sinner77/vue-koa2-login) ★67 - 使用 VueJS & NodeJS 实现的登录注册 \n- [webApp](https://github.com/houbx/webApp) ★64 - Vue2的移动端webApp音乐播放器 \n- [vue-trip](https://github.com/wenye123/vue-trip) ★64 - vue2做的出行webapp \n- [seeMusic](https://github.com/Alex-xd/seeMusic) ★63 - 跨平台云音乐播放器 \n- [github-explorer](https://github.com/SidKwok/github-explorer) ★63 - 寻找最有趣的GitHub库 \n- [vue-cli-multipage-bootstrap](https://github.com/zhoou/vue-cli-multipage-bootstrap) ★60 - 将vue官方在线示例整合到组件中 \n- [vue-XiaoMi-Shop](https://github.com/beautifulBoys/vue-XiaoMi-Shop) ★59 - 高仿小米商城的项目 \n- [Vue-NetEaseCloudMusic](https://github.com/leehomeok/Vue-NetEaseCloudMusic) ★59 - 模仿IOS版网易云音乐的手机网站 \n- [life-app-vue](https://github.com/shaqihe/life-app-vue) ★59 - 使用vue2完成多功能集合到小webapp \n- [doubanApp](https://github.com/MrMoveon/doubanApp) ★55 - 用vue2实现仿豆瓣app \n- [ios7-vue](https://github.com/QRL909109/ios7-vue) ★52 - 使用vue2.0 vue-router vuex模拟ios7 \n- [canvas-vue](https://github.com/hzzly/canvas-vue) ★50 - 一个Vue+Cnavas酷炫后台管理 \n- [vue-bushishiren](https://github.com/nswbmw/vue-bushishiren) ★49 - 不是诗人应用 \n- [vue-ssr-boilerplate](https://github.com/albertchan/vue-ssr-boilerplate) ★48 - 精简版的ofvue-hackernews-2 \n- [vuecommunity](https://github.com/gaohongwei11/vuecommunity) ★47 - vue.js中文社区 \n- [vue-music163](https://github.com/pluto1114/vue-music163) ★47 - 音乐VueJS项目 \n- [Vue2-MV](https://github.com/safaring/Vue2-MV) ★45 - 仿网易云音乐MV的webapp \n- [musiccloudWebapp](https://github.com/hua1995116/musiccloudWebapp) ★44 - 用vuejs仿网易云音乐 \n- [cnode-vue](https://github.com/BubblyPoker/cnode-vue) ★40 - 基于vue和vue-router构建的cnodejs web网站SPA \n- [Framework7-VueJS](https://github.com/tyllo/Framework7-VueJS) ★38 - 使用移动框架的示例 \n- [m-eleme](https://github.com/JerryYgh/m-eleme) ★37 - 基于Vue全家桶仿饿了么移动端webapp \n- [sls-vuex2-demo](https://github.com/sailengsi/sls-vuex2-demo) ★37 - vuex2商城购物车demo \n- [eagles](https://github.com/silianpan/eagles) ★36 - 各种组件封装 \n- [Todos_Vuejs](https://github.com/fishenal/Todos_Vuejs) ★35 - vuejs2搭建的极简的todolist \n- [vue-cnode](https://github.com/jiananle/vue-cnode) ★35 - 用 Vue 做的 CNode 官网 \n- [HyaReader](https://github.com/GitaiQAQ/HyaReader) ★35 - 移动友好的阅读器 \n- [Vue-Admin](https://github.com/lanux/Vue-Admin) ★33 - 基于Vue2的Admin系统 \n- [vue2-hybridapp-haoshiqi](https://github.com/liupeijun/vue2-hybridapp-haoshiqi) ★32 - 实现单页面webapp以及hybridapp \n- [zhihu-daily](https://github.com/xrr2016/zhihu-daily) ★32 - 轻松查看知乎日报内容 \n- [gank](https://github.com/xandeer/gank) ★32 - gankio资源的阅读应用 \n- [vue-h5plus](https://github.com/NewsNIng/vue-h5plus) ★31 - 前卫的vue及html5plus跨平台demo \n- [vue-cnode-mobile](https://github.com/soulcm/vue-cnode-mobile) ★29 - 搭建cnode社区 \n- [vue-weather](https://github.com/alanWongsGithub/vue-weather) ★26 - 基于vue.js 2.0的百度天气应用 \n- [vue-user-center](https://github.com/doterlin/vue-user-center) ★26 - vuejs直播类应用web端个人中心 \n- [zhihu-daily-vue](https://github.com/moonou/zhihu-daily-vue) ★22 - 知乎日报 \n- [vue-cnode](https://github.com/Damonlw/vue-cnode) ★22 - 使用cNode社区提供的接口 \n- [vue-starter](https://github.com/BosNaufal/vue-starter) ★22 - VueJs项目的简单启动页 \n- [node-vue-fabaocn](https://github.com/wx1993/node-vue-fabaocn) ★21 - 基于 node 和 vue 实现的移动官网 \n- [vue-memo](https://github.com/youknowznm/vue-memo) ★20 - 用 vue写的记事本应用 \n- [v-notes](https://github.com/Halfeld/v-notes) ★20 - 简单美观的记事本 \n- [vue-flexible-app](https://github.com/momopig/vue-flexible-app) ★19 - vue开发的一个简易app \n- [simply-calculator-vuejs](https://github.com/CaiYiLiang/simply-calculator-vuejs) ★19 - 用VueJS实现简易计算器 \n- [vue-dropload](https://github.com/ITCNZ/vue-dropload) ★19 - 用以测试下拉加载与简单路由 \n- [Vuejs-SalePlatform](https://github.com/fishenal/Vuejs-SalePlatform) ★19 - vuejs搭建的售卖平台demo \n- [vue-shopping-mall](https://github.com/hj624608494/vue-shopping-mall) ★16 - 基于Vue.js 2.x系列 + vue2-router + axios + iview 商城 \n- [qqmusic](https://github.com/yangbo5207/qqmusic) ★13 - QQ音乐vue \n- [vue-weather](https://github.com/deshes/vue-weather) ★12 - VueJS天气demo \n\n## react\n\n### reactApi\n- [react](https://hulufei.gitbooks.io/react-tutorial/content/introduction.html)\n- [react](http://cn.redux.js.org/docs/introduction/Motivation.html)\n\n### reactUI库\n- [ant-design](https://ant.design/index-cn)- 蚂蚁金服的 React UI 库\n- [react-loadable](http://cn.redux.js.org/docs/introduction/Motivation.html)- 按需加载 react 组件\n- [material-ui](https://github.com/mui-org/material-ui) - UI 库\n### react实用库\n- [react-dnd](https://github.com/react-dnd/react-dnd) - 拖拽实现\n\n## 小程序\n\n### 微信Api\n[微信Api](https://developers.weixin.qq.com/miniprogram/dev/framework/app-service/api.html)\n### 支付宝Api\n[支付宝Api](https://docs.alipay.com/mini/developer/getting-started)\n### 微信Api\n[今日头条Api](https://developer.toutiao.com/docs/framework/)\n### 微信Api\n[百度Api](https://smartprogram.baidu.com/developer/index.html)\n\n## webpack\n- [webpack](https://www.webpackjs.com/)\n\n## typeScript\n- [webpack](https://www.tslang.cn/docs/handbook/jsx.html)\n\n\n> 如果有补充的可以提交issure,帮助我完善来帮助方便更多的人，让更多的人节省不必要的时间。\n\n[github:](https://github.com/xiaosongread/Commonly-used-to-collect)","slug":"collect","published":1,"updated":"2020-07-01T09:12:26.382Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdr00y540007e7zcihyu4tyl","content":"<h1 id=\"Commonly-used-to-collect\"><a href=\"#Commonly-used-to-collect\" class=\"headerlink\" title=\"Commonly-used-to-collect\"></a>Commonly-used-to-collect</h1><blockquote>\n<p>🎉 整理我平时关注的前端库。</p>\n</blockquote>\n<h2 id=\"导航：\"><a href=\"#导航：\" class=\"headerlink\" title=\"导航：\"></a>导航：</h2><p>1.<a href=\"#vue\">Vue</a></p>\n<ul>\n<li><a href=\"#vueApi\">API</a> </li>\n<li><a href=\"#vueUI库\">UI库</a> </li>\n<li><a href=\"#vue实用库\">实用库</a> </li>\n<li><a href=\"#vue应用实例\">应用实例</a> </li>\n<li><a href=\"#vueDemo示例\">Demo示例</a> </li>\n</ul>\n<p>2.<a href=\"#react\">React</a></p>\n<ul>\n<li><a href=\"#reactApi\">API</a> </li>\n<li><a href=\"#reactUI库\">UI库</a> </li>\n<li><a href=\"#react实用库\">实用库</a> </li>\n</ul>\n<p>3.<a href=\"#小程序\">小程序</a></p>\n<ul>\n<li><a href=\"#微信Api\">微信</a></li>\n<li><a href=\"#支付宝Api\">支付宝</a></li>\n<li><a href=\"#今日头条Api\">今日头条</a></li>\n<li><a href=\"#百度Api\">百度</a></li>\n</ul>\n<p>4.<a href=\"#webpack\">webpack</a></p>\n<p>5.<a href=\"#typeScript\">typeScript</a><br><a id=\"more\"></a></p>\n<h2 id=\"前端框架\"><a href=\"#前端框架\" class=\"headerlink\" title=\"前端框架\"></a>前端框架</h2><ul>\n<li><a href=\"https://github.com/vuejs/vue\" target=\"_blank\" rel=\"noopener\">vue</a></li>\n<li><a href=\"https://github.com/facebook/react\" target=\"_blank\" rel=\"noopener\">react</a></li>\n<li><a href=\"https://github.com/umijs/umi\" target=\"_blank\" rel=\"noopener\">umi</a> - 蚂蚁金服的前端框架。</li>\n<li><a href=\"https://github.com/NervJS/taro\" target=\"_blank\" rel=\"noopener\">taro</a> - 生成能运行在微信/百度/支付宝/字节跳动/ QQ 小程序、快应用、H5、React Native 等的应用</li>\n<li><a href=\"https://github.com/quasarframework/quasar\" target=\"_blank\" rel=\"noopener\">quasar</a> - 基于 vue，一套代码多处适用。</li>\n<li><a href=\"http://mpvue.com/\" target=\"_blank\" rel=\"noopener\">mapvue</a> - 美团基于 Vue.js 开发小程序的前端框架</li>\n</ul>\n<h2 id=\"vue\"><a href=\"#vue\" class=\"headerlink\" title=\"vue\"></a>vue</h2><h3 id=\"vueApi\"><a href=\"#vueApi\" class=\"headerlink\" title=\"vueApi:\"></a>vueApi:</h3><ul>\n<li><a href=\"https://cn.vuejs.org/v2/api/#v-text\" target=\"_blank\" rel=\"noopener\">vue</a></li>\n<li><a href=\"https://router.vuejs.org/zh/\" target=\"_blank\" rel=\"noopener\">vue-router</a><h3 id=\"vueUI库：\"><a href=\"#vueUI库：\" class=\"headerlink\" title=\"vueUI库：\"></a>vueUI库：</h3></li>\n<li><a href=\"https://element.eleme.cn/#/zh-CN/component/installation\" target=\"_blank\" rel=\"noopener\">elementUi</a> - 饿了么出品的Vue2的web UI工具套件</li>\n<li><a href=\"https://vux.li/\" target=\"_blank\" rel=\"noopener\">VUX</a> - 基于Vue和WeUI的组件库(个人维护)</li>\n<li><a href=\"http://mint-ui.github.io/#!/zh-cn\" target=\"_blank\" rel=\"noopener\">mint-ui</a> - Vue 2的移动UI元素</li>\n<li><a href=\"http://v1.iviewui.com/\" target=\"_blank\" rel=\"noopener\">iview</a> - 基于 Vuejs 的开源 UI 组件库</li>\n<li><a href=\"https://vuetifyjs.com/zh-Hans/\" target=\"_blank\" rel=\"noopener\">vuetify</a> - 为移动而生的Vue JS 2组件框架</li>\n<li><a href=\"https://panjiachen.github.io/vue-element-admin-site/zh/\" target=\"_blank\" rel=\"noopener\">vue-element-admin</a> - Vue管理面板框架</li>\n<li><a href=\"https://github.com/JosephusPaye/Keen-UI\" target=\"_blank\" rel=\"noopener\">Keen-UI</a> ★2749 - 轻量级的基本UI组件合集 </li>\n<li><a href=\"https://github.com/wangdahoo/vonic\" target=\"_blank\" rel=\"noopener\">vonic</a> ★1913 - 快速构建移动端单页应用 </li>\n<li><a href=\"https://github.com/monterail/vue-multiselect\" target=\"_blank\" rel=\"noopener\">vue-multiselect</a> ★1539 - Vue.js选择框解决方案 </li>\n<li><a href=\"https://github.com/egoist/eme\" target=\"_blank\" rel=\"noopener\">eme</a> ★1529 - 优雅的Markdown编辑器 </li>\n<li><a href=\"https://github.com/taylorchen709/vueAdmin\" target=\"_blank\" rel=\"noopener\">vueAdmin</a> ★1455 - 基于vuejs2和element的简单的管理员模板 </li>\n<li><a href=\"https://github.com/pi0/bootstrap-vue\" target=\"_blank\" rel=\"noopener\">bootstrap-vue</a> ★1267 - 应用于Vuejs2的Twitter的Bootstrap 4组件 </li>\n<li><a href=\"https://github.com/David-Desmaisons/Vue.Draggable\" target=\"_blank\" rel=\"noopener\">Vue.Draggable</a> ★1191 - 实现拖放和视图模型数组同步 </li>\n<li><a href=\"https://github.com/Zulko/eagle.js\" target=\"_blank\" rel=\"noopener\">eagle.js</a> ★1128 - hacker的幻灯片演示框架 </li>\n<li><a href=\"https://github.com/surmon-china/vue-awesome-swiper\" target=\"_blank\" rel=\"noopener\">vue-awesome-swiper</a> ★1012 - vue.js触摸滑动组件 </li>\n<li><a href=\"https://github.com/ratiw/vue-table\" target=\"_blank\" rel=\"noopener\">vue-table</a> ★1009 - 简化数据表格 </li>\n<li><a href=\"https://github.com/Coffcer/vue-chat\" target=\"_blank\" rel=\"noopener\">vue-chat</a> ★859 - vuejs和vuex及webpack的聊天示例 </li>\n<li><a href=\"https://github.com/chenz24/vue-blu\" target=\"_blank\" rel=\"noopener\">vue-blu</a> ★850 - 帮助你轻松创建web应用 </li>\n<li><a href=\"https://github.com/hilongjw/vue-recyclerview\" target=\"_blank\" rel=\"noopener\">vue-recyclerview</a> ★849 - 管理大列表的vue-recyclerview </li>\n<li><a href=\"https://github.com/OYsun/VueCircleMenu\" target=\"_blank\" rel=\"noopener\">VueCircleMenu</a> ★838 - 漂亮的vue圆环菜单 </li>\n<li><a href=\"https://github.com/ElemeFE/vue-infinite-scroll\" target=\"_blank\" rel=\"noopener\">vue-infinite-scroll</a> ★779 - VueJS的无限滚动指令 </li>\n<li><a href=\"https://github.com/rafaelpimpa/buefy\" target=\"_blank\" rel=\"noopener\">buefy</a> ★755 - 响应式UI组件轻量级库 </li>\n<li><a href=\"https://github.com/FE-Driver/vue-beauty\" target=\"_blank\" rel=\"noopener\">vue-beauty</a> ★749 - 由vue和ant design创建的优美UI组件 </li>\n<li><a href=\"https://github.com/MopTym/vue-waterfall\" target=\"_blank\" rel=\"noopener\">vue-waterfall</a> ★737 - Vue.js的瀑布布局组件 </li>\n<li><a href=\"https://github.com/luojilab/radon-ui\" target=\"_blank\" rel=\"noopener\">radon-ui</a> ★715 - 快速开发产品的Vue组件库 </li>\n<li><a href=\"https://github.com/lookstudios/vue-loop\" target=\"_blank\" rel=\"noopener\">vue-loop</a> ★701 - 无限的内容循环 </li>\n<li><a href=\"https://github.com/apertureless/vue-chartjs\" target=\"_blank\" rel=\"noopener\">vue-chartjs</a> ★694 - vue中的Chartjs的封装 </li>\n<li><a href=\"https://github.com/myronliu347/vue-carbon\" target=\"_blank\" rel=\"noopener\">vue-carbon</a> ★684 - 基于 vue 开发MD风格的移动端 </li>\n<li><a href=\"https://github.com/vuejs/vue-syntax-highlight\" target=\"_blank\" rel=\"noopener\">vue-syntax-highlight</a> ★655 - Sublime Text语法高亮 </li>\n<li><a href=\"https://github.com/Justineo/vue-echarts\" target=\"_blank\" rel=\"noopener\">vue-echarts</a> ★649 - VueJS的ECharts组件 </li>\n<li><a href=\"https://github.com/surmon-china/vue-quill-editor\" target=\"_blank\" rel=\"noopener\">vue-quill-editor</a> ★615 - 基于Quill适用于Vue2的富文本编辑器 </li>\n<li><a href=\"https://github.com/ElemeFE/vue-amap\" target=\"_blank\" rel=\"noopener\">vue-amap</a> ★571 - 基于Vue 2和高德地图的地图组件 </li>\n<li><a href=\"https://github.com/jinzhe/vue-calendar\" target=\"_blank\" rel=\"noopener\">vue-calendar</a> ★536 - 日期选择插件 </li>\n<li><a href=\"https://github.com/PeachScript/vue-infinite-loading\" target=\"_blank\" rel=\"noopener\">vue-infinite-loading</a> ★501 - VueJS的无限滚动插件 </li>\n<li><a href=\"https://github.com/ElemeFE/vue-swipe\" target=\"_blank\" rel=\"noopener\">vue-swipe</a> ★481 - VueJS触摸滑块 </li>\n<li><a href=\"https://github.com/microzz/vue-music-player\" target=\"_blank\" rel=\"noopener\">vue-music-player</a> ★451 - Vuejs写一个音乐播放器 </li>\n<li><a href=\"https://github.com/wangdahoo/vue-scroller\" target=\"_blank\" rel=\"noopener\">vue-scroller</a> ★444 - Vonic UI的功能性组件 </li>\n<li><a href=\"https://github.com/hilongjw/vue-datepicker\" target=\"_blank\" rel=\"noopener\">vue-datepicker</a> ★436 - 日历和日期选择组件 </li>\n<li><a href=\"https://github.com/Vanthink-UED/vue-core-image-upload\" target=\"_blank\" rel=\"noopener\">vue-core-image-upload</a> ★393 - 轻量级的vue上传插件 </li>\n<li><a href=\"https://github.com/hilongjw/vue-progressbar\" target=\"_blank\" rel=\"noopener\">vue-progressbar</a> ★379 - vue轻量级进度条 </li>\n<li><a href=\"https://github.com/Zhangdroid/Gokotta\" target=\"_blank\" rel=\"noopener\">Gokotta</a> ★375 - 简单的音乐播放器 </li>\n<li><a href=\"https://github.com/sagalbot/vue-sortable\" target=\"_blank\" rel=\"noopener\">vue-sortable</a> ★373 - 轻松添加拖拽排序 </li>\n<li><a href=\"https://github.com/alessiomaffeis/vue-picture-input\" target=\"_blank\" rel=\"noopener\">vue-picture-input</a> ★352 - 移动友好的图片文件输入组件 </li>\n<li><a href=\"https://github.com/xlsdg/vue-echarts-v3\" target=\"_blank\" rel=\"noopener\">vue-echarts-v3</a> ★351 - VueJS组件封装 </li>\n<li><a href=\"https://github.com/jrainlau/markcook\" target=\"_blank\" rel=\"noopener\">markcook</a> ★343 - 好看的markdown编辑器 </li>\n<li><a href=\"https://github.com/surmon-china/vue-video-player\" target=\"_blank\" rel=\"noopener\">vue-video-player</a> ★336 - VueJS视频及直播播放器 </li>\n<li><a href=\"https://github.com/GuillaumeLeclerc/vue-google-maps\" target=\"_blank\" rel=\"noopener\">vue-google-maps</a> ★334 - 带有双向数据绑定Google地图组件 </li>\n<li><a href=\"https://github.com/QingWei-Li/vue-trend\" target=\"_blank\" rel=\"noopener\">vue-trend</a> ★332 - 简单优雅的星光线条 </li>\n<li><a href=\"https://github.com/charliekassel/vuejs-datepicker\" target=\"_blank\" rel=\"noopener\">vuejs-datepicker</a> ★314 - vue日期选择器组件 </li>\n<li><a href=\"https://github.com/Wanderxx/vue-fullcalendar\" target=\"_blank\" rel=\"noopener\">vue-fullcalendar</a> ★313 - 基于vue.js的全日历组件 </li>\n<li><a href=\"https://github.com/PeakTai/vue-html5-editor\" target=\"_blank\" rel=\"noopener\">vue-html5-editor</a> ★303 - html5所见即所得编辑器 </li>\n<li><a href=\"https://github.com/lian-yue/vue-upload-component\" target=\"_blank\" rel=\"noopener\">vue-upload-component</a> ★298 - Vuejs文件上传组件 </li>\n<li><a href=\"https://github.com/SimonZhangITer/DataVisualization\" target=\"_blank\" rel=\"noopener\">DataVisualization</a> ★298 - 数据可视化 </li>\n<li><a href=\"https://github.com/matfish2/vue-tables-2\" target=\"_blank\" rel=\"noopener\">vue-tables-2</a> ★291 - 显示数据的bootstrap样式网格 </li>\n<li><a href=\"https://github.com/OYsun/VueStar\" target=\"_blank\" rel=\"noopener\">VueStar</a> ★270 - 带星星动画的vue点赞按钮 </li>\n<li><a href=\"https://github.com/njleonzhang/vue-data-tables\" target=\"_blank\" rel=\"noopener\">vue-data-tables</a> ★266 - VueJS2数据表格 </li>\n<li><a href=\"https://github.com/TahaSh/vue-paginate\" target=\"_blank\" rel=\"noopener\">vue-paginate</a> ★261 - 分页数据的简约VueJS插件 </li>\n<li><a href=\"https://github.com/ydcss/vue-ydui\" target=\"_blank\" rel=\"noopener\">vue-ydui</a> ★247 - 基于Vue2的移动端和微信UI </li>\n<li><a href=\"https://github.com/egoist/vue-mugen-scroll\" target=\"_blank\" rel=\"noopener\">vue-mugen-scroll</a> ★239 - 无限滚动组件 </li>\n<li><a href=\"https://github.com/Akryum/vue-virtual-scroller\" target=\"_blank\" rel=\"noopener\">vue-virtual-scroller</a> ★238 - 带任意数目数据的顺畅的滚动 </li>\n<li><a href=\"https://github.com/icai/vue2-calendar\" target=\"_blank\" rel=\"noopener\">vue2-calendar</a> ★236 - 支持lunar和日期事件的日期选择器 </li>\n<li><a href=\"https://github.com/rowanwins/vue-dropzone\" target=\"_blank\" rel=\"noopener\">vue-dropzone</a> ★233 - 用于文件上传的Vue组件 </li>\n<li><a href=\"https://github.com/Awheat/vue2-douban-market\" target=\"_blank\" rel=\"noopener\">vue2-douban-market</a> ★233 - 仿豆瓣市集webapp项目 </li>\n<li><a href=\"https://github.com/euvl/vue-js-modal\" target=\"_blank\" rel=\"noopener\">vue-js-modal</a> ★228 - 移动友好的Vuejs2的modal </li>\n<li><a href=\"https://github.com/warpcgd/vue-slider\" target=\"_blank\" rel=\"noopener\">vue-slider</a> ★224 - vue 滑动组件 </li>\n<li><a href=\"https://github.com/Haixing-Hu/vue-datetime-picker\" target=\"_blank\" rel=\"noopener\">vue-datetime-picker</a> ★224 - 日期时间选择控件 </li>\n<li><a href=\"https://github.com/ccforward/rubik\" target=\"_blank\" rel=\"noopener\">rubik</a> ★217 - 基于Vuejs2的开源 UI 组件库 </li>\n<li><a href=\"https://github.com/coderdiaz/vue-datasource\" target=\"_blank\" rel=\"noopener\">vue-datasource</a> ★210 - 创建VueJS动态表格 </li>\n<li><a href=\"https://github.com/dai-siki/vue-image-crop-upload\" target=\"_blank\" rel=\"noopener\">vue-image-crop-upload</a> ★205 - vue图片剪裁上传组件 </li>\n<li><a href=\"https://github.com/hifarer/Vueditor\" target=\"_blank\" rel=\"noopener\">Vueditor</a> ★204 - 所见即所得的编辑器 </li>\n<li><a href=\"https://github.com/mint-ui/mint-loadmore\" target=\"_blank\" rel=\"noopener\">mint-loadmore</a> ★203 - VueJS的双向下拉刷新组件 </li>\n<li><a href=\"https://github.com/NightCatSama/vue-slider-component\" target=\"_blank\" rel=\"noopener\">vue-slider-component</a> ★202 - 在vue1和vue2中使用滑块 </li>\n<li><a href=\"https://github.com/microzz/vue-chat\" target=\"_blank\" rel=\"noopener\">vue-chat</a> ★200 - Vue全家桶+Socket.io+Express/Koa2打造一个智能聊天室 </li>\n<li><a href=\"https://github.com/hinesboy/mavonEditor\" target=\"_blank\" rel=\"noopener\">mavonEditor</a> ★179 - 基于Vue的markdown编辑器 </li>\n<li><a href=\"https://github.com/Wlada/vue-carousel-3d\" target=\"_blank\" rel=\"noopener\">vue-carousel-3d</a> ★173 - VueJS的3D轮播组件 </li>\n<li><a href=\"https://github.com/Dafrok/vue-baidu-map\" target=\"_blank\" rel=\"noopener\">vue-baidu-map</a> ★170 - 基于 Vue 2的百度地图组件库 </li>\n<li><a href=\"https://github.com/adeptoas/sweet-modal-vue\" target=\"_blank\" rel=\"noopener\">sweet-modal-vue</a> ★170 - 精美的点击提示对话框 </li>\n<li><a href=\"https://github.com/creotip/vue-particles\" target=\"_blank\" rel=\"noopener\">vue-particles</a> ★168 - 粒子背景的vue组件 </li>\n<li><a href=\"https://github.com/weilao/vue-swiper\" target=\"_blank\" rel=\"noopener\">vue-swiper</a> ★167 - 易于使用的滑块组件 </li>\n<li><a href=\"https://github.com/F-loat/vue-simplemde\" target=\"_blank\" rel=\"noopener\">vue-simplemde</a> ★166 - VueJS的Markdown编辑器组件 </li>\n<li><a href=\"https://github.com/hilongjw/vue-slide\" target=\"_blank\" rel=\"noopener\">vue-slide</a> ★161 - vue轻量级滑动组件 </li>\n<li><a href=\"https://github.com/Astray-git/vue-dragula\" target=\"_blank\" rel=\"noopener\">vue-dragula</a> ★157 - 使拖放变得简单 </li>\n<li><a href=\"https://github.com/Alex-fun/vue-drag-and-drop-list\" target=\"_blank\" rel=\"noopener\">vue-drag-and-drop-list</a> ★156 - 创建排序列表的Vue指令 </li>\n<li><a href=\"https://github.com/davidroyer/vue2-editor\" target=\"_blank\" rel=\"noopener\">vue2-editor</a> ★155 - HTML编辑器 </li>\n<li><a href=\"https://github.com/hchstera/vue-charts\" target=\"_blank\" rel=\"noopener\">vue-charts</a> ★152 - 轻松渲染一个图表 </li>\n<li><a href=\"https://github.com/LucienLee/vue-data-grid\" target=\"_blank\" rel=\"noopener\">vue-data-grid</a> ★151 - VueJS复杂桌面交互示例 </li>\n<li><a href=\"https://github.com/vuwe/vuwe\" target=\"_blank\" rel=\"noopener\">vuwe</a> ★150 - 基于微信WeUI所开发的专用于Vue2的组件库 </li>\n<li><a href=\"https://github.com/MatteoGabriele/vue-progressive-image\" target=\"_blank\" rel=\"noopener\">vue-progressive-image</a> ★148 - Vue的渐进图像加载插件 </li>\n<li><a href=\"https://github.com/ElemeFE/vue-msgbox\" target=\"_blank\" rel=\"noopener\">vue-msgbox</a> ★148 - vuejs的消息框 </li>\n<li><a href=\"https://github.com/JALBAA/vue-lazyload-img\" target=\"_blank\" rel=\"noopener\">vue-lazyload-img</a> ★147 - 移动优化的vue图片懒加载插件 </li>\n<li><a href=\"https://github.com/hilongjw/vue-dragging\" target=\"_blank\" rel=\"noopener\">vue-dragging</a> ★146 - 使元素可以拖拽 </li>\n<li><a href=\"https://github.com/santiblanko/vue-instant\" target=\"_blank\" rel=\"noopener\">vue-instant</a> ★143 - 轻松创建自动提示的自定义搜索控件 </li>\n<li><a href=\"https://github.com/nicolasbeauvais/vue-social-sharing\" target=\"_blank\" rel=\"noopener\">vue-social-sharing</a> ★142 - 社交分享组件 </li>\n<li><a href=\"https://github.com/littlewin-wang/vue-images\" target=\"_blank\" rel=\"noopener\">vue-images</a> ★139 - 显示一组图片的lightbox组件 </li>\n<li><a href=\"https://github.com/NewDadaFE/vue-impression\" target=\"_blank\" rel=\"noopener\">vue-impression</a> ★134 - 移动Vuejs2 UI元素 </li>\n<li><a href=\"https://github.com/ovenslove/vue-mdEditor\" target=\"_blank\" rel=\"noopener\">vue-mdEditor</a> ★131 - 基于VUE的markdown文本编辑器 </li>\n<li><a href=\"https://github.com/cngu/vue-typer\" target=\"_blank\" rel=\"noopener\">vue-typer</a> ★130 - 模拟用户输入选择和删除文本的Vue组件 </li>\n<li><a href=\"https://github.com/weizhenye/vue-highcharts\" target=\"_blank\" rel=\"noopener\">vue-highcharts</a> ★130 - HighCharts组件 </li>\n<li><a href=\"https://github.com/Akryum/vue-tooltip\" target=\"_blank\" rel=\"noopener\">vue-tooltip</a> ★129 - 带绑定信息提示的提示工具 </li>\n<li><a href=\"https://github.com/MMF-FE/vue-svgicon\" target=\"_blank\" rel=\"noopener\">vue-svgicon</a> ★127 - 创建svg图标组件的工具 </li>\n<li><a href=\"https://github.com/wdfe/wdui\" target=\"_blank\" rel=\"noopener\">wdui</a> ★124 - 基于Vue2的UI组件库 </li>\n<li><a href=\"https://github.com/BosNaufal/vue2-loading-bar\" target=\"_blank\" rel=\"noopener\">vue2-loading-bar</a> ★118 - 最简单的仿Youtube加载条视图 </li>\n<li><a href=\"https://github.com/spatie/vue-tabs-component\" target=\"_blank\" rel=\"noopener\">vue-tabs-component</a> ★116 - 渲染tabs的Vue组件 </li>\n<li><a href=\"https://github.com/hzzly/MagicMusic\" target=\"_blank\" rel=\"noopener\">MagicMusic</a> ★113 - 不一样的音乐 </li>\n<li><a href=\"https://github.com/QingWei-Li/vue-region-picker\" target=\"_blank\" rel=\"noopener\">vue-region-picker</a> ★111 - 选择中国的省份市和地区 </li>\n<li><a href=\"https://github.com/galenyuan/vue-datatable\" target=\"_blank\" rel=\"noopener\">vue-datatable</a> ★102 - 使用Vuejs创建的DataTableView </li>\n<li><a href=\"https://github.com/Coffcer/vue-loading\" target=\"_blank\" rel=\"noopener\">vue-loading</a> ★102 - 元素中加载block的Vue指令 </li>\n<li><a href=\"https://github.com/chenjiahan/vodal\" target=\"_blank\" rel=\"noopener\">vodal</a> ★99 - 动画的vue模态 </li>\n<li><a href=\"https://github.com/waynecz/vue-img-inputer\" target=\"_blank\" rel=\"noopener\">vue-img-inputer</a> ★97 - 基于Vue2的图片输入框 </li>\n<li><a href=\"https://github.com/hilongjw/vue-video\" target=\"_blank\" rel=\"noopener\">vue-video</a> ★96 - Vue.js的HTML5视频播放器 </li>\n<li><a href=\"https://github.com/surmon-china/vue-touch-ripple\" target=\"_blank\" rel=\"noopener\">vue-touch-ripple</a> ★95 - vuejs的触摸ripple组件 </li>\n<li><a href=\"https://github.com/GeoffZhu/vue-event-calendar\" target=\"_blank\" rel=\"noopener\">vue-event-calendar</a> ★91 - 简单小巧的事件日历组件 </li>\n<li><a href=\"https://github.com/luiguild/v-bar\" target=\"_blank\" rel=\"noopener\">v-bar</a> ★91 - 虚拟响应跨浏览器滚动条 </li>\n<li><a href=\"https://github.com/phoenixwong/vue2-timepicker\" target=\"_blank\" rel=\"noopener\">vue2-timepicker</a> ★84 - 下拉时间选择器 </li>\n<li><a href=\"https://github.com/lokyoung/vuejs-paginate\" target=\"_blank\" rel=\"noopener\">vuejs-paginate</a> ★80 - 分页VueJS组件 </li>\n<li><a href=\"https://github.com/ElemeFE/vue-toast-mobile\" target=\"_blank\" rel=\"noopener\">vue-toast-mobile</a> ★79 - VueJS的toast插件 </li>\n<li><a href=\"https://github.com/weifeiyue/vue-datepicker\" target=\"_blank\" rel=\"noopener\">vue-datepicker</a> ★78 - 漂亮的Vue日期选择器组件 </li>\n<li><a href=\"https://github.com/shhdgit/vue-easy-slider\" target=\"_blank\" rel=\"noopener\">vue-easy-slider</a> ★77 - Vue 2.x的滑块组件 </li>\n<li><a href=\"https://github.com/bkzl/vue-float-label\" target=\"_blank\" rel=\"noopener\">vue-float-label</a> ★76 - VueJS浮动标签模式 </li>\n<li><a href=\"https://github.com/BosNaufal/vue-scrollbar\" target=\"_blank\" rel=\"noopener\">vue-scrollbar</a> ★76 - 最简单的滚动区域组件 </li>\n<li><a href=\"https://github.com/youzan/vant\" target=\"_blank\" rel=\"noopener\">vant</a> ★74 - 有赞出品的Vue2.0移动UI </li>\n<li><a href=\"https://github.com/arvidkahl/vue-json-tree-view\" target=\"_blank\" rel=\"noopener\">vue-json-tree-view</a> ★74 - Vue的JSON树视图 </li>\n<li><a href=\"https://github.com/staskjs/vue-slick\" target=\"_blank\" rel=\"noopener\">vue-slick</a> ★73 - 实现流畅轮播框的vue组件 </li>\n<li><a href=\"https://github.com/znck/vue-keynote\" target=\"_blank\" rel=\"noopener\">vue-keynote</a> ★73 - 实现声明性代码幻灯片 </li>\n<li><a href=\"https://github.com/phanan/vue-google-signin-button\" target=\"_blank\" rel=\"noopener\">vue-google-signin-button</a> ★73 - 导入谷歌登录按钮 </li>\n<li><a href=\"https://github.com/SinanMtl/vue-rate\" target=\"_blank\" rel=\"noopener\">vue-rate</a> ★68 - Vue评分组件 </li>\n<li><a href=\"https://github.com/moip/awesome-mask\" target=\"_blank\" rel=\"noopener\">awesome-mask</a> ★67 - 拥有独一无二mask的表单 </li>\n<li><a href=\"https://github.com/wyzant-dev/vue-radial-progress\" target=\"_blank\" rel=\"noopener\">vue-radial-progress</a> ★65 - Vue.js放射性进度条组件 </li>\n<li><a href=\"https://github.com/CroudSupport/vue-quill\" target=\"_blank\" rel=\"noopener\">vue-quill</a> ★65 - vue组件构建quill编辑器 </li>\n<li><a href=\"https://github.com/Bubblings/vue-date-picker\" target=\"_blank\" rel=\"noopener\">vue-date-picker</a> ★63 - VueJS日期选择器组件 </li>\n<li><a href=\"https://github.com/Kocisov/coffeebreak\" target=\"_blank\" rel=\"noopener\">coffeebreak</a> ★62 - 实时编辑CSS组件工具 </li>\n<li><a href=\"https://github.com/xaksis/vue-good-wizard\" target=\"_blank\" rel=\"noopener\">vue-good-wizard</a> ★61 - VueJS 2.x wizard plugin </li>\n<li><a href=\"https://github.com/jkchao/vue-loading\" target=\"_blank\" rel=\"noopener\">vue-loading</a> ★60 - 使用SVG加载 </li>\n<li><a href=\"https://github.com/vue-bulma/datepicker\" target=\"_blank\" rel=\"noopener\">datepicker</a> ★59 - 基于flatpickr的时间选择组件 </li>\n<li><a href=\"https://github.com/lithiumjake/vue-placeholders\" target=\"_blank\" rel=\"noopener\">vue-placeholders</a> ★58 - 处理占位符图片和乱码 </li>\n<li><a href=\"https://github.com/tianyong90/we-vue\" target=\"_blank\" rel=\"noopener\">we-vue</a> ★55 - Vue2及weui1开发的组件 </li>\n<li><a href=\"https://github.com/CroudSupport/vue-fullcalendar\" target=\"_blank\" rel=\"noopener\">vue-fullcalendar</a> ★55 - vue FullCalendar封装 </li>\n<li><a href=\"https://github.com/ankane/vue-chartkick\" target=\"_blank\" rel=\"noopener\">vue-chartkick</a> ★53 - VueJS一行代码实现优美图表 </li>\n<li><a href=\"https://github.com/chengxulvtu/cxlt-vue2-toastr\" target=\"_blank\" rel=\"noopener\">cxlt-vue2-toastr</a> ★52 - 弹出提示的Vue2组件 </li>\n<li><a href=\"https://github.com/formly-js/vue-formly\" target=\"_blank\" rel=\"noopener\">vue-formly</a> ★51 - VueJS的JS表单 </li>\n<li><a href=\"https://github.com/BosNaufal/vue2-autocomplete\" target=\"_blank\" rel=\"noopener\">vue2-autocomplete</a> ★51 - vue2的自动完成组件 </li>\n<li><a href=\"https://github.com/bbonnin/vue-morris\" target=\"_blank\" rel=\"noopener\">vue-morris</a> ★50 - Vuejs组件封装Morrisjs库 </li>\n<li><a href=\"https://github.com/ecomfe/veui\" target=\"_blank\" rel=\"noopener\">veui</a> ★50 - VueJS百度企业UI </li>\n<li><a href=\"https://github.com/yunfeihuang/vue-components\" target=\"_blank\" rel=\"noopener\">vue-components</a> ★49 - 移动端UI组件库 </li>\n<li><a href=\"https://github.com/craigh411/vue-star-rating\" target=\"_blank\" rel=\"noopener\">vue-star-rating</a> ★49 - 简单高度自定义的星星评级组件 </li>\n<li><a href=\"https://github.com/Ginhing/vue-tagsinput\" target=\"_blank\" rel=\"noopener\">vue-tagsinput</a> ★48 - 基于VueJS的标签组件 </li>\n<li><a href=\"https://github.com/alexqdjay/vue-tabs\" target=\"_blank\" rel=\"noopener\">vue-tabs</a> ★47 - 多tab页轻型框架 </li>\n<li><a href=\"https://github.com/myronliu347/vue-popup-mixin\" target=\"_blank\" rel=\"noopener\">vue-popup-mixin</a> ★47 - 用于管理弹出框的遮盖层 </li>\n<li><a href=\"https://github.com/PygmySlowLoris/vue-ripple-directive\" target=\"_blank\" rel=\"noopener\">vue-ripple-directive</a> ★45 - 使用Vue指令的Material波纹效果 </li>\n<li><a href=\"https://github.com/xyxiao001/vue-cropper\" target=\"_blank\" rel=\"noopener\">vue-cropper</a> ★42 - 一个简单的vue 的图片裁剪插件 </li>\n<li><a href=\"https://github.com/lisiyizu/vue-ztree\" target=\"_blank\" rel=\"noopener\">vue-ztree</a> ★41 - 用 vue 写的树层级组件 </li>\n<li><a href=\"https://github.com/icebob/vue-touch-keyboard\" target=\"_blank\" rel=\"noopener\">vue-touch-keyboard</a> ★41 - VueJS虚拟键盘组件 </li>\n<li><a href=\"https://github.com/fangyongbao/cubeex\" target=\"_blank\" rel=\"noopener\">cubeex</a> ★40 - 包含一套完整的移动UI </li>\n<li><a href=\"https://github.com/miaolz123/vue-chart\" target=\"_blank\" rel=\"noopener\">vue-chart</a> ★40 - 强大的高速的vue图表解析 </li>\n<li><a href=\"https://github.com/yunyi1895/vue-music-master\" target=\"_blank\" rel=\"noopener\">vue-music-master</a> ★40 - vue手机端网页音乐播放器 </li>\n<li><a href=\"https://github.com/jbaysolutions/vue-bootstrap-table\" target=\"_blank\" rel=\"noopener\">vue-bootstrap-table</a> ★39 - 可排序可检索的表格 </li>\n<li><a href=\"https://github.com/jkchao/vue-emoji\" target=\"_blank\" rel=\"noopener\">vue-emoji</a> ★39 - 好用的emoji插件 </li>\n<li><a href=\"https://github.com/vue-bulma/handsontable\" target=\"_blank\" rel=\"noopener\">handsontable</a> ★39 - 网页表格组件 </li>\n<li><a href=\"https://github.com/matfish2/vue-form-2\" target=\"_blank\" rel=\"noopener\">vue-form-2</a> ★37 - 全面的HTML表单管理的解决方案 </li>\n<li><a href=\"https://github.com/blue0728/vue-area\" target=\"_blank\" rel=\"noopener\">vue-area</a> ★37 - 省市区三级联动插件 </li>\n<li><a href=\"https://github.com/vue-comps/vue-side-nav\" target=\"_blank\" rel=\"noopener\">vue-side-nav</a> ★37 - 响应式的侧边导航 </li>\n<li><a href=\"https://github.com/ShanaMaid/vue-image-scroll\" target=\"_blank\" rel=\"noopener\">vue-image-scroll</a> ★36 - 仿网易云音乐的vue图片滚动插件 </li>\n<li><a href=\"https://github.com/bajian/vue-pull-to-refresh\" target=\"_blank\" rel=\"noopener\">vue-pull-to-refresh</a> ★35 - Vue2的上拉下拉 </li>\n<li><a href=\"https://github.com/mint-ui/mint-indicator\" target=\"_blank\" rel=\"noopener\">mint-indicator</a> ★35 - VueJS移动加载指示器插件 </li>\n<li><a href=\"https://github.com/legeneek/vue-image-clip\" target=\"_blank\" rel=\"noopener\">vue-image-clip</a> ★34 - 基于vue的图像剪辑组件 </li>\n<li><a href=\"https://github.com/loujiayu/vue-material-design\" target=\"_blank\" rel=\"noopener\">vue-material-design</a> ★34 - Vue MD风格组件 </li>\n<li><a href=\"https://github.com/saivarunk/vue-simple-upload\" target=\"_blank\" rel=\"noopener\">vue-simple-upload</a> ★31 - 简单的VueJS上传组件 </li>\n<li><a href=\"https://github.com/vue-bulma/chartjs\" target=\"_blank\" rel=\"noopener\">chartjs</a> ★29 - Vue Bulma的chartjs组件 </li>\n<li><a href=\"https://github.com/darrynten/vue-lazy-background-images\" target=\"_blank\" rel=\"noopener\">vue-lazy-background-images</a> ★29 - 懒加载背景组件的Vue组件 </li>\n<li><a href=\"https://github.com/BosNaufal/vue-ripple\" target=\"_blank\" rel=\"noopener\">vue-ripple</a> ★29 - 制作谷歌MD风格涟漪效果的Vue组件 </li>\n<li><a href=\"https://github.com/suguangwen/vue-scroll\" target=\"_blank\" rel=\"noopener\">vue-scroll</a> ★27 - vue滚动 </li>\n<li><a href=\"https://github.com/gilbitron/laravel-vue-pagination\" target=\"_blank\" rel=\"noopener\">laravel-vue-pagination</a> ★26 - VueJS分页组件 </li>\n<li><a href=\"https://github.com/dai-siki/vue-datepicker-simple\" target=\"_blank\" rel=\"noopener\">vue-datepicker-simple</a> ★26 - 基于vue的日期选择器 </li>\n<li><a href=\"https://github.com/shiye515/vue-m-carousel\" target=\"_blank\" rel=\"noopener\">vue-m-carousel</a> ★26 - vue 移动端轮播组件 </li>\n<li><a href=\"https://github.com/vue-comps/vue-parallax\" target=\"_blank\" rel=\"noopener\">vue-parallax</a> ★23 - 整洁的视觉效果 </li>\n<li><a href=\"https://github.com/JackGit/vue-img-loader\" target=\"_blank\" rel=\"noopener\">vue-img-loader</a> ★22 - 图片加载UI组件 </li>\n<li><a href=\"https://github.com/weibangtuo/vue-tree\" target=\"_blank\" rel=\"noopener\">vue-tree</a> ★22 - vue树视图组件 </li>\n<li><a href=\"https://github.com/aweiu/vue-verify-pop\" target=\"_blank\" rel=\"noopener\">vue-verify-pop</a> ★22 - 带气泡提示的vue校验插件 </li>\n<li><a href=\"https://github.com/Teddy-Zhu/vue-waves\" target=\"_blank\" rel=\"noopener\">vue-waves</a> ★22 - waves的VueJS版本 </li>\n<li><a href=\"https://github.com/Teddy-Zhu/vue-smoothscroll\" target=\"_blank\" rel=\"noopener\">vue-smoothscroll</a> ★20 - smoothscroll的VueJS版本 </li>\n<li><a href=\"https://github.com/xinxingyu/vue-city\" target=\"_blank\" rel=\"noopener\">vue-city</a> ★19 - 城市选择器 </li>\n<li><a href=\"https://github.com/sinchang/vue-laypage\" target=\"_blank\" rel=\"noopener\">vue-laypage</a> ★17 - 简单的VueJS分页组件 </li>\n<li><a href=\"https://github.com/eduardostuart/vue-typewriter\" target=\"_blank\" rel=\"noopener\">vue-typewriter</a> ★15 - vue组件类型 </li>\n<li><a href=\"https://github.com/Treri/vue-ios-alertview\" target=\"_blank\" rel=\"noopener\">vue-ios-alertview</a> ★14 - iOS7+ 风格的alertview服务 </li>\n<li><a href=\"https://github.com/doodlewind/vue-cmap\" target=\"_blank\" rel=\"noopener\">vue-cmap</a> ★14 - Vue China map可视化组件 </li>\n<li><a href=\"https://github.com/yeseason/paco-ui-vue\" target=\"_blank\" rel=\"noopener\">paco-ui-vue</a> ★12 - PACOUI的vue组件 </li>\n<li><a href=\"https://github.com/savokiss/vue-cascading-address\" target=\"_blank\" rel=\"noopener\">vue-cascading-address</a> ★9 - vue地区选择器 </li>\n<li><a href=\"https://github.com/ibufu/dd-vue-component\" target=\"_blank\" rel=\"noopener\">dd-vue-component</a> ★7 - 订单来了的公共组件库 </li>\n<li><a href=\"https://github.com/steven5538/vue-button\" target=\"_blank\" rel=\"noopener\">vue-button</a> ★5 - Vue按钮组件 </li>\n</ul>\n<h3 id=\"vue实用库\"><a href=\"#vue实用库\" class=\"headerlink\" title=\"vue实用库\"></a>vue实用库</h3><ul>\n<li><a href=\"https://github.com/vuejs/vuex\" target=\"_blank\" rel=\"noopener\">vuex</a> ★8043 - 专为 Vue.js 应用程序开发的状态管理模式 </li>\n<li><a href=\"https://github.com/vuejs/vue-loader\" target=\"_blank\" rel=\"noopener\">vue-loader</a> ★1847 - Vue.js 针对Webpack的组件装载插件 </li>\n<li><a href=\"https://github.com/vuejs/vue-validator\" target=\"_blank\" rel=\"noopener\">vue-validator</a> ★1807 - vue的验证器插件 </li>\n<li><a href=\"https://github.com/hilongjw/vue-lazyload\" target=\"_blank\" rel=\"noopener\">vue-lazyload</a> ★1224 - 用于懒加载的Vue模块 </li>\n<li><a href=\"https://github.com/monterail/vuelidate\" target=\"_blank\" rel=\"noopener\">vuelidate</a> ★1075 - 简单轻量级的基于模块的Vue.js验证 </li>\n<li><a href=\"https://github.com/kazupon/vue-i18n\" target=\"_blank\" rel=\"noopener\">vue-i18n</a> ★1053 - VueJS的多语言切换插件 </li>\n<li><a href=\"https://github.com/zerqu/qingcheng\" target=\"_blank\" rel=\"noopener\">qingcheng</a> ★736 - qingcheng主题 </li>\n<li><a href=\"https://github.com/MetinSeylan/Vue-Socket.io\" target=\"_blank\" rel=\"noopener\">Vue-Socketio</a> ★533 - VueJS的socketio实现 </li>\n<li><a href=\"https://github.com/Justineo/vue-awesome\" target=\"_blank\" rel=\"noopener\">vue-awesome</a> ★532 - VueJS字体Awesome组件 </li>\n<li><a href=\"https://github.com/ElemeFE/vue-desktop\" target=\"_blank\" rel=\"noopener\">vue-desktop</a> ★496 - 创建管理面板网站的UI库 </li>\n<li><a href=\"https://github.com/imcvampire/vue-axios\" target=\"_blank\" rel=\"noopener\">vue-axios</a> ★491 - 将axios整合到VueJS的封装 </li>\n<li><a href=\"https://github.com/declandewet/vue-meta\" target=\"_blank\" rel=\"noopener\">vue-meta</a> ★467 - 管理app的meta信息 </li>\n<li><a href=\"https://github.com/ktquez/vue-head\" target=\"_blank\" rel=\"noopener\">vue-head</a> ★396 - head标签的meta信息操作 </li>\n<li><a href=\"https://github.com/Akryum/meteor-vue-component\" target=\"_blank\" rel=\"noopener\">meteor-vue-component</a> ★382 - vue和meteor整合 </li>\n<li><a href=\"https://github.com/eddyerburgh/avoriaz\" target=\"_blank\" rel=\"noopener\">avoriaz</a> ★338 - VueJS测试实用工具库 </li>\n<li><a href=\"https://github.com/LinusBorg/portal-vue\" target=\"_blank\" rel=\"noopener\">portal-vue</a> ★239 - 在组件外部渲染DOM </li>\n<li><a href=\"https://github.com/jrainlau/vue-flatpickr\" target=\"_blank\" rel=\"noopener\">vue-flatpickr</a> ★228 - 封装Flatpickr的Vue组件 </li>\n<li><a href=\"https://github.com/egoist/vue-timeago\" target=\"_blank\" rel=\"noopener\">vue-timeago</a> ★195 - VueJS的时间前组件 </li>\n<li><a href=\"https://github.com/lyonlai/blessed-vue\" target=\"_blank\" rel=\"noopener\">blessed-vue</a> ★181 - 编写命令行UI的VueJS运行时 </li>\n<li><a href=\"https://github.com/wrseward/vue-unit\" target=\"_blank\" rel=\"noopener\">vue-unit</a> ★179 - 创建单元测试组件 </li>\n<li><a href=\"https://github.com/dgrubelic/vue-authenticate\" target=\"_blank\" rel=\"noopener\">vue-authenticate</a> ★177 - 简单的VueJS身份认证库 </li>\n<li><a href=\"https://github.com/rigor789/vue-scrollTo\" target=\"_blank\" rel=\"noopener\">vue-scrollTo</a> ★174 - 滚动到元素的VueJS指令 </li>\n<li><a href=\"https://github.com/cenkai88/vue-svg-icon\" target=\"_blank\" rel=\"noopener\">vue-svg-icon</a> ★157 - vue2的可变彩色svg图标方案 </li>\n<li><a href=\"https://github.com/simplesmiler/vue-focus\" target=\"_blank\" rel=\"noopener\">vue-focus</a> ★148 - 可重用VueJS组件的焦点指令 </li>\n<li><a href=\"https://github.com/zhouzhuojie/meteor-vue\" target=\"_blank\" rel=\"noopener\">meteor-vue</a> ★134 - VueJS和Meteor的桥接 </li>\n<li><a href=\"https://github.com/lynzz/element-admin\" target=\"_blank\" rel=\"noopener\">element-admin</a> ★130 - 支持 vuecli 的 Element UI 的后台模板 </li>\n<li><a href=\"https://github.com/QingWei-Li/vuep\" target=\"_blank\" rel=\"noopener\">vuep</a> ★118 - 用实时编辑和预览来渲染Vue组件 </li>\n<li><a href=\"https://github.com/medevicex/vuet\" target=\"_blank\" rel=\"noopener\">vuet</a> ★116 - 一个跨页面、跨组件的状态管理插件 </li>\n<li><a href=\"https://github.com/Coffcer/vue-bootstrap-modal\" target=\"_blank\" rel=\"noopener\">vue-bootstrap-modal</a> ★112 - vue的Bootstrap样式组件 </li>\n<li><a href=\"https://github.com/haydenbbickerton/vue-animate\" target=\"_blank\" rel=\"noopener\">vue-animate</a> ★106 - 跨浏览器CSS3动画库 </li>\n<li><a href=\"https://github.com/kaorun343/vue-property-decorator\" target=\"_blank\" rel=\"noopener\">vue-property-decorator</a> ★104 - VueJS和属性Decorator </li>\n<li><a href=\"https://github.com/SevenOutman/vue-aplayer\" target=\"_blank\" rel=\"noopener\">vue-aplayer</a> ★100 - 便于配置的音乐播放器vue2组件 </li>\n<li><a href=\"https://github.com/apertureless/vue-password-strength-meter\" target=\"_blank\" rel=\"noopener\">vue-password-strength-meter</a> ★97 - 交互式密码强度计 </li>\n<li><a href=\"https://github.com/icebob/vue-websocket\" target=\"_blank\" rel=\"noopener\">vue-websocket</a> ★91 - VueJS的Websocket插件 </li>\n<li><a href=\"https://github.com/pinguinjkeke/vue-local-storage\" target=\"_blank\" rel=\"noopener\">vue-local-storage</a> ★88 - 具有类型支持的Vuejs本地储存插件 </li>\n<li><a href=\"https://github.com/xtongs/vue-recyclist\" target=\"_blank\" rel=\"noopener\">vue-recyclist</a> ★88 - vuejs无限滚动列表 </li>\n<li><a href=\"https://github.com/yeyuqiudeng/vue-lazy-render\" target=\"_blank\" rel=\"noopener\">vue-lazy-render</a> ★87 - 用于Vue组件的延迟渲染 </li>\n<li><a href=\"https://github.com/superman66/vue-qart\" target=\"_blank\" rel=\"noopener\">vue-qart</a> ★86 - 用于qartjs的Vue2指令 </li>\n<li><a href=\"https://github.com/lmk123/vue-framework7\" target=\"_blank\" rel=\"noopener\">vue-framework7</a> ★85 - 结合VueJS使用的Framework7组件 </li>\n<li><a href=\"https://github.com/kartsims/vue-cordova\" target=\"_blank\" rel=\"noopener\">vue-cordova</a> ★85 - Cordova的VueJS插件 </li>\n<li><a href=\"https://github.com/FranckFreiburger/http-vue-loader\" target=\"_blank\" rel=\"noopener\">http-vue-loader</a> ★84 - 从html及js环境加载vue文件 </li>\n<li><a href=\"https://github.com/apertureless/vue-parallax\" target=\"_blank\" rel=\"noopener\">vue-parallax</a> ★84 - 快速60fps视差滚动效果组件 </li>\n<li><a href=\"https://github.com/xiaokaike/vue-clipboard\" target=\"_blank\" rel=\"noopener\">vue-clipboard</a> ★84 - VueJS的剪贴板 </li>\n<li><a href=\"https://github.com/JiriChara/vue-kindergarten\" target=\"_blank\" rel=\"noopener\">vue-kindergarten</a> ★83 - 将kindergarten集成到VueJS应用 </li>\n<li><a href=\"https://github.com/cklmercer/vue-events\" target=\"_blank\" rel=\"noopener\">vue-events</a> ★83 - 简化事件的VueJS插件 </li>\n<li><a href=\"https://github.com/se-panfilov/vue-notifications\" target=\"_blank\" rel=\"noopener\">vue-notifications</a> ★80 - 非阻塞通知库 </li>\n<li><a href=\"https://github.com/Sopamo/vue-online\" target=\"_blank\" rel=\"noopener\">vue-online</a> ★77 - reactive的在线和离线组件 </li>\n<li><a href=\"https://github.com/iFgR/vue-shortkey\" target=\"_blank\" rel=\"noopener\">vue-shortkey</a> ★74 - 应用于Vue.js的Vue-ShortKey 插件 </li>\n<li><a href=\"https://github.com/yangmingshan/vue-bus\" target=\"_blank\" rel=\"noopener\">vue-bus</a> ★71 - VueJS的事件总线 </li>\n<li><a href=\"https://github.com/dkfbasel/vuex-i18n\" target=\"_blank\" rel=\"noopener\">vuex-i18n</a> ★71 - 定位插件 </li>\n<li><a href=\"https://github.com/wxsms/uiv\" target=\"_blank\" rel=\"noopener\">uiv</a> ★70 - Vue实现的Bootstrap组件 </li>\n<li><a href=\"https://github.com/weinot/vue-router-transition\" target=\"_blank\" rel=\"noopener\">vue-router-transition</a> ★69 - 页面过渡插件 </li>\n<li><a href=\"https://github.com/mlyknown/vue-gesture\" target=\"_blank\" rel=\"noopener\">vue-gesture</a> ★69 - VueJS的手势事件插件 </li>\n<li><a href=\"https://github.com/thetutlage/vue-clip\" target=\"_blank\" rel=\"noopener\">vue-clip</a> ★67 - 简约的破解文件上传器 </li>\n<li><a href=\"https://github.com/SimulatedGREG/vue-electron\" target=\"_blank\" rel=\"noopener\">vue-electron</a> ★66 - 将选择的API封装到Vue对象中的插件 </li>\n<li><a href=\"https://github.com/vue-bulma/cleave\" target=\"_blank\" rel=\"noopener\">cleave</a> ★64 - 基于cleave.js的Cleave组件 </li>\n<li><a href=\"https://github.com/gocanto/vuemit\" target=\"_blank\" rel=\"noopener\">vuemit</a> ★63 - 处理VueJS事件 </li>\n<li><a href=\"https://github.com/israelss/vue-worker\" target=\"_blank\" rel=\"noopener\">vue-worker</a> ★56 - 使用webworkers的Vue插件 </li>\n<li><a href=\"https://github.com/leonardovilarinho/vue-acl\" target=\"_blank\" rel=\"noopener\">vue-acl</a> ★54 - VueJS访问控制列表插件 </li>\n<li><a href=\"https://github.com/HerringtonDarkholme/vue-ts-loader\" target=\"_blank\" rel=\"noopener\">vue-ts-loader</a> ★54 - 在Vue装载机检查脚本 </li>\n<li><a href=\"https://github.com/David-Desmaisons/Vue.resize\" target=\"_blank\" rel=\"noopener\">Vue.resize</a> ★51 - 检测HTML调整大小事件的vue指令 </li>\n<li><a href=\"https://github.com/Vuedeux/vuedeux\" target=\"_blank\" rel=\"noopener\">vuedeux</a> ★50 - 轻量级开源实用用层 </li>\n<li><a href=\"https://github.com/RobinCK/vue-ls\" target=\"_blank\" rel=\"noopener\">vue-ls</a> ★49 - 适配Vuecontext中LocalStorage的Vue插件 </li>\n<li><a href=\"https://github.com/gocanto/lazy-vue\" target=\"_blank\" rel=\"noopener\">lazy-vue</a> ★48 - 懒加载图片 </li>\n<li><a href=\"https://github.com/matfish2/vue-pagination-2\" target=\"_blank\" rel=\"noopener\">vue-pagination-2</a> ★46 - 简单通用的分页组件 </li>\n<li><a href=\"https://github.com/AStaroverov/v-media-query\" target=\"_blank\" rel=\"noopener\">v-media-query</a> ★44 - vue中添加用于配合媒体查询的方法 </li>\n<li><a href=\"https://github.com/Akryum/vue-observe-visibility\" target=\"_blank\" rel=\"noopener\">vue-observe-visibility</a> ★42 - 当元素在页面上可见或隐藏时检测 </li>\n<li><a href=\"https://github.com/Coffcer/vue-lazy-component\" target=\"_blank\" rel=\"noopener\">vue-lazy-component</a> ★38 - 懒加载组件或者元素的Vue指令 </li>\n<li><a href=\"https://github.com/ropbla9/vue-reactive-storage\" target=\"_blank\" rel=\"noopener\">vue-reactive-storage</a> ★37 - vue插件的Reactive层 </li>\n<li><a href=\"https://github.com/miaolz123/vue-helmet\" target=\"_blank\" rel=\"noopener\">vue-helmet</a> ★37 - HTML标题管理器 </li>\n<li><a href=\"https://github.com/richardanaya/voir\" target=\"_blank\" rel=\"noopener\">voir</a> ★35 - 保持mutation与视图组件的分离 </li>\n<li><a href=\"https://github.com/xanf/vuex-shared-mutations\" target=\"_blank\" rel=\"noopener\">vuex-shared-mutations</a> ★34 - 分享某种Vuex mutations </li>\n<li><a href=\"https://github.com/surmon-china/vue-drag-zone\" target=\"_blank\" rel=\"noopener\">vue-drag-zone</a> ★28 - 适用于Vue2的dom拖动组件 </li>\n<li><a href=\"https://github.com/mysticatea/vue-eslint-parser\" target=\"_blank\" rel=\"noopener\">vue-eslint-parser</a> ★27 - ESLint自定义解析 </li>\n<li><a href=\"https://github.com/vue-bulma/modal\" target=\"_blank\" rel=\"noopener\">modal</a> ★26 - Vue Bulma的modal组件 </li>\n<li><a href=\"https://github.com/wakeupmypig/vue-plan\" target=\"_blank\" rel=\"noopener\">vue-plan</a> ★25 - Vuex-状态管理 </li>\n<li><a href=\"https://github.com/BosNaufal/vue-file-base64\" target=\"_blank\" rel=\"noopener\">vue-file-base64</a> ★22 - 将文件转换为Base64的vue组件 </li>\n<li><a href=\"https://github.com/lzxb/vue-methods-promise\" target=\"_blank\" rel=\"noopener\">vue-methods-promise</a> ★21 - 使vue方法支持promise </li>\n<li><a href=\"https://github.com/David-Desmaisons/Vue.ImagesLoaded\" target=\"_blank\" rel=\"noopener\">Vue.ImagesLoaded</a> ★20 - 检测图片加载的VueJS指令 </li>\n<li><a href=\"https://github.com/irwansyahwii/Famous-Vue\" target=\"_blank\" rel=\"noopener\">Famous-Vue</a> ★16 - Famous库的vue组件 </li>\n<li><a href=\"https://github.com/LeoHuiyi/leo-vue-validator\" target=\"_blank\" rel=\"noopener\">leo-vue-validator</a> ★15 - 异步的表单验证组件 </li>\n<li><a href=\"https://github.com/Haixing-Hu/vue-titlecase\" target=\"_blank\" rel=\"noopener\">vue-titlecase</a> ★13 - 用于字符串titlecased的VueJS过滤器 </li>\n<li><a href=\"https://github.com/MetinSeylan/Vue-Easy-Validator\" target=\"_blank\" rel=\"noopener\">Vue-Easy-Validator</a> ★12 - 简单的表单验证 </li>\n<li><a href=\"https://github.com/vue-comps/vue-zoombox\" target=\"_blank\" rel=\"noopener\">vue-zoombox</a> ★12 - 一个高级zoombox </li>\n<li><a href=\"https://github.com/imcvampire/vue-truncate-filter\" target=\"_blank\" rel=\"noopener\">vue-truncate-filter</a> ★10 - 截断字符串的VueJS过滤器 </li>\n<li><a href=\"https://github.com/ElderJames/vue-router-storage\" target=\"_blank\" rel=\"noopener\">vue-router-storage</a> ★9 - vue历史路由持久化的解决方案 </li>\n<li><a href=\"https://github.com/syropian/vue-input-autosize\" target=\"_blank\" rel=\"noopener\">vue-input-autosize</a> ★9 - 基于内容自动调整文本输入的大小 </li>\n<li><a href=\"https://github.com/phphe/vue-data-validator\" target=\"_blank\" rel=\"noopener\">vue-data-validator</a> ★4 - Vuejs2的数据验证插件 </li>\n<li><a href=\"https://github.com/yodfz/vue-lazyloadImg\" target=\"_blank\" rel=\"noopener\">vue-lazyloadImg</a> ★4 - 图片懒加载插件 </li>\n</ul>\n<h3 id=\"vue应用实例\"><a href=\"#vue应用实例\" class=\"headerlink\" title=\"vue应用实例\"></a>vue应用实例</h3><ul>\n<li><a href=\"https://github.com/phanan/koel\" target=\"_blank\" rel=\"noopener\">koel</a> ★7773 - 基于网络的个人音频流媒体服务 </li>\n<li><a href=\"https://github.com/pagekit/pagekit\" target=\"_blank\" rel=\"noopener\">pagekit</a> ★4225 - 轻量级的CMS建站系统 </li>\n<li><a href=\"https://github.com/lin-xin/vue-manage-system\" target=\"_blank\" rel=\"noopener\">vue-manage-system</a> ★2057 - 后台管理系统解决方案 </li>\n<li><a href=\"https://github.com/Vuedo/vuedo\" target=\"_blank\" rel=\"noopener\">vuedo</a> ★1265 - 博客平台 </li>\n<li><a href=\"https://github.com/jackhutu/jackblog-vue\" target=\"_blank\" rel=\"noopener\">jackblog-vue</a> ★1120 - 个人博客系统 </li>\n<li><a href=\"https://github.com/jcc/blog\" target=\"_blank\" rel=\"noopener\">PJ Blog</a> ★1018 - 开源博客 </li>\n<li><a href=\"https://github.com/lzxb/vue-cnode\" target=\"_blank\" rel=\"noopener\">vue-cnode</a> ★787 - 重写vue版cnode社区 </li>\n<li><a href=\"https://github.com/ericjjj/vms\" target=\"_blank\" rel=\"noopener\">vms</a> ★629 - vuejs2管理系统 </li>\n<li><a href=\"https://github.com/ycwalker/CMS-of-Blog\" target=\"_blank\" rel=\"noopener\">CMS-of-Blog</a> ★541 - 博客内容管理器 </li>\n<li><a href=\"https://github.com/Caiyeon/goldfish\" target=\"_blank\" rel=\"noopener\">goldfish</a> ★518 - 用于HashiCorp Vault的Admin UI </li>\n<li><a href=\"https://github.com/mrgodhani/rss-reader\" target=\"_blank\" rel=\"noopener\">rss-reader</a> ★368 - 简单的rss阅读器 </li>\n<li><a href=\"https://github.com/viko16/vue-ghpages-blog\" target=\"_blank\" rel=\"noopener\">vue-ghpages-blog</a> ★254 - 依赖GitHub Pages无需本地生成的静态博客 </li>\n<li><a href=\"https://github.com/surmon-china/vue-blog\" target=\"_blank\" rel=\"noopener\">vue-blog</a> ★143 - 使用Vue2.0 和Vuex的vue-blog </li>\n<li><a href=\"https://github.com/wh469012917/swoole-vue-webim\" target=\"_blank\" rel=\"noopener\">swoole-vue-webim</a> ★137 - Web版的聊天应用 </li>\n<li><a href=\"https://github.com/zhangxin840/tomato5\" target=\"_blank\" rel=\"noopener\">tomato5</a> ★134 - 实时的协作工具 </li>\n<li><a href=\"https://github.com/Angarsk8/Loopa-News\" target=\"_blank\" rel=\"noopener\">Loopa-News</a> ★133 - 开源社会新闻应用 </li>\n<li><a href=\"https://github.com/reg21st/vue2-management-platform\" target=\"_blank\" rel=\"noopener\">vue2-management-platform</a> ★74 - vue2.0+ elementUI 后台管理平台 </li>\n<li><a href=\"https://github.com/thelinuxlich/vue-dashing-js\" target=\"_blank\" rel=\"noopener\">vue-dashing-js</a> ★70 - nuvo-dashing-js的fork </li>\n<li><a href=\"https://github.com/sapjax/fewords\" target=\"_blank\" rel=\"noopener\">fewords</a> ★63 - 功能极其简单的笔记本 </li>\n<li><a href=\"https://github.com/wxs77577/adminify\" target=\"_blank\" rel=\"noopener\">adminify</a> ★46 - 一个基于Vuetify material的Admin面板 </li>\n</ul>\n<h3 id=\"vueDemo示例\"><a href=\"#vueDemo示例\" class=\"headerlink\" title=\"vueDemo示例\"></a>vueDemo示例</h3><ul>\n<li><a href=\"https://github.com/bailicangdu/vue2-elm\" target=\"_blank\" rel=\"noopener\">vue2-elm</a> ★8036 - 重写饿了么webapp </li>\n<li><a href=\"https://github.com/shinygang/Vue-cnodejs\" target=\"_blank\" rel=\"noopener\">Vue-cnodejs</a> ★2491 - 基于vue重写Cnodejs.org的webapp </li>\n<li><a href=\"https://github.com/javaSwing/NeteaseCloudWebApp\" target=\"_blank\" rel=\"noopener\">NeteaseCloudWebApp</a> ★1549 - 高仿网易云音乐的webapp </li>\n<li><a href=\"https://github.com/bailicangdu/vue2-happyfri\" target=\"_blank\" rel=\"noopener\">vue2-happyfri</a> ★1535 - vue2及vuex的入门练习项目 </li>\n<li><a href=\"https://github.com/hilongjw/vue-zhihu-daily\" target=\"_blank\" rel=\"noopener\">vue-zhihu-daily</a> ★1010 - 知乎日报 with Vuejs </li>\n<li><a href=\"https://github.com/lzxb/vue2-demo\" target=\"_blank\" rel=\"noopener\">vue2-demo</a> ★994 - 从零构建vue2 + vue-router + vuex 开发环境 </li>\n<li><a href=\"https://github.com/useryangtao/vue-wechat\" target=\"_blank\" rel=\"noopener\">vue-wechat</a> ★939 - vue.js开发微信app界面 </li>\n<li><a href=\"https://github.com/liangxiaojuan/eleme\" target=\"_blank\" rel=\"noopener\">eleme</a> ★882 - 高仿饿了么app商家详情 </li>\n<li><a href=\"https://github.com/kenberkeley/vue-demo\" target=\"_blank\" rel=\"noopener\">vue-demo</a> ★755 - vue简易留言板 </li>\n<li><a href=\"https://github.com/lybenson/bilibili-vue\" target=\"_blank\" rel=\"noopener\">bilibili-vue</a> ★694 - 全栈式开发bilibili首页 </li>\n<li><a href=\"https://github.com/codecasts/spa-starter-kit\" target=\"_blank\" rel=\"noopener\">spa-starter-kit</a> ★646 - 单页应用启动套件 </li>\n<li><a href=\"https://github.com/SimonZhangITer/VueDemo_Sell_Eleme\" target=\"_blank\" rel=\"noopener\">VueDemo_Sell_Eleme</a> ★636 - Vue2高仿饿了么外卖平台 </li>\n<li><a href=\"https://github.com/Sioxas/vue-music\" target=\"_blank\" rel=\"noopener\">vue-music</a> ★621 - Vue 音乐搜索播放 </li>\n<li><a href=\"https://github.com/jeneser/douban\" target=\"_blank\" rel=\"noopener\">douban</a> ★606 - 基于vue全家桶的精致豆瓣DEMO </li>\n<li><a href=\"https://github.com/liangxiaojuan/vue-Meizi\" target=\"_blank\" rel=\"noopener\">vue-Meizi</a> ★604 - vue最新实战项目 </li>\n<li><a href=\"https://github.com/zhengguorong/maizuo\" target=\"_blank\" rel=\"noopener\">maizuo</a> ★603 - vue/vuex/redux仿卖座网 </li>\n<li><a href=\"https://github.com/zhaohaodang/vue-WeChat\" target=\"_blank\" rel=\"noopener\">vue-WeChat</a> ★558 - 基于Vue2高仿微信App的单页应用 </li>\n<li><a href=\"https://github.com/lavyun/vue-demo-kugou\" target=\"_blank\" rel=\"noopener\">vue-demo-kugou</a> ★500 - vuejs仿写酷狗音乐webapp </li>\n<li><a href=\"https://github.com/bailicangdu/vue2-manage\" target=\"_blank\" rel=\"noopener\">vue2-manage</a> ★457 - 基于 vue + element-ui 的后台管理系统 </li>\n<li><a href=\"https://github.com/yatessss/zhihudaily-vue\" target=\"_blank\" rel=\"noopener\">zhihudaily-vue</a> ★455 - 知乎日报web版 </li>\n<li><a href=\"https://github.com/ShanaMaid/vue-163-music\" target=\"_blank\" rel=\"noopener\">vue-163-music</a> ★448 - vue仿网易云音乐客户端版 </li>\n<li><a href=\"https://github.com/superman66/vue-axios-github\" target=\"_blank\" rel=\"noopener\">vue-axios-github</a> ★448 - 登录拦截登出功能 </li>\n<li><a href=\"https://github.com/jiakeqi/douban\" target=\"_blank\" rel=\"noopener\">douban</a> ★440 - 模仿豆瓣前端 </li>\n<li><a href=\"https://github.com/andylei18/vue-shopping\" target=\"_blank\" rel=\"noopener\">vue-shopping</a> ★404 - 蘑菇街移动端 </li>\n<li><a href=\"https://github.com/canfoo/vue2.0-taopiaopiao\" target=\"_blank\" rel=\"noopener\">vue2.0-taopiaopiao</a> ★402 - vue2.0与express构建淘票票页面 </li>\n<li><a href=\"https://github.com/hzzly/xyy-vue\" target=\"_blank\" rel=\"noopener\">xyy-vue</a> ★396 - 大学生交流平台 </li>\n<li><a href=\"https://github.com/TIGERB/easy-vue\" target=\"_blank\" rel=\"noopener\">easy-vue</a> ★370 - 使用Vue实现简易web </li>\n<li><a href=\"https://github.com/superman66/vue2.x-douban\" target=\"_blank\" rel=\"noopener\">vue2.x-douban</a> ★360 - Vue2实现简易豆瓣电影webApp </li>\n<li><a href=\"https://github.com/jiangqizheng/vue2-MiniQQ\" target=\"_blank\" rel=\"noopener\">vue2-MiniQQ</a> ★351 - 基于Vue2实现的仿手机QQ单页面应用 </li>\n<li><a href=\"https://github.com/wendaosanshou/mi-by-vue\" target=\"_blank\" rel=\"noopener\">mi-by-vue</a> ★291 - VueJS仿小米官网 </li>\n<li><a href=\"https://github.com/walleeeee/daily-zhihu\" target=\"_blank\" rel=\"noopener\">daily-zhihu</a> ★275 - 基于Vue2的知乎日报单页应用 </li>\n<li><a href=\"https://github.com/jiangjiu/vue-leancloud-blog\" target=\"_blank\" rel=\"noopener\">vue-leancloud-blog</a> ★268 - 一个前后端完全分离的单页应用 </li>\n<li><a href=\"https://github.com/Reusjs/VueMusic-PC\" target=\"_blank\" rel=\"noopener\">VueMusic-PC</a> ★260 - Vue.js高还原网易云音乐系列 </li>\n<li><a href=\"https://github.com/yjj5855/node-vue-server-webpack\" target=\"_blank\" rel=\"noopener\">node-vue-server-webpack</a> ★253 - Node.js+Vue.js+webpack快速开发框架 </li>\n<li><a href=\"https://github.com/beauty-enjoy/beauty\" target=\"_blank\" rel=\"noopener\">beauty</a> ★245 - 豆瓣美女clone </li>\n<li><a href=\"https://github.com/liujians/vue-adminLte-vue-router\" target=\"_blank\" rel=\"noopener\">vue-adminLte-vue-router</a> ★243 - vue和adminLte整合应用 </li>\n<li><a href=\"https://github.com/okoala/vue-fis3\" target=\"_blank\" rel=\"noopener\">vue-fis3</a> ★217 - 流行开源工具集成demo </li>\n<li><a href=\"https://github.com/lin-xin/notepad\" target=\"_blank\" rel=\"noopener\">notepad</a> ★216 - 本地存储的记事本 </li>\n<li><a href=\"https://github.com/ChuckCZC/vue-demo-maizuo\" target=\"_blank\" rel=\"noopener\">vue-demo-maizuo</a> ★210 - 使用Vue2全家桶仿制卖座电影 </li>\n<li><a href=\"https://github.com/Werb/Pixel-Web\" target=\"_blank\" rel=\"noopener\">Pixel-Web</a> ★198 - 一个 Vue 微博客户端 </li>\n<li><a href=\"https://github.com/MengZhaoFly/netease_yanxuan\" target=\"_blank\" rel=\"noopener\">netease_yanxuan</a> ★198 - vue版网易严选 </li>\n<li><a href=\"https://github.com/dmtrbrl/tmdb-app\" target=\"_blank\" rel=\"noopener\">tmdb-app</a> ★194 - TMDbVueJS应用 </li>\n<li><a href=\"https://github.com/xrr2016/vue-express-mongodb\" target=\"_blank\" rel=\"noopener\">vue-express-mongodb</a> ★189 - 简单的前后端分离案例 </li>\n<li><a href=\"https://github.com/iHaPBoy/vue-zhihudaily\" target=\"_blank\" rel=\"noopener\">vue-zhihudaily</a> ★187 - 知乎日报 Web 版本 </li>\n<li><a href=\"https://github.com/RalfZhang/Vdo\" target=\"_blank\" rel=\"noopener\">Vdo</a> ★179 - VueJS与MD重构豆瓣 </li>\n<li><a href=\"https://github.com/BUPT-HJM/vue-blog\" target=\"_blank\" rel=\"noopener\">vue-blog</a> ★171 - 单用户博客 </li>\n<li><a href=\"https://github.com/xiaobinwu/Wuji\" target=\"_blank\" rel=\"noopener\">Wuji</a> ★168 - 吾记网页版 </li>\n<li><a href=\"https://github.com/rokups/hello-vue-django\" target=\"_blank\" rel=\"noopener\">hello-vue-django</a> ★160 - 使用带有Django的vuejs的样板项目 </li>\n<li><a href=\"https://github.com/pomelo-chuan/Zhihu-Daily-Vue.js\" target=\"_blank\" rel=\"noopener\">Zhihu-Daily-Vue.js</a> ★157 - Vuejs单页网页应用 </li>\n<li><a href=\"https://github.com/renjie1996/tencent-sports\" target=\"_blank\" rel=\"noopener\">tencent-sports</a> ★154 - Vue全家桶仿腾讯体育 </li>\n<li><a href=\"https://github.com/zhixuanziben/gouyan-movie-vue\" target=\"_blank\" rel=\"noopener\">gouyan-movie-vue</a> ★151 - 基于vue的在线电影影讯网站 </li>\n<li><a href=\"https://github.com/CommanderXL/x-blog\" target=\"_blank\" rel=\"noopener\">x-blog</a> ★145 - 开源的个人blog项目 </li>\n<li><a href=\"https://github.com/lxyisme/vue-musicApp\" target=\"_blank\" rel=\"noopener\">vue-musicApp</a> ★132 - 使用vue全家桶制作的音乐播放器 </li>\n<li><a href=\"https://github.com/wszgxa/vue-cnode\" target=\"_blank\" rel=\"noopener\">vue-cnode</a> ★131 - vue单页应用demo </li>\n<li><a href=\"https://github.com/193Eric/webpack-vue-vueRouter\" target=\"_blank\" rel=\"noopener\">webpack-vue-vueRouter</a> ★130 - webpack及vue开发的简单项目实例 </li>\n<li><a href=\"https://github.com/Molunerfinn/vue-koa-demo\" target=\"_blank\" rel=\"noopener\">vue-koa-demo</a> ★128 - 使用Vue2和Koa1的全栈demo </li>\n<li><a href=\"https://github.com/elva2596/vueBlog\" target=\"_blank\" rel=\"noopener\">vueBlog</a> ★127 - 前后端分离博客 </li>\n<li><a href=\"https://github.com/secreter/websocket_chat\" target=\"_blank\" rel=\"noopener\">websocket_chat</a> ★127 - 基于vue和websocket的多人在线聊天室 </li>\n<li><a href=\"https://github.com/peng1992/houtai\" target=\"_blank\" rel=\"noopener\">houtai</a> ★125 - 基于vue和Element的后台管理系统 </li>\n<li><a href=\"https://github.com/hcy1996/vue-toutiao\" target=\"_blank\" rel=\"noopener\">vue-toutiao</a> ★121 - vuejs高仿今日头条移动端 </li>\n<li><a href=\"https://github.com/microzz/vue-cnode\" target=\"_blank\" rel=\"noopener\">vue-cnode</a> ★121 - 开源的CNode社区 </li>\n<li><a href=\"https://github.com/BosNaufal/vue-mini-shop\" target=\"_blank\" rel=\"noopener\">vue-mini-shop</a> ★121 - VueJS在线商店 </li>\n<li><a href=\"https://github.com/beidan/photoShare\" target=\"_blank\" rel=\"noopener\">photoShare</a> ★120 - 基于图片分享的社交平台 </li>\n<li><a href=\"https://github.com/vanishcode/iview2-management-system\" target=\"_blank\" rel=\"noopener\">iview2-management-system</a> ★119 - 后台管理系统解决方案简单示例 </li>\n<li><a href=\"https://github.com/monkeyWangs/doubanMovie\" target=\"_blank\" rel=\"noopener\">doubanMovie</a> ★119 - 豆瓣电影展示 </li>\n<li><a href=\"https://github.com/hbxywdk/eleme-vue2\" target=\"_blank\" rel=\"noopener\">eleme-vue2</a> ★112 - 仿饿了么H5纯前端Vue版 </li>\n<li><a href=\"https://github.com/cccyb/vue-zhihu-daily\" target=\"_blank\" rel=\"noopener\">vue-zhihu-daily</a> ★111 - 基于Vue全家桶开发的知乎日报 </li>\n<li><a href=\"https://github.com/biaodigit/Vue-News\" target=\"_blank\" rel=\"noopener\">Vue-News</a> ★107 - 基于vue全家桶的仿知乎日报单页应用 </li>\n<li><a href=\"https://github.com/xingbofeng/douban-movie\" target=\"_blank\" rel=\"noopener\">douban-movie</a> ★107 - 仿豆瓣电影wap端 </li>\n<li><a href=\"https://github.com/qxl1231/generator-loopback-vue\" target=\"_blank\" rel=\"noopener\">generator-loopback-vue</a> ★104 - 典型前后端分离项目模板 </li>\n<li><a href=\"https://github.com/odranoelBR/vue-quasar-admin-example\" target=\"_blank\" rel=\"noopener\">vue-quasar-admin-example</a> ★99 - 将Quasar和VueJS应用于SPA项目 </li>\n<li><a href=\"https://github.com/cs1707/vue-zhihudaily-2.0\" target=\"_blank\" rel=\"noopener\">vue-zhihudaily-2.0</a> ★97 - 使用Vue2.0+vue-router+vuex创建的zhihudaily </li>\n<li><a href=\"https://github.com/liangxiaojuan/vue-todos\" target=\"_blank\" rel=\"noopener\">vue-todos</a> ★95 - vue最新实战项目教程 </li>\n<li><a href=\"https://github.com/ddqre12345/vue-music\" target=\"_blank\" rel=\"noopener\">vue-music</a> ★91 - 网易云音乐Demo </li>\n<li><a href=\"https://github.com/Panda-Hope/vue-qqmusic\" target=\"_blank\" rel=\"noopener\">vue-qqmusic</a> ★90 - Vue全家桶+Mint-Ui打造高仿QQMusic </li>\n<li><a href=\"https://github.com/vincentSea/vue2.x-Cnode\" target=\"_blank\" rel=\"noopener\">vue2.x-Cnode</a> ★88 - 基于vue全家桶的Cnode社区 </li>\n<li><a href=\"https://github.com/hql123/vue-ruby-china\" target=\"_blank\" rel=\"noopener\">vue-ruby-china</a> ★86 - VueJS框架搭建的rubychina平台 </li>\n<li><a href=\"https://github.com/monkeyWangs/doubanMovie-SSR\" target=\"_blank\" rel=\"noopener\">doubanMovie-SSR</a> ★85 - Vue豆瓣电影服务端渲染 </li>\n<li><a href=\"https://github.com/huangche007/vue-jd\" target=\"_blank\" rel=\"noopener\">vue-jd</a> ★76 - 京东移动web商城 </li>\n<li><a href=\"https://github.com/zimplexing/vue-nReader\" target=\"_blank\" rel=\"noopener\">vue-nReader</a> ★73 - 使用vue2.0 + vue-router + vuex 的一个多页面小说阅读webapp </li>\n<li><a href=\"https://github.com/FatDong1/VueBlog\" target=\"_blank\" rel=\"noopener\">VueBlog</a> ★73 - 前后端分离的个人博客 </li>\n<li><a href=\"https://github.com/littlewin-wang/Zhihu_Daily\" target=\"_blank\" rel=\"noopener\">Zhihu_Daily</a> ★73 - 基于Vue和Nodejs的Web单页应用 </li>\n<li><a href=\"https://github.com/sinner77/vue-koa2-login\" target=\"_blank\" rel=\"noopener\">vue-koa2-login</a> ★67 - 使用 VueJS &amp; NodeJS 实现的登录注册 </li>\n<li><a href=\"https://github.com/houbx/webApp\" target=\"_blank\" rel=\"noopener\">webApp</a> ★64 - Vue2的移动端webApp音乐播放器 </li>\n<li><a href=\"https://github.com/wenye123/vue-trip\" target=\"_blank\" rel=\"noopener\">vue-trip</a> ★64 - vue2做的出行webapp </li>\n<li><a href=\"https://github.com/Alex-xd/seeMusic\" target=\"_blank\" rel=\"noopener\">seeMusic</a> ★63 - 跨平台云音乐播放器 </li>\n<li><a href=\"https://github.com/SidKwok/github-explorer\" target=\"_blank\" rel=\"noopener\">github-explorer</a> ★63 - 寻找最有趣的GitHub库 </li>\n<li><a href=\"https://github.com/zhoou/vue-cli-multipage-bootstrap\" target=\"_blank\" rel=\"noopener\">vue-cli-multipage-bootstrap</a> ★60 - 将vue官方在线示例整合到组件中 </li>\n<li><a href=\"https://github.com/beautifulBoys/vue-XiaoMi-Shop\" target=\"_blank\" rel=\"noopener\">vue-XiaoMi-Shop</a> ★59 - 高仿小米商城的项目 </li>\n<li><a href=\"https://github.com/leehomeok/Vue-NetEaseCloudMusic\" target=\"_blank\" rel=\"noopener\">Vue-NetEaseCloudMusic</a> ★59 - 模仿IOS版网易云音乐的手机网站 </li>\n<li><a href=\"https://github.com/shaqihe/life-app-vue\" target=\"_blank\" rel=\"noopener\">life-app-vue</a> ★59 - 使用vue2完成多功能集合到小webapp </li>\n<li><a href=\"https://github.com/MrMoveon/doubanApp\" target=\"_blank\" rel=\"noopener\">doubanApp</a> ★55 - 用vue2实现仿豆瓣app </li>\n<li><a href=\"https://github.com/QRL909109/ios7-vue\" target=\"_blank\" rel=\"noopener\">ios7-vue</a> ★52 - 使用vue2.0 vue-router vuex模拟ios7 </li>\n<li><a href=\"https://github.com/hzzly/canvas-vue\" target=\"_blank\" rel=\"noopener\">canvas-vue</a> ★50 - 一个Vue+Cnavas酷炫后台管理 </li>\n<li><a href=\"https://github.com/nswbmw/vue-bushishiren\" target=\"_blank\" rel=\"noopener\">vue-bushishiren</a> ★49 - 不是诗人应用 </li>\n<li><a href=\"https://github.com/albertchan/vue-ssr-boilerplate\" target=\"_blank\" rel=\"noopener\">vue-ssr-boilerplate</a> ★48 - 精简版的ofvue-hackernews-2 </li>\n<li><a href=\"https://github.com/gaohongwei11/vuecommunity\" target=\"_blank\" rel=\"noopener\">vuecommunity</a> ★47 - vue.js中文社区 </li>\n<li><a href=\"https://github.com/pluto1114/vue-music163\" target=\"_blank\" rel=\"noopener\">vue-music163</a> ★47 - 音乐VueJS项目 </li>\n<li><a href=\"https://github.com/safaring/Vue2-MV\" target=\"_blank\" rel=\"noopener\">Vue2-MV</a> ★45 - 仿网易云音乐MV的webapp </li>\n<li><a href=\"https://github.com/hua1995116/musiccloudWebapp\" target=\"_blank\" rel=\"noopener\">musiccloudWebapp</a> ★44 - 用vuejs仿网易云音乐 </li>\n<li><a href=\"https://github.com/BubblyPoker/cnode-vue\" target=\"_blank\" rel=\"noopener\">cnode-vue</a> ★40 - 基于vue和vue-router构建的cnodejs web网站SPA </li>\n<li><a href=\"https://github.com/tyllo/Framework7-VueJS\" target=\"_blank\" rel=\"noopener\">Framework7-VueJS</a> ★38 - 使用移动框架的示例 </li>\n<li><a href=\"https://github.com/JerryYgh/m-eleme\" target=\"_blank\" rel=\"noopener\">m-eleme</a> ★37 - 基于Vue全家桶仿饿了么移动端webapp </li>\n<li><a href=\"https://github.com/sailengsi/sls-vuex2-demo\" target=\"_blank\" rel=\"noopener\">sls-vuex2-demo</a> ★37 - vuex2商城购物车demo </li>\n<li><a href=\"https://github.com/silianpan/eagles\" target=\"_blank\" rel=\"noopener\">eagles</a> ★36 - 各种组件封装 </li>\n<li><a href=\"https://github.com/fishenal/Todos_Vuejs\" target=\"_blank\" rel=\"noopener\">Todos_Vuejs</a> ★35 - vuejs2搭建的极简的todolist </li>\n<li><a href=\"https://github.com/jiananle/vue-cnode\" target=\"_blank\" rel=\"noopener\">vue-cnode</a> ★35 - 用 Vue 做的 CNode 官网 </li>\n<li><a href=\"https://github.com/GitaiQAQ/HyaReader\" target=\"_blank\" rel=\"noopener\">HyaReader</a> ★35 - 移动友好的阅读器 </li>\n<li><a href=\"https://github.com/lanux/Vue-Admin\" target=\"_blank\" rel=\"noopener\">Vue-Admin</a> ★33 - 基于Vue2的Admin系统 </li>\n<li><a href=\"https://github.com/liupeijun/vue2-hybridapp-haoshiqi\" target=\"_blank\" rel=\"noopener\">vue2-hybridapp-haoshiqi</a> ★32 - 实现单页面webapp以及hybridapp </li>\n<li><a href=\"https://github.com/xrr2016/zhihu-daily\" target=\"_blank\" rel=\"noopener\">zhihu-daily</a> ★32 - 轻松查看知乎日报内容 </li>\n<li><a href=\"https://github.com/xandeer/gank\" target=\"_blank\" rel=\"noopener\">gank</a> ★32 - gankio资源的阅读应用 </li>\n<li><a href=\"https://github.com/NewsNIng/vue-h5plus\" target=\"_blank\" rel=\"noopener\">vue-h5plus</a> ★31 - 前卫的vue及html5plus跨平台demo </li>\n<li><a href=\"https://github.com/soulcm/vue-cnode-mobile\" target=\"_blank\" rel=\"noopener\">vue-cnode-mobile</a> ★29 - 搭建cnode社区 </li>\n<li><a href=\"https://github.com/alanWongsGithub/vue-weather\" target=\"_blank\" rel=\"noopener\">vue-weather</a> ★26 - 基于vue.js 2.0的百度天气应用 </li>\n<li><a href=\"https://github.com/doterlin/vue-user-center\" target=\"_blank\" rel=\"noopener\">vue-user-center</a> ★26 - vuejs直播类应用web端个人中心 </li>\n<li><a href=\"https://github.com/moonou/zhihu-daily-vue\" target=\"_blank\" rel=\"noopener\">zhihu-daily-vue</a> ★22 - 知乎日报 </li>\n<li><a href=\"https://github.com/Damonlw/vue-cnode\" target=\"_blank\" rel=\"noopener\">vue-cnode</a> ★22 - 使用cNode社区提供的接口 </li>\n<li><a href=\"https://github.com/BosNaufal/vue-starter\" target=\"_blank\" rel=\"noopener\">vue-starter</a> ★22 - VueJs项目的简单启动页 </li>\n<li><a href=\"https://github.com/wx1993/node-vue-fabaocn\" target=\"_blank\" rel=\"noopener\">node-vue-fabaocn</a> ★21 - 基于 node 和 vue 实现的移动官网 </li>\n<li><a href=\"https://github.com/youknowznm/vue-memo\" target=\"_blank\" rel=\"noopener\">vue-memo</a> ★20 - 用 vue写的记事本应用 </li>\n<li><a href=\"https://github.com/Halfeld/v-notes\" target=\"_blank\" rel=\"noopener\">v-notes</a> ★20 - 简单美观的记事本 </li>\n<li><a href=\"https://github.com/momopig/vue-flexible-app\" target=\"_blank\" rel=\"noopener\">vue-flexible-app</a> ★19 - vue开发的一个简易app </li>\n<li><a href=\"https://github.com/CaiYiLiang/simply-calculator-vuejs\" target=\"_blank\" rel=\"noopener\">simply-calculator-vuejs</a> ★19 - 用VueJS实现简易计算器 </li>\n<li><a href=\"https://github.com/ITCNZ/vue-dropload\" target=\"_blank\" rel=\"noopener\">vue-dropload</a> ★19 - 用以测试下拉加载与简单路由 </li>\n<li><a href=\"https://github.com/fishenal/Vuejs-SalePlatform\" target=\"_blank\" rel=\"noopener\">Vuejs-SalePlatform</a> ★19 - vuejs搭建的售卖平台demo </li>\n<li><a href=\"https://github.com/hj624608494/vue-shopping-mall\" target=\"_blank\" rel=\"noopener\">vue-shopping-mall</a> ★16 - 基于Vue.js 2.x系列 + vue2-router + axios + iview 商城 </li>\n<li><a href=\"https://github.com/yangbo5207/qqmusic\" target=\"_blank\" rel=\"noopener\">qqmusic</a> ★13 - QQ音乐vue </li>\n<li><a href=\"https://github.com/deshes/vue-weather\" target=\"_blank\" rel=\"noopener\">vue-weather</a> ★12 - VueJS天气demo </li>\n</ul>\n<h2 id=\"react\"><a href=\"#react\" class=\"headerlink\" title=\"react\"></a>react</h2><h3 id=\"reactApi\"><a href=\"#reactApi\" class=\"headerlink\" title=\"reactApi\"></a>reactApi</h3><ul>\n<li><a href=\"https://hulufei.gitbooks.io/react-tutorial/content/introduction.html\" target=\"_blank\" rel=\"noopener\">react</a></li>\n<li><a href=\"http://cn.redux.js.org/docs/introduction/Motivation.html\" target=\"_blank\" rel=\"noopener\">react</a></li>\n</ul>\n<h3 id=\"reactUI库\"><a href=\"#reactUI库\" class=\"headerlink\" title=\"reactUI库\"></a>reactUI库</h3><ul>\n<li><a href=\"https://ant.design/index-cn\" target=\"_blank\" rel=\"noopener\">ant-design</a>- 蚂蚁金服的 React UI 库</li>\n<li><a href=\"http://cn.redux.js.org/docs/introduction/Motivation.html\" target=\"_blank\" rel=\"noopener\">react-loadable</a>- 按需加载 react 组件</li>\n<li><a href=\"https://github.com/mui-org/material-ui\" target=\"_blank\" rel=\"noopener\">material-ui</a> - UI 库<h3 id=\"react实用库\"><a href=\"#react实用库\" class=\"headerlink\" title=\"react实用库\"></a>react实用库</h3></li>\n<li><a href=\"https://github.com/react-dnd/react-dnd\" target=\"_blank\" rel=\"noopener\">react-dnd</a> - 拖拽实现</li>\n</ul>\n<h2 id=\"小程序\"><a href=\"#小程序\" class=\"headerlink\" title=\"小程序\"></a>小程序</h2><h3 id=\"微信Api\"><a href=\"#微信Api\" class=\"headerlink\" title=\"微信Api\"></a>微信Api</h3><p><a href=\"https://developers.weixin.qq.com/miniprogram/dev/framework/app-service/api.html\" target=\"_blank\" rel=\"noopener\">微信Api</a></p>\n<h3 id=\"支付宝Api\"><a href=\"#支付宝Api\" class=\"headerlink\" title=\"支付宝Api\"></a>支付宝Api</h3><p><a href=\"https://docs.alipay.com/mini/developer/getting-started\" target=\"_blank\" rel=\"noopener\">支付宝Api</a></p>\n<h3 id=\"微信Api-1\"><a href=\"#微信Api-1\" class=\"headerlink\" title=\"微信Api\"></a>微信Api</h3><p><a href=\"https://developer.toutiao.com/docs/framework/\" target=\"_blank\" rel=\"noopener\">今日头条Api</a></p>\n<h3 id=\"微信Api-2\"><a href=\"#微信Api-2\" class=\"headerlink\" title=\"微信Api\"></a>微信Api</h3><p><a href=\"https://smartprogram.baidu.com/developer/index.html\" target=\"_blank\" rel=\"noopener\">百度Api</a></p>\n<h2 id=\"webpack\"><a href=\"#webpack\" class=\"headerlink\" title=\"webpack\"></a>webpack</h2><ul>\n<li><a href=\"https://www.webpackjs.com/\" target=\"_blank\" rel=\"noopener\">webpack</a></li>\n</ul>\n<h2 id=\"typeScript\"><a href=\"#typeScript\" class=\"headerlink\" title=\"typeScript\"></a>typeScript</h2><ul>\n<li><a href=\"https://www.tslang.cn/docs/handbook/jsx.html\" target=\"_blank\" rel=\"noopener\">webpack</a></li>\n</ul>\n<blockquote>\n<p>如果有补充的可以提交issure,帮助我完善来帮助方便更多的人，让更多的人节省不必要的时间。</p>\n</blockquote>\n<p><a href=\"https://github.com/xiaosongread/Commonly-used-to-collect\" target=\"_blank\" rel=\"noopener\">github:</a></p>\n","site":{"data":{}},"excerpt":"<h1 id=\"Commonly-used-to-collect\"><a href=\"#Commonly-used-to-collect\" class=\"headerlink\" title=\"Commonly-used-to-collect\"></a>Commonly-used-to-collect</h1><blockquote>\n<p>🎉 整理我平时关注的前端库。</p>\n</blockquote>\n<h2 id=\"导航：\"><a href=\"#导航：\" class=\"headerlink\" title=\"导航：\"></a>导航：</h2><p>1.<a href=\"#vue\">Vue</a></p>\n<ul>\n<li><a href=\"#vueApi\">API</a> </li>\n<li><a href=\"#vueUI库\">UI库</a> </li>\n<li><a href=\"#vue实用库\">实用库</a> </li>\n<li><a href=\"#vue应用实例\">应用实例</a> </li>\n<li><a href=\"#vueDemo示例\">Demo示例</a> </li>\n</ul>\n<p>2.<a href=\"#react\">React</a></p>\n<ul>\n<li><a href=\"#reactApi\">API</a> </li>\n<li><a href=\"#reactUI库\">UI库</a> </li>\n<li><a href=\"#react实用库\">实用库</a> </li>\n</ul>\n<p>3.<a href=\"#小程序\">小程序</a></p>\n<ul>\n<li><a href=\"#微信Api\">微信</a></li>\n<li><a href=\"#支付宝Api\">支付宝</a></li>\n<li><a href=\"#今日头条Api\">今日头条</a></li>\n<li><a href=\"#百度Api\">百度</a></li>\n</ul>\n<p>4.<a href=\"#webpack\">webpack</a></p>\n<p>5.<a href=\"#typeScript\">typeScript</a><br>","more":"</p>\n<h2 id=\"前端框架\"><a href=\"#前端框架\" class=\"headerlink\" title=\"前端框架\"></a>前端框架</h2><ul>\n<li><a href=\"https://github.com/vuejs/vue\" target=\"_blank\" rel=\"noopener\">vue</a></li>\n<li><a href=\"https://github.com/facebook/react\" target=\"_blank\" rel=\"noopener\">react</a></li>\n<li><a href=\"https://github.com/umijs/umi\" target=\"_blank\" rel=\"noopener\">umi</a> - 蚂蚁金服的前端框架。</li>\n<li><a href=\"https://github.com/NervJS/taro\" target=\"_blank\" rel=\"noopener\">taro</a> - 生成能运行在微信/百度/支付宝/字节跳动/ QQ 小程序、快应用、H5、React Native 等的应用</li>\n<li><a href=\"https://github.com/quasarframework/quasar\" target=\"_blank\" rel=\"noopener\">quasar</a> - 基于 vue，一套代码多处适用。</li>\n<li><a href=\"http://mpvue.com/\" target=\"_blank\" rel=\"noopener\">mapvue</a> - 美团基于 Vue.js 开发小程序的前端框架</li>\n</ul>\n<h2 id=\"vue\"><a href=\"#vue\" class=\"headerlink\" title=\"vue\"></a>vue</h2><h3 id=\"vueApi\"><a href=\"#vueApi\" class=\"headerlink\" title=\"vueApi:\"></a>vueApi:</h3><ul>\n<li><a href=\"https://cn.vuejs.org/v2/api/#v-text\" target=\"_blank\" rel=\"noopener\">vue</a></li>\n<li><a href=\"https://router.vuejs.org/zh/\" target=\"_blank\" rel=\"noopener\">vue-router</a><h3 id=\"vueUI库：\"><a href=\"#vueUI库：\" class=\"headerlink\" title=\"vueUI库：\"></a>vueUI库：</h3></li>\n<li><a href=\"https://element.eleme.cn/#/zh-CN/component/installation\" target=\"_blank\" rel=\"noopener\">elementUi</a> - 饿了么出品的Vue2的web UI工具套件</li>\n<li><a href=\"https://vux.li/\" target=\"_blank\" rel=\"noopener\">VUX</a> - 基于Vue和WeUI的组件库(个人维护)</li>\n<li><a href=\"http://mint-ui.github.io/#!/zh-cn\" target=\"_blank\" rel=\"noopener\">mint-ui</a> - Vue 2的移动UI元素</li>\n<li><a href=\"http://v1.iviewui.com/\" target=\"_blank\" rel=\"noopener\">iview</a> - 基于 Vuejs 的开源 UI 组件库</li>\n<li><a href=\"https://vuetifyjs.com/zh-Hans/\" target=\"_blank\" rel=\"noopener\">vuetify</a> - 为移动而生的Vue JS 2组件框架</li>\n<li><a href=\"https://panjiachen.github.io/vue-element-admin-site/zh/\" target=\"_blank\" rel=\"noopener\">vue-element-admin</a> - Vue管理面板框架</li>\n<li><a href=\"https://github.com/JosephusPaye/Keen-UI\" target=\"_blank\" rel=\"noopener\">Keen-UI</a> ★2749 - 轻量级的基本UI组件合集 </li>\n<li><a href=\"https://github.com/wangdahoo/vonic\" target=\"_blank\" rel=\"noopener\">vonic</a> ★1913 - 快速构建移动端单页应用 </li>\n<li><a href=\"https://github.com/monterail/vue-multiselect\" target=\"_blank\" rel=\"noopener\">vue-multiselect</a> ★1539 - Vue.js选择框解决方案 </li>\n<li><a href=\"https://github.com/egoist/eme\" target=\"_blank\" rel=\"noopener\">eme</a> ★1529 - 优雅的Markdown编辑器 </li>\n<li><a href=\"https://github.com/taylorchen709/vueAdmin\" target=\"_blank\" rel=\"noopener\">vueAdmin</a> ★1455 - 基于vuejs2和element的简单的管理员模板 </li>\n<li><a href=\"https://github.com/pi0/bootstrap-vue\" target=\"_blank\" rel=\"noopener\">bootstrap-vue</a> ★1267 - 应用于Vuejs2的Twitter的Bootstrap 4组件 </li>\n<li><a href=\"https://github.com/David-Desmaisons/Vue.Draggable\" target=\"_blank\" rel=\"noopener\">Vue.Draggable</a> ★1191 - 实现拖放和视图模型数组同步 </li>\n<li><a href=\"https://github.com/Zulko/eagle.js\" target=\"_blank\" rel=\"noopener\">eagle.js</a> ★1128 - hacker的幻灯片演示框架 </li>\n<li><a href=\"https://github.com/surmon-china/vue-awesome-swiper\" target=\"_blank\" rel=\"noopener\">vue-awesome-swiper</a> ★1012 - vue.js触摸滑动组件 </li>\n<li><a href=\"https://github.com/ratiw/vue-table\" target=\"_blank\" rel=\"noopener\">vue-table</a> ★1009 - 简化数据表格 </li>\n<li><a href=\"https://github.com/Coffcer/vue-chat\" target=\"_blank\" rel=\"noopener\">vue-chat</a> ★859 - vuejs和vuex及webpack的聊天示例 </li>\n<li><a href=\"https://github.com/chenz24/vue-blu\" target=\"_blank\" rel=\"noopener\">vue-blu</a> ★850 - 帮助你轻松创建web应用 </li>\n<li><a href=\"https://github.com/hilongjw/vue-recyclerview\" target=\"_blank\" rel=\"noopener\">vue-recyclerview</a> ★849 - 管理大列表的vue-recyclerview </li>\n<li><a href=\"https://github.com/OYsun/VueCircleMenu\" target=\"_blank\" rel=\"noopener\">VueCircleMenu</a> ★838 - 漂亮的vue圆环菜单 </li>\n<li><a href=\"https://github.com/ElemeFE/vue-infinite-scroll\" target=\"_blank\" rel=\"noopener\">vue-infinite-scroll</a> ★779 - VueJS的无限滚动指令 </li>\n<li><a href=\"https://github.com/rafaelpimpa/buefy\" target=\"_blank\" rel=\"noopener\">buefy</a> ★755 - 响应式UI组件轻量级库 </li>\n<li><a href=\"https://github.com/FE-Driver/vue-beauty\" target=\"_blank\" rel=\"noopener\">vue-beauty</a> ★749 - 由vue和ant design创建的优美UI组件 </li>\n<li><a href=\"https://github.com/MopTym/vue-waterfall\" target=\"_blank\" rel=\"noopener\">vue-waterfall</a> ★737 - Vue.js的瀑布布局组件 </li>\n<li><a href=\"https://github.com/luojilab/radon-ui\" target=\"_blank\" rel=\"noopener\">radon-ui</a> ★715 - 快速开发产品的Vue组件库 </li>\n<li><a href=\"https://github.com/lookstudios/vue-loop\" target=\"_blank\" rel=\"noopener\">vue-loop</a> ★701 - 无限的内容循环 </li>\n<li><a href=\"https://github.com/apertureless/vue-chartjs\" target=\"_blank\" rel=\"noopener\">vue-chartjs</a> ★694 - vue中的Chartjs的封装 </li>\n<li><a href=\"https://github.com/myronliu347/vue-carbon\" target=\"_blank\" rel=\"noopener\">vue-carbon</a> ★684 - 基于 vue 开发MD风格的移动端 </li>\n<li><a href=\"https://github.com/vuejs/vue-syntax-highlight\" target=\"_blank\" rel=\"noopener\">vue-syntax-highlight</a> ★655 - Sublime Text语法高亮 </li>\n<li><a href=\"https://github.com/Justineo/vue-echarts\" target=\"_blank\" rel=\"noopener\">vue-echarts</a> ★649 - VueJS的ECharts组件 </li>\n<li><a href=\"https://github.com/surmon-china/vue-quill-editor\" target=\"_blank\" rel=\"noopener\">vue-quill-editor</a> ★615 - 基于Quill适用于Vue2的富文本编辑器 </li>\n<li><a href=\"https://github.com/ElemeFE/vue-amap\" target=\"_blank\" rel=\"noopener\">vue-amap</a> ★571 - 基于Vue 2和高德地图的地图组件 </li>\n<li><a href=\"https://github.com/jinzhe/vue-calendar\" target=\"_blank\" rel=\"noopener\">vue-calendar</a> ★536 - 日期选择插件 </li>\n<li><a href=\"https://github.com/PeachScript/vue-infinite-loading\" target=\"_blank\" rel=\"noopener\">vue-infinite-loading</a> ★501 - VueJS的无限滚动插件 </li>\n<li><a href=\"https://github.com/ElemeFE/vue-swipe\" target=\"_blank\" rel=\"noopener\">vue-swipe</a> ★481 - VueJS触摸滑块 </li>\n<li><a href=\"https://github.com/microzz/vue-music-player\" target=\"_blank\" rel=\"noopener\">vue-music-player</a> ★451 - Vuejs写一个音乐播放器 </li>\n<li><a href=\"https://github.com/wangdahoo/vue-scroller\" target=\"_blank\" rel=\"noopener\">vue-scroller</a> ★444 - Vonic UI的功能性组件 </li>\n<li><a href=\"https://github.com/hilongjw/vue-datepicker\" target=\"_blank\" rel=\"noopener\">vue-datepicker</a> ★436 - 日历和日期选择组件 </li>\n<li><a href=\"https://github.com/Vanthink-UED/vue-core-image-upload\" target=\"_blank\" rel=\"noopener\">vue-core-image-upload</a> ★393 - 轻量级的vue上传插件 </li>\n<li><a href=\"https://github.com/hilongjw/vue-progressbar\" target=\"_blank\" rel=\"noopener\">vue-progressbar</a> ★379 - vue轻量级进度条 </li>\n<li><a href=\"https://github.com/Zhangdroid/Gokotta\" target=\"_blank\" rel=\"noopener\">Gokotta</a> ★375 - 简单的音乐播放器 </li>\n<li><a href=\"https://github.com/sagalbot/vue-sortable\" target=\"_blank\" rel=\"noopener\">vue-sortable</a> ★373 - 轻松添加拖拽排序 </li>\n<li><a href=\"https://github.com/alessiomaffeis/vue-picture-input\" target=\"_blank\" rel=\"noopener\">vue-picture-input</a> ★352 - 移动友好的图片文件输入组件 </li>\n<li><a href=\"https://github.com/xlsdg/vue-echarts-v3\" target=\"_blank\" rel=\"noopener\">vue-echarts-v3</a> ★351 - VueJS组件封装 </li>\n<li><a href=\"https://github.com/jrainlau/markcook\" target=\"_blank\" rel=\"noopener\">markcook</a> ★343 - 好看的markdown编辑器 </li>\n<li><a href=\"https://github.com/surmon-china/vue-video-player\" target=\"_blank\" rel=\"noopener\">vue-video-player</a> ★336 - VueJS视频及直播播放器 </li>\n<li><a href=\"https://github.com/GuillaumeLeclerc/vue-google-maps\" target=\"_blank\" rel=\"noopener\">vue-google-maps</a> ★334 - 带有双向数据绑定Google地图组件 </li>\n<li><a href=\"https://github.com/QingWei-Li/vue-trend\" target=\"_blank\" rel=\"noopener\">vue-trend</a> ★332 - 简单优雅的星光线条 </li>\n<li><a href=\"https://github.com/charliekassel/vuejs-datepicker\" target=\"_blank\" rel=\"noopener\">vuejs-datepicker</a> ★314 - vue日期选择器组件 </li>\n<li><a href=\"https://github.com/Wanderxx/vue-fullcalendar\" target=\"_blank\" rel=\"noopener\">vue-fullcalendar</a> ★313 - 基于vue.js的全日历组件 </li>\n<li><a href=\"https://github.com/PeakTai/vue-html5-editor\" target=\"_blank\" rel=\"noopener\">vue-html5-editor</a> ★303 - html5所见即所得编辑器 </li>\n<li><a href=\"https://github.com/lian-yue/vue-upload-component\" target=\"_blank\" rel=\"noopener\">vue-upload-component</a> ★298 - Vuejs文件上传组件 </li>\n<li><a href=\"https://github.com/SimonZhangITer/DataVisualization\" target=\"_blank\" rel=\"noopener\">DataVisualization</a> ★298 - 数据可视化 </li>\n<li><a href=\"https://github.com/matfish2/vue-tables-2\" target=\"_blank\" rel=\"noopener\">vue-tables-2</a> ★291 - 显示数据的bootstrap样式网格 </li>\n<li><a href=\"https://github.com/OYsun/VueStar\" target=\"_blank\" rel=\"noopener\">VueStar</a> ★270 - 带星星动画的vue点赞按钮 </li>\n<li><a href=\"https://github.com/njleonzhang/vue-data-tables\" target=\"_blank\" rel=\"noopener\">vue-data-tables</a> ★266 - VueJS2数据表格 </li>\n<li><a href=\"https://github.com/TahaSh/vue-paginate\" target=\"_blank\" rel=\"noopener\">vue-paginate</a> ★261 - 分页数据的简约VueJS插件 </li>\n<li><a href=\"https://github.com/ydcss/vue-ydui\" target=\"_blank\" rel=\"noopener\">vue-ydui</a> ★247 - 基于Vue2的移动端和微信UI </li>\n<li><a href=\"https://github.com/egoist/vue-mugen-scroll\" target=\"_blank\" rel=\"noopener\">vue-mugen-scroll</a> ★239 - 无限滚动组件 </li>\n<li><a href=\"https://github.com/Akryum/vue-virtual-scroller\" target=\"_blank\" rel=\"noopener\">vue-virtual-scroller</a> ★238 - 带任意数目数据的顺畅的滚动 </li>\n<li><a href=\"https://github.com/icai/vue2-calendar\" target=\"_blank\" rel=\"noopener\">vue2-calendar</a> ★236 - 支持lunar和日期事件的日期选择器 </li>\n<li><a href=\"https://github.com/rowanwins/vue-dropzone\" target=\"_blank\" rel=\"noopener\">vue-dropzone</a> ★233 - 用于文件上传的Vue组件 </li>\n<li><a href=\"https://github.com/Awheat/vue2-douban-market\" target=\"_blank\" rel=\"noopener\">vue2-douban-market</a> ★233 - 仿豆瓣市集webapp项目 </li>\n<li><a href=\"https://github.com/euvl/vue-js-modal\" target=\"_blank\" rel=\"noopener\">vue-js-modal</a> ★228 - 移动友好的Vuejs2的modal </li>\n<li><a href=\"https://github.com/warpcgd/vue-slider\" target=\"_blank\" rel=\"noopener\">vue-slider</a> ★224 - vue 滑动组件 </li>\n<li><a href=\"https://github.com/Haixing-Hu/vue-datetime-picker\" target=\"_blank\" rel=\"noopener\">vue-datetime-picker</a> ★224 - 日期时间选择控件 </li>\n<li><a href=\"https://github.com/ccforward/rubik\" target=\"_blank\" rel=\"noopener\">rubik</a> ★217 - 基于Vuejs2的开源 UI 组件库 </li>\n<li><a href=\"https://github.com/coderdiaz/vue-datasource\" target=\"_blank\" rel=\"noopener\">vue-datasource</a> ★210 - 创建VueJS动态表格 </li>\n<li><a href=\"https://github.com/dai-siki/vue-image-crop-upload\" target=\"_blank\" rel=\"noopener\">vue-image-crop-upload</a> ★205 - vue图片剪裁上传组件 </li>\n<li><a href=\"https://github.com/hifarer/Vueditor\" target=\"_blank\" rel=\"noopener\">Vueditor</a> ★204 - 所见即所得的编辑器 </li>\n<li><a href=\"https://github.com/mint-ui/mint-loadmore\" target=\"_blank\" rel=\"noopener\">mint-loadmore</a> ★203 - VueJS的双向下拉刷新组件 </li>\n<li><a href=\"https://github.com/NightCatSama/vue-slider-component\" target=\"_blank\" rel=\"noopener\">vue-slider-component</a> ★202 - 在vue1和vue2中使用滑块 </li>\n<li><a href=\"https://github.com/microzz/vue-chat\" target=\"_blank\" rel=\"noopener\">vue-chat</a> ★200 - Vue全家桶+Socket.io+Express/Koa2打造一个智能聊天室 </li>\n<li><a href=\"https://github.com/hinesboy/mavonEditor\" target=\"_blank\" rel=\"noopener\">mavonEditor</a> ★179 - 基于Vue的markdown编辑器 </li>\n<li><a href=\"https://github.com/Wlada/vue-carousel-3d\" target=\"_blank\" rel=\"noopener\">vue-carousel-3d</a> ★173 - VueJS的3D轮播组件 </li>\n<li><a href=\"https://github.com/Dafrok/vue-baidu-map\" target=\"_blank\" rel=\"noopener\">vue-baidu-map</a> ★170 - 基于 Vue 2的百度地图组件库 </li>\n<li><a href=\"https://github.com/adeptoas/sweet-modal-vue\" target=\"_blank\" rel=\"noopener\">sweet-modal-vue</a> ★170 - 精美的点击提示对话框 </li>\n<li><a href=\"https://github.com/creotip/vue-particles\" target=\"_blank\" rel=\"noopener\">vue-particles</a> ★168 - 粒子背景的vue组件 </li>\n<li><a href=\"https://github.com/weilao/vue-swiper\" target=\"_blank\" rel=\"noopener\">vue-swiper</a> ★167 - 易于使用的滑块组件 </li>\n<li><a href=\"https://github.com/F-loat/vue-simplemde\" target=\"_blank\" rel=\"noopener\">vue-simplemde</a> ★166 - VueJS的Markdown编辑器组件 </li>\n<li><a href=\"https://github.com/hilongjw/vue-slide\" target=\"_blank\" rel=\"noopener\">vue-slide</a> ★161 - vue轻量级滑动组件 </li>\n<li><a href=\"https://github.com/Astray-git/vue-dragula\" target=\"_blank\" rel=\"noopener\">vue-dragula</a> ★157 - 使拖放变得简单 </li>\n<li><a href=\"https://github.com/Alex-fun/vue-drag-and-drop-list\" target=\"_blank\" rel=\"noopener\">vue-drag-and-drop-list</a> ★156 - 创建排序列表的Vue指令 </li>\n<li><a href=\"https://github.com/davidroyer/vue2-editor\" target=\"_blank\" rel=\"noopener\">vue2-editor</a> ★155 - HTML编辑器 </li>\n<li><a href=\"https://github.com/hchstera/vue-charts\" target=\"_blank\" rel=\"noopener\">vue-charts</a> ★152 - 轻松渲染一个图表 </li>\n<li><a href=\"https://github.com/LucienLee/vue-data-grid\" target=\"_blank\" rel=\"noopener\">vue-data-grid</a> ★151 - VueJS复杂桌面交互示例 </li>\n<li><a href=\"https://github.com/vuwe/vuwe\" target=\"_blank\" rel=\"noopener\">vuwe</a> ★150 - 基于微信WeUI所开发的专用于Vue2的组件库 </li>\n<li><a href=\"https://github.com/MatteoGabriele/vue-progressive-image\" target=\"_blank\" rel=\"noopener\">vue-progressive-image</a> ★148 - Vue的渐进图像加载插件 </li>\n<li><a href=\"https://github.com/ElemeFE/vue-msgbox\" target=\"_blank\" rel=\"noopener\">vue-msgbox</a> ★148 - vuejs的消息框 </li>\n<li><a href=\"https://github.com/JALBAA/vue-lazyload-img\" target=\"_blank\" rel=\"noopener\">vue-lazyload-img</a> ★147 - 移动优化的vue图片懒加载插件 </li>\n<li><a href=\"https://github.com/hilongjw/vue-dragging\" target=\"_blank\" rel=\"noopener\">vue-dragging</a> ★146 - 使元素可以拖拽 </li>\n<li><a href=\"https://github.com/santiblanko/vue-instant\" target=\"_blank\" rel=\"noopener\">vue-instant</a> ★143 - 轻松创建自动提示的自定义搜索控件 </li>\n<li><a href=\"https://github.com/nicolasbeauvais/vue-social-sharing\" target=\"_blank\" rel=\"noopener\">vue-social-sharing</a> ★142 - 社交分享组件 </li>\n<li><a href=\"https://github.com/littlewin-wang/vue-images\" target=\"_blank\" rel=\"noopener\">vue-images</a> ★139 - 显示一组图片的lightbox组件 </li>\n<li><a href=\"https://github.com/NewDadaFE/vue-impression\" target=\"_blank\" rel=\"noopener\">vue-impression</a> ★134 - 移动Vuejs2 UI元素 </li>\n<li><a href=\"https://github.com/ovenslove/vue-mdEditor\" target=\"_blank\" rel=\"noopener\">vue-mdEditor</a> ★131 - 基于VUE的markdown文本编辑器 </li>\n<li><a href=\"https://github.com/cngu/vue-typer\" target=\"_blank\" rel=\"noopener\">vue-typer</a> ★130 - 模拟用户输入选择和删除文本的Vue组件 </li>\n<li><a href=\"https://github.com/weizhenye/vue-highcharts\" target=\"_blank\" rel=\"noopener\">vue-highcharts</a> ★130 - HighCharts组件 </li>\n<li><a href=\"https://github.com/Akryum/vue-tooltip\" target=\"_blank\" rel=\"noopener\">vue-tooltip</a> ★129 - 带绑定信息提示的提示工具 </li>\n<li><a href=\"https://github.com/MMF-FE/vue-svgicon\" target=\"_blank\" rel=\"noopener\">vue-svgicon</a> ★127 - 创建svg图标组件的工具 </li>\n<li><a href=\"https://github.com/wdfe/wdui\" target=\"_blank\" rel=\"noopener\">wdui</a> ★124 - 基于Vue2的UI组件库 </li>\n<li><a href=\"https://github.com/BosNaufal/vue2-loading-bar\" target=\"_blank\" rel=\"noopener\">vue2-loading-bar</a> ★118 - 最简单的仿Youtube加载条视图 </li>\n<li><a href=\"https://github.com/spatie/vue-tabs-component\" target=\"_blank\" rel=\"noopener\">vue-tabs-component</a> ★116 - 渲染tabs的Vue组件 </li>\n<li><a href=\"https://github.com/hzzly/MagicMusic\" target=\"_blank\" rel=\"noopener\">MagicMusic</a> ★113 - 不一样的音乐 </li>\n<li><a href=\"https://github.com/QingWei-Li/vue-region-picker\" target=\"_blank\" rel=\"noopener\">vue-region-picker</a> ★111 - 选择中国的省份市和地区 </li>\n<li><a href=\"https://github.com/galenyuan/vue-datatable\" target=\"_blank\" rel=\"noopener\">vue-datatable</a> ★102 - 使用Vuejs创建的DataTableView </li>\n<li><a href=\"https://github.com/Coffcer/vue-loading\" target=\"_blank\" rel=\"noopener\">vue-loading</a> ★102 - 元素中加载block的Vue指令 </li>\n<li><a href=\"https://github.com/chenjiahan/vodal\" target=\"_blank\" rel=\"noopener\">vodal</a> ★99 - 动画的vue模态 </li>\n<li><a href=\"https://github.com/waynecz/vue-img-inputer\" target=\"_blank\" rel=\"noopener\">vue-img-inputer</a> ★97 - 基于Vue2的图片输入框 </li>\n<li><a href=\"https://github.com/hilongjw/vue-video\" target=\"_blank\" rel=\"noopener\">vue-video</a> ★96 - Vue.js的HTML5视频播放器 </li>\n<li><a href=\"https://github.com/surmon-china/vue-touch-ripple\" target=\"_blank\" rel=\"noopener\">vue-touch-ripple</a> ★95 - vuejs的触摸ripple组件 </li>\n<li><a href=\"https://github.com/GeoffZhu/vue-event-calendar\" target=\"_blank\" rel=\"noopener\">vue-event-calendar</a> ★91 - 简单小巧的事件日历组件 </li>\n<li><a href=\"https://github.com/luiguild/v-bar\" target=\"_blank\" rel=\"noopener\">v-bar</a> ★91 - 虚拟响应跨浏览器滚动条 </li>\n<li><a href=\"https://github.com/phoenixwong/vue2-timepicker\" target=\"_blank\" rel=\"noopener\">vue2-timepicker</a> ★84 - 下拉时间选择器 </li>\n<li><a href=\"https://github.com/lokyoung/vuejs-paginate\" target=\"_blank\" rel=\"noopener\">vuejs-paginate</a> ★80 - 分页VueJS组件 </li>\n<li><a href=\"https://github.com/ElemeFE/vue-toast-mobile\" target=\"_blank\" rel=\"noopener\">vue-toast-mobile</a> ★79 - VueJS的toast插件 </li>\n<li><a href=\"https://github.com/weifeiyue/vue-datepicker\" target=\"_blank\" rel=\"noopener\">vue-datepicker</a> ★78 - 漂亮的Vue日期选择器组件 </li>\n<li><a href=\"https://github.com/shhdgit/vue-easy-slider\" target=\"_blank\" rel=\"noopener\">vue-easy-slider</a> ★77 - Vue 2.x的滑块组件 </li>\n<li><a href=\"https://github.com/bkzl/vue-float-label\" target=\"_blank\" rel=\"noopener\">vue-float-label</a> ★76 - VueJS浮动标签模式 </li>\n<li><a href=\"https://github.com/BosNaufal/vue-scrollbar\" target=\"_blank\" rel=\"noopener\">vue-scrollbar</a> ★76 - 最简单的滚动区域组件 </li>\n<li><a href=\"https://github.com/youzan/vant\" target=\"_blank\" rel=\"noopener\">vant</a> ★74 - 有赞出品的Vue2.0移动UI </li>\n<li><a href=\"https://github.com/arvidkahl/vue-json-tree-view\" target=\"_blank\" rel=\"noopener\">vue-json-tree-view</a> ★74 - Vue的JSON树视图 </li>\n<li><a href=\"https://github.com/staskjs/vue-slick\" target=\"_blank\" rel=\"noopener\">vue-slick</a> ★73 - 实现流畅轮播框的vue组件 </li>\n<li><a href=\"https://github.com/znck/vue-keynote\" target=\"_blank\" rel=\"noopener\">vue-keynote</a> ★73 - 实现声明性代码幻灯片 </li>\n<li><a href=\"https://github.com/phanan/vue-google-signin-button\" target=\"_blank\" rel=\"noopener\">vue-google-signin-button</a> ★73 - 导入谷歌登录按钮 </li>\n<li><a href=\"https://github.com/SinanMtl/vue-rate\" target=\"_blank\" rel=\"noopener\">vue-rate</a> ★68 - Vue评分组件 </li>\n<li><a href=\"https://github.com/moip/awesome-mask\" target=\"_blank\" rel=\"noopener\">awesome-mask</a> ★67 - 拥有独一无二mask的表单 </li>\n<li><a href=\"https://github.com/wyzant-dev/vue-radial-progress\" target=\"_blank\" rel=\"noopener\">vue-radial-progress</a> ★65 - Vue.js放射性进度条组件 </li>\n<li><a href=\"https://github.com/CroudSupport/vue-quill\" target=\"_blank\" rel=\"noopener\">vue-quill</a> ★65 - vue组件构建quill编辑器 </li>\n<li><a href=\"https://github.com/Bubblings/vue-date-picker\" target=\"_blank\" rel=\"noopener\">vue-date-picker</a> ★63 - VueJS日期选择器组件 </li>\n<li><a href=\"https://github.com/Kocisov/coffeebreak\" target=\"_blank\" rel=\"noopener\">coffeebreak</a> ★62 - 实时编辑CSS组件工具 </li>\n<li><a href=\"https://github.com/xaksis/vue-good-wizard\" target=\"_blank\" rel=\"noopener\">vue-good-wizard</a> ★61 - VueJS 2.x wizard plugin </li>\n<li><a href=\"https://github.com/jkchao/vue-loading\" target=\"_blank\" rel=\"noopener\">vue-loading</a> ★60 - 使用SVG加载 </li>\n<li><a href=\"https://github.com/vue-bulma/datepicker\" target=\"_blank\" rel=\"noopener\">datepicker</a> ★59 - 基于flatpickr的时间选择组件 </li>\n<li><a href=\"https://github.com/lithiumjake/vue-placeholders\" target=\"_blank\" rel=\"noopener\">vue-placeholders</a> ★58 - 处理占位符图片和乱码 </li>\n<li><a href=\"https://github.com/tianyong90/we-vue\" target=\"_blank\" rel=\"noopener\">we-vue</a> ★55 - Vue2及weui1开发的组件 </li>\n<li><a href=\"https://github.com/CroudSupport/vue-fullcalendar\" target=\"_blank\" rel=\"noopener\">vue-fullcalendar</a> ★55 - vue FullCalendar封装 </li>\n<li><a href=\"https://github.com/ankane/vue-chartkick\" target=\"_blank\" rel=\"noopener\">vue-chartkick</a> ★53 - VueJS一行代码实现优美图表 </li>\n<li><a href=\"https://github.com/chengxulvtu/cxlt-vue2-toastr\" target=\"_blank\" rel=\"noopener\">cxlt-vue2-toastr</a> ★52 - 弹出提示的Vue2组件 </li>\n<li><a href=\"https://github.com/formly-js/vue-formly\" target=\"_blank\" rel=\"noopener\">vue-formly</a> ★51 - VueJS的JS表单 </li>\n<li><a href=\"https://github.com/BosNaufal/vue2-autocomplete\" target=\"_blank\" rel=\"noopener\">vue2-autocomplete</a> ★51 - vue2的自动完成组件 </li>\n<li><a href=\"https://github.com/bbonnin/vue-morris\" target=\"_blank\" rel=\"noopener\">vue-morris</a> ★50 - Vuejs组件封装Morrisjs库 </li>\n<li><a href=\"https://github.com/ecomfe/veui\" target=\"_blank\" rel=\"noopener\">veui</a> ★50 - VueJS百度企业UI </li>\n<li><a href=\"https://github.com/yunfeihuang/vue-components\" target=\"_blank\" rel=\"noopener\">vue-components</a> ★49 - 移动端UI组件库 </li>\n<li><a href=\"https://github.com/craigh411/vue-star-rating\" target=\"_blank\" rel=\"noopener\">vue-star-rating</a> ★49 - 简单高度自定义的星星评级组件 </li>\n<li><a href=\"https://github.com/Ginhing/vue-tagsinput\" target=\"_blank\" rel=\"noopener\">vue-tagsinput</a> ★48 - 基于VueJS的标签组件 </li>\n<li><a href=\"https://github.com/alexqdjay/vue-tabs\" target=\"_blank\" rel=\"noopener\">vue-tabs</a> ★47 - 多tab页轻型框架 </li>\n<li><a href=\"https://github.com/myronliu347/vue-popup-mixin\" target=\"_blank\" rel=\"noopener\">vue-popup-mixin</a> ★47 - 用于管理弹出框的遮盖层 </li>\n<li><a href=\"https://github.com/PygmySlowLoris/vue-ripple-directive\" target=\"_blank\" rel=\"noopener\">vue-ripple-directive</a> ★45 - 使用Vue指令的Material波纹效果 </li>\n<li><a href=\"https://github.com/xyxiao001/vue-cropper\" target=\"_blank\" rel=\"noopener\">vue-cropper</a> ★42 - 一个简单的vue 的图片裁剪插件 </li>\n<li><a href=\"https://github.com/lisiyizu/vue-ztree\" target=\"_blank\" rel=\"noopener\">vue-ztree</a> ★41 - 用 vue 写的树层级组件 </li>\n<li><a href=\"https://github.com/icebob/vue-touch-keyboard\" target=\"_blank\" rel=\"noopener\">vue-touch-keyboard</a> ★41 - VueJS虚拟键盘组件 </li>\n<li><a href=\"https://github.com/fangyongbao/cubeex\" target=\"_blank\" rel=\"noopener\">cubeex</a> ★40 - 包含一套完整的移动UI </li>\n<li><a href=\"https://github.com/miaolz123/vue-chart\" target=\"_blank\" rel=\"noopener\">vue-chart</a> ★40 - 强大的高速的vue图表解析 </li>\n<li><a href=\"https://github.com/yunyi1895/vue-music-master\" target=\"_blank\" rel=\"noopener\">vue-music-master</a> ★40 - vue手机端网页音乐播放器 </li>\n<li><a href=\"https://github.com/jbaysolutions/vue-bootstrap-table\" target=\"_blank\" rel=\"noopener\">vue-bootstrap-table</a> ★39 - 可排序可检索的表格 </li>\n<li><a href=\"https://github.com/jkchao/vue-emoji\" target=\"_blank\" rel=\"noopener\">vue-emoji</a> ★39 - 好用的emoji插件 </li>\n<li><a href=\"https://github.com/vue-bulma/handsontable\" target=\"_blank\" rel=\"noopener\">handsontable</a> ★39 - 网页表格组件 </li>\n<li><a href=\"https://github.com/matfish2/vue-form-2\" target=\"_blank\" rel=\"noopener\">vue-form-2</a> ★37 - 全面的HTML表单管理的解决方案 </li>\n<li><a href=\"https://github.com/blue0728/vue-area\" target=\"_blank\" rel=\"noopener\">vue-area</a> ★37 - 省市区三级联动插件 </li>\n<li><a href=\"https://github.com/vue-comps/vue-side-nav\" target=\"_blank\" rel=\"noopener\">vue-side-nav</a> ★37 - 响应式的侧边导航 </li>\n<li><a href=\"https://github.com/ShanaMaid/vue-image-scroll\" target=\"_blank\" rel=\"noopener\">vue-image-scroll</a> ★36 - 仿网易云音乐的vue图片滚动插件 </li>\n<li><a href=\"https://github.com/bajian/vue-pull-to-refresh\" target=\"_blank\" rel=\"noopener\">vue-pull-to-refresh</a> ★35 - Vue2的上拉下拉 </li>\n<li><a href=\"https://github.com/mint-ui/mint-indicator\" target=\"_blank\" rel=\"noopener\">mint-indicator</a> ★35 - VueJS移动加载指示器插件 </li>\n<li><a href=\"https://github.com/legeneek/vue-image-clip\" target=\"_blank\" rel=\"noopener\">vue-image-clip</a> ★34 - 基于vue的图像剪辑组件 </li>\n<li><a href=\"https://github.com/loujiayu/vue-material-design\" target=\"_blank\" rel=\"noopener\">vue-material-design</a> ★34 - Vue MD风格组件 </li>\n<li><a href=\"https://github.com/saivarunk/vue-simple-upload\" target=\"_blank\" rel=\"noopener\">vue-simple-upload</a> ★31 - 简单的VueJS上传组件 </li>\n<li><a href=\"https://github.com/vue-bulma/chartjs\" target=\"_blank\" rel=\"noopener\">chartjs</a> ★29 - Vue Bulma的chartjs组件 </li>\n<li><a href=\"https://github.com/darrynten/vue-lazy-background-images\" target=\"_blank\" rel=\"noopener\">vue-lazy-background-images</a> ★29 - 懒加载背景组件的Vue组件 </li>\n<li><a href=\"https://github.com/BosNaufal/vue-ripple\" target=\"_blank\" rel=\"noopener\">vue-ripple</a> ★29 - 制作谷歌MD风格涟漪效果的Vue组件 </li>\n<li><a href=\"https://github.com/suguangwen/vue-scroll\" target=\"_blank\" rel=\"noopener\">vue-scroll</a> ★27 - vue滚动 </li>\n<li><a href=\"https://github.com/gilbitron/laravel-vue-pagination\" target=\"_blank\" rel=\"noopener\">laravel-vue-pagination</a> ★26 - VueJS分页组件 </li>\n<li><a href=\"https://github.com/dai-siki/vue-datepicker-simple\" target=\"_blank\" rel=\"noopener\">vue-datepicker-simple</a> ★26 - 基于vue的日期选择器 </li>\n<li><a href=\"https://github.com/shiye515/vue-m-carousel\" target=\"_blank\" rel=\"noopener\">vue-m-carousel</a> ★26 - vue 移动端轮播组件 </li>\n<li><a href=\"https://github.com/vue-comps/vue-parallax\" target=\"_blank\" rel=\"noopener\">vue-parallax</a> ★23 - 整洁的视觉效果 </li>\n<li><a href=\"https://github.com/JackGit/vue-img-loader\" target=\"_blank\" rel=\"noopener\">vue-img-loader</a> ★22 - 图片加载UI组件 </li>\n<li><a href=\"https://github.com/weibangtuo/vue-tree\" target=\"_blank\" rel=\"noopener\">vue-tree</a> ★22 - vue树视图组件 </li>\n<li><a href=\"https://github.com/aweiu/vue-verify-pop\" target=\"_blank\" rel=\"noopener\">vue-verify-pop</a> ★22 - 带气泡提示的vue校验插件 </li>\n<li><a href=\"https://github.com/Teddy-Zhu/vue-waves\" target=\"_blank\" rel=\"noopener\">vue-waves</a> ★22 - waves的VueJS版本 </li>\n<li><a href=\"https://github.com/Teddy-Zhu/vue-smoothscroll\" target=\"_blank\" rel=\"noopener\">vue-smoothscroll</a> ★20 - smoothscroll的VueJS版本 </li>\n<li><a href=\"https://github.com/xinxingyu/vue-city\" target=\"_blank\" rel=\"noopener\">vue-city</a> ★19 - 城市选择器 </li>\n<li><a href=\"https://github.com/sinchang/vue-laypage\" target=\"_blank\" rel=\"noopener\">vue-laypage</a> ★17 - 简单的VueJS分页组件 </li>\n<li><a href=\"https://github.com/eduardostuart/vue-typewriter\" target=\"_blank\" rel=\"noopener\">vue-typewriter</a> ★15 - vue组件类型 </li>\n<li><a href=\"https://github.com/Treri/vue-ios-alertview\" target=\"_blank\" rel=\"noopener\">vue-ios-alertview</a> ★14 - iOS7+ 风格的alertview服务 </li>\n<li><a href=\"https://github.com/doodlewind/vue-cmap\" target=\"_blank\" rel=\"noopener\">vue-cmap</a> ★14 - Vue China map可视化组件 </li>\n<li><a href=\"https://github.com/yeseason/paco-ui-vue\" target=\"_blank\" rel=\"noopener\">paco-ui-vue</a> ★12 - PACOUI的vue组件 </li>\n<li><a href=\"https://github.com/savokiss/vue-cascading-address\" target=\"_blank\" rel=\"noopener\">vue-cascading-address</a> ★9 - vue地区选择器 </li>\n<li><a href=\"https://github.com/ibufu/dd-vue-component\" target=\"_blank\" rel=\"noopener\">dd-vue-component</a> ★7 - 订单来了的公共组件库 </li>\n<li><a href=\"https://github.com/steven5538/vue-button\" target=\"_blank\" rel=\"noopener\">vue-button</a> ★5 - Vue按钮组件 </li>\n</ul>\n<h3 id=\"vue实用库\"><a href=\"#vue实用库\" class=\"headerlink\" title=\"vue实用库\"></a>vue实用库</h3><ul>\n<li><a href=\"https://github.com/vuejs/vuex\" target=\"_blank\" rel=\"noopener\">vuex</a> ★8043 - 专为 Vue.js 应用程序开发的状态管理模式 </li>\n<li><a href=\"https://github.com/vuejs/vue-loader\" target=\"_blank\" rel=\"noopener\">vue-loader</a> ★1847 - Vue.js 针对Webpack的组件装载插件 </li>\n<li><a href=\"https://github.com/vuejs/vue-validator\" target=\"_blank\" rel=\"noopener\">vue-validator</a> ★1807 - vue的验证器插件 </li>\n<li><a href=\"https://github.com/hilongjw/vue-lazyload\" target=\"_blank\" rel=\"noopener\">vue-lazyload</a> ★1224 - 用于懒加载的Vue模块 </li>\n<li><a href=\"https://github.com/monterail/vuelidate\" target=\"_blank\" rel=\"noopener\">vuelidate</a> ★1075 - 简单轻量级的基于模块的Vue.js验证 </li>\n<li><a href=\"https://github.com/kazupon/vue-i18n\" target=\"_blank\" rel=\"noopener\">vue-i18n</a> ★1053 - VueJS的多语言切换插件 </li>\n<li><a href=\"https://github.com/zerqu/qingcheng\" target=\"_blank\" rel=\"noopener\">qingcheng</a> ★736 - qingcheng主题 </li>\n<li><a href=\"https://github.com/MetinSeylan/Vue-Socket.io\" target=\"_blank\" rel=\"noopener\">Vue-Socketio</a> ★533 - VueJS的socketio实现 </li>\n<li><a href=\"https://github.com/Justineo/vue-awesome\" target=\"_blank\" rel=\"noopener\">vue-awesome</a> ★532 - VueJS字体Awesome组件 </li>\n<li><a href=\"https://github.com/ElemeFE/vue-desktop\" target=\"_blank\" rel=\"noopener\">vue-desktop</a> ★496 - 创建管理面板网站的UI库 </li>\n<li><a href=\"https://github.com/imcvampire/vue-axios\" target=\"_blank\" rel=\"noopener\">vue-axios</a> ★491 - 将axios整合到VueJS的封装 </li>\n<li><a href=\"https://github.com/declandewet/vue-meta\" target=\"_blank\" rel=\"noopener\">vue-meta</a> ★467 - 管理app的meta信息 </li>\n<li><a href=\"https://github.com/ktquez/vue-head\" target=\"_blank\" rel=\"noopener\">vue-head</a> ★396 - head标签的meta信息操作 </li>\n<li><a href=\"https://github.com/Akryum/meteor-vue-component\" target=\"_blank\" rel=\"noopener\">meteor-vue-component</a> ★382 - vue和meteor整合 </li>\n<li><a href=\"https://github.com/eddyerburgh/avoriaz\" target=\"_blank\" rel=\"noopener\">avoriaz</a> ★338 - VueJS测试实用工具库 </li>\n<li><a href=\"https://github.com/LinusBorg/portal-vue\" target=\"_blank\" rel=\"noopener\">portal-vue</a> ★239 - 在组件外部渲染DOM </li>\n<li><a href=\"https://github.com/jrainlau/vue-flatpickr\" target=\"_blank\" rel=\"noopener\">vue-flatpickr</a> ★228 - 封装Flatpickr的Vue组件 </li>\n<li><a href=\"https://github.com/egoist/vue-timeago\" target=\"_blank\" rel=\"noopener\">vue-timeago</a> ★195 - VueJS的时间前组件 </li>\n<li><a href=\"https://github.com/lyonlai/blessed-vue\" target=\"_blank\" rel=\"noopener\">blessed-vue</a> ★181 - 编写命令行UI的VueJS运行时 </li>\n<li><a href=\"https://github.com/wrseward/vue-unit\" target=\"_blank\" rel=\"noopener\">vue-unit</a> ★179 - 创建单元测试组件 </li>\n<li><a href=\"https://github.com/dgrubelic/vue-authenticate\" target=\"_blank\" rel=\"noopener\">vue-authenticate</a> ★177 - 简单的VueJS身份认证库 </li>\n<li><a href=\"https://github.com/rigor789/vue-scrollTo\" target=\"_blank\" rel=\"noopener\">vue-scrollTo</a> ★174 - 滚动到元素的VueJS指令 </li>\n<li><a href=\"https://github.com/cenkai88/vue-svg-icon\" target=\"_blank\" rel=\"noopener\">vue-svg-icon</a> ★157 - vue2的可变彩色svg图标方案 </li>\n<li><a href=\"https://github.com/simplesmiler/vue-focus\" target=\"_blank\" rel=\"noopener\">vue-focus</a> ★148 - 可重用VueJS组件的焦点指令 </li>\n<li><a href=\"https://github.com/zhouzhuojie/meteor-vue\" target=\"_blank\" rel=\"noopener\">meteor-vue</a> ★134 - VueJS和Meteor的桥接 </li>\n<li><a href=\"https://github.com/lynzz/element-admin\" target=\"_blank\" rel=\"noopener\">element-admin</a> ★130 - 支持 vuecli 的 Element UI 的后台模板 </li>\n<li><a href=\"https://github.com/QingWei-Li/vuep\" target=\"_blank\" rel=\"noopener\">vuep</a> ★118 - 用实时编辑和预览来渲染Vue组件 </li>\n<li><a href=\"https://github.com/medevicex/vuet\" target=\"_blank\" rel=\"noopener\">vuet</a> ★116 - 一个跨页面、跨组件的状态管理插件 </li>\n<li><a href=\"https://github.com/Coffcer/vue-bootstrap-modal\" target=\"_blank\" rel=\"noopener\">vue-bootstrap-modal</a> ★112 - vue的Bootstrap样式组件 </li>\n<li><a href=\"https://github.com/haydenbbickerton/vue-animate\" target=\"_blank\" rel=\"noopener\">vue-animate</a> ★106 - 跨浏览器CSS3动画库 </li>\n<li><a href=\"https://github.com/kaorun343/vue-property-decorator\" target=\"_blank\" rel=\"noopener\">vue-property-decorator</a> ★104 - VueJS和属性Decorator </li>\n<li><a href=\"https://github.com/SevenOutman/vue-aplayer\" target=\"_blank\" rel=\"noopener\">vue-aplayer</a> ★100 - 便于配置的音乐播放器vue2组件 </li>\n<li><a href=\"https://github.com/apertureless/vue-password-strength-meter\" target=\"_blank\" rel=\"noopener\">vue-password-strength-meter</a> ★97 - 交互式密码强度计 </li>\n<li><a href=\"https://github.com/icebob/vue-websocket\" target=\"_blank\" rel=\"noopener\">vue-websocket</a> ★91 - VueJS的Websocket插件 </li>\n<li><a href=\"https://github.com/pinguinjkeke/vue-local-storage\" target=\"_blank\" rel=\"noopener\">vue-local-storage</a> ★88 - 具有类型支持的Vuejs本地储存插件 </li>\n<li><a href=\"https://github.com/xtongs/vue-recyclist\" target=\"_blank\" rel=\"noopener\">vue-recyclist</a> ★88 - vuejs无限滚动列表 </li>\n<li><a href=\"https://github.com/yeyuqiudeng/vue-lazy-render\" target=\"_blank\" rel=\"noopener\">vue-lazy-render</a> ★87 - 用于Vue组件的延迟渲染 </li>\n<li><a href=\"https://github.com/superman66/vue-qart\" target=\"_blank\" rel=\"noopener\">vue-qart</a> ★86 - 用于qartjs的Vue2指令 </li>\n<li><a href=\"https://github.com/lmk123/vue-framework7\" target=\"_blank\" rel=\"noopener\">vue-framework7</a> ★85 - 结合VueJS使用的Framework7组件 </li>\n<li><a href=\"https://github.com/kartsims/vue-cordova\" target=\"_blank\" rel=\"noopener\">vue-cordova</a> ★85 - Cordova的VueJS插件 </li>\n<li><a href=\"https://github.com/FranckFreiburger/http-vue-loader\" target=\"_blank\" rel=\"noopener\">http-vue-loader</a> ★84 - 从html及js环境加载vue文件 </li>\n<li><a href=\"https://github.com/apertureless/vue-parallax\" target=\"_blank\" rel=\"noopener\">vue-parallax</a> ★84 - 快速60fps视差滚动效果组件 </li>\n<li><a href=\"https://github.com/xiaokaike/vue-clipboard\" target=\"_blank\" rel=\"noopener\">vue-clipboard</a> ★84 - VueJS的剪贴板 </li>\n<li><a href=\"https://github.com/JiriChara/vue-kindergarten\" target=\"_blank\" rel=\"noopener\">vue-kindergarten</a> ★83 - 将kindergarten集成到VueJS应用 </li>\n<li><a href=\"https://github.com/cklmercer/vue-events\" target=\"_blank\" rel=\"noopener\">vue-events</a> ★83 - 简化事件的VueJS插件 </li>\n<li><a href=\"https://github.com/se-panfilov/vue-notifications\" target=\"_blank\" rel=\"noopener\">vue-notifications</a> ★80 - 非阻塞通知库 </li>\n<li><a href=\"https://github.com/Sopamo/vue-online\" target=\"_blank\" rel=\"noopener\">vue-online</a> ★77 - reactive的在线和离线组件 </li>\n<li><a href=\"https://github.com/iFgR/vue-shortkey\" target=\"_blank\" rel=\"noopener\">vue-shortkey</a> ★74 - 应用于Vue.js的Vue-ShortKey 插件 </li>\n<li><a href=\"https://github.com/yangmingshan/vue-bus\" target=\"_blank\" rel=\"noopener\">vue-bus</a> ★71 - VueJS的事件总线 </li>\n<li><a href=\"https://github.com/dkfbasel/vuex-i18n\" target=\"_blank\" rel=\"noopener\">vuex-i18n</a> ★71 - 定位插件 </li>\n<li><a href=\"https://github.com/wxsms/uiv\" target=\"_blank\" rel=\"noopener\">uiv</a> ★70 - Vue实现的Bootstrap组件 </li>\n<li><a href=\"https://github.com/weinot/vue-router-transition\" target=\"_blank\" rel=\"noopener\">vue-router-transition</a> ★69 - 页面过渡插件 </li>\n<li><a href=\"https://github.com/mlyknown/vue-gesture\" target=\"_blank\" rel=\"noopener\">vue-gesture</a> ★69 - VueJS的手势事件插件 </li>\n<li><a href=\"https://github.com/thetutlage/vue-clip\" target=\"_blank\" rel=\"noopener\">vue-clip</a> ★67 - 简约的破解文件上传器 </li>\n<li><a href=\"https://github.com/SimulatedGREG/vue-electron\" target=\"_blank\" rel=\"noopener\">vue-electron</a> ★66 - 将选择的API封装到Vue对象中的插件 </li>\n<li><a href=\"https://github.com/vue-bulma/cleave\" target=\"_blank\" rel=\"noopener\">cleave</a> ★64 - 基于cleave.js的Cleave组件 </li>\n<li><a href=\"https://github.com/gocanto/vuemit\" target=\"_blank\" rel=\"noopener\">vuemit</a> ★63 - 处理VueJS事件 </li>\n<li><a href=\"https://github.com/israelss/vue-worker\" target=\"_blank\" rel=\"noopener\">vue-worker</a> ★56 - 使用webworkers的Vue插件 </li>\n<li><a href=\"https://github.com/leonardovilarinho/vue-acl\" target=\"_blank\" rel=\"noopener\">vue-acl</a> ★54 - VueJS访问控制列表插件 </li>\n<li><a href=\"https://github.com/HerringtonDarkholme/vue-ts-loader\" target=\"_blank\" rel=\"noopener\">vue-ts-loader</a> ★54 - 在Vue装载机检查脚本 </li>\n<li><a href=\"https://github.com/David-Desmaisons/Vue.resize\" target=\"_blank\" rel=\"noopener\">Vue.resize</a> ★51 - 检测HTML调整大小事件的vue指令 </li>\n<li><a href=\"https://github.com/Vuedeux/vuedeux\" target=\"_blank\" rel=\"noopener\">vuedeux</a> ★50 - 轻量级开源实用用层 </li>\n<li><a href=\"https://github.com/RobinCK/vue-ls\" target=\"_blank\" rel=\"noopener\">vue-ls</a> ★49 - 适配Vuecontext中LocalStorage的Vue插件 </li>\n<li><a href=\"https://github.com/gocanto/lazy-vue\" target=\"_blank\" rel=\"noopener\">lazy-vue</a> ★48 - 懒加载图片 </li>\n<li><a href=\"https://github.com/matfish2/vue-pagination-2\" target=\"_blank\" rel=\"noopener\">vue-pagination-2</a> ★46 - 简单通用的分页组件 </li>\n<li><a href=\"https://github.com/AStaroverov/v-media-query\" target=\"_blank\" rel=\"noopener\">v-media-query</a> ★44 - vue中添加用于配合媒体查询的方法 </li>\n<li><a href=\"https://github.com/Akryum/vue-observe-visibility\" target=\"_blank\" rel=\"noopener\">vue-observe-visibility</a> ★42 - 当元素在页面上可见或隐藏时检测 </li>\n<li><a href=\"https://github.com/Coffcer/vue-lazy-component\" target=\"_blank\" rel=\"noopener\">vue-lazy-component</a> ★38 - 懒加载组件或者元素的Vue指令 </li>\n<li><a href=\"https://github.com/ropbla9/vue-reactive-storage\" target=\"_blank\" rel=\"noopener\">vue-reactive-storage</a> ★37 - vue插件的Reactive层 </li>\n<li><a href=\"https://github.com/miaolz123/vue-helmet\" target=\"_blank\" rel=\"noopener\">vue-helmet</a> ★37 - HTML标题管理器 </li>\n<li><a href=\"https://github.com/richardanaya/voir\" target=\"_blank\" rel=\"noopener\">voir</a> ★35 - 保持mutation与视图组件的分离 </li>\n<li><a href=\"https://github.com/xanf/vuex-shared-mutations\" target=\"_blank\" rel=\"noopener\">vuex-shared-mutations</a> ★34 - 分享某种Vuex mutations </li>\n<li><a href=\"https://github.com/surmon-china/vue-drag-zone\" target=\"_blank\" rel=\"noopener\">vue-drag-zone</a> ★28 - 适用于Vue2的dom拖动组件 </li>\n<li><a href=\"https://github.com/mysticatea/vue-eslint-parser\" target=\"_blank\" rel=\"noopener\">vue-eslint-parser</a> ★27 - ESLint自定义解析 </li>\n<li><a href=\"https://github.com/vue-bulma/modal\" target=\"_blank\" rel=\"noopener\">modal</a> ★26 - Vue Bulma的modal组件 </li>\n<li><a href=\"https://github.com/wakeupmypig/vue-plan\" target=\"_blank\" rel=\"noopener\">vue-plan</a> ★25 - Vuex-状态管理 </li>\n<li><a href=\"https://github.com/BosNaufal/vue-file-base64\" target=\"_blank\" rel=\"noopener\">vue-file-base64</a> ★22 - 将文件转换为Base64的vue组件 </li>\n<li><a href=\"https://github.com/lzxb/vue-methods-promise\" target=\"_blank\" rel=\"noopener\">vue-methods-promise</a> ★21 - 使vue方法支持promise </li>\n<li><a href=\"https://github.com/David-Desmaisons/Vue.ImagesLoaded\" target=\"_blank\" rel=\"noopener\">Vue.ImagesLoaded</a> ★20 - 检测图片加载的VueJS指令 </li>\n<li><a href=\"https://github.com/irwansyahwii/Famous-Vue\" target=\"_blank\" rel=\"noopener\">Famous-Vue</a> ★16 - Famous库的vue组件 </li>\n<li><a href=\"https://github.com/LeoHuiyi/leo-vue-validator\" target=\"_blank\" rel=\"noopener\">leo-vue-validator</a> ★15 - 异步的表单验证组件 </li>\n<li><a href=\"https://github.com/Haixing-Hu/vue-titlecase\" target=\"_blank\" rel=\"noopener\">vue-titlecase</a> ★13 - 用于字符串titlecased的VueJS过滤器 </li>\n<li><a href=\"https://github.com/MetinSeylan/Vue-Easy-Validator\" target=\"_blank\" rel=\"noopener\">Vue-Easy-Validator</a> ★12 - 简单的表单验证 </li>\n<li><a href=\"https://github.com/vue-comps/vue-zoombox\" target=\"_blank\" rel=\"noopener\">vue-zoombox</a> ★12 - 一个高级zoombox </li>\n<li><a href=\"https://github.com/imcvampire/vue-truncate-filter\" target=\"_blank\" rel=\"noopener\">vue-truncate-filter</a> ★10 - 截断字符串的VueJS过滤器 </li>\n<li><a href=\"https://github.com/ElderJames/vue-router-storage\" target=\"_blank\" rel=\"noopener\">vue-router-storage</a> ★9 - vue历史路由持久化的解决方案 </li>\n<li><a href=\"https://github.com/syropian/vue-input-autosize\" target=\"_blank\" rel=\"noopener\">vue-input-autosize</a> ★9 - 基于内容自动调整文本输入的大小 </li>\n<li><a href=\"https://github.com/phphe/vue-data-validator\" target=\"_blank\" rel=\"noopener\">vue-data-validator</a> ★4 - Vuejs2的数据验证插件 </li>\n<li><a href=\"https://github.com/yodfz/vue-lazyloadImg\" target=\"_blank\" rel=\"noopener\">vue-lazyloadImg</a> ★4 - 图片懒加载插件 </li>\n</ul>\n<h3 id=\"vue应用实例\"><a href=\"#vue应用实例\" class=\"headerlink\" title=\"vue应用实例\"></a>vue应用实例</h3><ul>\n<li><a href=\"https://github.com/phanan/koel\" target=\"_blank\" rel=\"noopener\">koel</a> ★7773 - 基于网络的个人音频流媒体服务 </li>\n<li><a href=\"https://github.com/pagekit/pagekit\" target=\"_blank\" rel=\"noopener\">pagekit</a> ★4225 - 轻量级的CMS建站系统 </li>\n<li><a href=\"https://github.com/lin-xin/vue-manage-system\" target=\"_blank\" rel=\"noopener\">vue-manage-system</a> ★2057 - 后台管理系统解决方案 </li>\n<li><a href=\"https://github.com/Vuedo/vuedo\" target=\"_blank\" rel=\"noopener\">vuedo</a> ★1265 - 博客平台 </li>\n<li><a href=\"https://github.com/jackhutu/jackblog-vue\" target=\"_blank\" rel=\"noopener\">jackblog-vue</a> ★1120 - 个人博客系统 </li>\n<li><a href=\"https://github.com/jcc/blog\" target=\"_blank\" rel=\"noopener\">PJ Blog</a> ★1018 - 开源博客 </li>\n<li><a href=\"https://github.com/lzxb/vue-cnode\" target=\"_blank\" rel=\"noopener\">vue-cnode</a> ★787 - 重写vue版cnode社区 </li>\n<li><a href=\"https://github.com/ericjjj/vms\" target=\"_blank\" rel=\"noopener\">vms</a> ★629 - vuejs2管理系统 </li>\n<li><a href=\"https://github.com/ycwalker/CMS-of-Blog\" target=\"_blank\" rel=\"noopener\">CMS-of-Blog</a> ★541 - 博客内容管理器 </li>\n<li><a href=\"https://github.com/Caiyeon/goldfish\" target=\"_blank\" rel=\"noopener\">goldfish</a> ★518 - 用于HashiCorp Vault的Admin UI </li>\n<li><a href=\"https://github.com/mrgodhani/rss-reader\" target=\"_blank\" rel=\"noopener\">rss-reader</a> ★368 - 简单的rss阅读器 </li>\n<li><a href=\"https://github.com/viko16/vue-ghpages-blog\" target=\"_blank\" rel=\"noopener\">vue-ghpages-blog</a> ★254 - 依赖GitHub Pages无需本地生成的静态博客 </li>\n<li><a href=\"https://github.com/surmon-china/vue-blog\" target=\"_blank\" rel=\"noopener\">vue-blog</a> ★143 - 使用Vue2.0 和Vuex的vue-blog </li>\n<li><a href=\"https://github.com/wh469012917/swoole-vue-webim\" target=\"_blank\" rel=\"noopener\">swoole-vue-webim</a> ★137 - Web版的聊天应用 </li>\n<li><a href=\"https://github.com/zhangxin840/tomato5\" target=\"_blank\" rel=\"noopener\">tomato5</a> ★134 - 实时的协作工具 </li>\n<li><a href=\"https://github.com/Angarsk8/Loopa-News\" target=\"_blank\" rel=\"noopener\">Loopa-News</a> ★133 - 开源社会新闻应用 </li>\n<li><a href=\"https://github.com/reg21st/vue2-management-platform\" target=\"_blank\" rel=\"noopener\">vue2-management-platform</a> ★74 - vue2.0+ elementUI 后台管理平台 </li>\n<li><a href=\"https://github.com/thelinuxlich/vue-dashing-js\" target=\"_blank\" rel=\"noopener\">vue-dashing-js</a> ★70 - nuvo-dashing-js的fork </li>\n<li><a href=\"https://github.com/sapjax/fewords\" target=\"_blank\" rel=\"noopener\">fewords</a> ★63 - 功能极其简单的笔记本 </li>\n<li><a href=\"https://github.com/wxs77577/adminify\" target=\"_blank\" rel=\"noopener\">adminify</a> ★46 - 一个基于Vuetify material的Admin面板 </li>\n</ul>\n<h3 id=\"vueDemo示例\"><a href=\"#vueDemo示例\" class=\"headerlink\" title=\"vueDemo示例\"></a>vueDemo示例</h3><ul>\n<li><a href=\"https://github.com/bailicangdu/vue2-elm\" target=\"_blank\" rel=\"noopener\">vue2-elm</a> ★8036 - 重写饿了么webapp </li>\n<li><a href=\"https://github.com/shinygang/Vue-cnodejs\" target=\"_blank\" rel=\"noopener\">Vue-cnodejs</a> ★2491 - 基于vue重写Cnodejs.org的webapp </li>\n<li><a href=\"https://github.com/javaSwing/NeteaseCloudWebApp\" target=\"_blank\" rel=\"noopener\">NeteaseCloudWebApp</a> ★1549 - 高仿网易云音乐的webapp </li>\n<li><a href=\"https://github.com/bailicangdu/vue2-happyfri\" target=\"_blank\" rel=\"noopener\">vue2-happyfri</a> ★1535 - vue2及vuex的入门练习项目 </li>\n<li><a href=\"https://github.com/hilongjw/vue-zhihu-daily\" target=\"_blank\" rel=\"noopener\">vue-zhihu-daily</a> ★1010 - 知乎日报 with Vuejs </li>\n<li><a href=\"https://github.com/lzxb/vue2-demo\" target=\"_blank\" rel=\"noopener\">vue2-demo</a> ★994 - 从零构建vue2 + vue-router + vuex 开发环境 </li>\n<li><a href=\"https://github.com/useryangtao/vue-wechat\" target=\"_blank\" rel=\"noopener\">vue-wechat</a> ★939 - vue.js开发微信app界面 </li>\n<li><a href=\"https://github.com/liangxiaojuan/eleme\" target=\"_blank\" rel=\"noopener\">eleme</a> ★882 - 高仿饿了么app商家详情 </li>\n<li><a href=\"https://github.com/kenberkeley/vue-demo\" target=\"_blank\" rel=\"noopener\">vue-demo</a> ★755 - vue简易留言板 </li>\n<li><a href=\"https://github.com/lybenson/bilibili-vue\" target=\"_blank\" rel=\"noopener\">bilibili-vue</a> ★694 - 全栈式开发bilibili首页 </li>\n<li><a href=\"https://github.com/codecasts/spa-starter-kit\" target=\"_blank\" rel=\"noopener\">spa-starter-kit</a> ★646 - 单页应用启动套件 </li>\n<li><a href=\"https://github.com/SimonZhangITer/VueDemo_Sell_Eleme\" target=\"_blank\" rel=\"noopener\">VueDemo_Sell_Eleme</a> ★636 - Vue2高仿饿了么外卖平台 </li>\n<li><a href=\"https://github.com/Sioxas/vue-music\" target=\"_blank\" rel=\"noopener\">vue-music</a> ★621 - Vue 音乐搜索播放 </li>\n<li><a href=\"https://github.com/jeneser/douban\" target=\"_blank\" rel=\"noopener\">douban</a> ★606 - 基于vue全家桶的精致豆瓣DEMO </li>\n<li><a href=\"https://github.com/liangxiaojuan/vue-Meizi\" target=\"_blank\" rel=\"noopener\">vue-Meizi</a> ★604 - vue最新实战项目 </li>\n<li><a href=\"https://github.com/zhengguorong/maizuo\" target=\"_blank\" rel=\"noopener\">maizuo</a> ★603 - vue/vuex/redux仿卖座网 </li>\n<li><a href=\"https://github.com/zhaohaodang/vue-WeChat\" target=\"_blank\" rel=\"noopener\">vue-WeChat</a> ★558 - 基于Vue2高仿微信App的单页应用 </li>\n<li><a href=\"https://github.com/lavyun/vue-demo-kugou\" target=\"_blank\" rel=\"noopener\">vue-demo-kugou</a> ★500 - vuejs仿写酷狗音乐webapp </li>\n<li><a href=\"https://github.com/bailicangdu/vue2-manage\" target=\"_blank\" rel=\"noopener\">vue2-manage</a> ★457 - 基于 vue + element-ui 的后台管理系统 </li>\n<li><a href=\"https://github.com/yatessss/zhihudaily-vue\" target=\"_blank\" rel=\"noopener\">zhihudaily-vue</a> ★455 - 知乎日报web版 </li>\n<li><a href=\"https://github.com/ShanaMaid/vue-163-music\" target=\"_blank\" rel=\"noopener\">vue-163-music</a> ★448 - vue仿网易云音乐客户端版 </li>\n<li><a href=\"https://github.com/superman66/vue-axios-github\" target=\"_blank\" rel=\"noopener\">vue-axios-github</a> ★448 - 登录拦截登出功能 </li>\n<li><a href=\"https://github.com/jiakeqi/douban\" target=\"_blank\" rel=\"noopener\">douban</a> ★440 - 模仿豆瓣前端 </li>\n<li><a href=\"https://github.com/andylei18/vue-shopping\" target=\"_blank\" rel=\"noopener\">vue-shopping</a> ★404 - 蘑菇街移动端 </li>\n<li><a href=\"https://github.com/canfoo/vue2.0-taopiaopiao\" target=\"_blank\" rel=\"noopener\">vue2.0-taopiaopiao</a> ★402 - vue2.0与express构建淘票票页面 </li>\n<li><a href=\"https://github.com/hzzly/xyy-vue\" target=\"_blank\" rel=\"noopener\">xyy-vue</a> ★396 - 大学生交流平台 </li>\n<li><a href=\"https://github.com/TIGERB/easy-vue\" target=\"_blank\" rel=\"noopener\">easy-vue</a> ★370 - 使用Vue实现简易web </li>\n<li><a href=\"https://github.com/superman66/vue2.x-douban\" target=\"_blank\" rel=\"noopener\">vue2.x-douban</a> ★360 - Vue2实现简易豆瓣电影webApp </li>\n<li><a href=\"https://github.com/jiangqizheng/vue2-MiniQQ\" target=\"_blank\" rel=\"noopener\">vue2-MiniQQ</a> ★351 - 基于Vue2实现的仿手机QQ单页面应用 </li>\n<li><a href=\"https://github.com/wendaosanshou/mi-by-vue\" target=\"_blank\" rel=\"noopener\">mi-by-vue</a> ★291 - VueJS仿小米官网 </li>\n<li><a href=\"https://github.com/walleeeee/daily-zhihu\" target=\"_blank\" rel=\"noopener\">daily-zhihu</a> ★275 - 基于Vue2的知乎日报单页应用 </li>\n<li><a href=\"https://github.com/jiangjiu/vue-leancloud-blog\" target=\"_blank\" rel=\"noopener\">vue-leancloud-blog</a> ★268 - 一个前后端完全分离的单页应用 </li>\n<li><a href=\"https://github.com/Reusjs/VueMusic-PC\" target=\"_blank\" rel=\"noopener\">VueMusic-PC</a> ★260 - Vue.js高还原网易云音乐系列 </li>\n<li><a href=\"https://github.com/yjj5855/node-vue-server-webpack\" target=\"_blank\" rel=\"noopener\">node-vue-server-webpack</a> ★253 - Node.js+Vue.js+webpack快速开发框架 </li>\n<li><a href=\"https://github.com/beauty-enjoy/beauty\" target=\"_blank\" rel=\"noopener\">beauty</a> ★245 - 豆瓣美女clone </li>\n<li><a href=\"https://github.com/liujians/vue-adminLte-vue-router\" target=\"_blank\" rel=\"noopener\">vue-adminLte-vue-router</a> ★243 - vue和adminLte整合应用 </li>\n<li><a href=\"https://github.com/okoala/vue-fis3\" target=\"_blank\" rel=\"noopener\">vue-fis3</a> ★217 - 流行开源工具集成demo </li>\n<li><a href=\"https://github.com/lin-xin/notepad\" target=\"_blank\" rel=\"noopener\">notepad</a> ★216 - 本地存储的记事本 </li>\n<li><a href=\"https://github.com/ChuckCZC/vue-demo-maizuo\" target=\"_blank\" rel=\"noopener\">vue-demo-maizuo</a> ★210 - 使用Vue2全家桶仿制卖座电影 </li>\n<li><a href=\"https://github.com/Werb/Pixel-Web\" target=\"_blank\" rel=\"noopener\">Pixel-Web</a> ★198 - 一个 Vue 微博客户端 </li>\n<li><a href=\"https://github.com/MengZhaoFly/netease_yanxuan\" target=\"_blank\" rel=\"noopener\">netease_yanxuan</a> ★198 - vue版网易严选 </li>\n<li><a href=\"https://github.com/dmtrbrl/tmdb-app\" target=\"_blank\" rel=\"noopener\">tmdb-app</a> ★194 - TMDbVueJS应用 </li>\n<li><a href=\"https://github.com/xrr2016/vue-express-mongodb\" target=\"_blank\" rel=\"noopener\">vue-express-mongodb</a> ★189 - 简单的前后端分离案例 </li>\n<li><a href=\"https://github.com/iHaPBoy/vue-zhihudaily\" target=\"_blank\" rel=\"noopener\">vue-zhihudaily</a> ★187 - 知乎日报 Web 版本 </li>\n<li><a href=\"https://github.com/RalfZhang/Vdo\" target=\"_blank\" rel=\"noopener\">Vdo</a> ★179 - VueJS与MD重构豆瓣 </li>\n<li><a href=\"https://github.com/BUPT-HJM/vue-blog\" target=\"_blank\" rel=\"noopener\">vue-blog</a> ★171 - 单用户博客 </li>\n<li><a href=\"https://github.com/xiaobinwu/Wuji\" target=\"_blank\" rel=\"noopener\">Wuji</a> ★168 - 吾记网页版 </li>\n<li><a href=\"https://github.com/rokups/hello-vue-django\" target=\"_blank\" rel=\"noopener\">hello-vue-django</a> ★160 - 使用带有Django的vuejs的样板项目 </li>\n<li><a href=\"https://github.com/pomelo-chuan/Zhihu-Daily-Vue.js\" target=\"_blank\" rel=\"noopener\">Zhihu-Daily-Vue.js</a> ★157 - Vuejs单页网页应用 </li>\n<li><a href=\"https://github.com/renjie1996/tencent-sports\" target=\"_blank\" rel=\"noopener\">tencent-sports</a> ★154 - Vue全家桶仿腾讯体育 </li>\n<li><a href=\"https://github.com/zhixuanziben/gouyan-movie-vue\" target=\"_blank\" rel=\"noopener\">gouyan-movie-vue</a> ★151 - 基于vue的在线电影影讯网站 </li>\n<li><a href=\"https://github.com/CommanderXL/x-blog\" target=\"_blank\" rel=\"noopener\">x-blog</a> ★145 - 开源的个人blog项目 </li>\n<li><a href=\"https://github.com/lxyisme/vue-musicApp\" target=\"_blank\" rel=\"noopener\">vue-musicApp</a> ★132 - 使用vue全家桶制作的音乐播放器 </li>\n<li><a href=\"https://github.com/wszgxa/vue-cnode\" target=\"_blank\" rel=\"noopener\">vue-cnode</a> ★131 - vue单页应用demo </li>\n<li><a href=\"https://github.com/193Eric/webpack-vue-vueRouter\" target=\"_blank\" rel=\"noopener\">webpack-vue-vueRouter</a> ★130 - webpack及vue开发的简单项目实例 </li>\n<li><a href=\"https://github.com/Molunerfinn/vue-koa-demo\" target=\"_blank\" rel=\"noopener\">vue-koa-demo</a> ★128 - 使用Vue2和Koa1的全栈demo </li>\n<li><a href=\"https://github.com/elva2596/vueBlog\" target=\"_blank\" rel=\"noopener\">vueBlog</a> ★127 - 前后端分离博客 </li>\n<li><a href=\"https://github.com/secreter/websocket_chat\" target=\"_blank\" rel=\"noopener\">websocket_chat</a> ★127 - 基于vue和websocket的多人在线聊天室 </li>\n<li><a href=\"https://github.com/peng1992/houtai\" target=\"_blank\" rel=\"noopener\">houtai</a> ★125 - 基于vue和Element的后台管理系统 </li>\n<li><a href=\"https://github.com/hcy1996/vue-toutiao\" target=\"_blank\" rel=\"noopener\">vue-toutiao</a> ★121 - vuejs高仿今日头条移动端 </li>\n<li><a href=\"https://github.com/microzz/vue-cnode\" target=\"_blank\" rel=\"noopener\">vue-cnode</a> ★121 - 开源的CNode社区 </li>\n<li><a href=\"https://github.com/BosNaufal/vue-mini-shop\" target=\"_blank\" rel=\"noopener\">vue-mini-shop</a> ★121 - VueJS在线商店 </li>\n<li><a href=\"https://github.com/beidan/photoShare\" target=\"_blank\" rel=\"noopener\">photoShare</a> ★120 - 基于图片分享的社交平台 </li>\n<li><a href=\"https://github.com/vanishcode/iview2-management-system\" target=\"_blank\" rel=\"noopener\">iview2-management-system</a> ★119 - 后台管理系统解决方案简单示例 </li>\n<li><a href=\"https://github.com/monkeyWangs/doubanMovie\" target=\"_blank\" rel=\"noopener\">doubanMovie</a> ★119 - 豆瓣电影展示 </li>\n<li><a href=\"https://github.com/hbxywdk/eleme-vue2\" target=\"_blank\" rel=\"noopener\">eleme-vue2</a> ★112 - 仿饿了么H5纯前端Vue版 </li>\n<li><a href=\"https://github.com/cccyb/vue-zhihu-daily\" target=\"_blank\" rel=\"noopener\">vue-zhihu-daily</a> ★111 - 基于Vue全家桶开发的知乎日报 </li>\n<li><a href=\"https://github.com/biaodigit/Vue-News\" target=\"_blank\" rel=\"noopener\">Vue-News</a> ★107 - 基于vue全家桶的仿知乎日报单页应用 </li>\n<li><a href=\"https://github.com/xingbofeng/douban-movie\" target=\"_blank\" rel=\"noopener\">douban-movie</a> ★107 - 仿豆瓣电影wap端 </li>\n<li><a href=\"https://github.com/qxl1231/generator-loopback-vue\" target=\"_blank\" rel=\"noopener\">generator-loopback-vue</a> ★104 - 典型前后端分离项目模板 </li>\n<li><a href=\"https://github.com/odranoelBR/vue-quasar-admin-example\" target=\"_blank\" rel=\"noopener\">vue-quasar-admin-example</a> ★99 - 将Quasar和VueJS应用于SPA项目 </li>\n<li><a href=\"https://github.com/cs1707/vue-zhihudaily-2.0\" target=\"_blank\" rel=\"noopener\">vue-zhihudaily-2.0</a> ★97 - 使用Vue2.0+vue-router+vuex创建的zhihudaily </li>\n<li><a href=\"https://github.com/liangxiaojuan/vue-todos\" target=\"_blank\" rel=\"noopener\">vue-todos</a> ★95 - vue最新实战项目教程 </li>\n<li><a href=\"https://github.com/ddqre12345/vue-music\" target=\"_blank\" rel=\"noopener\">vue-music</a> ★91 - 网易云音乐Demo </li>\n<li><a href=\"https://github.com/Panda-Hope/vue-qqmusic\" target=\"_blank\" rel=\"noopener\">vue-qqmusic</a> ★90 - Vue全家桶+Mint-Ui打造高仿QQMusic </li>\n<li><a href=\"https://github.com/vincentSea/vue2.x-Cnode\" target=\"_blank\" rel=\"noopener\">vue2.x-Cnode</a> ★88 - 基于vue全家桶的Cnode社区 </li>\n<li><a href=\"https://github.com/hql123/vue-ruby-china\" target=\"_blank\" rel=\"noopener\">vue-ruby-china</a> ★86 - VueJS框架搭建的rubychina平台 </li>\n<li><a href=\"https://github.com/monkeyWangs/doubanMovie-SSR\" target=\"_blank\" rel=\"noopener\">doubanMovie-SSR</a> ★85 - Vue豆瓣电影服务端渲染 </li>\n<li><a href=\"https://github.com/huangche007/vue-jd\" target=\"_blank\" rel=\"noopener\">vue-jd</a> ★76 - 京东移动web商城 </li>\n<li><a href=\"https://github.com/zimplexing/vue-nReader\" target=\"_blank\" rel=\"noopener\">vue-nReader</a> ★73 - 使用vue2.0 + vue-router + vuex 的一个多页面小说阅读webapp </li>\n<li><a href=\"https://github.com/FatDong1/VueBlog\" target=\"_blank\" rel=\"noopener\">VueBlog</a> ★73 - 前后端分离的个人博客 </li>\n<li><a href=\"https://github.com/littlewin-wang/Zhihu_Daily\" target=\"_blank\" rel=\"noopener\">Zhihu_Daily</a> ★73 - 基于Vue和Nodejs的Web单页应用 </li>\n<li><a href=\"https://github.com/sinner77/vue-koa2-login\" target=\"_blank\" rel=\"noopener\">vue-koa2-login</a> ★67 - 使用 VueJS &amp; NodeJS 实现的登录注册 </li>\n<li><a href=\"https://github.com/houbx/webApp\" target=\"_blank\" rel=\"noopener\">webApp</a> ★64 - Vue2的移动端webApp音乐播放器 </li>\n<li><a href=\"https://github.com/wenye123/vue-trip\" target=\"_blank\" rel=\"noopener\">vue-trip</a> ★64 - vue2做的出行webapp </li>\n<li><a href=\"https://github.com/Alex-xd/seeMusic\" target=\"_blank\" rel=\"noopener\">seeMusic</a> ★63 - 跨平台云音乐播放器 </li>\n<li><a href=\"https://github.com/SidKwok/github-explorer\" target=\"_blank\" rel=\"noopener\">github-explorer</a> ★63 - 寻找最有趣的GitHub库 </li>\n<li><a href=\"https://github.com/zhoou/vue-cli-multipage-bootstrap\" target=\"_blank\" rel=\"noopener\">vue-cli-multipage-bootstrap</a> ★60 - 将vue官方在线示例整合到组件中 </li>\n<li><a href=\"https://github.com/beautifulBoys/vue-XiaoMi-Shop\" target=\"_blank\" rel=\"noopener\">vue-XiaoMi-Shop</a> ★59 - 高仿小米商城的项目 </li>\n<li><a href=\"https://github.com/leehomeok/Vue-NetEaseCloudMusic\" target=\"_blank\" rel=\"noopener\">Vue-NetEaseCloudMusic</a> ★59 - 模仿IOS版网易云音乐的手机网站 </li>\n<li><a href=\"https://github.com/shaqihe/life-app-vue\" target=\"_blank\" rel=\"noopener\">life-app-vue</a> ★59 - 使用vue2完成多功能集合到小webapp </li>\n<li><a href=\"https://github.com/MrMoveon/doubanApp\" target=\"_blank\" rel=\"noopener\">doubanApp</a> ★55 - 用vue2实现仿豆瓣app </li>\n<li><a href=\"https://github.com/QRL909109/ios7-vue\" target=\"_blank\" rel=\"noopener\">ios7-vue</a> ★52 - 使用vue2.0 vue-router vuex模拟ios7 </li>\n<li><a href=\"https://github.com/hzzly/canvas-vue\" target=\"_blank\" rel=\"noopener\">canvas-vue</a> ★50 - 一个Vue+Cnavas酷炫后台管理 </li>\n<li><a href=\"https://github.com/nswbmw/vue-bushishiren\" target=\"_blank\" rel=\"noopener\">vue-bushishiren</a> ★49 - 不是诗人应用 </li>\n<li><a href=\"https://github.com/albertchan/vue-ssr-boilerplate\" target=\"_blank\" rel=\"noopener\">vue-ssr-boilerplate</a> ★48 - 精简版的ofvue-hackernews-2 </li>\n<li><a href=\"https://github.com/gaohongwei11/vuecommunity\" target=\"_blank\" rel=\"noopener\">vuecommunity</a> ★47 - vue.js中文社区 </li>\n<li><a href=\"https://github.com/pluto1114/vue-music163\" target=\"_blank\" rel=\"noopener\">vue-music163</a> ★47 - 音乐VueJS项目 </li>\n<li><a href=\"https://github.com/safaring/Vue2-MV\" target=\"_blank\" rel=\"noopener\">Vue2-MV</a> ★45 - 仿网易云音乐MV的webapp </li>\n<li><a href=\"https://github.com/hua1995116/musiccloudWebapp\" target=\"_blank\" rel=\"noopener\">musiccloudWebapp</a> ★44 - 用vuejs仿网易云音乐 </li>\n<li><a href=\"https://github.com/BubblyPoker/cnode-vue\" target=\"_blank\" rel=\"noopener\">cnode-vue</a> ★40 - 基于vue和vue-router构建的cnodejs web网站SPA </li>\n<li><a href=\"https://github.com/tyllo/Framework7-VueJS\" target=\"_blank\" rel=\"noopener\">Framework7-VueJS</a> ★38 - 使用移动框架的示例 </li>\n<li><a href=\"https://github.com/JerryYgh/m-eleme\" target=\"_blank\" rel=\"noopener\">m-eleme</a> ★37 - 基于Vue全家桶仿饿了么移动端webapp </li>\n<li><a href=\"https://github.com/sailengsi/sls-vuex2-demo\" target=\"_blank\" rel=\"noopener\">sls-vuex2-demo</a> ★37 - vuex2商城购物车demo </li>\n<li><a href=\"https://github.com/silianpan/eagles\" target=\"_blank\" rel=\"noopener\">eagles</a> ★36 - 各种组件封装 </li>\n<li><a href=\"https://github.com/fishenal/Todos_Vuejs\" target=\"_blank\" rel=\"noopener\">Todos_Vuejs</a> ★35 - vuejs2搭建的极简的todolist </li>\n<li><a href=\"https://github.com/jiananle/vue-cnode\" target=\"_blank\" rel=\"noopener\">vue-cnode</a> ★35 - 用 Vue 做的 CNode 官网 </li>\n<li><a href=\"https://github.com/GitaiQAQ/HyaReader\" target=\"_blank\" rel=\"noopener\">HyaReader</a> ★35 - 移动友好的阅读器 </li>\n<li><a href=\"https://github.com/lanux/Vue-Admin\" target=\"_blank\" rel=\"noopener\">Vue-Admin</a> ★33 - 基于Vue2的Admin系统 </li>\n<li><a href=\"https://github.com/liupeijun/vue2-hybridapp-haoshiqi\" target=\"_blank\" rel=\"noopener\">vue2-hybridapp-haoshiqi</a> ★32 - 实现单页面webapp以及hybridapp </li>\n<li><a href=\"https://github.com/xrr2016/zhihu-daily\" target=\"_blank\" rel=\"noopener\">zhihu-daily</a> ★32 - 轻松查看知乎日报内容 </li>\n<li><a href=\"https://github.com/xandeer/gank\" target=\"_blank\" rel=\"noopener\">gank</a> ★32 - gankio资源的阅读应用 </li>\n<li><a href=\"https://github.com/NewsNIng/vue-h5plus\" target=\"_blank\" rel=\"noopener\">vue-h5plus</a> ★31 - 前卫的vue及html5plus跨平台demo </li>\n<li><a href=\"https://github.com/soulcm/vue-cnode-mobile\" target=\"_blank\" rel=\"noopener\">vue-cnode-mobile</a> ★29 - 搭建cnode社区 </li>\n<li><a href=\"https://github.com/alanWongsGithub/vue-weather\" target=\"_blank\" rel=\"noopener\">vue-weather</a> ★26 - 基于vue.js 2.0的百度天气应用 </li>\n<li><a href=\"https://github.com/doterlin/vue-user-center\" target=\"_blank\" rel=\"noopener\">vue-user-center</a> ★26 - vuejs直播类应用web端个人中心 </li>\n<li><a href=\"https://github.com/moonou/zhihu-daily-vue\" target=\"_blank\" rel=\"noopener\">zhihu-daily-vue</a> ★22 - 知乎日报 </li>\n<li><a href=\"https://github.com/Damonlw/vue-cnode\" target=\"_blank\" rel=\"noopener\">vue-cnode</a> ★22 - 使用cNode社区提供的接口 </li>\n<li><a href=\"https://github.com/BosNaufal/vue-starter\" target=\"_blank\" rel=\"noopener\">vue-starter</a> ★22 - VueJs项目的简单启动页 </li>\n<li><a href=\"https://github.com/wx1993/node-vue-fabaocn\" target=\"_blank\" rel=\"noopener\">node-vue-fabaocn</a> ★21 - 基于 node 和 vue 实现的移动官网 </li>\n<li><a href=\"https://github.com/youknowznm/vue-memo\" target=\"_blank\" rel=\"noopener\">vue-memo</a> ★20 - 用 vue写的记事本应用 </li>\n<li><a href=\"https://github.com/Halfeld/v-notes\" target=\"_blank\" rel=\"noopener\">v-notes</a> ★20 - 简单美观的记事本 </li>\n<li><a href=\"https://github.com/momopig/vue-flexible-app\" target=\"_blank\" rel=\"noopener\">vue-flexible-app</a> ★19 - vue开发的一个简易app </li>\n<li><a href=\"https://github.com/CaiYiLiang/simply-calculator-vuejs\" target=\"_blank\" rel=\"noopener\">simply-calculator-vuejs</a> ★19 - 用VueJS实现简易计算器 </li>\n<li><a href=\"https://github.com/ITCNZ/vue-dropload\" target=\"_blank\" rel=\"noopener\">vue-dropload</a> ★19 - 用以测试下拉加载与简单路由 </li>\n<li><a href=\"https://github.com/fishenal/Vuejs-SalePlatform\" target=\"_blank\" rel=\"noopener\">Vuejs-SalePlatform</a> ★19 - vuejs搭建的售卖平台demo </li>\n<li><a href=\"https://github.com/hj624608494/vue-shopping-mall\" target=\"_blank\" rel=\"noopener\">vue-shopping-mall</a> ★16 - 基于Vue.js 2.x系列 + vue2-router + axios + iview 商城 </li>\n<li><a href=\"https://github.com/yangbo5207/qqmusic\" target=\"_blank\" rel=\"noopener\">qqmusic</a> ★13 - QQ音乐vue </li>\n<li><a href=\"https://github.com/deshes/vue-weather\" target=\"_blank\" rel=\"noopener\">vue-weather</a> ★12 - VueJS天气demo </li>\n</ul>\n<h2 id=\"react\"><a href=\"#react\" class=\"headerlink\" title=\"react\"></a>react</h2><h3 id=\"reactApi\"><a href=\"#reactApi\" class=\"headerlink\" title=\"reactApi\"></a>reactApi</h3><ul>\n<li><a href=\"https://hulufei.gitbooks.io/react-tutorial/content/introduction.html\" target=\"_blank\" rel=\"noopener\">react</a></li>\n<li><a href=\"http://cn.redux.js.org/docs/introduction/Motivation.html\" target=\"_blank\" rel=\"noopener\">react</a></li>\n</ul>\n<h3 id=\"reactUI库\"><a href=\"#reactUI库\" class=\"headerlink\" title=\"reactUI库\"></a>reactUI库</h3><ul>\n<li><a href=\"https://ant.design/index-cn\" target=\"_blank\" rel=\"noopener\">ant-design</a>- 蚂蚁金服的 React UI 库</li>\n<li><a href=\"http://cn.redux.js.org/docs/introduction/Motivation.html\" target=\"_blank\" rel=\"noopener\">react-loadable</a>- 按需加载 react 组件</li>\n<li><a href=\"https://github.com/mui-org/material-ui\" target=\"_blank\" rel=\"noopener\">material-ui</a> - UI 库<h3 id=\"react实用库\"><a href=\"#react实用库\" class=\"headerlink\" title=\"react实用库\"></a>react实用库</h3></li>\n<li><a href=\"https://github.com/react-dnd/react-dnd\" target=\"_blank\" rel=\"noopener\">react-dnd</a> - 拖拽实现</li>\n</ul>\n<h2 id=\"小程序\"><a href=\"#小程序\" class=\"headerlink\" title=\"小程序\"></a>小程序</h2><h3 id=\"微信Api\"><a href=\"#微信Api\" class=\"headerlink\" title=\"微信Api\"></a>微信Api</h3><p><a href=\"https://developers.weixin.qq.com/miniprogram/dev/framework/app-service/api.html\" target=\"_blank\" rel=\"noopener\">微信Api</a></p>\n<h3 id=\"支付宝Api\"><a href=\"#支付宝Api\" class=\"headerlink\" title=\"支付宝Api\"></a>支付宝Api</h3><p><a href=\"https://docs.alipay.com/mini/developer/getting-started\" target=\"_blank\" rel=\"noopener\">支付宝Api</a></p>\n<h3 id=\"微信Api-1\"><a href=\"#微信Api-1\" class=\"headerlink\" title=\"微信Api\"></a>微信Api</h3><p><a href=\"https://developer.toutiao.com/docs/framework/\" target=\"_blank\" rel=\"noopener\">今日头条Api</a></p>\n<h3 id=\"微信Api-2\"><a href=\"#微信Api-2\" class=\"headerlink\" title=\"微信Api\"></a>微信Api</h3><p><a href=\"https://smartprogram.baidu.com/developer/index.html\" target=\"_blank\" rel=\"noopener\">百度Api</a></p>\n<h2 id=\"webpack\"><a href=\"#webpack\" class=\"headerlink\" title=\"webpack\"></a>webpack</h2><ul>\n<li><a href=\"https://www.webpackjs.com/\" target=\"_blank\" rel=\"noopener\">webpack</a></li>\n</ul>\n<h2 id=\"typeScript\"><a href=\"#typeScript\" class=\"headerlink\" title=\"typeScript\"></a>typeScript</h2><ul>\n<li><a href=\"https://www.tslang.cn/docs/handbook/jsx.html\" target=\"_blank\" rel=\"noopener\">webpack</a></li>\n</ul>\n<blockquote>\n<p>如果有补充的可以提交issure,帮助我完善来帮助方便更多的人，让更多的人节省不必要的时间。</p>\n</blockquote>\n<p><a href=\"https://github.com/xiaosongread/Commonly-used-to-collect\" target=\"_blank\" rel=\"noopener\">github:</a></p>"},{"title":"css3-anmation 动画","date":"2019-08-07T11:19:33.000Z","_content":"\n## css3-anmation-loading\n\n```css\nanimation-name\t规定需要绑定到选择器的 keyframe 名称。\n\nanimation-duration\t规定完成动画所花费的时间，以秒或毫秒计。\n\nanimation-timing-function\t规定动画的速度曲线。\n-- linear\t动画从头到尾的速度是相同的。\n-- ease\t默认。动画以低速开始，然后加快，在结束前变慢。\n-- ease-in\t动画以低速开始。\n-- ease-out\t动画以低速结束。\n-- ease-in-out\t动画以低速开始和结束。\n-- cubic-bezier(n,n,n,n)\t在 cubic-bezier 函数中自己的值。可能的值是从 0 到 1 的数值。\n\nanimation-delay\t规定在动画开始之前的延迟。\n\nanimation-iteration-count\t规定动画应该播放的次数。\n-- n\t定义动画播放次数的数值。\n-- infinite\t规定动画应该无限次播放。\n\nanimation-direction\t规定是否应该轮流反向播放动画。\n-- normal\t默认值。动画应该正常播放。\n-- alternate\t动画应该轮流反向播放。\n```\n<!-- more -->\n![blockchain](https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/loading.gif)\n\n公用样式：\n```css\nbody{\n    background: #40479a;\n}\n.demo{\n    width: 120px;\n    height: 120px;\n    margin: 15px;\n    float: left;\n    &:hover {\n        border: 1px dashed #fff;\n    }\n}\n```\n1.\n```html\n<div class=\"demo demo_1\">\n    <div class=\"demo_1_box\">\n        <div class=\"redius_1_1\"></div>\n        <div class=\"redius_1_2\"></div>\n    </div>\n</div>\n@keyframes rotate-redius_1\n{\n    0% { transform:rotate(30deg); }\n    50% { transform:rotate(210deg); }\n    100%{ transform:rotate(-30deg); }\n}\n@keyframes rotate-redius_2\n{\n    0% {\n        transform:rotate(-30deg);\n}\n    50% {\n        transform:rotate(150deg);\n}\n    100%{\n        transform:rotate(-90deg);\n}\n}\n.demo_1{\n    .demo_1_box{\n        position: relative;\n        top: 28px;\n        left: 28px;\n    }\n    .redius_1_1{\n        width: 64px;\n        height: 64px;\n        position: absolute;\n        top: 0;\n        left: 0;\n        border: 4px solid #fff;\n        border-radius: 100%;\n        border-bottom-color: transparent;\n        border-top-color: transparent;\n        transform:rotate(30deg);\n        animation: rotate-redius_1 2s linear infinite;\n        -webkit-animation: rotate-redius_1 2s linear infinite;\n    }\n    .redius_1_2{\n        width: 30px;\n        height: 30px;\n        position: absolute;\n        top: 16px;\n        left: 16px;\n        border: 4px solid #fff;\n        border-radius: 100%;\n        border-bottom-color: transparent;\n        border-top-color: transparent;\n        border-radius: 100%;\n        transform:rotate(-30deg);\n        animation: rotate-redius_2 1s linear infinite;\n        -webkit-animation: rotate-redius_2 1s linear infinite;\n    }\n}\n```\n2.\n```html\n<div class=\"demo demo_2\">\n    <div class=\"redius_2_1\"></div>\n</div>\n@keyframes rotate_2 {\n    from {\n        transform:rotate(0deg);\n    }\n    to {\n        transform:rotate(360deg);\n    }\n}\n.demo_2{\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    .redius_2_1{\n        width: 64px;\n        height: 64px;\n        border: 4px solid #fff;\n        border-radius: 100%;\n        border-right-color: transparent;\n        animation: rotate_2 1s linear infinite;\n        -webkit-animation: rotate_2 1s linear infinite;\n    }\n}\n```\n3.\n```html\n<div class=\"demo demo_3\">\n    <div class=\"pacman_box\">\n        <div class=\"pacman_1\"></div>\n        <div class=\"pacman_2\"></div>\n        <div class=\"circle_1\"></div>\n        <div class=\"circle_2\"></div>\n        <div class=\"circle_3\"></div>\n    </div>\n</div>\n@keyframes rotate_3_1 {\n    from {\n        transform:rotate(45deg);\n    }\n    to {\n        transform:rotate(0deg);\n    }\n}\n@keyframes rotate_3_2 {\n    from {\n        transform:rotate(-45deg);\n    }\n    to {\n        transform:rotate(0deg);\n    }\n}\n@keyframes circle_1 {\n    from {\n        opacity: 1;\n    }\n    to {\n        opacity: 0;\n    }\n}\n@keyframes circle_2 {\n    from {\n        opacity: 0.5;\n    }\n    to {\n        opacity: 1;\n    }\n}\n@keyframes circle_3 {\n    from {\n        opacity: 0;\n    }\n    to {\n        opacity: 1;\n    }\n}\n.demo_3{\n    .pacman_box{\n        position: relative;\n        top: 32px;\n        .pacman_1{\n            width: 0;\n            height: 0;\n            border-radius:100%;\n            border: 32px solid #fff;\n            border-right-color: transparent;\n            position: absolute;\n            top: 0;\n            left: 0;\n            transform: rotate(45deg);\n            animation: rotate_3_1 0.5s linear infinite alternate;\n            -webkit-animation: rotate_3_1 0.5s linear infinite alternate;\n        }\n        .pacman_2{\n            width: 0;\n            height: 0;\n            border-radius:100%;\n            border: 32px solid #fff;\n            border-right-color: transparent;\n            position: absolute;\n            top: 0;\n            left: 0;\n            transform: rotate(-45deg);\n            animation: rotate_3_2 0.5s linear infinite alternate;\n            -webkit-animation: rotate_3_2 0.5s linear infinite alternate;\n        }\n        .circle_1{\n            width: 14px;\n            height: 14px;\n            background: #fff;\n            position: absolute;\n            top: 25px;\n            right: 65px;\n            border-radius: 100%;\n            opacity: 0;\n            animation: circle_1 0.5s linear infinite alternate;\n            -webkit-animation: circle_1 0.5s linear infinite alternate;\n        }\n        .circle_2{\n            width: 14px;\n            height: 14px;\n            background: #fff;\n            position: absolute;\n            top: 25px;\n            right: 35px;\n            border-radius: 100%;\n            opacity: 0.5;\n            animation: circle_2 0.5s linear infinite alternate;\n            -webkit-animation: circle_2 0.5s linear infinite alternate;\n        }\n        .circle_3{\n            width: 14px;\n            height: 14px;\n            background: #fff;\n            position: absolute;\n            top: 25px;\n            right: 5px;\n            border-radius: 100%;\n            animation: circle_3 0.5s linear infinite alternate;\n            -webkit-animation: circle_3 0.5s linear infinite alternate;\n        }\n    }\n}\n```\n4.\n```html\n<div class=\"demo demo_4\">\n    <div class=\"demo4_circle_box\">\n        <div class=\"demo4_circle_1\"></div>\n        <div class=\"demo4_circle_2\"></div>\n    </div>\n</div>\n@keyframes demo4_circle_1{\n    from {\n        transform:scale(1);\n        -webkit-transform:scale(1);\n        -moz-transform:scale(1);\n        -ms-transform:scale(1);\n        -o-transform:scale(1);\n        opacity: .5;\n    }\n    to {\n        transform:scale(0);\n        -webkit-transform:scale(0);\n        -moz-transform:scale(0);\n        -ms-transform:scale(0);\n        -o-transform:scale(0);\n        opacity: 0;\n    }\n}\n@keyframes demo4_circle_2{\n    from {\n        transform:scale(0);\n        -webkit-transform:scale(0);\n        -moz-transform:scale(0);\n        -ms-transform:scale(0);\n        -o-transform:scale(0);\n        opacity: 1;\n    }\n    to {\n        transform:scale(1);\n        -webkit-transform:scale(1);\n        -moz-transform:scale(1);\n        -ms-transform:scale(1);\n        -o-transform:scale(1);\n        opacity: .5;\n    }\n}\n.demo_4{\n    .demo4_circle_box{\n        position: relative;\n        top: 28px;\n        left: 28px;\n        .demo4_circle_1{\n            width: 64px;\n            height: 64px;\n            background: #fff;\n            border-radius:100%;\n            position: absolute;\n            left: 15px;\n            opacity: .5;\n            animation: demo4_circle_1 1s linear infinite alternate;\n            -webkit-animation: demo4_circle_1 1s linear infinite alternate;\n        }\n        .demo4_circle_2{\n            width: 64px;\n            height: 64px;\n            background: #fff;\n            border-radius:100%;\n            position: absolute;\n            left: 15px;\n            transform:scale(0);\n            -webkit-transform:scale(0);\n            -moz-transform:scale(0);\n            -ms-transform:scale(0);\n            -o-transform:scale(0);\n            animation: demo4_circle_2 1s linear infinite alternate;\n            -webkit-animation: demo4_circle_2 1s linear infinite alternate;\n        }\n    }\n}\n```\n5.\n```html\n<div class=\"demo demo_6\">\n    <div class=\"demo6_circle_box\">\n        <div class=\"demo6_son_1 demo6_son\"></div>\n        <div class=\"demo6_son_2 demo6_son\"></div>\n        <div class=\"demo6_son_3 demo6_son\"></div>\n        <div class=\"demo6_son_4 demo6_son\"></div>\n        <div class=\"demo6_son_5 demo6_son\"></div>\n    </div>\n</div>\n@keyframes demo6_son{\n    0% {\n        transform: scaleY(1);\n        -webkit-transform: scaleY(1);\n        -moz-transform: scaleY(1);\n        -ms-transform: scaleY(1);\n        -o-transform: scaleY(1);\n    }\n    25% {\n        transform:scaleY(2);\n        -webkit-transform:scaleY(2);\n        -moz-transform:scaleY(2);\n        -ms-transform:scaleY(2);\n        -o-transform:scaleY(2);\n    }\n    50% {\n        transform:scaleY(1);\n        -webkit-transform:scaleY(1);\n        -moz-transform:scaleY(1);\n        -ms-transform:scaleY(1);\n        -o-transform:scaleY(1);\n    }\n    100% {\n        animation-play-state: paused;\n    }\n}\n.demo_6{\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    .demo6_circle_box{\n        display: flex;\n        .demo6_son{\n            width: 7px;\n            height: 32px;\n            background: #fff;\n            &:not(:last-child) {\n                margin-right: 10px;\n            }\n        }\n        .demo6_son_1 {\n            animation: demo6_son infinite 2s ease-in-out;\n            -webkit-animation: demo6_son infinite 2s ease-in-out;\n        }\n        .demo6_son_2 {\n            animation: demo6_son infinite 2s ease-in-out .3s;\n            -webkit-animation: demo6_son infinite 2s ease-in-out .3s;\n        }\n        .demo6_son_3 {\n            animation: demo6_son infinite 2s ease-in-out .6s;\n            -webkit-animation: demo6_son infinite 2s ease-in-out .6s;\n        }\n        .demo6_son_4 {\n            animation: demo6_son infinite 2s ease-in-out .9s;\n            -webkit-animation: demo6_son infinite 2s ease-in-out .9s;\n        }\n        .demo6_son_5 {\n            animation: demo6_son infinite 2s ease-in-out 1.2s;\n            -webkit-animation: demo6_son infinite 2s ease-in-out 1.2s;\n        }\n    }\n}\n```\n6.\n```html\n<div class=\"demo demo_7\">\n    <div class=\"demo7_circle_box\"></div>\n</div>\n@keyframes demo_7{\n    from {\n        transform: scale(1);\n        -webkit-transform: scale(1);\n        -moz-transform: scale(1);\n        -ms-transform: scale(1);\n        -o-transform: scale(1);\n    }\n    to {\n        transform: scale(1.3);\n        -webkit-transform: scale(1.3);\n        -moz-transform: scale(1.3);\n        -ms-transform: scale(1.3);\n        -o-transform: scale(1.3);\n}\n}\n.demo_7{\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    .demo7_circle_box{\n        position: relative;\n        width: 40px;\n        height: 70px;\n        animation: demo_7  1s linear infinite alternate;\n        -webkit-animation: demo_7  1s linear infinite alternate;\n        &:before{\n            content: '';\n            width: 30px;\n            height: 50px;\n            display: block;\n            border-top-left-radius: 15px;\n            border-top-right-radius: 15px;\n            background: #fff;\n            transform: rotate(45deg);\n            -webkit-transform: rotate(45deg);\n            -moz-transform: rotate(45deg);\n            -ms-transform: rotate(45deg);\n            -o-transform: rotate(45deg);\n            transform-origin: 0 100%;\n            position: absolute;\n            top: 0;\n            left: 0;\n        }\n        &:after{\n            content: '';\n            width: 30px;\n            height: 50px;\n            display: block;\n            border-top-left-radius: 15px;\n            border-top-right-radius: 15px;\n            background: #fff;\n            transform: rotate(-45deg);\n            -webkit-transform: rotate(-45deg);\n            -moz-transform: rotate(-45deg);\n            -ms-transform: rotate(-45deg);\n            -o-transform: rotate(-45deg);\n            transform-origin: 100% 100%;\n            position: absolute;\n            top: 0;\n            left: 12px;\n        }\n    }\n}\n```\n7.\n```html\n<div class=\"demo demo_8\">\n    <div class=\"demo8_circle_box\"></div>\n</div>\n@keyframes demo_8 {\n    from {\n        transform: rotate(0deg);\n        -webkit-transform: rotate(0deg);\n        -moz-transform: rotate(0deg);\n        -ms-transform: rotate(0deg);\n        -o-transform: rotate(0deg);\n    }\n    to {\n        transform: rotate(360deg);\n        -webkit-transform: rotate(360deg);\n        -moz-transform: rotate(360deg);\n        -ms-transform: rotate(360deg);\n        -o-transform: rotate(360deg);\n    }\n}\n.demo_8{\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    .demo8_circle_box{\n        position: relative;\n        width: 30px;\n        height: 30px;\n        padding: 23px;\n        border: 1px solid #fff;\n        border-radius: 100%;\n        -webkit-border-radius: 100%;\n        -moz-border-radius: 100%;\n        -ms-border-radius: 100%;\n        -o-border-radius: 100%;\n        animation: demo_8 3s linear infinite;\n        //linear//意思就是匀速的运动infinite//就是无限滚动的意思-webkit-animation:;\n        -webkit-animation: demo_8 3s linear infinite;\n        &:before{\n            content: '';\n            display: block;\n            width: 30px;\n            height: 30px;\n            background: #fff;\n            box-shadow: 0 0 10px #fff;\n            border-radius: 30px;\n        }\n        &:after{\n            content: '';\n            display: block;\n            width: 20px;\n            height: 20px;\n            background: #fff;\n            border-radius: 20px;\n            position: absolute;\n            top: 0;\n            left: 0;\n            box-shadow: 0 0 5px #fff;\n        }\n    }\n}\n```\n8.\n```html\n<div class=\"demo demo_9\">\n    <div data-loader=\"jumping\"></div>\n</div>\n@-webkit-keyframes jumping\n{\n    0%\n    {\n        -webkit-transform: scale(1.0) translateY(0px) rotateX(0deg);\n            -ms-transform: scale(1.0) translateY(0px) rotateX(0deg);\n             -o-transform: scale(1.0) translateY(0px) rotateX(0deg);\n                transform: scale(1.0) translateY(0px) rotateX(0deg);\n\n        -webkit-box-shadow: 0 0 0 rgba(0,0,0,0);\n                box-shadow: 0 0 0 rgba(0,0,0,0);\n    }\n    100%\n    {\n        -webkit-transform: scale(1.2) translateY(-25px) rotateX(45deg);\n            -ms-transform: scale(1.2) translateY(-25px) rotateX(45deg);\n             -o-transform: scale(1.2) translateY(-25px) rotateX(45deg);\n                transform: scale(1.2) translateY(-25px) rotateX(45deg);\n\n        background: rgb(255,255,255);\n        -webkit-box-shadow: 0 25px 40px rgb(255,255,255);\n                box-shadow: 0 25px 40px rgb(255,255,255);\n    }\n}\n.demo_9{\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    [data-loader='jumping']\n    {\n        position: relative;\n        width: 50px;\n        -webkit-perspective: 200px;\n        -moz-perspective: 200px;\n            -ms-perspective: 200px;\n                perspective: 200px;\n    }\n    [data-loader='jumping']:before,\n    [data-loader='jumping']:after\n    {\n        position: absolute;\n\n        width: 20px;\n        height: 20px;\n\n        content: '';\n        animation: jumping .5s infinite alternate;\n\n        background: rgba(0,0,0,0);\n    }\n    [data-loader='jumping']:before\n    {\n        left: 0;\n    }\n    [data-loader='jumping']:after\n    {\n        right: 0;\n\n        animation-delay: .15s;\n    }\n}\n```\n9.\n```html\n<div class=\"demo demo_10\">\n    <div data-loader=\"circle-side\"></div>\n</div>\n@keyframes circle-side\n{\n    from {\n        transform: rotate(0deg);\n        -webkit-transform: rotate(0deg);\n        -moz-transform: rotate(0deg);\n        -ms-transform: rotate(0deg);\n        -o-transform: rotate(0deg);\n    }\n    to {\n        transform: rotate(360deg);\n        -webkit-transform: rotate(360deg);\n        -moz-transform: rotate(360deg);\n        -ms-transform: rotate(360deg);\n        -o-transform: rotate(360deg);\n    }\n}\n.demo_10{\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    [data-loader='circle-side']\n    {\n        width: 64px;\n        height: 64px;\n        border: 4px solid #fff;\n        border-top-color: rgba(0,0,0,.2);\n        border-right-color: rgba(0,0,0,.2);\n        border-bottom-color: rgba(0,0,0,.2);\n        border-radius: 100%;\n        animation: circle-side 2s linear infinite;\n        -webkit-animation: circle-side 2s linear infinite;\n    }\n}\n```\n10.\n```html\n<div class=\"demo demo_11\">\n    <div data-loader=\"ball-rotate\"></div>\n</div>\n@keyframes ball-rotate-between {\n    0% {\n        transform: scale(1);\n        -webkit-transform: scale(1);\n        -moz-transform: scale(1);\n        -ms-transform: scale(1);\n        -o-transform: scale(1);\n    }\n    100% {\n        transform: scale(1.2);\n        -webkit-transform: scale(1.2);\n        -moz-transform: scale(1.2);\n        -ms-transform: scale(1.2);\n        -o-transform: scale(1.2);\n    }\n}\n@keyframes ball-rotate {\n    from {\n        transform: rotate(0deg) scale(1);\n        -webkit-transform: rotate(0deg) scale(1);\n        -moz-transform: rotate(0deg) scale(1);\n        -ms-transform: rotate(0deg) scale(1);\n        -o-transform: rotate(0deg) scale(1);\n    }\n    to {\n        transform: rotate(360deg) scale(1.2);\n        -webkit-transform: rotate(360deg) scale(1.2);\n        -moz-transform: rotate(360deg) scale(1.2);\n        -ms-transform: rotate(360deg) scale(1.2);\n        -o-transform: rotate(360deg) scale(1.2);\n    }\n}\n.demo_11{\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    [data-loader='ball-rotate']\n    {\n        width: 14px;\n        height: 14px;\n        background: #fff;\n        border-radius: 100%;\n        -webkit-border-radius: 100%;\n        -moz-border-radius: 100%;\n        -ms-border-radius: 100%;\n        -o-border-radius: 100%;\n        position: relative;\n        animation: ball-rotate 2s linear infinite;\n        -webkit-animation: ball-rotate 2s linear infinite;\n        &:before\n        {\n            content: '';\n            display: block;\n            width: 14px;\n            height: 14px;\n            background: rgba(255, 255, 255, .8);\n            border-radius: 100%;\n            position: absolute;\n            left: 30px;\n            animation: ball-rotate-between 2s linear infinite;\n            -webkit-animation: ball-rotate-between 2s linear infinite;\n        }\n        &:after{\n            content: '';\n            display: block;\n            width: 14px;\n            height: 14px;\n            background: rgba(255, 255, 255, .8);\n            border-radius: 100%;\n            position: absolute;\n            right: 30px;\n            animation: ball-rotate-between 2s linear infinite;\n            -webkit-animation: ball-rotate-between 2s linear infinite;\n        }\n    }\n}\n```\n\n### github: https://github.com/xiaosongread/gulp-cli","source":"_posts/css3-anmation.md","raw":"---\ntitle: css3-anmation 动画\ncategories: css-end\ndate: 2019-08-07 19:19:33\ntags: css3\n---\n\n## css3-anmation-loading\n\n```css\nanimation-name\t规定需要绑定到选择器的 keyframe 名称。\n\nanimation-duration\t规定完成动画所花费的时间，以秒或毫秒计。\n\nanimation-timing-function\t规定动画的速度曲线。\n-- linear\t动画从头到尾的速度是相同的。\n-- ease\t默认。动画以低速开始，然后加快，在结束前变慢。\n-- ease-in\t动画以低速开始。\n-- ease-out\t动画以低速结束。\n-- ease-in-out\t动画以低速开始和结束。\n-- cubic-bezier(n,n,n,n)\t在 cubic-bezier 函数中自己的值。可能的值是从 0 到 1 的数值。\n\nanimation-delay\t规定在动画开始之前的延迟。\n\nanimation-iteration-count\t规定动画应该播放的次数。\n-- n\t定义动画播放次数的数值。\n-- infinite\t规定动画应该无限次播放。\n\nanimation-direction\t规定是否应该轮流反向播放动画。\n-- normal\t默认值。动画应该正常播放。\n-- alternate\t动画应该轮流反向播放。\n```\n<!-- more -->\n![blockchain](https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/loading.gif)\n\n公用样式：\n```css\nbody{\n    background: #40479a;\n}\n.demo{\n    width: 120px;\n    height: 120px;\n    margin: 15px;\n    float: left;\n    &:hover {\n        border: 1px dashed #fff;\n    }\n}\n```\n1.\n```html\n<div class=\"demo demo_1\">\n    <div class=\"demo_1_box\">\n        <div class=\"redius_1_1\"></div>\n        <div class=\"redius_1_2\"></div>\n    </div>\n</div>\n@keyframes rotate-redius_1\n{\n    0% { transform:rotate(30deg); }\n    50% { transform:rotate(210deg); }\n    100%{ transform:rotate(-30deg); }\n}\n@keyframes rotate-redius_2\n{\n    0% {\n        transform:rotate(-30deg);\n}\n    50% {\n        transform:rotate(150deg);\n}\n    100%{\n        transform:rotate(-90deg);\n}\n}\n.demo_1{\n    .demo_1_box{\n        position: relative;\n        top: 28px;\n        left: 28px;\n    }\n    .redius_1_1{\n        width: 64px;\n        height: 64px;\n        position: absolute;\n        top: 0;\n        left: 0;\n        border: 4px solid #fff;\n        border-radius: 100%;\n        border-bottom-color: transparent;\n        border-top-color: transparent;\n        transform:rotate(30deg);\n        animation: rotate-redius_1 2s linear infinite;\n        -webkit-animation: rotate-redius_1 2s linear infinite;\n    }\n    .redius_1_2{\n        width: 30px;\n        height: 30px;\n        position: absolute;\n        top: 16px;\n        left: 16px;\n        border: 4px solid #fff;\n        border-radius: 100%;\n        border-bottom-color: transparent;\n        border-top-color: transparent;\n        border-radius: 100%;\n        transform:rotate(-30deg);\n        animation: rotate-redius_2 1s linear infinite;\n        -webkit-animation: rotate-redius_2 1s linear infinite;\n    }\n}\n```\n2.\n```html\n<div class=\"demo demo_2\">\n    <div class=\"redius_2_1\"></div>\n</div>\n@keyframes rotate_2 {\n    from {\n        transform:rotate(0deg);\n    }\n    to {\n        transform:rotate(360deg);\n    }\n}\n.demo_2{\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    .redius_2_1{\n        width: 64px;\n        height: 64px;\n        border: 4px solid #fff;\n        border-radius: 100%;\n        border-right-color: transparent;\n        animation: rotate_2 1s linear infinite;\n        -webkit-animation: rotate_2 1s linear infinite;\n    }\n}\n```\n3.\n```html\n<div class=\"demo demo_3\">\n    <div class=\"pacman_box\">\n        <div class=\"pacman_1\"></div>\n        <div class=\"pacman_2\"></div>\n        <div class=\"circle_1\"></div>\n        <div class=\"circle_2\"></div>\n        <div class=\"circle_3\"></div>\n    </div>\n</div>\n@keyframes rotate_3_1 {\n    from {\n        transform:rotate(45deg);\n    }\n    to {\n        transform:rotate(0deg);\n    }\n}\n@keyframes rotate_3_2 {\n    from {\n        transform:rotate(-45deg);\n    }\n    to {\n        transform:rotate(0deg);\n    }\n}\n@keyframes circle_1 {\n    from {\n        opacity: 1;\n    }\n    to {\n        opacity: 0;\n    }\n}\n@keyframes circle_2 {\n    from {\n        opacity: 0.5;\n    }\n    to {\n        opacity: 1;\n    }\n}\n@keyframes circle_3 {\n    from {\n        opacity: 0;\n    }\n    to {\n        opacity: 1;\n    }\n}\n.demo_3{\n    .pacman_box{\n        position: relative;\n        top: 32px;\n        .pacman_1{\n            width: 0;\n            height: 0;\n            border-radius:100%;\n            border: 32px solid #fff;\n            border-right-color: transparent;\n            position: absolute;\n            top: 0;\n            left: 0;\n            transform: rotate(45deg);\n            animation: rotate_3_1 0.5s linear infinite alternate;\n            -webkit-animation: rotate_3_1 0.5s linear infinite alternate;\n        }\n        .pacman_2{\n            width: 0;\n            height: 0;\n            border-radius:100%;\n            border: 32px solid #fff;\n            border-right-color: transparent;\n            position: absolute;\n            top: 0;\n            left: 0;\n            transform: rotate(-45deg);\n            animation: rotate_3_2 0.5s linear infinite alternate;\n            -webkit-animation: rotate_3_2 0.5s linear infinite alternate;\n        }\n        .circle_1{\n            width: 14px;\n            height: 14px;\n            background: #fff;\n            position: absolute;\n            top: 25px;\n            right: 65px;\n            border-radius: 100%;\n            opacity: 0;\n            animation: circle_1 0.5s linear infinite alternate;\n            -webkit-animation: circle_1 0.5s linear infinite alternate;\n        }\n        .circle_2{\n            width: 14px;\n            height: 14px;\n            background: #fff;\n            position: absolute;\n            top: 25px;\n            right: 35px;\n            border-radius: 100%;\n            opacity: 0.5;\n            animation: circle_2 0.5s linear infinite alternate;\n            -webkit-animation: circle_2 0.5s linear infinite alternate;\n        }\n        .circle_3{\n            width: 14px;\n            height: 14px;\n            background: #fff;\n            position: absolute;\n            top: 25px;\n            right: 5px;\n            border-radius: 100%;\n            animation: circle_3 0.5s linear infinite alternate;\n            -webkit-animation: circle_3 0.5s linear infinite alternate;\n        }\n    }\n}\n```\n4.\n```html\n<div class=\"demo demo_4\">\n    <div class=\"demo4_circle_box\">\n        <div class=\"demo4_circle_1\"></div>\n        <div class=\"demo4_circle_2\"></div>\n    </div>\n</div>\n@keyframes demo4_circle_1{\n    from {\n        transform:scale(1);\n        -webkit-transform:scale(1);\n        -moz-transform:scale(1);\n        -ms-transform:scale(1);\n        -o-transform:scale(1);\n        opacity: .5;\n    }\n    to {\n        transform:scale(0);\n        -webkit-transform:scale(0);\n        -moz-transform:scale(0);\n        -ms-transform:scale(0);\n        -o-transform:scale(0);\n        opacity: 0;\n    }\n}\n@keyframes demo4_circle_2{\n    from {\n        transform:scale(0);\n        -webkit-transform:scale(0);\n        -moz-transform:scale(0);\n        -ms-transform:scale(0);\n        -o-transform:scale(0);\n        opacity: 1;\n    }\n    to {\n        transform:scale(1);\n        -webkit-transform:scale(1);\n        -moz-transform:scale(1);\n        -ms-transform:scale(1);\n        -o-transform:scale(1);\n        opacity: .5;\n    }\n}\n.demo_4{\n    .demo4_circle_box{\n        position: relative;\n        top: 28px;\n        left: 28px;\n        .demo4_circle_1{\n            width: 64px;\n            height: 64px;\n            background: #fff;\n            border-radius:100%;\n            position: absolute;\n            left: 15px;\n            opacity: .5;\n            animation: demo4_circle_1 1s linear infinite alternate;\n            -webkit-animation: demo4_circle_1 1s linear infinite alternate;\n        }\n        .demo4_circle_2{\n            width: 64px;\n            height: 64px;\n            background: #fff;\n            border-radius:100%;\n            position: absolute;\n            left: 15px;\n            transform:scale(0);\n            -webkit-transform:scale(0);\n            -moz-transform:scale(0);\n            -ms-transform:scale(0);\n            -o-transform:scale(0);\n            animation: demo4_circle_2 1s linear infinite alternate;\n            -webkit-animation: demo4_circle_2 1s linear infinite alternate;\n        }\n    }\n}\n```\n5.\n```html\n<div class=\"demo demo_6\">\n    <div class=\"demo6_circle_box\">\n        <div class=\"demo6_son_1 demo6_son\"></div>\n        <div class=\"demo6_son_2 demo6_son\"></div>\n        <div class=\"demo6_son_3 demo6_son\"></div>\n        <div class=\"demo6_son_4 demo6_son\"></div>\n        <div class=\"demo6_son_5 demo6_son\"></div>\n    </div>\n</div>\n@keyframes demo6_son{\n    0% {\n        transform: scaleY(1);\n        -webkit-transform: scaleY(1);\n        -moz-transform: scaleY(1);\n        -ms-transform: scaleY(1);\n        -o-transform: scaleY(1);\n    }\n    25% {\n        transform:scaleY(2);\n        -webkit-transform:scaleY(2);\n        -moz-transform:scaleY(2);\n        -ms-transform:scaleY(2);\n        -o-transform:scaleY(2);\n    }\n    50% {\n        transform:scaleY(1);\n        -webkit-transform:scaleY(1);\n        -moz-transform:scaleY(1);\n        -ms-transform:scaleY(1);\n        -o-transform:scaleY(1);\n    }\n    100% {\n        animation-play-state: paused;\n    }\n}\n.demo_6{\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    .demo6_circle_box{\n        display: flex;\n        .demo6_son{\n            width: 7px;\n            height: 32px;\n            background: #fff;\n            &:not(:last-child) {\n                margin-right: 10px;\n            }\n        }\n        .demo6_son_1 {\n            animation: demo6_son infinite 2s ease-in-out;\n            -webkit-animation: demo6_son infinite 2s ease-in-out;\n        }\n        .demo6_son_2 {\n            animation: demo6_son infinite 2s ease-in-out .3s;\n            -webkit-animation: demo6_son infinite 2s ease-in-out .3s;\n        }\n        .demo6_son_3 {\n            animation: demo6_son infinite 2s ease-in-out .6s;\n            -webkit-animation: demo6_son infinite 2s ease-in-out .6s;\n        }\n        .demo6_son_4 {\n            animation: demo6_son infinite 2s ease-in-out .9s;\n            -webkit-animation: demo6_son infinite 2s ease-in-out .9s;\n        }\n        .demo6_son_5 {\n            animation: demo6_son infinite 2s ease-in-out 1.2s;\n            -webkit-animation: demo6_son infinite 2s ease-in-out 1.2s;\n        }\n    }\n}\n```\n6.\n```html\n<div class=\"demo demo_7\">\n    <div class=\"demo7_circle_box\"></div>\n</div>\n@keyframes demo_7{\n    from {\n        transform: scale(1);\n        -webkit-transform: scale(1);\n        -moz-transform: scale(1);\n        -ms-transform: scale(1);\n        -o-transform: scale(1);\n    }\n    to {\n        transform: scale(1.3);\n        -webkit-transform: scale(1.3);\n        -moz-transform: scale(1.3);\n        -ms-transform: scale(1.3);\n        -o-transform: scale(1.3);\n}\n}\n.demo_7{\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    .demo7_circle_box{\n        position: relative;\n        width: 40px;\n        height: 70px;\n        animation: demo_7  1s linear infinite alternate;\n        -webkit-animation: demo_7  1s linear infinite alternate;\n        &:before{\n            content: '';\n            width: 30px;\n            height: 50px;\n            display: block;\n            border-top-left-radius: 15px;\n            border-top-right-radius: 15px;\n            background: #fff;\n            transform: rotate(45deg);\n            -webkit-transform: rotate(45deg);\n            -moz-transform: rotate(45deg);\n            -ms-transform: rotate(45deg);\n            -o-transform: rotate(45deg);\n            transform-origin: 0 100%;\n            position: absolute;\n            top: 0;\n            left: 0;\n        }\n        &:after{\n            content: '';\n            width: 30px;\n            height: 50px;\n            display: block;\n            border-top-left-radius: 15px;\n            border-top-right-radius: 15px;\n            background: #fff;\n            transform: rotate(-45deg);\n            -webkit-transform: rotate(-45deg);\n            -moz-transform: rotate(-45deg);\n            -ms-transform: rotate(-45deg);\n            -o-transform: rotate(-45deg);\n            transform-origin: 100% 100%;\n            position: absolute;\n            top: 0;\n            left: 12px;\n        }\n    }\n}\n```\n7.\n```html\n<div class=\"demo demo_8\">\n    <div class=\"demo8_circle_box\"></div>\n</div>\n@keyframes demo_8 {\n    from {\n        transform: rotate(0deg);\n        -webkit-transform: rotate(0deg);\n        -moz-transform: rotate(0deg);\n        -ms-transform: rotate(0deg);\n        -o-transform: rotate(0deg);\n    }\n    to {\n        transform: rotate(360deg);\n        -webkit-transform: rotate(360deg);\n        -moz-transform: rotate(360deg);\n        -ms-transform: rotate(360deg);\n        -o-transform: rotate(360deg);\n    }\n}\n.demo_8{\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    .demo8_circle_box{\n        position: relative;\n        width: 30px;\n        height: 30px;\n        padding: 23px;\n        border: 1px solid #fff;\n        border-radius: 100%;\n        -webkit-border-radius: 100%;\n        -moz-border-radius: 100%;\n        -ms-border-radius: 100%;\n        -o-border-radius: 100%;\n        animation: demo_8 3s linear infinite;\n        //linear//意思就是匀速的运动infinite//就是无限滚动的意思-webkit-animation:;\n        -webkit-animation: demo_8 3s linear infinite;\n        &:before{\n            content: '';\n            display: block;\n            width: 30px;\n            height: 30px;\n            background: #fff;\n            box-shadow: 0 0 10px #fff;\n            border-radius: 30px;\n        }\n        &:after{\n            content: '';\n            display: block;\n            width: 20px;\n            height: 20px;\n            background: #fff;\n            border-radius: 20px;\n            position: absolute;\n            top: 0;\n            left: 0;\n            box-shadow: 0 0 5px #fff;\n        }\n    }\n}\n```\n8.\n```html\n<div class=\"demo demo_9\">\n    <div data-loader=\"jumping\"></div>\n</div>\n@-webkit-keyframes jumping\n{\n    0%\n    {\n        -webkit-transform: scale(1.0) translateY(0px) rotateX(0deg);\n            -ms-transform: scale(1.0) translateY(0px) rotateX(0deg);\n             -o-transform: scale(1.0) translateY(0px) rotateX(0deg);\n                transform: scale(1.0) translateY(0px) rotateX(0deg);\n\n        -webkit-box-shadow: 0 0 0 rgba(0,0,0,0);\n                box-shadow: 0 0 0 rgba(0,0,0,0);\n    }\n    100%\n    {\n        -webkit-transform: scale(1.2) translateY(-25px) rotateX(45deg);\n            -ms-transform: scale(1.2) translateY(-25px) rotateX(45deg);\n             -o-transform: scale(1.2) translateY(-25px) rotateX(45deg);\n                transform: scale(1.2) translateY(-25px) rotateX(45deg);\n\n        background: rgb(255,255,255);\n        -webkit-box-shadow: 0 25px 40px rgb(255,255,255);\n                box-shadow: 0 25px 40px rgb(255,255,255);\n    }\n}\n.demo_9{\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    [data-loader='jumping']\n    {\n        position: relative;\n        width: 50px;\n        -webkit-perspective: 200px;\n        -moz-perspective: 200px;\n            -ms-perspective: 200px;\n                perspective: 200px;\n    }\n    [data-loader='jumping']:before,\n    [data-loader='jumping']:after\n    {\n        position: absolute;\n\n        width: 20px;\n        height: 20px;\n\n        content: '';\n        animation: jumping .5s infinite alternate;\n\n        background: rgba(0,0,0,0);\n    }\n    [data-loader='jumping']:before\n    {\n        left: 0;\n    }\n    [data-loader='jumping']:after\n    {\n        right: 0;\n\n        animation-delay: .15s;\n    }\n}\n```\n9.\n```html\n<div class=\"demo demo_10\">\n    <div data-loader=\"circle-side\"></div>\n</div>\n@keyframes circle-side\n{\n    from {\n        transform: rotate(0deg);\n        -webkit-transform: rotate(0deg);\n        -moz-transform: rotate(0deg);\n        -ms-transform: rotate(0deg);\n        -o-transform: rotate(0deg);\n    }\n    to {\n        transform: rotate(360deg);\n        -webkit-transform: rotate(360deg);\n        -moz-transform: rotate(360deg);\n        -ms-transform: rotate(360deg);\n        -o-transform: rotate(360deg);\n    }\n}\n.demo_10{\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    [data-loader='circle-side']\n    {\n        width: 64px;\n        height: 64px;\n        border: 4px solid #fff;\n        border-top-color: rgba(0,0,0,.2);\n        border-right-color: rgba(0,0,0,.2);\n        border-bottom-color: rgba(0,0,0,.2);\n        border-radius: 100%;\n        animation: circle-side 2s linear infinite;\n        -webkit-animation: circle-side 2s linear infinite;\n    }\n}\n```\n10.\n```html\n<div class=\"demo demo_11\">\n    <div data-loader=\"ball-rotate\"></div>\n</div>\n@keyframes ball-rotate-between {\n    0% {\n        transform: scale(1);\n        -webkit-transform: scale(1);\n        -moz-transform: scale(1);\n        -ms-transform: scale(1);\n        -o-transform: scale(1);\n    }\n    100% {\n        transform: scale(1.2);\n        -webkit-transform: scale(1.2);\n        -moz-transform: scale(1.2);\n        -ms-transform: scale(1.2);\n        -o-transform: scale(1.2);\n    }\n}\n@keyframes ball-rotate {\n    from {\n        transform: rotate(0deg) scale(1);\n        -webkit-transform: rotate(0deg) scale(1);\n        -moz-transform: rotate(0deg) scale(1);\n        -ms-transform: rotate(0deg) scale(1);\n        -o-transform: rotate(0deg) scale(1);\n    }\n    to {\n        transform: rotate(360deg) scale(1.2);\n        -webkit-transform: rotate(360deg) scale(1.2);\n        -moz-transform: rotate(360deg) scale(1.2);\n        -ms-transform: rotate(360deg) scale(1.2);\n        -o-transform: rotate(360deg) scale(1.2);\n    }\n}\n.demo_11{\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    [data-loader='ball-rotate']\n    {\n        width: 14px;\n        height: 14px;\n        background: #fff;\n        border-radius: 100%;\n        -webkit-border-radius: 100%;\n        -moz-border-radius: 100%;\n        -ms-border-radius: 100%;\n        -o-border-radius: 100%;\n        position: relative;\n        animation: ball-rotate 2s linear infinite;\n        -webkit-animation: ball-rotate 2s linear infinite;\n        &:before\n        {\n            content: '';\n            display: block;\n            width: 14px;\n            height: 14px;\n            background: rgba(255, 255, 255, .8);\n            border-radius: 100%;\n            position: absolute;\n            left: 30px;\n            animation: ball-rotate-between 2s linear infinite;\n            -webkit-animation: ball-rotate-between 2s linear infinite;\n        }\n        &:after{\n            content: '';\n            display: block;\n            width: 14px;\n            height: 14px;\n            background: rgba(255, 255, 255, .8);\n            border-radius: 100%;\n            position: absolute;\n            right: 30px;\n            animation: ball-rotate-between 2s linear infinite;\n            -webkit-animation: ball-rotate-between 2s linear infinite;\n        }\n    }\n}\n```\n\n### github: https://github.com/xiaosongread/gulp-cli","slug":"css3-anmation","published":1,"updated":"2020-07-01T09:12:26.382Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdr00y550008e7zcrvw09fff","content":"<h2 id=\"css3-anmation-loading\"><a href=\"#css3-anmation-loading\" class=\"headerlink\" title=\"css3-anmation-loading\"></a>css3-anmation-loading</h2><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">animation-name</span>\t规定需要绑定到选择器的 <span class=\"selector-tag\">keyframe</span> 名称。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">animation-duration</span>\t规定完成动画所花费的时间，以秒或毫秒计。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">animation-timing-function</span>\t规定动画的速度曲线。</span><br><span class=\"line\"><span class=\"selector-tag\">--</span> <span class=\"selector-tag\">linear</span>\t动画从头到尾的速度是相同的。</span><br><span class=\"line\"><span class=\"selector-tag\">--</span> <span class=\"selector-tag\">ease</span>\t默认。动画以低速开始，然后加快，在结束前变慢。</span><br><span class=\"line\"><span class=\"selector-tag\">--</span> <span class=\"selector-tag\">ease-in</span>\t动画以低速开始。</span><br><span class=\"line\"><span class=\"selector-tag\">--</span> <span class=\"selector-tag\">ease-out</span>\t动画以低速结束。</span><br><span class=\"line\"><span class=\"selector-tag\">--</span> <span class=\"selector-tag\">ease-in-out</span>\t动画以低速开始和结束。</span><br><span class=\"line\"><span class=\"selector-tag\">--</span> <span class=\"selector-tag\">cubic-bezier</span>(<span class=\"selector-tag\">n</span>,<span class=\"selector-tag\">n</span>,<span class=\"selector-tag\">n</span>,<span class=\"selector-tag\">n</span>)\t在 <span class=\"selector-tag\">cubic-bezier</span> 函数中自己的值。可能的值是从 0 到 1 的数值。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">animation-delay</span>\t规定在动画开始之前的延迟。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">animation-iteration-count</span>\t规定动画应该播放的次数。</span><br><span class=\"line\"><span class=\"selector-tag\">--</span> <span class=\"selector-tag\">n</span>\t定义动画播放次数的数值。</span><br><span class=\"line\"><span class=\"selector-tag\">--</span> <span class=\"selector-tag\">infinite</span>\t规定动画应该无限次播放。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">animation-direction</span>\t规定是否应该轮流反向播放动画。</span><br><span class=\"line\"><span class=\"selector-tag\">--</span> <span class=\"selector-tag\">normal</span>\t默认值。动画应该正常播放。</span><br><span class=\"line\"><span class=\"selector-tag\">--</span> <span class=\"selector-tag\">alternate</span>\t动画应该轮流反向播放。</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<p><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/loading.gif\" alt=\"blockchain\"></p>\n<p>公用样式：<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">body</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">background</span>: <span class=\"number\">#40479a</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.demo</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">120px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">120px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">margin</span>: <span class=\"number\">15px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">float</span>: left;</span><br><span class=\"line\">    &amp;:hover &#123;</span><br><span class=\"line\">        <span class=\"selector-tag\">border</span>: 1<span class=\"selector-tag\">px</span> <span class=\"selector-tag\">dashed</span> <span class=\"selector-id\">#fff</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>1.<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"demo demo_1\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"demo_1_box\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"redius_1_1\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"redius_1_2\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">@keyframes rotate-redius_1</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    0% &#123; transform:rotate(30deg); &#125;</span><br><span class=\"line\">    50% &#123; transform:rotate(210deg); &#125;</span><br><span class=\"line\">    100%&#123; transform:rotate(-30deg); &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">@keyframes rotate-redius_2</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    0% &#123;</span><br><span class=\"line\">        transform:rotate(-30deg);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">    50% &#123;</span><br><span class=\"line\">        transform:rotate(150deg);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">    100%&#123;</span><br><span class=\"line\">        transform:rotate(-90deg);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.demo_1&#123;</span><br><span class=\"line\">    .demo_1_box&#123;</span><br><span class=\"line\">        position: relative;</span><br><span class=\"line\">        top: 28px;</span><br><span class=\"line\">        left: 28px;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    .redius_1_1&#123;</span><br><span class=\"line\">        width: 64px;</span><br><span class=\"line\">        height: 64px;</span><br><span class=\"line\">        position: absolute;</span><br><span class=\"line\">        top: 0;</span><br><span class=\"line\">        left: 0;</span><br><span class=\"line\">        border: 4px solid #fff;</span><br><span class=\"line\">        border-radius: 100%;</span><br><span class=\"line\">        border-bottom-color: transparent;</span><br><span class=\"line\">        border-top-color: transparent;</span><br><span class=\"line\">        transform:rotate(30deg);</span><br><span class=\"line\">        animation: rotate-redius_1 2s linear infinite;</span><br><span class=\"line\">        -webkit-animation: rotate-redius_1 2s linear infinite;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    .redius_1_2&#123;</span><br><span class=\"line\">        width: 30px;</span><br><span class=\"line\">        height: 30px;</span><br><span class=\"line\">        position: absolute;</span><br><span class=\"line\">        top: 16px;</span><br><span class=\"line\">        left: 16px;</span><br><span class=\"line\">        border: 4px solid #fff;</span><br><span class=\"line\">        border-radius: 100%;</span><br><span class=\"line\">        border-bottom-color: transparent;</span><br><span class=\"line\">        border-top-color: transparent;</span><br><span class=\"line\">        border-radius: 100%;</span><br><span class=\"line\">        transform:rotate(-30deg);</span><br><span class=\"line\">        animation: rotate-redius_2 1s linear infinite;</span><br><span class=\"line\">        -webkit-animation: rotate-redius_2 1s linear infinite;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>2.<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"demo demo_2\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"redius_2_1\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">@keyframes rotate_2 &#123;</span><br><span class=\"line\">    from &#123;</span><br><span class=\"line\">        transform:rotate(0deg);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    to &#123;</span><br><span class=\"line\">        transform:rotate(360deg);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.demo_2&#123;</span><br><span class=\"line\">    display: flex;</span><br><span class=\"line\">    justify-content: center;</span><br><span class=\"line\">    align-items: center;</span><br><span class=\"line\">    .redius_2_1&#123;</span><br><span class=\"line\">        width: 64px;</span><br><span class=\"line\">        height: 64px;</span><br><span class=\"line\">        border: 4px solid #fff;</span><br><span class=\"line\">        border-radius: 100%;</span><br><span class=\"line\">        border-right-color: transparent;</span><br><span class=\"line\">        animation: rotate_2 1s linear infinite;</span><br><span class=\"line\">        -webkit-animation: rotate_2 1s linear infinite;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>3.<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"demo demo_3\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"pacman_box\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"pacman_1\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"pacman_2\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"circle_1\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"circle_2\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"circle_3\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">@keyframes rotate_3_1 &#123;</span><br><span class=\"line\">    from &#123;</span><br><span class=\"line\">        transform:rotate(45deg);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    to &#123;</span><br><span class=\"line\">        transform:rotate(0deg);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">@keyframes rotate_3_2 &#123;</span><br><span class=\"line\">    from &#123;</span><br><span class=\"line\">        transform:rotate(-45deg);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    to &#123;</span><br><span class=\"line\">        transform:rotate(0deg);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">@keyframes circle_1 &#123;</span><br><span class=\"line\">    from &#123;</span><br><span class=\"line\">        opacity: 1;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    to &#123;</span><br><span class=\"line\">        opacity: 0;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">@keyframes circle_2 &#123;</span><br><span class=\"line\">    from &#123;</span><br><span class=\"line\">        opacity: 0.5;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    to &#123;</span><br><span class=\"line\">        opacity: 1;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">@keyframes circle_3 &#123;</span><br><span class=\"line\">    from &#123;</span><br><span class=\"line\">        opacity: 0;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    to &#123;</span><br><span class=\"line\">        opacity: 1;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.demo_3&#123;</span><br><span class=\"line\">    .pacman_box&#123;</span><br><span class=\"line\">        position: relative;</span><br><span class=\"line\">        top: 32px;</span><br><span class=\"line\">        .pacman_1&#123;</span><br><span class=\"line\">            width: 0;</span><br><span class=\"line\">            height: 0;</span><br><span class=\"line\">            border-radius:100%;</span><br><span class=\"line\">            border: 32px solid #fff;</span><br><span class=\"line\">            border-right-color: transparent;</span><br><span class=\"line\">            position: absolute;</span><br><span class=\"line\">            top: 0;</span><br><span class=\"line\">            left: 0;</span><br><span class=\"line\">            transform: rotate(45deg);</span><br><span class=\"line\">            animation: rotate_3_1 0.5s linear infinite alternate;</span><br><span class=\"line\">            -webkit-animation: rotate_3_1 0.5s linear infinite alternate;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        .pacman_2&#123;</span><br><span class=\"line\">            width: 0;</span><br><span class=\"line\">            height: 0;</span><br><span class=\"line\">            border-radius:100%;</span><br><span class=\"line\">            border: 32px solid #fff;</span><br><span class=\"line\">            border-right-color: transparent;</span><br><span class=\"line\">            position: absolute;</span><br><span class=\"line\">            top: 0;</span><br><span class=\"line\">            left: 0;</span><br><span class=\"line\">            transform: rotate(-45deg);</span><br><span class=\"line\">            animation: rotate_3_2 0.5s linear infinite alternate;</span><br><span class=\"line\">            -webkit-animation: rotate_3_2 0.5s linear infinite alternate;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        .circle_1&#123;</span><br><span class=\"line\">            width: 14px;</span><br><span class=\"line\">            height: 14px;</span><br><span class=\"line\">            background: #fff;</span><br><span class=\"line\">            position: absolute;</span><br><span class=\"line\">            top: 25px;</span><br><span class=\"line\">            right: 65px;</span><br><span class=\"line\">            border-radius: 100%;</span><br><span class=\"line\">            opacity: 0;</span><br><span class=\"line\">            animation: circle_1 0.5s linear infinite alternate;</span><br><span class=\"line\">            -webkit-animation: circle_1 0.5s linear infinite alternate;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        .circle_2&#123;</span><br><span class=\"line\">            width: 14px;</span><br><span class=\"line\">            height: 14px;</span><br><span class=\"line\">            background: #fff;</span><br><span class=\"line\">            position: absolute;</span><br><span class=\"line\">            top: 25px;</span><br><span class=\"line\">            right: 35px;</span><br><span class=\"line\">            border-radius: 100%;</span><br><span class=\"line\">            opacity: 0.5;</span><br><span class=\"line\">            animation: circle_2 0.5s linear infinite alternate;</span><br><span class=\"line\">            -webkit-animation: circle_2 0.5s linear infinite alternate;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        .circle_3&#123;</span><br><span class=\"line\">            width: 14px;</span><br><span class=\"line\">            height: 14px;</span><br><span class=\"line\">            background: #fff;</span><br><span class=\"line\">            position: absolute;</span><br><span class=\"line\">            top: 25px;</span><br><span class=\"line\">            right: 5px;</span><br><span class=\"line\">            border-radius: 100%;</span><br><span class=\"line\">            animation: circle_3 0.5s linear infinite alternate;</span><br><span class=\"line\">            -webkit-animation: circle_3 0.5s linear infinite alternate;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>4.<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"demo demo_4\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"demo4_circle_box\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"demo4_circle_1\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"demo4_circle_2\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">@keyframes demo4_circle_1&#123;</span><br><span class=\"line\">    from &#123;</span><br><span class=\"line\">        transform:scale(1);</span><br><span class=\"line\">        -webkit-transform:scale(1);</span><br><span class=\"line\">        -moz-transform:scale(1);</span><br><span class=\"line\">        -ms-transform:scale(1);</span><br><span class=\"line\">        -o-transform:scale(1);</span><br><span class=\"line\">        opacity: .5;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    to &#123;</span><br><span class=\"line\">        transform:scale(0);</span><br><span class=\"line\">        -webkit-transform:scale(0);</span><br><span class=\"line\">        -moz-transform:scale(0);</span><br><span class=\"line\">        -ms-transform:scale(0);</span><br><span class=\"line\">        -o-transform:scale(0);</span><br><span class=\"line\">        opacity: 0;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">@keyframes demo4_circle_2&#123;</span><br><span class=\"line\">    from &#123;</span><br><span class=\"line\">        transform:scale(0);</span><br><span class=\"line\">        -webkit-transform:scale(0);</span><br><span class=\"line\">        -moz-transform:scale(0);</span><br><span class=\"line\">        -ms-transform:scale(0);</span><br><span class=\"line\">        -o-transform:scale(0);</span><br><span class=\"line\">        opacity: 1;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    to &#123;</span><br><span class=\"line\">        transform:scale(1);</span><br><span class=\"line\">        -webkit-transform:scale(1);</span><br><span class=\"line\">        -moz-transform:scale(1);</span><br><span class=\"line\">        -ms-transform:scale(1);</span><br><span class=\"line\">        -o-transform:scale(1);</span><br><span class=\"line\">        opacity: .5;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.demo_4&#123;</span><br><span class=\"line\">    .demo4_circle_box&#123;</span><br><span class=\"line\">        position: relative;</span><br><span class=\"line\">        top: 28px;</span><br><span class=\"line\">        left: 28px;</span><br><span class=\"line\">        .demo4_circle_1&#123;</span><br><span class=\"line\">            width: 64px;</span><br><span class=\"line\">            height: 64px;</span><br><span class=\"line\">            background: #fff;</span><br><span class=\"line\">            border-radius:100%;</span><br><span class=\"line\">            position: absolute;</span><br><span class=\"line\">            left: 15px;</span><br><span class=\"line\">            opacity: .5;</span><br><span class=\"line\">            animation: demo4_circle_1 1s linear infinite alternate;</span><br><span class=\"line\">            -webkit-animation: demo4_circle_1 1s linear infinite alternate;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        .demo4_circle_2&#123;</span><br><span class=\"line\">            width: 64px;</span><br><span class=\"line\">            height: 64px;</span><br><span class=\"line\">            background: #fff;</span><br><span class=\"line\">            border-radius:100%;</span><br><span class=\"line\">            position: absolute;</span><br><span class=\"line\">            left: 15px;</span><br><span class=\"line\">            transform:scale(0);</span><br><span class=\"line\">            -webkit-transform:scale(0);</span><br><span class=\"line\">            -moz-transform:scale(0);</span><br><span class=\"line\">            -ms-transform:scale(0);</span><br><span class=\"line\">            -o-transform:scale(0);</span><br><span class=\"line\">            animation: demo4_circle_2 1s linear infinite alternate;</span><br><span class=\"line\">            -webkit-animation: demo4_circle_2 1s linear infinite alternate;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>5.<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"demo demo_6\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"demo6_circle_box\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"demo6_son_1 demo6_son\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"demo6_son_2 demo6_son\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"demo6_son_3 demo6_son\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"demo6_son_4 demo6_son\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"demo6_son_5 demo6_son\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">@keyframes demo6_son&#123;</span><br><span class=\"line\">    0% &#123;</span><br><span class=\"line\">        transform: scaleY(1);</span><br><span class=\"line\">        -webkit-transform: scaleY(1);</span><br><span class=\"line\">        -moz-transform: scaleY(1);</span><br><span class=\"line\">        -ms-transform: scaleY(1);</span><br><span class=\"line\">        -o-transform: scaleY(1);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    25% &#123;</span><br><span class=\"line\">        transform:scaleY(2);</span><br><span class=\"line\">        -webkit-transform:scaleY(2);</span><br><span class=\"line\">        -moz-transform:scaleY(2);</span><br><span class=\"line\">        -ms-transform:scaleY(2);</span><br><span class=\"line\">        -o-transform:scaleY(2);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    50% &#123;</span><br><span class=\"line\">        transform:scaleY(1);</span><br><span class=\"line\">        -webkit-transform:scaleY(1);</span><br><span class=\"line\">        -moz-transform:scaleY(1);</span><br><span class=\"line\">        -ms-transform:scaleY(1);</span><br><span class=\"line\">        -o-transform:scaleY(1);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    100% &#123;</span><br><span class=\"line\">        animation-play-state: paused;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.demo_6&#123;</span><br><span class=\"line\">    display: flex;</span><br><span class=\"line\">    justify-content: center;</span><br><span class=\"line\">    align-items: center;</span><br><span class=\"line\">    .demo6_circle_box&#123;</span><br><span class=\"line\">        display: flex;</span><br><span class=\"line\">        .demo6_son&#123;</span><br><span class=\"line\">            width: 7px;</span><br><span class=\"line\">            height: 32px;</span><br><span class=\"line\">            background: #fff;</span><br><span class=\"line\">            &amp;:not(:last-child) &#123;</span><br><span class=\"line\">                margin-right: 10px;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        .demo6_son_1 &#123;</span><br><span class=\"line\">            animation: demo6_son infinite 2s ease-in-out;</span><br><span class=\"line\">            -webkit-animation: demo6_son infinite 2s ease-in-out;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        .demo6_son_2 &#123;</span><br><span class=\"line\">            animation: demo6_son infinite 2s ease-in-out .3s;</span><br><span class=\"line\">            -webkit-animation: demo6_son infinite 2s ease-in-out .3s;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        .demo6_son_3 &#123;</span><br><span class=\"line\">            animation: demo6_son infinite 2s ease-in-out .6s;</span><br><span class=\"line\">            -webkit-animation: demo6_son infinite 2s ease-in-out .6s;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        .demo6_son_4 &#123;</span><br><span class=\"line\">            animation: demo6_son infinite 2s ease-in-out .9s;</span><br><span class=\"line\">            -webkit-animation: demo6_son infinite 2s ease-in-out .9s;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        .demo6_son_5 &#123;</span><br><span class=\"line\">            animation: demo6_son infinite 2s ease-in-out 1.2s;</span><br><span class=\"line\">            -webkit-animation: demo6_son infinite 2s ease-in-out 1.2s;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>6.<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"demo demo_7\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"demo7_circle_box\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">@keyframes demo_7&#123;</span><br><span class=\"line\">    from &#123;</span><br><span class=\"line\">        transform: scale(1);</span><br><span class=\"line\">        -webkit-transform: scale(1);</span><br><span class=\"line\">        -moz-transform: scale(1);</span><br><span class=\"line\">        -ms-transform: scale(1);</span><br><span class=\"line\">        -o-transform: scale(1);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    to &#123;</span><br><span class=\"line\">        transform: scale(1.3);</span><br><span class=\"line\">        -webkit-transform: scale(1.3);</span><br><span class=\"line\">        -moz-transform: scale(1.3);</span><br><span class=\"line\">        -ms-transform: scale(1.3);</span><br><span class=\"line\">        -o-transform: scale(1.3);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.demo_7&#123;</span><br><span class=\"line\">    display: flex;</span><br><span class=\"line\">    justify-content: center;</span><br><span class=\"line\">    align-items: center;</span><br><span class=\"line\">    .demo7_circle_box&#123;</span><br><span class=\"line\">        position: relative;</span><br><span class=\"line\">        width: 40px;</span><br><span class=\"line\">        height: 70px;</span><br><span class=\"line\">        animation: demo_7  1s linear infinite alternate;</span><br><span class=\"line\">        -webkit-animation: demo_7  1s linear infinite alternate;</span><br><span class=\"line\">        &amp;:before&#123;</span><br><span class=\"line\">            content: '';</span><br><span class=\"line\">            width: 30px;</span><br><span class=\"line\">            height: 50px;</span><br><span class=\"line\">            display: block;</span><br><span class=\"line\">            border-top-left-radius: 15px;</span><br><span class=\"line\">            border-top-right-radius: 15px;</span><br><span class=\"line\">            background: #fff;</span><br><span class=\"line\">            transform: rotate(45deg);</span><br><span class=\"line\">            -webkit-transform: rotate(45deg);</span><br><span class=\"line\">            -moz-transform: rotate(45deg);</span><br><span class=\"line\">            -ms-transform: rotate(45deg);</span><br><span class=\"line\">            -o-transform: rotate(45deg);</span><br><span class=\"line\">            transform-origin: 0 100%;</span><br><span class=\"line\">            position: absolute;</span><br><span class=\"line\">            top: 0;</span><br><span class=\"line\">            left: 0;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        &amp;:after&#123;</span><br><span class=\"line\">            content: '';</span><br><span class=\"line\">            width: 30px;</span><br><span class=\"line\">            height: 50px;</span><br><span class=\"line\">            display: block;</span><br><span class=\"line\">            border-top-left-radius: 15px;</span><br><span class=\"line\">            border-top-right-radius: 15px;</span><br><span class=\"line\">            background: #fff;</span><br><span class=\"line\">            transform: rotate(-45deg);</span><br><span class=\"line\">            -webkit-transform: rotate(-45deg);</span><br><span class=\"line\">            -moz-transform: rotate(-45deg);</span><br><span class=\"line\">            -ms-transform: rotate(-45deg);</span><br><span class=\"line\">            -o-transform: rotate(-45deg);</span><br><span class=\"line\">            transform-origin: 100% 100%;</span><br><span class=\"line\">            position: absolute;</span><br><span class=\"line\">            top: 0;</span><br><span class=\"line\">            left: 12px;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>7.<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"demo demo_8\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"demo8_circle_box\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">@keyframes demo_8 &#123;</span><br><span class=\"line\">    from &#123;</span><br><span class=\"line\">        transform: rotate(0deg);</span><br><span class=\"line\">        -webkit-transform: rotate(0deg);</span><br><span class=\"line\">        -moz-transform: rotate(0deg);</span><br><span class=\"line\">        -ms-transform: rotate(0deg);</span><br><span class=\"line\">        -o-transform: rotate(0deg);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    to &#123;</span><br><span class=\"line\">        transform: rotate(360deg);</span><br><span class=\"line\">        -webkit-transform: rotate(360deg);</span><br><span class=\"line\">        -moz-transform: rotate(360deg);</span><br><span class=\"line\">        -ms-transform: rotate(360deg);</span><br><span class=\"line\">        -o-transform: rotate(360deg);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.demo_8&#123;</span><br><span class=\"line\">    display: flex;</span><br><span class=\"line\">    justify-content: center;</span><br><span class=\"line\">    align-items: center;</span><br><span class=\"line\">    .demo8_circle_box&#123;</span><br><span class=\"line\">        position: relative;</span><br><span class=\"line\">        width: 30px;</span><br><span class=\"line\">        height: 30px;</span><br><span class=\"line\">        padding: 23px;</span><br><span class=\"line\">        border: 1px solid #fff;</span><br><span class=\"line\">        border-radius: 100%;</span><br><span class=\"line\">        -webkit-border-radius: 100%;</span><br><span class=\"line\">        -moz-border-radius: 100%;</span><br><span class=\"line\">        -ms-border-radius: 100%;</span><br><span class=\"line\">        -o-border-radius: 100%;</span><br><span class=\"line\">        animation: demo_8 3s linear infinite;</span><br><span class=\"line\">        //linear//意思就是匀速的运动infinite//就是无限滚动的意思-webkit-animation:;</span><br><span class=\"line\">        -webkit-animation: demo_8 3s linear infinite;</span><br><span class=\"line\">        &amp;:before&#123;</span><br><span class=\"line\">            content: '';</span><br><span class=\"line\">            display: block;</span><br><span class=\"line\">            width: 30px;</span><br><span class=\"line\">            height: 30px;</span><br><span class=\"line\">            background: #fff;</span><br><span class=\"line\">            box-shadow: 0 0 10px #fff;</span><br><span class=\"line\">            border-radius: 30px;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        &amp;:after&#123;</span><br><span class=\"line\">            content: '';</span><br><span class=\"line\">            display: block;</span><br><span class=\"line\">            width: 20px;</span><br><span class=\"line\">            height: 20px;</span><br><span class=\"line\">            background: #fff;</span><br><span class=\"line\">            border-radius: 20px;</span><br><span class=\"line\">            position: absolute;</span><br><span class=\"line\">            top: 0;</span><br><span class=\"line\">            left: 0;</span><br><span class=\"line\">            box-shadow: 0 0 5px #fff;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>8.<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"demo demo_9\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">data-loader</span>=<span class=\"string\">\"jumping\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">@-webkit-keyframes jumping</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    0%</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        -webkit-transform: scale(1.0) translateY(0px) rotateX(0deg);</span><br><span class=\"line\">            -ms-transform: scale(1.0) translateY(0px) rotateX(0deg);</span><br><span class=\"line\">             -o-transform: scale(1.0) translateY(0px) rotateX(0deg);</span><br><span class=\"line\">                transform: scale(1.0) translateY(0px) rotateX(0deg);</span><br><span class=\"line\"></span><br><span class=\"line\">        -webkit-box-shadow: 0 0 0 rgba(0,0,0,0);</span><br><span class=\"line\">                box-shadow: 0 0 0 rgba(0,0,0,0);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    100%</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        -webkit-transform: scale(1.2) translateY(-25px) rotateX(45deg);</span><br><span class=\"line\">            -ms-transform: scale(1.2) translateY(-25px) rotateX(45deg);</span><br><span class=\"line\">             -o-transform: scale(1.2) translateY(-25px) rotateX(45deg);</span><br><span class=\"line\">                transform: scale(1.2) translateY(-25px) rotateX(45deg);</span><br><span class=\"line\"></span><br><span class=\"line\">        background: rgb(255,255,255);</span><br><span class=\"line\">        -webkit-box-shadow: 0 25px 40px rgb(255,255,255);</span><br><span class=\"line\">                box-shadow: 0 25px 40px rgb(255,255,255);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.demo_9&#123;</span><br><span class=\"line\">    display: flex;</span><br><span class=\"line\">    justify-content: center;</span><br><span class=\"line\">    align-items: center;</span><br><span class=\"line\">    [data-loader='jumping']</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        position: relative;</span><br><span class=\"line\">        width: 50px;</span><br><span class=\"line\">        -webkit-perspective: 200px;</span><br><span class=\"line\">        -moz-perspective: 200px;</span><br><span class=\"line\">            -ms-perspective: 200px;</span><br><span class=\"line\">                perspective: 200px;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    [data-loader='jumping']:before,</span><br><span class=\"line\">    [data-loader='jumping']:after</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        position: absolute;</span><br><span class=\"line\"></span><br><span class=\"line\">        width: 20px;</span><br><span class=\"line\">        height: 20px;</span><br><span class=\"line\"></span><br><span class=\"line\">        content: '';</span><br><span class=\"line\">        animation: jumping .5s infinite alternate;</span><br><span class=\"line\"></span><br><span class=\"line\">        background: rgba(0,0,0,0);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    [data-loader='jumping']:before</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        left: 0;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    [data-loader='jumping']:after</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        right: 0;</span><br><span class=\"line\"></span><br><span class=\"line\">        animation-delay: .15s;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>9.<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"demo demo_10\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">data-loader</span>=<span class=\"string\">\"circle-side\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">@keyframes circle-side</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    from &#123;</span><br><span class=\"line\">        transform: rotate(0deg);</span><br><span class=\"line\">        -webkit-transform: rotate(0deg);</span><br><span class=\"line\">        -moz-transform: rotate(0deg);</span><br><span class=\"line\">        -ms-transform: rotate(0deg);</span><br><span class=\"line\">        -o-transform: rotate(0deg);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    to &#123;</span><br><span class=\"line\">        transform: rotate(360deg);</span><br><span class=\"line\">        -webkit-transform: rotate(360deg);</span><br><span class=\"line\">        -moz-transform: rotate(360deg);</span><br><span class=\"line\">        -ms-transform: rotate(360deg);</span><br><span class=\"line\">        -o-transform: rotate(360deg);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.demo_10&#123;</span><br><span class=\"line\">    display: flex;</span><br><span class=\"line\">    justify-content: center;</span><br><span class=\"line\">    align-items: center;</span><br><span class=\"line\">    [data-loader='circle-side']</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        width: 64px;</span><br><span class=\"line\">        height: 64px;</span><br><span class=\"line\">        border: 4px solid #fff;</span><br><span class=\"line\">        border-top-color: rgba(0,0,0,.2);</span><br><span class=\"line\">        border-right-color: rgba(0,0,0,.2);</span><br><span class=\"line\">        border-bottom-color: rgba(0,0,0,.2);</span><br><span class=\"line\">        border-radius: 100%;</span><br><span class=\"line\">        animation: circle-side 2s linear infinite;</span><br><span class=\"line\">        -webkit-animation: circle-side 2s linear infinite;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>10.<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"demo demo_11\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">data-loader</span>=<span class=\"string\">\"ball-rotate\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">@keyframes ball-rotate-between &#123;</span><br><span class=\"line\">    0% &#123;</span><br><span class=\"line\">        transform: scale(1);</span><br><span class=\"line\">        -webkit-transform: scale(1);</span><br><span class=\"line\">        -moz-transform: scale(1);</span><br><span class=\"line\">        -ms-transform: scale(1);</span><br><span class=\"line\">        -o-transform: scale(1);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    100% &#123;</span><br><span class=\"line\">        transform: scale(1.2);</span><br><span class=\"line\">        -webkit-transform: scale(1.2);</span><br><span class=\"line\">        -moz-transform: scale(1.2);</span><br><span class=\"line\">        -ms-transform: scale(1.2);</span><br><span class=\"line\">        -o-transform: scale(1.2);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">@keyframes ball-rotate &#123;</span><br><span class=\"line\">    from &#123;</span><br><span class=\"line\">        transform: rotate(0deg) scale(1);</span><br><span class=\"line\">        -webkit-transform: rotate(0deg) scale(1);</span><br><span class=\"line\">        -moz-transform: rotate(0deg) scale(1);</span><br><span class=\"line\">        -ms-transform: rotate(0deg) scale(1);</span><br><span class=\"line\">        -o-transform: rotate(0deg) scale(1);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    to &#123;</span><br><span class=\"line\">        transform: rotate(360deg) scale(1.2);</span><br><span class=\"line\">        -webkit-transform: rotate(360deg) scale(1.2);</span><br><span class=\"line\">        -moz-transform: rotate(360deg) scale(1.2);</span><br><span class=\"line\">        -ms-transform: rotate(360deg) scale(1.2);</span><br><span class=\"line\">        -o-transform: rotate(360deg) scale(1.2);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.demo_11&#123;</span><br><span class=\"line\">    display: flex;</span><br><span class=\"line\">    justify-content: center;</span><br><span class=\"line\">    align-items: center;</span><br><span class=\"line\">    [data-loader='ball-rotate']</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        width: 14px;</span><br><span class=\"line\">        height: 14px;</span><br><span class=\"line\">        background: #fff;</span><br><span class=\"line\">        border-radius: 100%;</span><br><span class=\"line\">        -webkit-border-radius: 100%;</span><br><span class=\"line\">        -moz-border-radius: 100%;</span><br><span class=\"line\">        -ms-border-radius: 100%;</span><br><span class=\"line\">        -o-border-radius: 100%;</span><br><span class=\"line\">        position: relative;</span><br><span class=\"line\">        animation: ball-rotate 2s linear infinite;</span><br><span class=\"line\">        -webkit-animation: ball-rotate 2s linear infinite;</span><br><span class=\"line\">        &amp;:before</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            content: '';</span><br><span class=\"line\">            display: block;</span><br><span class=\"line\">            width: 14px;</span><br><span class=\"line\">            height: 14px;</span><br><span class=\"line\">            background: rgba(255, 255, 255, .8);</span><br><span class=\"line\">            border-radius: 100%;</span><br><span class=\"line\">            position: absolute;</span><br><span class=\"line\">            left: 30px;</span><br><span class=\"line\">            animation: ball-rotate-between 2s linear infinite;</span><br><span class=\"line\">            -webkit-animation: ball-rotate-between 2s linear infinite;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        &amp;:after&#123;</span><br><span class=\"line\">            content: '';</span><br><span class=\"line\">            display: block;</span><br><span class=\"line\">            width: 14px;</span><br><span class=\"line\">            height: 14px;</span><br><span class=\"line\">            background: rgba(255, 255, 255, .8);</span><br><span class=\"line\">            border-radius: 100%;</span><br><span class=\"line\">            position: absolute;</span><br><span class=\"line\">            right: 30px;</span><br><span class=\"line\">            animation: ball-rotate-between 2s linear infinite;</span><br><span class=\"line\">            -webkit-animation: ball-rotate-between 2s linear infinite;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"github-https-github-com-xiaosongread-gulp-cli\"><a href=\"#github-https-github-com-xiaosongread-gulp-cli\" class=\"headerlink\" title=\"github: https://github.com/xiaosongread/gulp-cli\"></a>github: <a href=\"https://github.com/xiaosongread/gulp-cli\" target=\"_blank\" rel=\"noopener\">https://github.com/xiaosongread/gulp-cli</a></h3>","site":{"data":{}},"excerpt":"<h2 id=\"css3-anmation-loading\"><a href=\"#css3-anmation-loading\" class=\"headerlink\" title=\"css3-anmation-loading\"></a>css3-anmation-loading</h2><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">animation-name</span>\t规定需要绑定到选择器的 <span class=\"selector-tag\">keyframe</span> 名称。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">animation-duration</span>\t规定完成动画所花费的时间，以秒或毫秒计。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">animation-timing-function</span>\t规定动画的速度曲线。</span><br><span class=\"line\"><span class=\"selector-tag\">--</span> <span class=\"selector-tag\">linear</span>\t动画从头到尾的速度是相同的。</span><br><span class=\"line\"><span class=\"selector-tag\">--</span> <span class=\"selector-tag\">ease</span>\t默认。动画以低速开始，然后加快，在结束前变慢。</span><br><span class=\"line\"><span class=\"selector-tag\">--</span> <span class=\"selector-tag\">ease-in</span>\t动画以低速开始。</span><br><span class=\"line\"><span class=\"selector-tag\">--</span> <span class=\"selector-tag\">ease-out</span>\t动画以低速结束。</span><br><span class=\"line\"><span class=\"selector-tag\">--</span> <span class=\"selector-tag\">ease-in-out</span>\t动画以低速开始和结束。</span><br><span class=\"line\"><span class=\"selector-tag\">--</span> <span class=\"selector-tag\">cubic-bezier</span>(<span class=\"selector-tag\">n</span>,<span class=\"selector-tag\">n</span>,<span class=\"selector-tag\">n</span>,<span class=\"selector-tag\">n</span>)\t在 <span class=\"selector-tag\">cubic-bezier</span> 函数中自己的值。可能的值是从 0 到 1 的数值。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">animation-delay</span>\t规定在动画开始之前的延迟。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">animation-iteration-count</span>\t规定动画应该播放的次数。</span><br><span class=\"line\"><span class=\"selector-tag\">--</span> <span class=\"selector-tag\">n</span>\t定义动画播放次数的数值。</span><br><span class=\"line\"><span class=\"selector-tag\">--</span> <span class=\"selector-tag\">infinite</span>\t规定动画应该无限次播放。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">animation-direction</span>\t规定是否应该轮流反向播放动画。</span><br><span class=\"line\"><span class=\"selector-tag\">--</span> <span class=\"selector-tag\">normal</span>\t默认值。动画应该正常播放。</span><br><span class=\"line\"><span class=\"selector-tag\">--</span> <span class=\"selector-tag\">alternate</span>\t动画应该轮流反向播放。</span><br></pre></td></tr></table></figure>","more":"<p><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/loading.gif\" alt=\"blockchain\"></p>\n<p>公用样式：<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">body</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">background</span>: <span class=\"number\">#40479a</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.demo</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">120px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">120px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">margin</span>: <span class=\"number\">15px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">float</span>: left;</span><br><span class=\"line\">    &amp;:hover &#123;</span><br><span class=\"line\">        <span class=\"selector-tag\">border</span>: 1<span class=\"selector-tag\">px</span> <span class=\"selector-tag\">dashed</span> <span class=\"selector-id\">#fff</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>1.<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"demo demo_1\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"demo_1_box\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"redius_1_1\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"redius_1_2\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">@keyframes rotate-redius_1</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    0% &#123; transform:rotate(30deg); &#125;</span><br><span class=\"line\">    50% &#123; transform:rotate(210deg); &#125;</span><br><span class=\"line\">    100%&#123; transform:rotate(-30deg); &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">@keyframes rotate-redius_2</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    0% &#123;</span><br><span class=\"line\">        transform:rotate(-30deg);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">    50% &#123;</span><br><span class=\"line\">        transform:rotate(150deg);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">    100%&#123;</span><br><span class=\"line\">        transform:rotate(-90deg);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.demo_1&#123;</span><br><span class=\"line\">    .demo_1_box&#123;</span><br><span class=\"line\">        position: relative;</span><br><span class=\"line\">        top: 28px;</span><br><span class=\"line\">        left: 28px;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    .redius_1_1&#123;</span><br><span class=\"line\">        width: 64px;</span><br><span class=\"line\">        height: 64px;</span><br><span class=\"line\">        position: absolute;</span><br><span class=\"line\">        top: 0;</span><br><span class=\"line\">        left: 0;</span><br><span class=\"line\">        border: 4px solid #fff;</span><br><span class=\"line\">        border-radius: 100%;</span><br><span class=\"line\">        border-bottom-color: transparent;</span><br><span class=\"line\">        border-top-color: transparent;</span><br><span class=\"line\">        transform:rotate(30deg);</span><br><span class=\"line\">        animation: rotate-redius_1 2s linear infinite;</span><br><span class=\"line\">        -webkit-animation: rotate-redius_1 2s linear infinite;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    .redius_1_2&#123;</span><br><span class=\"line\">        width: 30px;</span><br><span class=\"line\">        height: 30px;</span><br><span class=\"line\">        position: absolute;</span><br><span class=\"line\">        top: 16px;</span><br><span class=\"line\">        left: 16px;</span><br><span class=\"line\">        border: 4px solid #fff;</span><br><span class=\"line\">        border-radius: 100%;</span><br><span class=\"line\">        border-bottom-color: transparent;</span><br><span class=\"line\">        border-top-color: transparent;</span><br><span class=\"line\">        border-radius: 100%;</span><br><span class=\"line\">        transform:rotate(-30deg);</span><br><span class=\"line\">        animation: rotate-redius_2 1s linear infinite;</span><br><span class=\"line\">        -webkit-animation: rotate-redius_2 1s linear infinite;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>2.<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"demo demo_2\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"redius_2_1\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">@keyframes rotate_2 &#123;</span><br><span class=\"line\">    from &#123;</span><br><span class=\"line\">        transform:rotate(0deg);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    to &#123;</span><br><span class=\"line\">        transform:rotate(360deg);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.demo_2&#123;</span><br><span class=\"line\">    display: flex;</span><br><span class=\"line\">    justify-content: center;</span><br><span class=\"line\">    align-items: center;</span><br><span class=\"line\">    .redius_2_1&#123;</span><br><span class=\"line\">        width: 64px;</span><br><span class=\"line\">        height: 64px;</span><br><span class=\"line\">        border: 4px solid #fff;</span><br><span class=\"line\">        border-radius: 100%;</span><br><span class=\"line\">        border-right-color: transparent;</span><br><span class=\"line\">        animation: rotate_2 1s linear infinite;</span><br><span class=\"line\">        -webkit-animation: rotate_2 1s linear infinite;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>3.<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"demo demo_3\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"pacman_box\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"pacman_1\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"pacman_2\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"circle_1\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"circle_2\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"circle_3\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">@keyframes rotate_3_1 &#123;</span><br><span class=\"line\">    from &#123;</span><br><span class=\"line\">        transform:rotate(45deg);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    to &#123;</span><br><span class=\"line\">        transform:rotate(0deg);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">@keyframes rotate_3_2 &#123;</span><br><span class=\"line\">    from &#123;</span><br><span class=\"line\">        transform:rotate(-45deg);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    to &#123;</span><br><span class=\"line\">        transform:rotate(0deg);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">@keyframes circle_1 &#123;</span><br><span class=\"line\">    from &#123;</span><br><span class=\"line\">        opacity: 1;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    to &#123;</span><br><span class=\"line\">        opacity: 0;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">@keyframes circle_2 &#123;</span><br><span class=\"line\">    from &#123;</span><br><span class=\"line\">        opacity: 0.5;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    to &#123;</span><br><span class=\"line\">        opacity: 1;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">@keyframes circle_3 &#123;</span><br><span class=\"line\">    from &#123;</span><br><span class=\"line\">        opacity: 0;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    to &#123;</span><br><span class=\"line\">        opacity: 1;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.demo_3&#123;</span><br><span class=\"line\">    .pacman_box&#123;</span><br><span class=\"line\">        position: relative;</span><br><span class=\"line\">        top: 32px;</span><br><span class=\"line\">        .pacman_1&#123;</span><br><span class=\"line\">            width: 0;</span><br><span class=\"line\">            height: 0;</span><br><span class=\"line\">            border-radius:100%;</span><br><span class=\"line\">            border: 32px solid #fff;</span><br><span class=\"line\">            border-right-color: transparent;</span><br><span class=\"line\">            position: absolute;</span><br><span class=\"line\">            top: 0;</span><br><span class=\"line\">            left: 0;</span><br><span class=\"line\">            transform: rotate(45deg);</span><br><span class=\"line\">            animation: rotate_3_1 0.5s linear infinite alternate;</span><br><span class=\"line\">            -webkit-animation: rotate_3_1 0.5s linear infinite alternate;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        .pacman_2&#123;</span><br><span class=\"line\">            width: 0;</span><br><span class=\"line\">            height: 0;</span><br><span class=\"line\">            border-radius:100%;</span><br><span class=\"line\">            border: 32px solid #fff;</span><br><span class=\"line\">            border-right-color: transparent;</span><br><span class=\"line\">            position: absolute;</span><br><span class=\"line\">            top: 0;</span><br><span class=\"line\">            left: 0;</span><br><span class=\"line\">            transform: rotate(-45deg);</span><br><span class=\"line\">            animation: rotate_3_2 0.5s linear infinite alternate;</span><br><span class=\"line\">            -webkit-animation: rotate_3_2 0.5s linear infinite alternate;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        .circle_1&#123;</span><br><span class=\"line\">            width: 14px;</span><br><span class=\"line\">            height: 14px;</span><br><span class=\"line\">            background: #fff;</span><br><span class=\"line\">            position: absolute;</span><br><span class=\"line\">            top: 25px;</span><br><span class=\"line\">            right: 65px;</span><br><span class=\"line\">            border-radius: 100%;</span><br><span class=\"line\">            opacity: 0;</span><br><span class=\"line\">            animation: circle_1 0.5s linear infinite alternate;</span><br><span class=\"line\">            -webkit-animation: circle_1 0.5s linear infinite alternate;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        .circle_2&#123;</span><br><span class=\"line\">            width: 14px;</span><br><span class=\"line\">            height: 14px;</span><br><span class=\"line\">            background: #fff;</span><br><span class=\"line\">            position: absolute;</span><br><span class=\"line\">            top: 25px;</span><br><span class=\"line\">            right: 35px;</span><br><span class=\"line\">            border-radius: 100%;</span><br><span class=\"line\">            opacity: 0.5;</span><br><span class=\"line\">            animation: circle_2 0.5s linear infinite alternate;</span><br><span class=\"line\">            -webkit-animation: circle_2 0.5s linear infinite alternate;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        .circle_3&#123;</span><br><span class=\"line\">            width: 14px;</span><br><span class=\"line\">            height: 14px;</span><br><span class=\"line\">            background: #fff;</span><br><span class=\"line\">            position: absolute;</span><br><span class=\"line\">            top: 25px;</span><br><span class=\"line\">            right: 5px;</span><br><span class=\"line\">            border-radius: 100%;</span><br><span class=\"line\">            animation: circle_3 0.5s linear infinite alternate;</span><br><span class=\"line\">            -webkit-animation: circle_3 0.5s linear infinite alternate;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>4.<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"demo demo_4\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"demo4_circle_box\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"demo4_circle_1\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"demo4_circle_2\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">@keyframes demo4_circle_1&#123;</span><br><span class=\"line\">    from &#123;</span><br><span class=\"line\">        transform:scale(1);</span><br><span class=\"line\">        -webkit-transform:scale(1);</span><br><span class=\"line\">        -moz-transform:scale(1);</span><br><span class=\"line\">        -ms-transform:scale(1);</span><br><span class=\"line\">        -o-transform:scale(1);</span><br><span class=\"line\">        opacity: .5;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    to &#123;</span><br><span class=\"line\">        transform:scale(0);</span><br><span class=\"line\">        -webkit-transform:scale(0);</span><br><span class=\"line\">        -moz-transform:scale(0);</span><br><span class=\"line\">        -ms-transform:scale(0);</span><br><span class=\"line\">        -o-transform:scale(0);</span><br><span class=\"line\">        opacity: 0;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">@keyframes demo4_circle_2&#123;</span><br><span class=\"line\">    from &#123;</span><br><span class=\"line\">        transform:scale(0);</span><br><span class=\"line\">        -webkit-transform:scale(0);</span><br><span class=\"line\">        -moz-transform:scale(0);</span><br><span class=\"line\">        -ms-transform:scale(0);</span><br><span class=\"line\">        -o-transform:scale(0);</span><br><span class=\"line\">        opacity: 1;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    to &#123;</span><br><span class=\"line\">        transform:scale(1);</span><br><span class=\"line\">        -webkit-transform:scale(1);</span><br><span class=\"line\">        -moz-transform:scale(1);</span><br><span class=\"line\">        -ms-transform:scale(1);</span><br><span class=\"line\">        -o-transform:scale(1);</span><br><span class=\"line\">        opacity: .5;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.demo_4&#123;</span><br><span class=\"line\">    .demo4_circle_box&#123;</span><br><span class=\"line\">        position: relative;</span><br><span class=\"line\">        top: 28px;</span><br><span class=\"line\">        left: 28px;</span><br><span class=\"line\">        .demo4_circle_1&#123;</span><br><span class=\"line\">            width: 64px;</span><br><span class=\"line\">            height: 64px;</span><br><span class=\"line\">            background: #fff;</span><br><span class=\"line\">            border-radius:100%;</span><br><span class=\"line\">            position: absolute;</span><br><span class=\"line\">            left: 15px;</span><br><span class=\"line\">            opacity: .5;</span><br><span class=\"line\">            animation: demo4_circle_1 1s linear infinite alternate;</span><br><span class=\"line\">            -webkit-animation: demo4_circle_1 1s linear infinite alternate;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        .demo4_circle_2&#123;</span><br><span class=\"line\">            width: 64px;</span><br><span class=\"line\">            height: 64px;</span><br><span class=\"line\">            background: #fff;</span><br><span class=\"line\">            border-radius:100%;</span><br><span class=\"line\">            position: absolute;</span><br><span class=\"line\">            left: 15px;</span><br><span class=\"line\">            transform:scale(0);</span><br><span class=\"line\">            -webkit-transform:scale(0);</span><br><span class=\"line\">            -moz-transform:scale(0);</span><br><span class=\"line\">            -ms-transform:scale(0);</span><br><span class=\"line\">            -o-transform:scale(0);</span><br><span class=\"line\">            animation: demo4_circle_2 1s linear infinite alternate;</span><br><span class=\"line\">            -webkit-animation: demo4_circle_2 1s linear infinite alternate;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>5.<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"demo demo_6\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"demo6_circle_box\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"demo6_son_1 demo6_son\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"demo6_son_2 demo6_son\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"demo6_son_3 demo6_son\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"demo6_son_4 demo6_son\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"demo6_son_5 demo6_son\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">@keyframes demo6_son&#123;</span><br><span class=\"line\">    0% &#123;</span><br><span class=\"line\">        transform: scaleY(1);</span><br><span class=\"line\">        -webkit-transform: scaleY(1);</span><br><span class=\"line\">        -moz-transform: scaleY(1);</span><br><span class=\"line\">        -ms-transform: scaleY(1);</span><br><span class=\"line\">        -o-transform: scaleY(1);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    25% &#123;</span><br><span class=\"line\">        transform:scaleY(2);</span><br><span class=\"line\">        -webkit-transform:scaleY(2);</span><br><span class=\"line\">        -moz-transform:scaleY(2);</span><br><span class=\"line\">        -ms-transform:scaleY(2);</span><br><span class=\"line\">        -o-transform:scaleY(2);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    50% &#123;</span><br><span class=\"line\">        transform:scaleY(1);</span><br><span class=\"line\">        -webkit-transform:scaleY(1);</span><br><span class=\"line\">        -moz-transform:scaleY(1);</span><br><span class=\"line\">        -ms-transform:scaleY(1);</span><br><span class=\"line\">        -o-transform:scaleY(1);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    100% &#123;</span><br><span class=\"line\">        animation-play-state: paused;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.demo_6&#123;</span><br><span class=\"line\">    display: flex;</span><br><span class=\"line\">    justify-content: center;</span><br><span class=\"line\">    align-items: center;</span><br><span class=\"line\">    .demo6_circle_box&#123;</span><br><span class=\"line\">        display: flex;</span><br><span class=\"line\">        .demo6_son&#123;</span><br><span class=\"line\">            width: 7px;</span><br><span class=\"line\">            height: 32px;</span><br><span class=\"line\">            background: #fff;</span><br><span class=\"line\">            &amp;:not(:last-child) &#123;</span><br><span class=\"line\">                margin-right: 10px;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        .demo6_son_1 &#123;</span><br><span class=\"line\">            animation: demo6_son infinite 2s ease-in-out;</span><br><span class=\"line\">            -webkit-animation: demo6_son infinite 2s ease-in-out;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        .demo6_son_2 &#123;</span><br><span class=\"line\">            animation: demo6_son infinite 2s ease-in-out .3s;</span><br><span class=\"line\">            -webkit-animation: demo6_son infinite 2s ease-in-out .3s;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        .demo6_son_3 &#123;</span><br><span class=\"line\">            animation: demo6_son infinite 2s ease-in-out .6s;</span><br><span class=\"line\">            -webkit-animation: demo6_son infinite 2s ease-in-out .6s;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        .demo6_son_4 &#123;</span><br><span class=\"line\">            animation: demo6_son infinite 2s ease-in-out .9s;</span><br><span class=\"line\">            -webkit-animation: demo6_son infinite 2s ease-in-out .9s;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        .demo6_son_5 &#123;</span><br><span class=\"line\">            animation: demo6_son infinite 2s ease-in-out 1.2s;</span><br><span class=\"line\">            -webkit-animation: demo6_son infinite 2s ease-in-out 1.2s;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>6.<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"demo demo_7\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"demo7_circle_box\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">@keyframes demo_7&#123;</span><br><span class=\"line\">    from &#123;</span><br><span class=\"line\">        transform: scale(1);</span><br><span class=\"line\">        -webkit-transform: scale(1);</span><br><span class=\"line\">        -moz-transform: scale(1);</span><br><span class=\"line\">        -ms-transform: scale(1);</span><br><span class=\"line\">        -o-transform: scale(1);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    to &#123;</span><br><span class=\"line\">        transform: scale(1.3);</span><br><span class=\"line\">        -webkit-transform: scale(1.3);</span><br><span class=\"line\">        -moz-transform: scale(1.3);</span><br><span class=\"line\">        -ms-transform: scale(1.3);</span><br><span class=\"line\">        -o-transform: scale(1.3);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.demo_7&#123;</span><br><span class=\"line\">    display: flex;</span><br><span class=\"line\">    justify-content: center;</span><br><span class=\"line\">    align-items: center;</span><br><span class=\"line\">    .demo7_circle_box&#123;</span><br><span class=\"line\">        position: relative;</span><br><span class=\"line\">        width: 40px;</span><br><span class=\"line\">        height: 70px;</span><br><span class=\"line\">        animation: demo_7  1s linear infinite alternate;</span><br><span class=\"line\">        -webkit-animation: demo_7  1s linear infinite alternate;</span><br><span class=\"line\">        &amp;:before&#123;</span><br><span class=\"line\">            content: '';</span><br><span class=\"line\">            width: 30px;</span><br><span class=\"line\">            height: 50px;</span><br><span class=\"line\">            display: block;</span><br><span class=\"line\">            border-top-left-radius: 15px;</span><br><span class=\"line\">            border-top-right-radius: 15px;</span><br><span class=\"line\">            background: #fff;</span><br><span class=\"line\">            transform: rotate(45deg);</span><br><span class=\"line\">            -webkit-transform: rotate(45deg);</span><br><span class=\"line\">            -moz-transform: rotate(45deg);</span><br><span class=\"line\">            -ms-transform: rotate(45deg);</span><br><span class=\"line\">            -o-transform: rotate(45deg);</span><br><span class=\"line\">            transform-origin: 0 100%;</span><br><span class=\"line\">            position: absolute;</span><br><span class=\"line\">            top: 0;</span><br><span class=\"line\">            left: 0;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        &amp;:after&#123;</span><br><span class=\"line\">            content: '';</span><br><span class=\"line\">            width: 30px;</span><br><span class=\"line\">            height: 50px;</span><br><span class=\"line\">            display: block;</span><br><span class=\"line\">            border-top-left-radius: 15px;</span><br><span class=\"line\">            border-top-right-radius: 15px;</span><br><span class=\"line\">            background: #fff;</span><br><span class=\"line\">            transform: rotate(-45deg);</span><br><span class=\"line\">            -webkit-transform: rotate(-45deg);</span><br><span class=\"line\">            -moz-transform: rotate(-45deg);</span><br><span class=\"line\">            -ms-transform: rotate(-45deg);</span><br><span class=\"line\">            -o-transform: rotate(-45deg);</span><br><span class=\"line\">            transform-origin: 100% 100%;</span><br><span class=\"line\">            position: absolute;</span><br><span class=\"line\">            top: 0;</span><br><span class=\"line\">            left: 12px;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>7.<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"demo demo_8\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"demo8_circle_box\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">@keyframes demo_8 &#123;</span><br><span class=\"line\">    from &#123;</span><br><span class=\"line\">        transform: rotate(0deg);</span><br><span class=\"line\">        -webkit-transform: rotate(0deg);</span><br><span class=\"line\">        -moz-transform: rotate(0deg);</span><br><span class=\"line\">        -ms-transform: rotate(0deg);</span><br><span class=\"line\">        -o-transform: rotate(0deg);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    to &#123;</span><br><span class=\"line\">        transform: rotate(360deg);</span><br><span class=\"line\">        -webkit-transform: rotate(360deg);</span><br><span class=\"line\">        -moz-transform: rotate(360deg);</span><br><span class=\"line\">        -ms-transform: rotate(360deg);</span><br><span class=\"line\">        -o-transform: rotate(360deg);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.demo_8&#123;</span><br><span class=\"line\">    display: flex;</span><br><span class=\"line\">    justify-content: center;</span><br><span class=\"line\">    align-items: center;</span><br><span class=\"line\">    .demo8_circle_box&#123;</span><br><span class=\"line\">        position: relative;</span><br><span class=\"line\">        width: 30px;</span><br><span class=\"line\">        height: 30px;</span><br><span class=\"line\">        padding: 23px;</span><br><span class=\"line\">        border: 1px solid #fff;</span><br><span class=\"line\">        border-radius: 100%;</span><br><span class=\"line\">        -webkit-border-radius: 100%;</span><br><span class=\"line\">        -moz-border-radius: 100%;</span><br><span class=\"line\">        -ms-border-radius: 100%;</span><br><span class=\"line\">        -o-border-radius: 100%;</span><br><span class=\"line\">        animation: demo_8 3s linear infinite;</span><br><span class=\"line\">        //linear//意思就是匀速的运动infinite//就是无限滚动的意思-webkit-animation:;</span><br><span class=\"line\">        -webkit-animation: demo_8 3s linear infinite;</span><br><span class=\"line\">        &amp;:before&#123;</span><br><span class=\"line\">            content: '';</span><br><span class=\"line\">            display: block;</span><br><span class=\"line\">            width: 30px;</span><br><span class=\"line\">            height: 30px;</span><br><span class=\"line\">            background: #fff;</span><br><span class=\"line\">            box-shadow: 0 0 10px #fff;</span><br><span class=\"line\">            border-radius: 30px;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        &amp;:after&#123;</span><br><span class=\"line\">            content: '';</span><br><span class=\"line\">            display: block;</span><br><span class=\"line\">            width: 20px;</span><br><span class=\"line\">            height: 20px;</span><br><span class=\"line\">            background: #fff;</span><br><span class=\"line\">            border-radius: 20px;</span><br><span class=\"line\">            position: absolute;</span><br><span class=\"line\">            top: 0;</span><br><span class=\"line\">            left: 0;</span><br><span class=\"line\">            box-shadow: 0 0 5px #fff;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>8.<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"demo demo_9\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">data-loader</span>=<span class=\"string\">\"jumping\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">@-webkit-keyframes jumping</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    0%</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        -webkit-transform: scale(1.0) translateY(0px) rotateX(0deg);</span><br><span class=\"line\">            -ms-transform: scale(1.0) translateY(0px) rotateX(0deg);</span><br><span class=\"line\">             -o-transform: scale(1.0) translateY(0px) rotateX(0deg);</span><br><span class=\"line\">                transform: scale(1.0) translateY(0px) rotateX(0deg);</span><br><span class=\"line\"></span><br><span class=\"line\">        -webkit-box-shadow: 0 0 0 rgba(0,0,0,0);</span><br><span class=\"line\">                box-shadow: 0 0 0 rgba(0,0,0,0);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    100%</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        -webkit-transform: scale(1.2) translateY(-25px) rotateX(45deg);</span><br><span class=\"line\">            -ms-transform: scale(1.2) translateY(-25px) rotateX(45deg);</span><br><span class=\"line\">             -o-transform: scale(1.2) translateY(-25px) rotateX(45deg);</span><br><span class=\"line\">                transform: scale(1.2) translateY(-25px) rotateX(45deg);</span><br><span class=\"line\"></span><br><span class=\"line\">        background: rgb(255,255,255);</span><br><span class=\"line\">        -webkit-box-shadow: 0 25px 40px rgb(255,255,255);</span><br><span class=\"line\">                box-shadow: 0 25px 40px rgb(255,255,255);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.demo_9&#123;</span><br><span class=\"line\">    display: flex;</span><br><span class=\"line\">    justify-content: center;</span><br><span class=\"line\">    align-items: center;</span><br><span class=\"line\">    [data-loader='jumping']</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        position: relative;</span><br><span class=\"line\">        width: 50px;</span><br><span class=\"line\">        -webkit-perspective: 200px;</span><br><span class=\"line\">        -moz-perspective: 200px;</span><br><span class=\"line\">            -ms-perspective: 200px;</span><br><span class=\"line\">                perspective: 200px;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    [data-loader='jumping']:before,</span><br><span class=\"line\">    [data-loader='jumping']:after</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        position: absolute;</span><br><span class=\"line\"></span><br><span class=\"line\">        width: 20px;</span><br><span class=\"line\">        height: 20px;</span><br><span class=\"line\"></span><br><span class=\"line\">        content: '';</span><br><span class=\"line\">        animation: jumping .5s infinite alternate;</span><br><span class=\"line\"></span><br><span class=\"line\">        background: rgba(0,0,0,0);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    [data-loader='jumping']:before</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        left: 0;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    [data-loader='jumping']:after</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        right: 0;</span><br><span class=\"line\"></span><br><span class=\"line\">        animation-delay: .15s;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>9.<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"demo demo_10\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">data-loader</span>=<span class=\"string\">\"circle-side\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">@keyframes circle-side</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    from &#123;</span><br><span class=\"line\">        transform: rotate(0deg);</span><br><span class=\"line\">        -webkit-transform: rotate(0deg);</span><br><span class=\"line\">        -moz-transform: rotate(0deg);</span><br><span class=\"line\">        -ms-transform: rotate(0deg);</span><br><span class=\"line\">        -o-transform: rotate(0deg);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    to &#123;</span><br><span class=\"line\">        transform: rotate(360deg);</span><br><span class=\"line\">        -webkit-transform: rotate(360deg);</span><br><span class=\"line\">        -moz-transform: rotate(360deg);</span><br><span class=\"line\">        -ms-transform: rotate(360deg);</span><br><span class=\"line\">        -o-transform: rotate(360deg);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.demo_10&#123;</span><br><span class=\"line\">    display: flex;</span><br><span class=\"line\">    justify-content: center;</span><br><span class=\"line\">    align-items: center;</span><br><span class=\"line\">    [data-loader='circle-side']</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        width: 64px;</span><br><span class=\"line\">        height: 64px;</span><br><span class=\"line\">        border: 4px solid #fff;</span><br><span class=\"line\">        border-top-color: rgba(0,0,0,.2);</span><br><span class=\"line\">        border-right-color: rgba(0,0,0,.2);</span><br><span class=\"line\">        border-bottom-color: rgba(0,0,0,.2);</span><br><span class=\"line\">        border-radius: 100%;</span><br><span class=\"line\">        animation: circle-side 2s linear infinite;</span><br><span class=\"line\">        -webkit-animation: circle-side 2s linear infinite;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>10.<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"demo demo_11\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">data-loader</span>=<span class=\"string\">\"ball-rotate\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">@keyframes ball-rotate-between &#123;</span><br><span class=\"line\">    0% &#123;</span><br><span class=\"line\">        transform: scale(1);</span><br><span class=\"line\">        -webkit-transform: scale(1);</span><br><span class=\"line\">        -moz-transform: scale(1);</span><br><span class=\"line\">        -ms-transform: scale(1);</span><br><span class=\"line\">        -o-transform: scale(1);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    100% &#123;</span><br><span class=\"line\">        transform: scale(1.2);</span><br><span class=\"line\">        -webkit-transform: scale(1.2);</span><br><span class=\"line\">        -moz-transform: scale(1.2);</span><br><span class=\"line\">        -ms-transform: scale(1.2);</span><br><span class=\"line\">        -o-transform: scale(1.2);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">@keyframes ball-rotate &#123;</span><br><span class=\"line\">    from &#123;</span><br><span class=\"line\">        transform: rotate(0deg) scale(1);</span><br><span class=\"line\">        -webkit-transform: rotate(0deg) scale(1);</span><br><span class=\"line\">        -moz-transform: rotate(0deg) scale(1);</span><br><span class=\"line\">        -ms-transform: rotate(0deg) scale(1);</span><br><span class=\"line\">        -o-transform: rotate(0deg) scale(1);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    to &#123;</span><br><span class=\"line\">        transform: rotate(360deg) scale(1.2);</span><br><span class=\"line\">        -webkit-transform: rotate(360deg) scale(1.2);</span><br><span class=\"line\">        -moz-transform: rotate(360deg) scale(1.2);</span><br><span class=\"line\">        -ms-transform: rotate(360deg) scale(1.2);</span><br><span class=\"line\">        -o-transform: rotate(360deg) scale(1.2);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.demo_11&#123;</span><br><span class=\"line\">    display: flex;</span><br><span class=\"line\">    justify-content: center;</span><br><span class=\"line\">    align-items: center;</span><br><span class=\"line\">    [data-loader='ball-rotate']</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        width: 14px;</span><br><span class=\"line\">        height: 14px;</span><br><span class=\"line\">        background: #fff;</span><br><span class=\"line\">        border-radius: 100%;</span><br><span class=\"line\">        -webkit-border-radius: 100%;</span><br><span class=\"line\">        -moz-border-radius: 100%;</span><br><span class=\"line\">        -ms-border-radius: 100%;</span><br><span class=\"line\">        -o-border-radius: 100%;</span><br><span class=\"line\">        position: relative;</span><br><span class=\"line\">        animation: ball-rotate 2s linear infinite;</span><br><span class=\"line\">        -webkit-animation: ball-rotate 2s linear infinite;</span><br><span class=\"line\">        &amp;:before</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            content: '';</span><br><span class=\"line\">            display: block;</span><br><span class=\"line\">            width: 14px;</span><br><span class=\"line\">            height: 14px;</span><br><span class=\"line\">            background: rgba(255, 255, 255, .8);</span><br><span class=\"line\">            border-radius: 100%;</span><br><span class=\"line\">            position: absolute;</span><br><span class=\"line\">            left: 30px;</span><br><span class=\"line\">            animation: ball-rotate-between 2s linear infinite;</span><br><span class=\"line\">            -webkit-animation: ball-rotate-between 2s linear infinite;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        &amp;:after&#123;</span><br><span class=\"line\">            content: '';</span><br><span class=\"line\">            display: block;</span><br><span class=\"line\">            width: 14px;</span><br><span class=\"line\">            height: 14px;</span><br><span class=\"line\">            background: rgba(255, 255, 255, .8);</span><br><span class=\"line\">            border-radius: 100%;</span><br><span class=\"line\">            position: absolute;</span><br><span class=\"line\">            right: 30px;</span><br><span class=\"line\">            animation: ball-rotate-between 2s linear infinite;</span><br><span class=\"line\">            -webkit-animation: ball-rotate-between 2s linear infinite;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"github-https-github-com-xiaosongread-gulp-cli\"><a href=\"#github-https-github-com-xiaosongread-gulp-cli\" class=\"headerlink\" title=\"github: https://github.com/xiaosongread/gulp-cli\"></a>github: <a href=\"https://github.com/xiaosongread/gulp-cli\" target=\"_blank\" rel=\"noopener\">https://github.com/xiaosongread/gulp-cli</a></h3>"},{"title":"一文了解js深拷贝和浅拷贝","date":"2019-08-04T02:28:36.000Z","_content":"\n## 深浅拷贝的区别\n简单点来说，就是假设B复制了A，当修改A时，看B是否会发生变化，如果B也跟着变了，说明这是浅拷贝，拿人手短，如果B没变，那就是深拷贝，自食其力。\n<!-- more -->\n## 浅拷贝\n```javascript\nvar obj = {\n  age: 13\n}\nlet obj1 = obj\nobj1.age = 100\nconsole.log(obj.age) // 100\n\nvar arr = [1,2,3]\nvar arr1 = arr\narr1[0] = 100\nconsole.log(arr[0]) // 改变 12 obj2\n```\n### 1.直接复制对象就是浅拷贝\n\n```javascript\nvar obj = {\n  age: 13\n}\nlet obj1 = obj\nobj1.age = 100\nconsole.log(obj.age) // 100\n\nvar arr = [1,2,3]\nvar arr1 = arr\narr1[0] = 100\nconsole.log(arr[0]) // 改变 12 [\"allonAge\"] obj2\n```\n### 2.Object.assign()\n> Object.assign() 方法可以把任意多个的源对象自身的可枚举属性拷贝给目标对象，然后返回目标对象。但是 Object.assign() 进行的是浅拷贝，拷贝的是对象的属性的引用，而不是对象本身。\n\n> 注意：当object只有一层的时候并且不是数组的时候，Object.assign()是深拷贝\n\n```javascript\nvar obj1 = {\n  age: 12,\n  person: {\n    name: 'obj1'\n  }\n}\nvar obj2 = Object.create(obj1)\nobj2.age = 13;\nobj2.person.name = '改变'\nconsole.log(obj2.age, obj2.person.name) // 13 \"allonAge\" \"改变\"\nconsole.log(obj1.age, obj1.person.name) // 12 \"allonAge\" \"改变\"\n```\n### 3.Object.create(): 一级的看似是深拷贝(不能是数组)，深层级浅拷贝\n\n## 深拷贝\n### 1. JSON.parse(JSON.stringify())\n```javascript\nvar obj1 = {\n  age: 12,\n  person: {\n    name: 'obj1'\n  }\n}\nvar obj2 = JSON.parse(JSON.stringify(obj1))\nobj2.age = 120\nobj2.person.name = '改变'\nconsole.log(obj1.age, obj1.person.name) // 12 \"obj1\"\nconsole.log(obj2.age, obj2.person.name) // 120 \"改变\"\n```\n\n### 2. jquery 有提供一个$.extend可以用来做 Deep Copy\n\n### 3. 另外一个很热门的函数库lodash，也有提供_.cloneDeep用来做 Deep Copy。\n\n","source":"_posts/deepCopy.md","raw":"---\ntitle: 一文了解js深拷贝和浅拷贝\ncategories: js-end\ndate: 2019-08-04 10:28:36\ntags: 深浅拷贝\n---\n\n## 深浅拷贝的区别\n简单点来说，就是假设B复制了A，当修改A时，看B是否会发生变化，如果B也跟着变了，说明这是浅拷贝，拿人手短，如果B没变，那就是深拷贝，自食其力。\n<!-- more -->\n## 浅拷贝\n```javascript\nvar obj = {\n  age: 13\n}\nlet obj1 = obj\nobj1.age = 100\nconsole.log(obj.age) // 100\n\nvar arr = [1,2,3]\nvar arr1 = arr\narr1[0] = 100\nconsole.log(arr[0]) // 改变 12 obj2\n```\n### 1.直接复制对象就是浅拷贝\n\n```javascript\nvar obj = {\n  age: 13\n}\nlet obj1 = obj\nobj1.age = 100\nconsole.log(obj.age) // 100\n\nvar arr = [1,2,3]\nvar arr1 = arr\narr1[0] = 100\nconsole.log(arr[0]) // 改变 12 [\"allonAge\"] obj2\n```\n### 2.Object.assign()\n> Object.assign() 方法可以把任意多个的源对象自身的可枚举属性拷贝给目标对象，然后返回目标对象。但是 Object.assign() 进行的是浅拷贝，拷贝的是对象的属性的引用，而不是对象本身。\n\n> 注意：当object只有一层的时候并且不是数组的时候，Object.assign()是深拷贝\n\n```javascript\nvar obj1 = {\n  age: 12,\n  person: {\n    name: 'obj1'\n  }\n}\nvar obj2 = Object.create(obj1)\nobj2.age = 13;\nobj2.person.name = '改变'\nconsole.log(obj2.age, obj2.person.name) // 13 \"allonAge\" \"改变\"\nconsole.log(obj1.age, obj1.person.name) // 12 \"allonAge\" \"改变\"\n```\n### 3.Object.create(): 一级的看似是深拷贝(不能是数组)，深层级浅拷贝\n\n## 深拷贝\n### 1. JSON.parse(JSON.stringify())\n```javascript\nvar obj1 = {\n  age: 12,\n  person: {\n    name: 'obj1'\n  }\n}\nvar obj2 = JSON.parse(JSON.stringify(obj1))\nobj2.age = 120\nobj2.person.name = '改变'\nconsole.log(obj1.age, obj1.person.name) // 12 \"obj1\"\nconsole.log(obj2.age, obj2.person.name) // 120 \"改变\"\n```\n\n### 2. jquery 有提供一个$.extend可以用来做 Deep Copy\n\n### 3. 另外一个很热门的函数库lodash，也有提供_.cloneDeep用来做 Deep Copy。\n\n","slug":"deepCopy","published":1,"updated":"2020-07-01T09:12:26.382Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdr00y59000ce7zc4gs5m74y","content":"<h2 id=\"深浅拷贝的区别\"><a href=\"#深浅拷贝的区别\" class=\"headerlink\" title=\"深浅拷贝的区别\"></a>深浅拷贝的区别</h2><p>简单点来说，就是假设B复制了A，当修改A时，看B是否会发生变化，如果B也跟着变了，说明这是浅拷贝，拿人手短，如果B没变，那就是深拷贝，自食其力。<br><a id=\"more\"></a></p>\n<h2 id=\"浅拷贝\"><a href=\"#浅拷贝\" class=\"headerlink\" title=\"浅拷贝\"></a>浅拷贝</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">  age: <span class=\"number\">13</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">let</span> obj1 = obj</span><br><span class=\"line\">obj1.age = <span class=\"number\">100</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(obj.age) <span class=\"comment\">// 100</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>]</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr1 = arr</span><br><span class=\"line\">arr1[<span class=\"number\">0</span>] = <span class=\"number\">100</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr[<span class=\"number\">0</span>]) <span class=\"comment\">// 改变 12 obj2</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"1-直接复制对象就是浅拷贝\"><a href=\"#1-直接复制对象就是浅拷贝\" class=\"headerlink\" title=\"1.直接复制对象就是浅拷贝\"></a>1.直接复制对象就是浅拷贝</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">  age: <span class=\"number\">13</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">let</span> obj1 = obj</span><br><span class=\"line\">obj1.age = <span class=\"number\">100</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(obj.age) <span class=\"comment\">// 100</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>]</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr1 = arr</span><br><span class=\"line\">arr1[<span class=\"number\">0</span>] = <span class=\"number\">100</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr[<span class=\"number\">0</span>]) <span class=\"comment\">// 改变 12 [\"allonAge\"] obj2</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"2-Object-assign\"><a href=\"#2-Object-assign\" class=\"headerlink\" title=\"2.Object.assign()\"></a>2.Object.assign()</h3><blockquote>\n<p>Object.assign() 方法可以把任意多个的源对象自身的可枚举属性拷贝给目标对象，然后返回目标对象。但是 Object.assign() 进行的是浅拷贝，拷贝的是对象的属性的引用，而不是对象本身。</p>\n</blockquote>\n<blockquote>\n<p>注意：当object只有一层的时候并且不是数组的时候，Object.assign()是深拷贝</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> obj1 = &#123;</span><br><span class=\"line\">  age: <span class=\"number\">12</span>,</span><br><span class=\"line\">  person: &#123;</span><br><span class=\"line\">    name: <span class=\"string\">'obj1'</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj2 = <span class=\"built_in\">Object</span>.create(obj1)</span><br><span class=\"line\">obj2.age = <span class=\"number\">13</span>;</span><br><span class=\"line\">obj2.person.name = <span class=\"string\">'改变'</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(obj2.age, obj2.person.name) <span class=\"comment\">// 13 \"allonAge\" \"改变\"</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(obj1.age, obj1.person.name) <span class=\"comment\">// 12 \"allonAge\" \"改变\"</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"3-Object-create-一级的看似是深拷贝-不能是数组-，深层级浅拷贝\"><a href=\"#3-Object-create-一级的看似是深拷贝-不能是数组-，深层级浅拷贝\" class=\"headerlink\" title=\"3.Object.create(): 一级的看似是深拷贝(不能是数组)，深层级浅拷贝\"></a>3.Object.create(): 一级的看似是深拷贝(不能是数组)，深层级浅拷贝</h3><h2 id=\"深拷贝\"><a href=\"#深拷贝\" class=\"headerlink\" title=\"深拷贝\"></a>深拷贝</h2><h3 id=\"1-JSON-parse-JSON-stringify\"><a href=\"#1-JSON-parse-JSON-stringify\" class=\"headerlink\" title=\"1. JSON.parse(JSON.stringify())\"></a>1. JSON.parse(JSON.stringify())</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> obj1 = &#123;</span><br><span class=\"line\">  age: <span class=\"number\">12</span>,</span><br><span class=\"line\">  person: &#123;</span><br><span class=\"line\">    name: <span class=\"string\">'obj1'</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj2 = <span class=\"built_in\">JSON</span>.parse(<span class=\"built_in\">JSON</span>.stringify(obj1))</span><br><span class=\"line\">obj2.age = <span class=\"number\">120</span></span><br><span class=\"line\">obj2.person.name = <span class=\"string\">'改变'</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(obj1.age, obj1.person.name) <span class=\"comment\">// 12 \"obj1\"</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(obj2.age, obj2.person.name) <span class=\"comment\">// 120 \"改变\"</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"2-jquery-有提供一个-extend可以用来做-Deep-Copy\"><a href=\"#2-jquery-有提供一个-extend可以用来做-Deep-Copy\" class=\"headerlink\" title=\"2. jquery 有提供一个$.extend可以用来做 Deep Copy\"></a>2. jquery 有提供一个$.extend可以用来做 Deep Copy</h3><h3 id=\"3-另外一个很热门的函数库lodash，也有提供-cloneDeep用来做-Deep-Copy。\"><a href=\"#3-另外一个很热门的函数库lodash，也有提供-cloneDeep用来做-Deep-Copy。\" class=\"headerlink\" title=\"3. 另外一个很热门的函数库lodash，也有提供_.cloneDeep用来做 Deep Copy。\"></a>3. 另外一个很热门的函数库lodash，也有提供_.cloneDeep用来做 Deep Copy。</h3>","site":{"data":{}},"excerpt":"<h2 id=\"深浅拷贝的区别\"><a href=\"#深浅拷贝的区别\" class=\"headerlink\" title=\"深浅拷贝的区别\"></a>深浅拷贝的区别</h2><p>简单点来说，就是假设B复制了A，当修改A时，看B是否会发生变化，如果B也跟着变了，说明这是浅拷贝，拿人手短，如果B没变，那就是深拷贝，自食其力。<br>","more":"</p>\n<h2 id=\"浅拷贝\"><a href=\"#浅拷贝\" class=\"headerlink\" title=\"浅拷贝\"></a>浅拷贝</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">  age: <span class=\"number\">13</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">let</span> obj1 = obj</span><br><span class=\"line\">obj1.age = <span class=\"number\">100</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(obj.age) <span class=\"comment\">// 100</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>]</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr1 = arr</span><br><span class=\"line\">arr1[<span class=\"number\">0</span>] = <span class=\"number\">100</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr[<span class=\"number\">0</span>]) <span class=\"comment\">// 改变 12 obj2</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"1-直接复制对象就是浅拷贝\"><a href=\"#1-直接复制对象就是浅拷贝\" class=\"headerlink\" title=\"1.直接复制对象就是浅拷贝\"></a>1.直接复制对象就是浅拷贝</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">  age: <span class=\"number\">13</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">let</span> obj1 = obj</span><br><span class=\"line\">obj1.age = <span class=\"number\">100</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(obj.age) <span class=\"comment\">// 100</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>]</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr1 = arr</span><br><span class=\"line\">arr1[<span class=\"number\">0</span>] = <span class=\"number\">100</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr[<span class=\"number\">0</span>]) <span class=\"comment\">// 改变 12 [\"allonAge\"] obj2</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"2-Object-assign\"><a href=\"#2-Object-assign\" class=\"headerlink\" title=\"2.Object.assign()\"></a>2.Object.assign()</h3><blockquote>\n<p>Object.assign() 方法可以把任意多个的源对象自身的可枚举属性拷贝给目标对象，然后返回目标对象。但是 Object.assign() 进行的是浅拷贝，拷贝的是对象的属性的引用，而不是对象本身。</p>\n</blockquote>\n<blockquote>\n<p>注意：当object只有一层的时候并且不是数组的时候，Object.assign()是深拷贝</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> obj1 = &#123;</span><br><span class=\"line\">  age: <span class=\"number\">12</span>,</span><br><span class=\"line\">  person: &#123;</span><br><span class=\"line\">    name: <span class=\"string\">'obj1'</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj2 = <span class=\"built_in\">Object</span>.create(obj1)</span><br><span class=\"line\">obj2.age = <span class=\"number\">13</span>;</span><br><span class=\"line\">obj2.person.name = <span class=\"string\">'改变'</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(obj2.age, obj2.person.name) <span class=\"comment\">// 13 \"allonAge\" \"改变\"</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(obj1.age, obj1.person.name) <span class=\"comment\">// 12 \"allonAge\" \"改变\"</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"3-Object-create-一级的看似是深拷贝-不能是数组-，深层级浅拷贝\"><a href=\"#3-Object-create-一级的看似是深拷贝-不能是数组-，深层级浅拷贝\" class=\"headerlink\" title=\"3.Object.create(): 一级的看似是深拷贝(不能是数组)，深层级浅拷贝\"></a>3.Object.create(): 一级的看似是深拷贝(不能是数组)，深层级浅拷贝</h3><h2 id=\"深拷贝\"><a href=\"#深拷贝\" class=\"headerlink\" title=\"深拷贝\"></a>深拷贝</h2><h3 id=\"1-JSON-parse-JSON-stringify\"><a href=\"#1-JSON-parse-JSON-stringify\" class=\"headerlink\" title=\"1. JSON.parse(JSON.stringify())\"></a>1. JSON.parse(JSON.stringify())</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> obj1 = &#123;</span><br><span class=\"line\">  age: <span class=\"number\">12</span>,</span><br><span class=\"line\">  person: &#123;</span><br><span class=\"line\">    name: <span class=\"string\">'obj1'</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj2 = <span class=\"built_in\">JSON</span>.parse(<span class=\"built_in\">JSON</span>.stringify(obj1))</span><br><span class=\"line\">obj2.age = <span class=\"number\">120</span></span><br><span class=\"line\">obj2.person.name = <span class=\"string\">'改变'</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(obj1.age, obj1.person.name) <span class=\"comment\">// 12 \"obj1\"</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(obj2.age, obj2.person.name) <span class=\"comment\">// 120 \"改变\"</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"2-jquery-有提供一个-extend可以用来做-Deep-Copy\"><a href=\"#2-jquery-有提供一个-extend可以用来做-Deep-Copy\" class=\"headerlink\" title=\"2. jquery 有提供一个$.extend可以用来做 Deep Copy\"></a>2. jquery 有提供一个$.extend可以用来做 Deep Copy</h3><h3 id=\"3-另外一个很热门的函数库lodash，也有提供-cloneDeep用来做-Deep-Copy。\"><a href=\"#3-另外一个很热门的函数库lodash，也有提供-cloneDeep用来做-Deep-Copy。\" class=\"headerlink\" title=\"3. 另外一个很热门的函数库lodash，也有提供_.cloneDeep用来做 Deep Copy。\"></a>3. 另外一个很热门的函数库lodash，也有提供_.cloneDeep用来做 Deep Copy。</h3>"},{"title":"focus-preventScroll","date":"2019-09-20T03:01:30.000Z","_content":"\n<img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/focus.gif\" width=\"400\"/>\n\n<!-- more -->\n\n## api\n```\nbutton.focus({ \n    preventScroll: true \n});\n```\n\n```html\n<button id=\"button1\">点击我获取焦点会定位</button>\n<button id=\"button2\">点击我获取焦点但不会定位</button>\n<p class=\"remind\">提示：浏览器可视区域的下面有两个输入框。</p>\n<div style=\"margin-top: calc(100vh - 180px);\">\n    <input id=\"input1\" size=\"10\">\n    <input id=\"input2\" size=\"10\">\n</div>\n```\n```javascript\nbutton1.onclick = function () {\n    input1.focus();\n};\nbutton2.onclick = function () {\n    input2.focus({ \n        preventScroll: true \n    });\n};\n```\n## demo\n[猛戳查看](https://www.songyanbin.com/demo/focus.html)\n## 兼容情况\n<img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/icon/chrome.png\" width=\"40\" hegiht=\"40\" align=center /> |<img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/icon/firefox.png\" width=\"40\" hegiht=\"40\" align=center />|<img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/icon/ie.png\" width=\"40\" hegiht=\"40\" align=center />|<img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/icon/edge.png\" width=\"40\" hegiht=\"40\" align=center />|<img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/icon/opera.png\" width=\"40\" hegiht=\"40\" align=center />|<img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/icon/safari.png\" width=\"40\" hegiht=\"40\" align=center />\n---|:--:|:--:|:--:|:--:|:--:\n64+ ✔|68+ ✔|✘|✘|51+ ✔|✘","source":"_posts/focus-preventScroll.md","raw":"---\ntitle: focus-preventScroll\ncategories: js-end\ndate: 2019-09-20 11:01:30\ntags: focus preventScroll 滚动\n---\n\n<img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/focus.gif\" width=\"400\"/>\n\n<!-- more -->\n\n## api\n```\nbutton.focus({ \n    preventScroll: true \n});\n```\n\n```html\n<button id=\"button1\">点击我获取焦点会定位</button>\n<button id=\"button2\">点击我获取焦点但不会定位</button>\n<p class=\"remind\">提示：浏览器可视区域的下面有两个输入框。</p>\n<div style=\"margin-top: calc(100vh - 180px);\">\n    <input id=\"input1\" size=\"10\">\n    <input id=\"input2\" size=\"10\">\n</div>\n```\n```javascript\nbutton1.onclick = function () {\n    input1.focus();\n};\nbutton2.onclick = function () {\n    input2.focus({ \n        preventScroll: true \n    });\n};\n```\n## demo\n[猛戳查看](https://www.songyanbin.com/demo/focus.html)\n## 兼容情况\n<img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/icon/chrome.png\" width=\"40\" hegiht=\"40\" align=center /> |<img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/icon/firefox.png\" width=\"40\" hegiht=\"40\" align=center />|<img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/icon/ie.png\" width=\"40\" hegiht=\"40\" align=center />|<img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/icon/edge.png\" width=\"40\" hegiht=\"40\" align=center />|<img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/icon/opera.png\" width=\"40\" hegiht=\"40\" align=center />|<img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/icon/safari.png\" width=\"40\" hegiht=\"40\" align=center />\n---|:--:|:--:|:--:|:--:|:--:\n64+ ✔|68+ ✔|✘|✘|51+ ✔|✘","slug":"focus-preventScroll","published":1,"updated":"2020-07-01T09:12:26.382Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdr00y5c000de7zci40mwjak","content":"<p><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/focus.gif\" width=\"400\"></p>\n<a id=\"more\"></a>\n<h2 id=\"api\"><a href=\"#api\" class=\"headerlink\" title=\"api\"></a>api</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">button.focus(&#123; </span><br><span class=\"line\">    preventScroll: true </span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">id</span>=<span class=\"string\">\"button1\"</span>&gt;</span>点击我获取焦点会定位<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">id</span>=<span class=\"string\">\"button2\"</span>&gt;</span>点击我获取焦点但不会定位<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">class</span>=<span class=\"string\">\"remind\"</span>&gt;</span>提示：浏览器可视区域的下面有两个输入框。<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">\"margin-top: calc(100vh - 180px);\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">\"input1\"</span> <span class=\"attr\">size</span>=<span class=\"string\">\"10\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">\"input2\"</span> <span class=\"attr\">size</span>=<span class=\"string\">\"10\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">button1.onclick = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    input1.focus();</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">button2.onclick = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    input2.focus(&#123; </span><br><span class=\"line\">        preventScroll: <span class=\"literal\">true</span> </span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h2 id=\"demo\"><a href=\"#demo\" class=\"headerlink\" title=\"demo\"></a>demo</h2><p><a href=\"https://www.songyanbin.com/demo/focus.html\">猛戳查看</a></p>\n<h2 id=\"兼容情况\"><a href=\"#兼容情况\" class=\"headerlink\" title=\"兼容情况\"></a>兼容情况</h2><table>\n<thead>\n<tr>\n<th><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/icon/chrome.png\" width=\"40\" hegiht=\"40\" align=\"center\"></th>\n<th style=\"text-align:center\"><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/icon/firefox.png\" width=\"40\" hegiht=\"40\" align=\"center\"></th>\n<th style=\"text-align:center\"><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/icon/ie.png\" width=\"40\" hegiht=\"40\" align=\"center\"></th>\n<th style=\"text-align:center\"><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/icon/edge.png\" width=\"40\" hegiht=\"40\" align=\"center\"></th>\n<th style=\"text-align:center\"><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/icon/opera.png\" width=\"40\" hegiht=\"40\" align=\"center\"></th>\n<th style=\"text-align:center\"><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/icon/safari.png\" width=\"40\" hegiht=\"40\" align=\"center\"></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>64+ ✔</td>\n<td style=\"text-align:center\">68+ ✔</td>\n<td style=\"text-align:center\">✘</td>\n<td style=\"text-align:center\">✘</td>\n<td style=\"text-align:center\">51+ ✔</td>\n<td style=\"text-align:center\">✘</td>\n</tr>\n</tbody>\n</table>\n","site":{"data":{}},"excerpt":"<p><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/focus.gif\" width=\"400\"></p>","more":"<h2 id=\"api\"><a href=\"#api\" class=\"headerlink\" title=\"api\"></a>api</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">button.focus(&#123; </span><br><span class=\"line\">    preventScroll: true </span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">id</span>=<span class=\"string\">\"button1\"</span>&gt;</span>点击我获取焦点会定位<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">id</span>=<span class=\"string\">\"button2\"</span>&gt;</span>点击我获取焦点但不会定位<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">class</span>=<span class=\"string\">\"remind\"</span>&gt;</span>提示：浏览器可视区域的下面有两个输入框。<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">\"margin-top: calc(100vh - 180px);\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">\"input1\"</span> <span class=\"attr\">size</span>=<span class=\"string\">\"10\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">\"input2\"</span> <span class=\"attr\">size</span>=<span class=\"string\">\"10\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">button1.onclick = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    input1.focus();</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">button2.onclick = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    input2.focus(&#123; </span><br><span class=\"line\">        preventScroll: <span class=\"literal\">true</span> </span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h2 id=\"demo\"><a href=\"#demo\" class=\"headerlink\" title=\"demo\"></a>demo</h2><p><a href=\"https://www.songyanbin.com/demo/focus.html\">猛戳查看</a></p>\n<h2 id=\"兼容情况\"><a href=\"#兼容情况\" class=\"headerlink\" title=\"兼容情况\"></a>兼容情况</h2><table>\n<thead>\n<tr>\n<th><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/icon/chrome.png\" width=\"40\" hegiht=\"40\" align=\"center\"></th>\n<th style=\"text-align:center\"><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/icon/firefox.png\" width=\"40\" hegiht=\"40\" align=\"center\"></th>\n<th style=\"text-align:center\"><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/icon/ie.png\" width=\"40\" hegiht=\"40\" align=\"center\"></th>\n<th style=\"text-align:center\"><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/icon/edge.png\" width=\"40\" hegiht=\"40\" align=\"center\"></th>\n<th style=\"text-align:center\"><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/icon/opera.png\" width=\"40\" hegiht=\"40\" align=\"center\"></th>\n<th style=\"text-align:center\"><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/icon/safari.png\" width=\"40\" hegiht=\"40\" align=\"center\"></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>64+ ✔</td>\n<td style=\"text-align:center\">68+ ✔</td>\n<td style=\"text-align:center\">✘</td>\n<td style=\"text-align:center\">✘</td>\n<td style=\"text-align:center\">51+ ✔</td>\n<td style=\"text-align:center\">✘</td>\n</tr>\n</tbody>\n</table>"},{"title":"GitBook","date":"2019-06-17T08:18:39.000Z","_content":"\nGitBook 是一个基于 Node.js 的命令行工具，支持 Markdown 和 AsciiDoc 两种语法格式，可以输出 HTML、PDF、eBook 等格式的电子书\n\n```shell\nnpm install -g gitbook-cli\n```\n\n> Typora 下载地址：https://typora.io/   \nGit 下载地址：https://git-scm.com/downloads\n<!-- more -->\n#### use\n\n1.新建一个mybook的文件夹\n2.cd mybook\n```shell\ngitbook init\n```\n出现以下两个文件: \n> README.md —— 书籍的介绍写在这个文件里   \nSUMMARY.md —— 书籍的目录结构在这里配置\n\n这时候，我们启动恭候多时的 Typora 来编辑这两个文件了：\n\n编辑 SUMMARY.md 文件，内容修改为：\n```shell\n# 目录\n\n* [前言](README.md)\n* [第一章](Chapter1/README.md)\n  * [第1节：衣](Chapter1/衣.md)\n  * [第2节：食](Chapter1/食.md)\n  * [第3节：住](Chapter1/住.md)\n  * [第4节：行](Chapter1/行.md)\n* [第二章](Chapter2/README.md)\n* [第三章](Chapter3/README.md)\n* [第四章](Chapter4/README.md)\n```\n\n然后我们回到命令行，在 mybook 文件夹中再次执行 gitbook init 命令。GitBook 会查找 SUMMARY.md 文件中描述的目录和文件，如果没有则会将其创建。\n\n接着我们执行:\n```shell\ngitbook serve\n```\nServing book on http://localhost:4000”。嗯，打开浏览器看一下吧：\n\n![blockchain](https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/8.png)\n\n> Typora软件可以将.md文件转化为pdf,word等好多种类型的文件。\n\n\n","source":"_posts/jc-10.md","raw":"---\ntitle: GitBook\ncategories: gc-end\ndate: 2019-06-17 16:18:39\ntags: GitBook\n---\n\nGitBook 是一个基于 Node.js 的命令行工具，支持 Markdown 和 AsciiDoc 两种语法格式，可以输出 HTML、PDF、eBook 等格式的电子书\n\n```shell\nnpm install -g gitbook-cli\n```\n\n> Typora 下载地址：https://typora.io/   \nGit 下载地址：https://git-scm.com/downloads\n<!-- more -->\n#### use\n\n1.新建一个mybook的文件夹\n2.cd mybook\n```shell\ngitbook init\n```\n出现以下两个文件: \n> README.md —— 书籍的介绍写在这个文件里   \nSUMMARY.md —— 书籍的目录结构在这里配置\n\n这时候，我们启动恭候多时的 Typora 来编辑这两个文件了：\n\n编辑 SUMMARY.md 文件，内容修改为：\n```shell\n# 目录\n\n* [前言](README.md)\n* [第一章](Chapter1/README.md)\n  * [第1节：衣](Chapter1/衣.md)\n  * [第2节：食](Chapter1/食.md)\n  * [第3节：住](Chapter1/住.md)\n  * [第4节：行](Chapter1/行.md)\n* [第二章](Chapter2/README.md)\n* [第三章](Chapter3/README.md)\n* [第四章](Chapter4/README.md)\n```\n\n然后我们回到命令行，在 mybook 文件夹中再次执行 gitbook init 命令。GitBook 会查找 SUMMARY.md 文件中描述的目录和文件，如果没有则会将其创建。\n\n接着我们执行:\n```shell\ngitbook serve\n```\nServing book on http://localhost:4000”。嗯，打开浏览器看一下吧：\n\n![blockchain](https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/8.png)\n\n> Typora软件可以将.md文件转化为pdf,word等好多种类型的文件。\n\n\n","slug":"jc-10","published":1,"updated":"2020-07-01T09:12:26.384Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdr00y5f000he7zcive6yzit","content":"<p>GitBook 是一个基于 Node.js 的命令行工具，支持 Markdown 和 AsciiDoc 两种语法格式，可以输出 HTML、PDF、eBook 等格式的电子书</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g gitbook-cli</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>Typora 下载地址：<a href=\"https://typora.io/\" target=\"_blank\" rel=\"noopener\">https://typora.io/</a><br>Git 下载地址：<a href=\"https://git-scm.com/downloads\" target=\"_blank\" rel=\"noopener\">https://git-scm.com/downloads</a><br><a id=\"more\"></a></p>\n</blockquote>\n<h4 id=\"use\"><a href=\"#use\" class=\"headerlink\" title=\"use\"></a>use</h4><p>1.新建一个mybook的文件夹<br>2.cd mybook<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gitbook init</span><br></pre></td></tr></table></figure></p>\n<p>出现以下两个文件: </p>\n<blockquote>\n<p>README.md —— 书籍的介绍写在这个文件里<br>SUMMARY.md —— 书籍的目录结构在这里配置</p>\n</blockquote>\n<p>这时候，我们启动恭候多时的 Typora 来编辑这两个文件了：</p>\n<p>编辑 SUMMARY.md 文件，内容修改为：<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> 目录</span><br><span class=\"line\"></span><br><span class=\"line\">* [前言](README.md)</span><br><span class=\"line\">* [第一章](Chapter1/README.md)</span><br><span class=\"line\">  * [第1节：衣](Chapter1/衣.md)</span><br><span class=\"line\">  * [第2节：食](Chapter1/食.md)</span><br><span class=\"line\">  * [第3节：住](Chapter1/住.md)</span><br><span class=\"line\">  * [第4节：行](Chapter1/行.md)</span><br><span class=\"line\">* [第二章](Chapter2/README.md)</span><br><span class=\"line\">* [第三章](Chapter3/README.md)</span><br><span class=\"line\">* [第四章](Chapter4/README.md)</span><br></pre></td></tr></table></figure></p>\n<p>然后我们回到命令行，在 mybook 文件夹中再次执行 gitbook init 命令。GitBook 会查找 SUMMARY.md 文件中描述的目录和文件，如果没有则会将其创建。</p>\n<p>接着我们执行:<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gitbook serve</span><br></pre></td></tr></table></figure></p>\n<p>Serving book on <a href=\"http://localhost:4000”。嗯，打开浏览器看一下吧：\" target=\"_blank\" rel=\"noopener\">http://localhost:4000”。嗯，打开浏览器看一下吧：</a></p>\n<p><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/8.png\" alt=\"blockchain\"></p>\n<blockquote>\n<p>Typora软件可以将.md文件转化为pdf,word等好多种类型的文件。</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<p>GitBook 是一个基于 Node.js 的命令行工具，支持 Markdown 和 AsciiDoc 两种语法格式，可以输出 HTML、PDF、eBook 等格式的电子书</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g gitbook-cli</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>Typora 下载地址：<a href=\"https://typora.io/\" target=\"_blank\" rel=\"noopener\">https://typora.io/</a><br>Git 下载地址：<a href=\"https://git-scm.com/downloads\" target=\"_blank\" rel=\"noopener\">https://git-scm.com/downloads</a><br>","more":"</p>\n</blockquote>\n<h4 id=\"use\"><a href=\"#use\" class=\"headerlink\" title=\"use\"></a>use</h4><p>1.新建一个mybook的文件夹<br>2.cd mybook<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gitbook init</span><br></pre></td></tr></table></figure></p>\n<p>出现以下两个文件: </p>\n<blockquote>\n<p>README.md —— 书籍的介绍写在这个文件里<br>SUMMARY.md —— 书籍的目录结构在这里配置</p>\n</blockquote>\n<p>这时候，我们启动恭候多时的 Typora 来编辑这两个文件了：</p>\n<p>编辑 SUMMARY.md 文件，内容修改为：<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> 目录</span><br><span class=\"line\"></span><br><span class=\"line\">* [前言](README.md)</span><br><span class=\"line\">* [第一章](Chapter1/README.md)</span><br><span class=\"line\">  * [第1节：衣](Chapter1/衣.md)</span><br><span class=\"line\">  * [第2节：食](Chapter1/食.md)</span><br><span class=\"line\">  * [第3节：住](Chapter1/住.md)</span><br><span class=\"line\">  * [第4节：行](Chapter1/行.md)</span><br><span class=\"line\">* [第二章](Chapter2/README.md)</span><br><span class=\"line\">* [第三章](Chapter3/README.md)</span><br><span class=\"line\">* [第四章](Chapter4/README.md)</span><br></pre></td></tr></table></figure></p>\n<p>然后我们回到命令行，在 mybook 文件夹中再次执行 gitbook init 命令。GitBook 会查找 SUMMARY.md 文件中描述的目录和文件，如果没有则会将其创建。</p>\n<p>接着我们执行:<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gitbook serve</span><br></pre></td></tr></table></figure></p>\n<p>Serving book on <a href=\"http://localhost:4000”。嗯，打开浏览器看一下吧：\" target=\"_blank\" rel=\"noopener\">http://localhost:4000”。嗯，打开浏览器看一下吧：</a></p>\n<p><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/8.png\" alt=\"blockchain\"></p>\n<blockquote>\n<p>Typora软件可以将.md文件转化为pdf,word等好多种类型的文件。</p>\n</blockquote>"},{"layout":"file","title":"vue 简易加入购物车效果","date":"2019-12-04T08:18:40.000Z","_content":"![blockchain](https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/goods.gif)   \n\n<!-- more -->\n\n## 思路\n1.确定点击的购物的位置，设置动画开始位置\n2.结尾位置是左下角购物车的位置，设置为结束位置\n3.配合设置false，来设置动画结束影藏\n4.if (el.offsetHeight) {} 用来触发页面重绘\n\n## getBoundingClientRect\nhttps://developer.mozilla.org/zh-CN/docs/Web/API/Element/getBoundingClientRect\n\n## 代码\n```html\n<template>\n  <div>\n    <ul class=\"good_box\">\n      <!--  -->\n      <li v-for=\"(item, index) in goosList\" :key=\"index\">\n        <img src= \"'../assets/goods/1.jpg'\">\n        <div class=\"good_des\">\n          <p class=\"good_title\">{{item.title}}</p>\n          <p class=\"good_js\">{{item.js}}</p>\n          <div class=\"addGood\" @click=\"addGood($event, item)\">\n            <i class=\"iconfont icon-tianjiagouwuche\"></i>\n          </div>\n        </div>\n      </li>\n    </ul>\n    <div class=\"fix_bar\">\n      <i class=\"iconfont icon-tianjiagouwuche1\"></i>\n      <span class=\"addGoodListLength\">共 {{addGoodList.length}} 件商品</span>\n      <transition\n        name=\"ball\"\n        @before-enter=\"beforeEnter\"\n        @enter=\"enter\"\n        @after-enter=\"afterEnter\">\n        <div class=\"ball\" v-if=\"show\"></div>\n      </transition>\n    </div>\n  </div>\n</template>\n<script>\nexport default {\n  name: 'demo',\n  data () {\n    return {\n      goosList: [],\n      show: false,\n      wHeight: document.documentElement.clientHeight || document.body.clientHeight, // 屏幕的高度\n      ball: {\n        startLeft: '',\n        startTop: ''\n      },\n      addGoodList: []\n    }\n  },\n  created () {\n    for (let i = 1; i < 19; i++) {\n      let obj = {}\n      obj.title = '商品名称' + i\n      obj.js = '商品介绍' + i\n      this.goosList.push(obj)\n    }\n  },\n  methods: {\n    addGood (el, item) {\n      this.show = true\n      let obj = {\n        title: item.title,\n        js: item.js\n      }\n      this.addGoodList.push(obj)\n      let rectInfo = el.target.getBoundingClientRect()\n      this.ball.startLeft = rectInfo.left\n      this.ball.startTop = rectInfo.top\n    },\n    beforeEnter (el) {\n      // let ballRectInfo = el.getBoundingClientRect()\n      // console.log(ballRectInfo)\n      el.style.left = this.ball.startLeft + 'px'\n      el.style.top = -(this.wHeight - 100 - this.ball.startTop) + 'px' // 100 => 底部黑框的高度\n    },\n    enter (el, done) {\n      // 触发动画重绘\n      if (el.offsetHeight) {}\n      el.style.left = '35px'\n      el.style.top = '40px'\n      el.style.transition = 'all 1s'\n      done()\n    },\n    afterEnter (el) {\n      this.show = false\n      // el.style.display = 'none'\n    }\n  }\n}\n</script>\n<style lang=\"scss\" scoped>\n.good_box{\n  li {\n    display: flex;\n    margin-bottom: 20px;\n    &:not(::after){\n      border-bottom: 1px solid #dddddd;\n    }\n    img{\n      width: 100px;\n      height: 100px;\n      margin-right: 25px;\n    }\n    .good_des{\n      flex: 1;\n      text-align: left;\n      .good_title{\n        font-size: 16px;\n      }\n      .good_js{\n        font-size: 12px;\n        color: #cccccc;\n        margin-top: 10px;\n      }\n      .addGood{\n        text-align: right;\n        margin-right: 30px;\n        .iconfont{\n          font-size: 25px;\n          color: blue;\n          margin-top: 20px;\n        }\n      }\n    }\n  }\n}\n.fix_bar{\n  width: 100%;\n  height: 100px;\n  display: flex;\n  align-items: center;\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  background: #000;\n  .icon-tianjiagouwuche1{\n    font-size: 50px;\n    margin-left: 30px;\n    color: #ffffff;\n  }\n  .addGoodListLength{\n    color: #ffffff;\n    margin-left: 30px;\n  }\n  .ball{\n    width: 30px;\n    height: 30px;\n    background: red;\n    border-radius: 30px;\n    position: absolute;\n    top: 35px;\n    left: 40px;\n    z-index: 10;\n  }\n}\n</style>\n\n```\n\n## 完整代码：\nhttps://github.com/xiaosongread/vue-pc-cli   \n\nhttp://localhost:8080/#/test3\n","source":"_posts/goods.md","raw":"---\nlayout: file\ntitle: vue 简易加入购物车效果\ndate: 2019-12-04 16:18:40\ntags: vue js\n---\n![blockchain](https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/goods.gif)   \n\n<!-- more -->\n\n## 思路\n1.确定点击的购物的位置，设置动画开始位置\n2.结尾位置是左下角购物车的位置，设置为结束位置\n3.配合设置false，来设置动画结束影藏\n4.if (el.offsetHeight) {} 用来触发页面重绘\n\n## getBoundingClientRect\nhttps://developer.mozilla.org/zh-CN/docs/Web/API/Element/getBoundingClientRect\n\n## 代码\n```html\n<template>\n  <div>\n    <ul class=\"good_box\">\n      <!--  -->\n      <li v-for=\"(item, index) in goosList\" :key=\"index\">\n        <img src= \"'../assets/goods/1.jpg'\">\n        <div class=\"good_des\">\n          <p class=\"good_title\">{{item.title}}</p>\n          <p class=\"good_js\">{{item.js}}</p>\n          <div class=\"addGood\" @click=\"addGood($event, item)\">\n            <i class=\"iconfont icon-tianjiagouwuche\"></i>\n          </div>\n        </div>\n      </li>\n    </ul>\n    <div class=\"fix_bar\">\n      <i class=\"iconfont icon-tianjiagouwuche1\"></i>\n      <span class=\"addGoodListLength\">共 {{addGoodList.length}} 件商品</span>\n      <transition\n        name=\"ball\"\n        @before-enter=\"beforeEnter\"\n        @enter=\"enter\"\n        @after-enter=\"afterEnter\">\n        <div class=\"ball\" v-if=\"show\"></div>\n      </transition>\n    </div>\n  </div>\n</template>\n<script>\nexport default {\n  name: 'demo',\n  data () {\n    return {\n      goosList: [],\n      show: false,\n      wHeight: document.documentElement.clientHeight || document.body.clientHeight, // 屏幕的高度\n      ball: {\n        startLeft: '',\n        startTop: ''\n      },\n      addGoodList: []\n    }\n  },\n  created () {\n    for (let i = 1; i < 19; i++) {\n      let obj = {}\n      obj.title = '商品名称' + i\n      obj.js = '商品介绍' + i\n      this.goosList.push(obj)\n    }\n  },\n  methods: {\n    addGood (el, item) {\n      this.show = true\n      let obj = {\n        title: item.title,\n        js: item.js\n      }\n      this.addGoodList.push(obj)\n      let rectInfo = el.target.getBoundingClientRect()\n      this.ball.startLeft = rectInfo.left\n      this.ball.startTop = rectInfo.top\n    },\n    beforeEnter (el) {\n      // let ballRectInfo = el.getBoundingClientRect()\n      // console.log(ballRectInfo)\n      el.style.left = this.ball.startLeft + 'px'\n      el.style.top = -(this.wHeight - 100 - this.ball.startTop) + 'px' // 100 => 底部黑框的高度\n    },\n    enter (el, done) {\n      // 触发动画重绘\n      if (el.offsetHeight) {}\n      el.style.left = '35px'\n      el.style.top = '40px'\n      el.style.transition = 'all 1s'\n      done()\n    },\n    afterEnter (el) {\n      this.show = false\n      // el.style.display = 'none'\n    }\n  }\n}\n</script>\n<style lang=\"scss\" scoped>\n.good_box{\n  li {\n    display: flex;\n    margin-bottom: 20px;\n    &:not(::after){\n      border-bottom: 1px solid #dddddd;\n    }\n    img{\n      width: 100px;\n      height: 100px;\n      margin-right: 25px;\n    }\n    .good_des{\n      flex: 1;\n      text-align: left;\n      .good_title{\n        font-size: 16px;\n      }\n      .good_js{\n        font-size: 12px;\n        color: #cccccc;\n        margin-top: 10px;\n      }\n      .addGood{\n        text-align: right;\n        margin-right: 30px;\n        .iconfont{\n          font-size: 25px;\n          color: blue;\n          margin-top: 20px;\n        }\n      }\n    }\n  }\n}\n.fix_bar{\n  width: 100%;\n  height: 100px;\n  display: flex;\n  align-items: center;\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  background: #000;\n  .icon-tianjiagouwuche1{\n    font-size: 50px;\n    margin-left: 30px;\n    color: #ffffff;\n  }\n  .addGoodListLength{\n    color: #ffffff;\n    margin-left: 30px;\n  }\n  .ball{\n    width: 30px;\n    height: 30px;\n    background: red;\n    border-radius: 30px;\n    position: absolute;\n    top: 35px;\n    left: 40px;\n    z-index: 10;\n  }\n}\n</style>\n\n```\n\n## 完整代码：\nhttps://github.com/xiaosongread/vue-pc-cli   \n\nhttp://localhost:8080/#/test3\n","slug":"goods","published":1,"updated":"2020-07-01T09:12:26.383Z","comments":1,"photos":[],"link":"","_id":"ckdr00y5h000je7zc907iawi0","content":"<p><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/goods.gif\" alt=\"blockchain\">   </p>\n<a id=\"more\"></a>\n<h2 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h2><p>1.确定点击的购物的位置，设置动画开始位置<br>2.结尾位置是左下角购物车的位置，设置为结束位置<br>3.配合设置false，来设置动画结束影藏<br>4.if (el.offsetHeight) {} 用来触发页面重绘</p>\n<h2 id=\"getBoundingClientRect\"><a href=\"#getBoundingClientRect\" class=\"headerlink\" title=\"getBoundingClientRect\"></a>getBoundingClientRect</h2><p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Element/getBoundingClientRect\" target=\"_blank\" rel=\"noopener\">https://developer.mozilla.org/zh-CN/docs/Web/API/Element/getBoundingClientRect</a></p>\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"good_box\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--  --&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"(item, index) in goosList\"</span> <span class=\"attr\">:key</span>=<span class=\"string\">\"index\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>= <span class=\"string\">\"'../assets/goods/1.jpg'\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"good_des\"</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">class</span>=<span class=\"string\">\"good_title\"</span>&gt;</span>&#123;&#123;item.title&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">class</span>=<span class=\"string\">\"good_js\"</span>&gt;</span>&#123;&#123;item.js&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"addGood\"</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"addGood($event, item)\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"iconfont icon-tianjiagouwuche\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fix_bar\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"iconfont icon-tianjiagouwuche1\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"addGoodListLength\"</span>&gt;</span>共 &#123;&#123;addGoodList.length&#125;&#125; 件商品<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">transition</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">name</span>=<span class=\"string\">\"ball\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        @<span class=\"attr\">before-enter</span>=<span class=\"string\">\"beforeEnter\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        @<span class=\"attr\">enter</span>=<span class=\"string\">\"enter\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        @<span class=\"attr\">after-enter</span>=<span class=\"string\">\"afterEnter\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"ball\"</span> <span class=\"attr\">v-if</span>=<span class=\"string\">\"show\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">transition</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">  name: <span class=\"string\">'demo'</span>,</span></span><br><span class=\"line\"><span class=\"undefined\">  data () &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">      goosList: [],</span></span><br><span class=\"line\"><span class=\"javascript\">      show: <span class=\"literal\">false</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">      wHeight: <span class=\"built_in\">document</span>.documentElement.clientHeight || <span class=\"built_in\">document</span>.body.clientHeight, <span class=\"comment\">// 屏幕的高度</span></span></span><br><span class=\"line\"><span class=\"undefined\">      ball: &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">        startLeft: <span class=\"string\">''</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">        startTop: <span class=\"string\">''</span></span></span><br><span class=\"line\"><span class=\"undefined\">      &#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">      addGoodList: []</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">  &#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">  created () &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt; <span class=\"number\">19</span>; i++) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"keyword\">let</span> obj = &#123;&#125;</span></span><br><span class=\"line\"><span class=\"javascript\">      obj.title = <span class=\"string\">'商品名称'</span> + i</span></span><br><span class=\"line\"><span class=\"javascript\">      obj.js = <span class=\"string\">'商品介绍'</span> + i</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"keyword\">this</span>.goosList.push(obj)</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">  &#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">  methods: &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">    addGood (el, item) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"keyword\">this</span>.show = <span class=\"literal\">true</span></span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"keyword\">let</span> obj = &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">        title: item.title,</span></span><br><span class=\"line\"><span class=\"undefined\">        js: item.js</span></span><br><span class=\"line\"><span class=\"undefined\">      &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"keyword\">this</span>.addGoodList.push(obj)</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"keyword\">let</span> rectInfo = el.target.getBoundingClientRect()</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"keyword\">this</span>.ball.startLeft = rectInfo.left</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"keyword\">this</span>.ball.startTop = rectInfo.top</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">    beforeEnter (el) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"comment\">// let ballRectInfo = el.getBoundingClientRect()</span></span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"comment\">// console.log(ballRectInfo)</span></span></span><br><span class=\"line\"><span class=\"javascript\">      el.style.left = <span class=\"keyword\">this</span>.ball.startLeft + <span class=\"string\">'px'</span></span></span><br><span class=\"line\"><span class=\"javascript\">      el.style.top = -(<span class=\"keyword\">this</span>.wHeight - <span class=\"number\">100</span> - <span class=\"keyword\">this</span>.ball.startTop) + <span class=\"string\">'px'</span> <span class=\"comment\">// 100 =&gt; 底部黑框的高度</span></span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">    enter (el, done) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"comment\">// 触发动画重绘</span></span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"keyword\">if</span> (el.offsetHeight) &#123;&#125;</span></span><br><span class=\"line\"><span class=\"javascript\">      el.style.left = <span class=\"string\">'35px'</span></span></span><br><span class=\"line\"><span class=\"javascript\">      el.style.top = <span class=\"string\">'40px'</span></span></span><br><span class=\"line\"><span class=\"javascript\">      el.style.transition = <span class=\"string\">'all 1s'</span></span></span><br><span class=\"line\"><span class=\"undefined\">      done()</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">    afterEnter (el) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"keyword\">this</span>.show = <span class=\"literal\">false</span></span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"comment\">// el.style.display = 'none'</span></span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">  &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">&#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"scss\"</span> <span class=\"attr\">scoped</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"selector-class\">.good_box</span>&#123;</span></span><br><span class=\"line\"><span class=\"undefined\">  li &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">    display: flex;</span></span><br><span class=\"line\"><span class=\"undefined\">    margin-bottom: 20px;</span></span><br><span class=\"line\"><span class=\"css\">    &amp;<span class=\"selector-pseudo\">:not(</span><span class=\"selector-pseudo\">::after)</span>&#123;</span></span><br><span class=\"line\"><span class=\"css\">      <span class=\"selector-tag\">border-bottom</span>: 1<span class=\"selector-tag\">px</span> <span class=\"selector-tag\">solid</span> <span class=\"selector-id\">#dddddd</span>;</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">    img&#123;</span></span><br><span class=\"line\"><span class=\"undefined\">      width: 100px;</span></span><br><span class=\"line\"><span class=\"undefined\">      height: 100px;</span></span><br><span class=\"line\"><span class=\"undefined\">      margin-right: 25px;</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;</span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-class\">.good_des</span>&#123;</span></span><br><span class=\"line\"><span class=\"undefined\">      flex: 1;</span></span><br><span class=\"line\"><span class=\"undefined\">      text-align: left;</span></span><br><span class=\"line\"><span class=\"css\">      <span class=\"selector-class\">.good_title</span>&#123;</span></span><br><span class=\"line\"><span class=\"undefined\">        font-size: 16px;</span></span><br><span class=\"line\"><span class=\"undefined\">      &#125;</span></span><br><span class=\"line\"><span class=\"css\">      <span class=\"selector-class\">.good_js</span>&#123;</span></span><br><span class=\"line\"><span class=\"undefined\">        font-size: 12px;</span></span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-tag\">color</span>: <span class=\"selector-id\">#cccccc</span>;</span></span><br><span class=\"line\"><span class=\"undefined\">        margin-top: 10px;</span></span><br><span class=\"line\"><span class=\"undefined\">      &#125;</span></span><br><span class=\"line\"><span class=\"css\">      <span class=\"selector-class\">.addGood</span>&#123;</span></span><br><span class=\"line\"><span class=\"undefined\">        text-align: right;</span></span><br><span class=\"line\"><span class=\"undefined\">        margin-right: 30px;</span></span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-class\">.iconfont</span>&#123;</span></span><br><span class=\"line\"><span class=\"undefined\">          font-size: 25px;</span></span><br><span class=\"line\"><span class=\"undefined\">          color: blue;</span></span><br><span class=\"line\"><span class=\"undefined\">          margin-top: 20px;</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">      &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">  &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">&#125;</span></span><br><span class=\"line\"><span class=\"css\"><span class=\"selector-class\">.fix_bar</span>&#123;</span></span><br><span class=\"line\"><span class=\"undefined\">  width: 100%;</span></span><br><span class=\"line\"><span class=\"undefined\">  height: 100px;</span></span><br><span class=\"line\"><span class=\"undefined\">  display: flex;</span></span><br><span class=\"line\"><span class=\"undefined\">  align-items: center;</span></span><br><span class=\"line\"><span class=\"undefined\">  position: fixed;</span></span><br><span class=\"line\"><span class=\"undefined\">  bottom: 0;</span></span><br><span class=\"line\"><span class=\"undefined\">  left: 0;</span></span><br><span class=\"line\"><span class=\"css\">  <span class=\"selector-tag\">background</span>: <span class=\"selector-id\">#000</span>;</span></span><br><span class=\"line\"><span class=\"css\">  <span class=\"selector-class\">.icon-tianjiagouwuche1</span>&#123;</span></span><br><span class=\"line\"><span class=\"undefined\">    font-size: 50px;</span></span><br><span class=\"line\"><span class=\"undefined\">    margin-left: 30px;</span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-tag\">color</span>: <span class=\"selector-id\">#ffffff</span>;</span></span><br><span class=\"line\"><span class=\"undefined\">  &#125;</span></span><br><span class=\"line\"><span class=\"css\">  <span class=\"selector-class\">.addGoodListLength</span>&#123;</span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-tag\">color</span>: <span class=\"selector-id\">#ffffff</span>;</span></span><br><span class=\"line\"><span class=\"undefined\">    margin-left: 30px;</span></span><br><span class=\"line\"><span class=\"undefined\">  &#125;</span></span><br><span class=\"line\"><span class=\"css\">  <span class=\"selector-class\">.ball</span>&#123;</span></span><br><span class=\"line\"><span class=\"undefined\">    width: 30px;</span></span><br><span class=\"line\"><span class=\"undefined\">    height: 30px;</span></span><br><span class=\"line\"><span class=\"undefined\">    background: red;</span></span><br><span class=\"line\"><span class=\"undefined\">    border-radius: 30px;</span></span><br><span class=\"line\"><span class=\"undefined\">    position: absolute;</span></span><br><span class=\"line\"><span class=\"undefined\">    top: 35px;</span></span><br><span class=\"line\"><span class=\"undefined\">    left: 40px;</span></span><br><span class=\"line\"><span class=\"undefined\">    z-index: 10;</span></span><br><span class=\"line\"><span class=\"undefined\">  &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">&#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"完整代码：\"><a href=\"#完整代码：\" class=\"headerlink\" title=\"完整代码：\"></a>完整代码：</h2><p><a href=\"https://github.com/xiaosongread/vue-pc-cli\" target=\"_blank\" rel=\"noopener\">https://github.com/xiaosongread/vue-pc-cli</a>   </p>\n<p><a href=\"http://localhost:8080/#/test3\" target=\"_blank\" rel=\"noopener\">http://localhost:8080/#/test3</a></p>\n","site":{"data":{}},"excerpt":"<p><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/goods.gif\" alt=\"blockchain\">   </p>","more":"<h2 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h2><p>1.确定点击的购物的位置，设置动画开始位置<br>2.结尾位置是左下角购物车的位置，设置为结束位置<br>3.配合设置false，来设置动画结束影藏<br>4.if (el.offsetHeight) {} 用来触发页面重绘</p>\n<h2 id=\"getBoundingClientRect\"><a href=\"#getBoundingClientRect\" class=\"headerlink\" title=\"getBoundingClientRect\"></a>getBoundingClientRect</h2><p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Element/getBoundingClientRect\" target=\"_blank\" rel=\"noopener\">https://developer.mozilla.org/zh-CN/docs/Web/API/Element/getBoundingClientRect</a></p>\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"good_box\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--  --&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"(item, index) in goosList\"</span> <span class=\"attr\">:key</span>=<span class=\"string\">\"index\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>= <span class=\"string\">\"'../assets/goods/1.jpg'\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"good_des\"</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">class</span>=<span class=\"string\">\"good_title\"</span>&gt;</span>&#123;&#123;item.title&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">class</span>=<span class=\"string\">\"good_js\"</span>&gt;</span>&#123;&#123;item.js&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"addGood\"</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"addGood($event, item)\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"iconfont icon-tianjiagouwuche\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fix_bar\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"iconfont icon-tianjiagouwuche1\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"addGoodListLength\"</span>&gt;</span>共 &#123;&#123;addGoodList.length&#125;&#125; 件商品<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">transition</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">name</span>=<span class=\"string\">\"ball\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        @<span class=\"attr\">before-enter</span>=<span class=\"string\">\"beforeEnter\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        @<span class=\"attr\">enter</span>=<span class=\"string\">\"enter\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        @<span class=\"attr\">after-enter</span>=<span class=\"string\">\"afterEnter\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"ball\"</span> <span class=\"attr\">v-if</span>=<span class=\"string\">\"show\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">transition</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">  name: <span class=\"string\">'demo'</span>,</span></span><br><span class=\"line\"><span class=\"undefined\">  data () &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">      goosList: [],</span></span><br><span class=\"line\"><span class=\"javascript\">      show: <span class=\"literal\">false</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">      wHeight: <span class=\"built_in\">document</span>.documentElement.clientHeight || <span class=\"built_in\">document</span>.body.clientHeight, <span class=\"comment\">// 屏幕的高度</span></span></span><br><span class=\"line\"><span class=\"undefined\">      ball: &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">        startLeft: <span class=\"string\">''</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">        startTop: <span class=\"string\">''</span></span></span><br><span class=\"line\"><span class=\"undefined\">      &#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">      addGoodList: []</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">  &#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">  created () &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt; <span class=\"number\">19</span>; i++) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"keyword\">let</span> obj = &#123;&#125;</span></span><br><span class=\"line\"><span class=\"javascript\">      obj.title = <span class=\"string\">'商品名称'</span> + i</span></span><br><span class=\"line\"><span class=\"javascript\">      obj.js = <span class=\"string\">'商品介绍'</span> + i</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"keyword\">this</span>.goosList.push(obj)</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">  &#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">  methods: &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">    addGood (el, item) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"keyword\">this</span>.show = <span class=\"literal\">true</span></span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"keyword\">let</span> obj = &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">        title: item.title,</span></span><br><span class=\"line\"><span class=\"undefined\">        js: item.js</span></span><br><span class=\"line\"><span class=\"undefined\">      &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"keyword\">this</span>.addGoodList.push(obj)</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"keyword\">let</span> rectInfo = el.target.getBoundingClientRect()</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"keyword\">this</span>.ball.startLeft = rectInfo.left</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"keyword\">this</span>.ball.startTop = rectInfo.top</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">    beforeEnter (el) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"comment\">// let ballRectInfo = el.getBoundingClientRect()</span></span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"comment\">// console.log(ballRectInfo)</span></span></span><br><span class=\"line\"><span class=\"javascript\">      el.style.left = <span class=\"keyword\">this</span>.ball.startLeft + <span class=\"string\">'px'</span></span></span><br><span class=\"line\"><span class=\"javascript\">      el.style.top = -(<span class=\"keyword\">this</span>.wHeight - <span class=\"number\">100</span> - <span class=\"keyword\">this</span>.ball.startTop) + <span class=\"string\">'px'</span> <span class=\"comment\">// 100 =&gt; 底部黑框的高度</span></span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">    enter (el, done) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"comment\">// 触发动画重绘</span></span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"keyword\">if</span> (el.offsetHeight) &#123;&#125;</span></span><br><span class=\"line\"><span class=\"javascript\">      el.style.left = <span class=\"string\">'35px'</span></span></span><br><span class=\"line\"><span class=\"javascript\">      el.style.top = <span class=\"string\">'40px'</span></span></span><br><span class=\"line\"><span class=\"javascript\">      el.style.transition = <span class=\"string\">'all 1s'</span></span></span><br><span class=\"line\"><span class=\"undefined\">      done()</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">    afterEnter (el) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"keyword\">this</span>.show = <span class=\"literal\">false</span></span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"comment\">// el.style.display = 'none'</span></span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">  &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">&#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"scss\"</span> <span class=\"attr\">scoped</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"selector-class\">.good_box</span>&#123;</span></span><br><span class=\"line\"><span class=\"undefined\">  li &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">    display: flex;</span></span><br><span class=\"line\"><span class=\"undefined\">    margin-bottom: 20px;</span></span><br><span class=\"line\"><span class=\"css\">    &amp;<span class=\"selector-pseudo\">:not(</span><span class=\"selector-pseudo\">::after)</span>&#123;</span></span><br><span class=\"line\"><span class=\"css\">      <span class=\"selector-tag\">border-bottom</span>: 1<span class=\"selector-tag\">px</span> <span class=\"selector-tag\">solid</span> <span class=\"selector-id\">#dddddd</span>;</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">    img&#123;</span></span><br><span class=\"line\"><span class=\"undefined\">      width: 100px;</span></span><br><span class=\"line\"><span class=\"undefined\">      height: 100px;</span></span><br><span class=\"line\"><span class=\"undefined\">      margin-right: 25px;</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;</span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-class\">.good_des</span>&#123;</span></span><br><span class=\"line\"><span class=\"undefined\">      flex: 1;</span></span><br><span class=\"line\"><span class=\"undefined\">      text-align: left;</span></span><br><span class=\"line\"><span class=\"css\">      <span class=\"selector-class\">.good_title</span>&#123;</span></span><br><span class=\"line\"><span class=\"undefined\">        font-size: 16px;</span></span><br><span class=\"line\"><span class=\"undefined\">      &#125;</span></span><br><span class=\"line\"><span class=\"css\">      <span class=\"selector-class\">.good_js</span>&#123;</span></span><br><span class=\"line\"><span class=\"undefined\">        font-size: 12px;</span></span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-tag\">color</span>: <span class=\"selector-id\">#cccccc</span>;</span></span><br><span class=\"line\"><span class=\"undefined\">        margin-top: 10px;</span></span><br><span class=\"line\"><span class=\"undefined\">      &#125;</span></span><br><span class=\"line\"><span class=\"css\">      <span class=\"selector-class\">.addGood</span>&#123;</span></span><br><span class=\"line\"><span class=\"undefined\">        text-align: right;</span></span><br><span class=\"line\"><span class=\"undefined\">        margin-right: 30px;</span></span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-class\">.iconfont</span>&#123;</span></span><br><span class=\"line\"><span class=\"undefined\">          font-size: 25px;</span></span><br><span class=\"line\"><span class=\"undefined\">          color: blue;</span></span><br><span class=\"line\"><span class=\"undefined\">          margin-top: 20px;</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">      &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">  &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">&#125;</span></span><br><span class=\"line\"><span class=\"css\"><span class=\"selector-class\">.fix_bar</span>&#123;</span></span><br><span class=\"line\"><span class=\"undefined\">  width: 100%;</span></span><br><span class=\"line\"><span class=\"undefined\">  height: 100px;</span></span><br><span class=\"line\"><span class=\"undefined\">  display: flex;</span></span><br><span class=\"line\"><span class=\"undefined\">  align-items: center;</span></span><br><span class=\"line\"><span class=\"undefined\">  position: fixed;</span></span><br><span class=\"line\"><span class=\"undefined\">  bottom: 0;</span></span><br><span class=\"line\"><span class=\"undefined\">  left: 0;</span></span><br><span class=\"line\"><span class=\"css\">  <span class=\"selector-tag\">background</span>: <span class=\"selector-id\">#000</span>;</span></span><br><span class=\"line\"><span class=\"css\">  <span class=\"selector-class\">.icon-tianjiagouwuche1</span>&#123;</span></span><br><span class=\"line\"><span class=\"undefined\">    font-size: 50px;</span></span><br><span class=\"line\"><span class=\"undefined\">    margin-left: 30px;</span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-tag\">color</span>: <span class=\"selector-id\">#ffffff</span>;</span></span><br><span class=\"line\"><span class=\"undefined\">  &#125;</span></span><br><span class=\"line\"><span class=\"css\">  <span class=\"selector-class\">.addGoodListLength</span>&#123;</span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-tag\">color</span>: <span class=\"selector-id\">#ffffff</span>;</span></span><br><span class=\"line\"><span class=\"undefined\">    margin-left: 30px;</span></span><br><span class=\"line\"><span class=\"undefined\">  &#125;</span></span><br><span class=\"line\"><span class=\"css\">  <span class=\"selector-class\">.ball</span>&#123;</span></span><br><span class=\"line\"><span class=\"undefined\">    width: 30px;</span></span><br><span class=\"line\"><span class=\"undefined\">    height: 30px;</span></span><br><span class=\"line\"><span class=\"undefined\">    background: red;</span></span><br><span class=\"line\"><span class=\"undefined\">    border-radius: 30px;</span></span><br><span class=\"line\"><span class=\"undefined\">    position: absolute;</span></span><br><span class=\"line\"><span class=\"undefined\">    top: 35px;</span></span><br><span class=\"line\"><span class=\"undefined\">    left: 40px;</span></span><br><span class=\"line\"><span class=\"undefined\">    z-index: 10;</span></span><br><span class=\"line\"><span class=\"undefined\">  &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">&#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"完整代码：\"><a href=\"#完整代码：\" class=\"headerlink\" title=\"完整代码：\"></a>完整代码：</h2><p><a href=\"https://github.com/xiaosongread/vue-pc-cli\" target=\"_blank\" rel=\"noopener\">https://github.com/xiaosongread/vue-pc-cli</a>   </p>\n<p><a href=\"http://localhost:8080/#/test3\" target=\"_blank\" rel=\"noopener\">http://localhost:8080/#/test3</a></p>"},{"title":"git-常用命令技巧","date":"2019-08-22T02:20:42.000Z","_content":"![blockchain](https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/git.jpg)\n<!-- more -->\n## 单独合并某个分支的某个文件\nbranch-a分支有个文件的功能要合并到branch-b的上面\n```javascript\ngit checkout branch-b\ngit checkout --patch branch-b src/views/index/Index.vue\n弹出修改确认提示：Apply this hunk to index and worktree [y,n,q,a,d,/,K,g,e,?]?\n在弹出的都选  y 即可。最后提交代码完成更新合并同步\n```\n\n## 删除远程分支\n```javascript\ngit push origin --delete 远程分支名称\n```\n\n## 拉去远程分支到本地\n```javascript\ngit checkout -b 本地分支名 origin/远程分支名\n```\n\n## 查看当前详细分支信息（可看到当前分支与对应的远程追踪分支）\n```javascript\ngit branch -vv\n```\n\n## 远程分支删除 git branch -a 还有的问题\n### 1.查看remote地址，远程分支，还有本地分支与之相对应关系等信息\n```javascript\ngit remote show origin \n```\n### 2.删除远程没有的分支\n```javascript\ngit remote prune origin  \n```\n\n## 回退远程分支\n```javascript\n// 本地分支回退\ngit reset --hard 107d5976407c2e544db8f19cfe425502b7670d6b \n// 强推代码到远程\ngit push -f origin test \n```\n---\n## 打tag\n\n### 列出已有的tag\n```shall\ngit tag\n```\n\n### 新建tag\n```shall\ngit tag v1.0\n```\n还可以加上-a参数来创建一个带备注的tag，备注信息由-m指定。如果你未传入-m则创建过程系统会自动为你打开编辑器让你填写备注信息。\n```shall\ngit tag -a tagName -m \"my tag\"\n```\n\n### 查看tag详细信息\n```shall\ngit show tagName\n```\n\n### 给指定的某个commit号加tag\n打tag不必要在head之上，也可在之前的版本上打，这需要你知道某个提交对象的校验和（通过git log获取，取校验和的前几位数字即可）。\n\n```shall\ngit tag -a v1.2 9fceb02 -m \"my tag\"\n```\n### 将tag同步到远程服务器\n同提交代码后，使用git push来推送到远程服务器一样，tag也需要进行推送才能到远端服务器。\n使用git push origin [tagName]推送单个分支。\n```shall\ngit push origin v1.0\n```\n推送本地所有tag，使用\n\n```shall\ngit push origin --tags\n```\n\n### 切换到某个tag\n\n> 跟分支一样，可以直接切换到某个tag去。这个时候不位于任何分支，处于游离状态，可以考虑基于这个tag创建一个分支。\n\n```shall\ngit checkout tagname\n```\n\n### 删除某个tag\n\n++ 本地删除\n```shall\ngit tag -d v0.1.2 \n```\n\n++ 远端删除\n```shall\n// git push origin :refs/tags/<tagName>\ngit push origin :refs/tags/v0.1.2\n```\n\n","source":"_posts/git-常用命令技巧.md","raw":"---\ntitle: git-常用命令技巧\ncategories: gc-end\ndate: 2019-08-22 10:20:42\ntags: git\n---\n![blockchain](https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/git.jpg)\n<!-- more -->\n## 单独合并某个分支的某个文件\nbranch-a分支有个文件的功能要合并到branch-b的上面\n```javascript\ngit checkout branch-b\ngit checkout --patch branch-b src/views/index/Index.vue\n弹出修改确认提示：Apply this hunk to index and worktree [y,n,q,a,d,/,K,g,e,?]?\n在弹出的都选  y 即可。最后提交代码完成更新合并同步\n```\n\n## 删除远程分支\n```javascript\ngit push origin --delete 远程分支名称\n```\n\n## 拉去远程分支到本地\n```javascript\ngit checkout -b 本地分支名 origin/远程分支名\n```\n\n## 查看当前详细分支信息（可看到当前分支与对应的远程追踪分支）\n```javascript\ngit branch -vv\n```\n\n## 远程分支删除 git branch -a 还有的问题\n### 1.查看remote地址，远程分支，还有本地分支与之相对应关系等信息\n```javascript\ngit remote show origin \n```\n### 2.删除远程没有的分支\n```javascript\ngit remote prune origin  \n```\n\n## 回退远程分支\n```javascript\n// 本地分支回退\ngit reset --hard 107d5976407c2e544db8f19cfe425502b7670d6b \n// 强推代码到远程\ngit push -f origin test \n```\n---\n## 打tag\n\n### 列出已有的tag\n```shall\ngit tag\n```\n\n### 新建tag\n```shall\ngit tag v1.0\n```\n还可以加上-a参数来创建一个带备注的tag，备注信息由-m指定。如果你未传入-m则创建过程系统会自动为你打开编辑器让你填写备注信息。\n```shall\ngit tag -a tagName -m \"my tag\"\n```\n\n### 查看tag详细信息\n```shall\ngit show tagName\n```\n\n### 给指定的某个commit号加tag\n打tag不必要在head之上，也可在之前的版本上打，这需要你知道某个提交对象的校验和（通过git log获取，取校验和的前几位数字即可）。\n\n```shall\ngit tag -a v1.2 9fceb02 -m \"my tag\"\n```\n### 将tag同步到远程服务器\n同提交代码后，使用git push来推送到远程服务器一样，tag也需要进行推送才能到远端服务器。\n使用git push origin [tagName]推送单个分支。\n```shall\ngit push origin v1.0\n```\n推送本地所有tag，使用\n\n```shall\ngit push origin --tags\n```\n\n### 切换到某个tag\n\n> 跟分支一样，可以直接切换到某个tag去。这个时候不位于任何分支，处于游离状态，可以考虑基于这个tag创建一个分支。\n\n```shall\ngit checkout tagname\n```\n\n### 删除某个tag\n\n++ 本地删除\n```shall\ngit tag -d v0.1.2 \n```\n\n++ 远端删除\n```shall\n// git push origin :refs/tags/<tagName>\ngit push origin :refs/tags/v0.1.2\n```\n\n","slug":"git-常用命令技巧","published":1,"updated":"2020-07-01T09:12:26.382Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdr00y5j000ne7zc188wl5cp","content":"<p><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/git.jpg\" alt=\"blockchain\"><br><a id=\"more\"></a></p>\n<h2 id=\"单独合并某个分支的某个文件\"><a href=\"#单独合并某个分支的某个文件\" class=\"headerlink\" title=\"单独合并某个分支的某个文件\"></a>单独合并某个分支的某个文件</h2><p>branch-a分支有个文件的功能要合并到branch-b的上面<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout branch-b</span><br><span class=\"line\">git checkout --patch branch-b src/views/index/Index.vue</span><br><span class=\"line\">弹出修改确认提示：Apply <span class=\"keyword\">this</span> hunk to index and worktree [y,n,q,a,d,/,K,g,e,?]?</span><br><span class=\"line\">在弹出的都选  y 即可。最后提交代码完成更新合并同步</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"删除远程分支\"><a href=\"#删除远程分支\" class=\"headerlink\" title=\"删除远程分支\"></a>删除远程分支</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push origin --<span class=\"keyword\">delete</span> 远程分支名称</span><br></pre></td></tr></table></figure>\n<h2 id=\"拉去远程分支到本地\"><a href=\"#拉去远程分支到本地\" class=\"headerlink\" title=\"拉去远程分支到本地\"></a>拉去远程分支到本地</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout -b 本地分支名 origin/远程分支名</span><br></pre></td></tr></table></figure>\n<h2 id=\"查看当前详细分支信息（可看到当前分支与对应的远程追踪分支）\"><a href=\"#查看当前详细分支信息（可看到当前分支与对应的远程追踪分支）\" class=\"headerlink\" title=\"查看当前详细分支信息（可看到当前分支与对应的远程追踪分支）\"></a>查看当前详细分支信息（可看到当前分支与对应的远程追踪分支）</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch -vv</span><br></pre></td></tr></table></figure>\n<h2 id=\"远程分支删除-git-branch-a-还有的问题\"><a href=\"#远程分支删除-git-branch-a-还有的问题\" class=\"headerlink\" title=\"远程分支删除 git branch -a 还有的问题\"></a>远程分支删除 git branch -a 还有的问题</h2><h3 id=\"1-查看remote地址，远程分支，还有本地分支与之相对应关系等信息\"><a href=\"#1-查看remote地址，远程分支，还有本地分支与之相对应关系等信息\" class=\"headerlink\" title=\"1.查看remote地址，远程分支，还有本地分支与之相对应关系等信息\"></a>1.查看remote地址，远程分支，还有本地分支与之相对应关系等信息</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote show origin</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-删除远程没有的分支\"><a href=\"#2-删除远程没有的分支\" class=\"headerlink\" title=\"2.删除远程没有的分支\"></a>2.删除远程没有的分支</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote prune origin</span><br></pre></td></tr></table></figure>\n<h2 id=\"回退远程分支\"><a href=\"#回退远程分支\" class=\"headerlink\" title=\"回退远程分支\"></a>回退远程分支</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 本地分支回退</span></span><br><span class=\"line\">git reset --hard <span class=\"number\">107</span>d5976407c2e544db8f19cfe425502b7670d6b </span><br><span class=\"line\"><span class=\"comment\">// 强推代码到远程</span></span><br><span class=\"line\">git push -f origin test</span><br></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"打tag\"><a href=\"#打tag\" class=\"headerlink\" title=\"打tag\"></a>打tag</h2><h3 id=\"列出已有的tag\"><a href=\"#列出已有的tag\" class=\"headerlink\" title=\"列出已有的tag\"></a>列出已有的tag</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git tag</span><br></pre></td></tr></table></figure>\n<h3 id=\"新建tag\"><a href=\"#新建tag\" class=\"headerlink\" title=\"新建tag\"></a>新建tag</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git tag v1.0</span><br></pre></td></tr></table></figure>\n<p>还可以加上-a参数来创建一个带备注的tag，备注信息由-m指定。如果你未传入-m则创建过程系统会自动为你打开编辑器让你填写备注信息。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git tag -a tagName -m &quot;my tag&quot;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"查看tag详细信息\"><a href=\"#查看tag详细信息\" class=\"headerlink\" title=\"查看tag详细信息\"></a>查看tag详细信息</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git show tagName</span><br></pre></td></tr></table></figure>\n<h3 id=\"给指定的某个commit号加tag\"><a href=\"#给指定的某个commit号加tag\" class=\"headerlink\" title=\"给指定的某个commit号加tag\"></a>给指定的某个commit号加tag</h3><p>打tag不必要在head之上，也可在之前的版本上打，这需要你知道某个提交对象的校验和（通过git log获取，取校验和的前几位数字即可）。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git tag -a v1.2 9fceb02 -m &quot;my tag&quot;</span><br></pre></td></tr></table></figure>\n<h3 id=\"将tag同步到远程服务器\"><a href=\"#将tag同步到远程服务器\" class=\"headerlink\" title=\"将tag同步到远程服务器\"></a>将tag同步到远程服务器</h3><p>同提交代码后，使用git push来推送到远程服务器一样，tag也需要进行推送才能到远端服务器。<br>使用git push origin [tagName]推送单个分支。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push origin v1.0</span><br></pre></td></tr></table></figure></p>\n<p>推送本地所有tag，使用</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push origin --tags</span><br></pre></td></tr></table></figure>\n<h3 id=\"切换到某个tag\"><a href=\"#切换到某个tag\" class=\"headerlink\" title=\"切换到某个tag\"></a>切换到某个tag</h3><blockquote>\n<p>跟分支一样，可以直接切换到某个tag去。这个时候不位于任何分支，处于游离状态，可以考虑基于这个tag创建一个分支。</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout tagname</span><br></pre></td></tr></table></figure>\n<h3 id=\"删除某个tag\"><a href=\"#删除某个tag\" class=\"headerlink\" title=\"删除某个tag\"></a>删除某个tag</h3><p>++ 本地删除<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git tag -d v0.1.2</span><br></pre></td></tr></table></figure></p>\n<p>++ 远端删除<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// git push origin :refs/tags/&lt;tagName&gt;</span><br><span class=\"line\">git push origin :refs/tags/v0.1.2</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"<p><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/git.jpg\" alt=\"blockchain\"><br>","more":"</p>\n<h2 id=\"单独合并某个分支的某个文件\"><a href=\"#单独合并某个分支的某个文件\" class=\"headerlink\" title=\"单独合并某个分支的某个文件\"></a>单独合并某个分支的某个文件</h2><p>branch-a分支有个文件的功能要合并到branch-b的上面<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout branch-b</span><br><span class=\"line\">git checkout --patch branch-b src/views/index/Index.vue</span><br><span class=\"line\">弹出修改确认提示：Apply <span class=\"keyword\">this</span> hunk to index and worktree [y,n,q,a,d,/,K,g,e,?]?</span><br><span class=\"line\">在弹出的都选  y 即可。最后提交代码完成更新合并同步</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"删除远程分支\"><a href=\"#删除远程分支\" class=\"headerlink\" title=\"删除远程分支\"></a>删除远程分支</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push origin --<span class=\"keyword\">delete</span> 远程分支名称</span><br></pre></td></tr></table></figure>\n<h2 id=\"拉去远程分支到本地\"><a href=\"#拉去远程分支到本地\" class=\"headerlink\" title=\"拉去远程分支到本地\"></a>拉去远程分支到本地</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout -b 本地分支名 origin/远程分支名</span><br></pre></td></tr></table></figure>\n<h2 id=\"查看当前详细分支信息（可看到当前分支与对应的远程追踪分支）\"><a href=\"#查看当前详细分支信息（可看到当前分支与对应的远程追踪分支）\" class=\"headerlink\" title=\"查看当前详细分支信息（可看到当前分支与对应的远程追踪分支）\"></a>查看当前详细分支信息（可看到当前分支与对应的远程追踪分支）</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch -vv</span><br></pre></td></tr></table></figure>\n<h2 id=\"远程分支删除-git-branch-a-还有的问题\"><a href=\"#远程分支删除-git-branch-a-还有的问题\" class=\"headerlink\" title=\"远程分支删除 git branch -a 还有的问题\"></a>远程分支删除 git branch -a 还有的问题</h2><h3 id=\"1-查看remote地址，远程分支，还有本地分支与之相对应关系等信息\"><a href=\"#1-查看remote地址，远程分支，还有本地分支与之相对应关系等信息\" class=\"headerlink\" title=\"1.查看remote地址，远程分支，还有本地分支与之相对应关系等信息\"></a>1.查看remote地址，远程分支，还有本地分支与之相对应关系等信息</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote show origin</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-删除远程没有的分支\"><a href=\"#2-删除远程没有的分支\" class=\"headerlink\" title=\"2.删除远程没有的分支\"></a>2.删除远程没有的分支</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote prune origin</span><br></pre></td></tr></table></figure>\n<h2 id=\"回退远程分支\"><a href=\"#回退远程分支\" class=\"headerlink\" title=\"回退远程分支\"></a>回退远程分支</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 本地分支回退</span></span><br><span class=\"line\">git reset --hard <span class=\"number\">107</span>d5976407c2e544db8f19cfe425502b7670d6b </span><br><span class=\"line\"><span class=\"comment\">// 强推代码到远程</span></span><br><span class=\"line\">git push -f origin test</span><br></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"打tag\"><a href=\"#打tag\" class=\"headerlink\" title=\"打tag\"></a>打tag</h2><h3 id=\"列出已有的tag\"><a href=\"#列出已有的tag\" class=\"headerlink\" title=\"列出已有的tag\"></a>列出已有的tag</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git tag</span><br></pre></td></tr></table></figure>\n<h3 id=\"新建tag\"><a href=\"#新建tag\" class=\"headerlink\" title=\"新建tag\"></a>新建tag</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git tag v1.0</span><br></pre></td></tr></table></figure>\n<p>还可以加上-a参数来创建一个带备注的tag，备注信息由-m指定。如果你未传入-m则创建过程系统会自动为你打开编辑器让你填写备注信息。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git tag -a tagName -m &quot;my tag&quot;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"查看tag详细信息\"><a href=\"#查看tag详细信息\" class=\"headerlink\" title=\"查看tag详细信息\"></a>查看tag详细信息</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git show tagName</span><br></pre></td></tr></table></figure>\n<h3 id=\"给指定的某个commit号加tag\"><a href=\"#给指定的某个commit号加tag\" class=\"headerlink\" title=\"给指定的某个commit号加tag\"></a>给指定的某个commit号加tag</h3><p>打tag不必要在head之上，也可在之前的版本上打，这需要你知道某个提交对象的校验和（通过git log获取，取校验和的前几位数字即可）。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git tag -a v1.2 9fceb02 -m &quot;my tag&quot;</span><br></pre></td></tr></table></figure>\n<h3 id=\"将tag同步到远程服务器\"><a href=\"#将tag同步到远程服务器\" class=\"headerlink\" title=\"将tag同步到远程服务器\"></a>将tag同步到远程服务器</h3><p>同提交代码后，使用git push来推送到远程服务器一样，tag也需要进行推送才能到远端服务器。<br>使用git push origin [tagName]推送单个分支。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push origin v1.0</span><br></pre></td></tr></table></figure></p>\n<p>推送本地所有tag，使用</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push origin --tags</span><br></pre></td></tr></table></figure>\n<h3 id=\"切换到某个tag\"><a href=\"#切换到某个tag\" class=\"headerlink\" title=\"切换到某个tag\"></a>切换到某个tag</h3><blockquote>\n<p>跟分支一样，可以直接切换到某个tag去。这个时候不位于任何分支，处于游离状态，可以考虑基于这个tag创建一个分支。</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout tagname</span><br></pre></td></tr></table></figure>\n<h3 id=\"删除某个tag\"><a href=\"#删除某个tag\" class=\"headerlink\" title=\"删除某个tag\"></a>删除某个tag</h3><p>++ 本地删除<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git tag -d v0.1.2</span><br></pre></td></tr></table></figure></p>\n<p>++ 远端删除<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// git push origin :refs/tags/&lt;tagName&gt;</span><br><span class=\"line\">git push origin :refs/tags/v0.1.2</span><br></pre></td></tr></table></figure></p>"},{"title":"react-子父组件通信","date":"2019-06-28T07:01:59.000Z","_content":"## React子组件和父组件通信   \n> 1. 子组件获取父组件属性：props或者state   \n2. 子组件调用父组件的方法   \n3. 父组件获取子组件的属性：props或者state   \n4. 父组件调用子组件的方法   \n\n<!-- more -->\n## 父组件\n\n```javaScript\nimport React, { Component } from 'react'\n\nimport { userList } from 'src/services/user'\nimport Test from 'component/Test'\nimport { Button } from 'antd-mobile'\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      hidden: false,\n      message: '',\n      mesCons: [],\n      name: 'zhangsan',\n      age: '12',\n      sex: 'man',\n    }\n    // this.handleFn = this.handleFn.bind(this)\n  }\n\n  getInitialState() {}\n  async componentDidMount() {\n    // const { data } = await userList()\n  }\n\n  handleFn = value => {\n    if (value === 'focus') {\n      this.setState({ hidden: true }, () => {\n        console.log('这里执行了...')\n      })\n    } else {\n      this.setState({ hidden: false })\n    }\n  }\n  changeFn(e) {\n    this.setState({\n      message: e.target.value,\n    })\n  }\n  send() {\n    let list = [...this.state.mesCons]\n    let keywords = '钱'\n    if (this.state.message.indexOf(keywords) > -1) {\n      list.push({\n        type: 4,\n        value: this.state.message,\n      })\n    } else {\n      list.push({\n        type: 1,\n        value: this.state.message,\n      })\n    }\n    this.setState({\n      mesCons: list,\n      hidden: false,\n      message: '',\n    })\n  }\n  callback = mes => {\n    alert('子组件改变父组件', mes)\n  }\n  render() {\n    return (\n      <div className=\"layout\">\n        <div className=\"contain\">\n          <div className=\"text-box\">\n            <Test\n              {...this.state}\n              list={this.state.mesCons}\n              jbFn={this.callback}\n            />\n          </div>\n          <div className=\"input-box\">\n            <input\n              type=\"text\"\n              value={this.state.message}\n              placeholder=\"写下你想说的...\"\n              onFocus={this.handleFn.bind(this, 'focus')}\n              onChange={this.changeFn.bind(this)}\n              // onBlur={this.handleFn.bind(this, 'blur')}\n            />\n            {this.state.hidden ? (\n              <Button type=\"primary\" onClick={this.send.bind(this)}>\n                发送\n              </Button>\n            ) : null}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App\n```\n\n## 子组件\n\n```javaScript\nimport React, { Component } from 'react'\n\nexport default class Test extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {}\n    this.test1 = this.test1.bind(this)\n  }\n  test1() {\n    this.props.jbFn('注意言行！！！')\n  }\n  render() {\n    return (\n      <div>\n        <div>\n          {this.props.list.map((item, index) => {\n            return item.type !== 4 ? (\n              <div key={index} className=\"mesitem\">\n                {item.value}\n              </div>\n            ) : (\n              <div key={index}>\n                <div className=\"tag_jg\" onClick={this.test1}>\n                  以下文字有诱骗的嫌疑，点击举报！！\n                </div>\n                <div className=\"mesitem\">{item.value}</div>\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n}\n```","source":"_posts/jc-11.md","raw":"---\ntitle: react-子父组件通信\ncategories: gc-end\ndate: 2019-06-28 15:01:59\ntags: react\n---\n## React子组件和父组件通信   \n> 1. 子组件获取父组件属性：props或者state   \n2. 子组件调用父组件的方法   \n3. 父组件获取子组件的属性：props或者state   \n4. 父组件调用子组件的方法   \n\n<!-- more -->\n## 父组件\n\n```javaScript\nimport React, { Component } from 'react'\n\nimport { userList } from 'src/services/user'\nimport Test from 'component/Test'\nimport { Button } from 'antd-mobile'\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      hidden: false,\n      message: '',\n      mesCons: [],\n      name: 'zhangsan',\n      age: '12',\n      sex: 'man',\n    }\n    // this.handleFn = this.handleFn.bind(this)\n  }\n\n  getInitialState() {}\n  async componentDidMount() {\n    // const { data } = await userList()\n  }\n\n  handleFn = value => {\n    if (value === 'focus') {\n      this.setState({ hidden: true }, () => {\n        console.log('这里执行了...')\n      })\n    } else {\n      this.setState({ hidden: false })\n    }\n  }\n  changeFn(e) {\n    this.setState({\n      message: e.target.value,\n    })\n  }\n  send() {\n    let list = [...this.state.mesCons]\n    let keywords = '钱'\n    if (this.state.message.indexOf(keywords) > -1) {\n      list.push({\n        type: 4,\n        value: this.state.message,\n      })\n    } else {\n      list.push({\n        type: 1,\n        value: this.state.message,\n      })\n    }\n    this.setState({\n      mesCons: list,\n      hidden: false,\n      message: '',\n    })\n  }\n  callback = mes => {\n    alert('子组件改变父组件', mes)\n  }\n  render() {\n    return (\n      <div className=\"layout\">\n        <div className=\"contain\">\n          <div className=\"text-box\">\n            <Test\n              {...this.state}\n              list={this.state.mesCons}\n              jbFn={this.callback}\n            />\n          </div>\n          <div className=\"input-box\">\n            <input\n              type=\"text\"\n              value={this.state.message}\n              placeholder=\"写下你想说的...\"\n              onFocus={this.handleFn.bind(this, 'focus')}\n              onChange={this.changeFn.bind(this)}\n              // onBlur={this.handleFn.bind(this, 'blur')}\n            />\n            {this.state.hidden ? (\n              <Button type=\"primary\" onClick={this.send.bind(this)}>\n                发送\n              </Button>\n            ) : null}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App\n```\n\n## 子组件\n\n```javaScript\nimport React, { Component } from 'react'\n\nexport default class Test extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {}\n    this.test1 = this.test1.bind(this)\n  }\n  test1() {\n    this.props.jbFn('注意言行！！！')\n  }\n  render() {\n    return (\n      <div>\n        <div>\n          {this.props.list.map((item, index) => {\n            return item.type !== 4 ? (\n              <div key={index} className=\"mesitem\">\n                {item.value}\n              </div>\n            ) : (\n              <div key={index}>\n                <div className=\"tag_jg\" onClick={this.test1}>\n                  以下文字有诱骗的嫌疑，点击举报！！\n                </div>\n                <div className=\"mesitem\">{item.value}</div>\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n}\n```","slug":"jc-11","published":1,"updated":"2020-07-01T09:12:26.384Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdr00y5k000qe7zcpv5oz83j","content":"<h2 id=\"React子组件和父组件通信\"><a href=\"#React子组件和父组件通信\" class=\"headerlink\" title=\"React子组件和父组件通信\"></a>React子组件和父组件通信</h2><blockquote>\n<ol>\n<li>子组件获取父组件属性：props或者state   </li>\n<li>子组件调用父组件的方法   </li>\n<li>父组件获取子组件的属性：props或者state   </li>\n<li>父组件调用子组件的方法   </li>\n</ol>\n</blockquote>\n<a id=\"more\"></a>\n<h2 id=\"父组件\"><a href=\"#父组件\" class=\"headerlink\" title=\"父组件\"></a>父组件</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> React, &#123; Component &#125; <span class=\"keyword\">from</span> <span class=\"string\">'react'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; userList &#125; <span class=\"keyword\">from</span> <span class=\"string\">'src/services/user'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> Test <span class=\"keyword\">from</span> <span class=\"string\">'component/Test'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; Button &#125; <span class=\"keyword\">from</span> <span class=\"string\">'antd-mobile'</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">App</span> <span class=\"keyword\">extends</span> <span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>(props) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">super</span>(props)</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.state = &#123;</span><br><span class=\"line\">      hidden: <span class=\"literal\">false</span>,</span><br><span class=\"line\">      message: <span class=\"string\">''</span>,</span><br><span class=\"line\">      mesCons: [],</span><br><span class=\"line\">      name: <span class=\"string\">'zhangsan'</span>,</span><br><span class=\"line\">      age: <span class=\"string\">'12'</span>,</span><br><span class=\"line\">      sex: <span class=\"string\">'man'</span>,</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// this.handleFn = this.handleFn.bind(this)</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  getInitialState() &#123;&#125;</span><br><span class=\"line\">  <span class=\"keyword\">async</span> componentDidMount() &#123;</span><br><span class=\"line\">    <span class=\"comment\">// const &#123; data &#125; = await userList()</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  handleFn = <span class=\"function\"><span class=\"params\">value</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (value === <span class=\"string\">'focus'</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.setState(&#123; <span class=\"attr\">hidden</span>: <span class=\"literal\">true</span> &#125;, () =&gt; &#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">'这里执行了...'</span>)</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.setState(&#123; <span class=\"attr\">hidden</span>: <span class=\"literal\">false</span> &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  changeFn(e) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.setState(&#123;</span><br><span class=\"line\">      message: e.target.value,</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  send() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> list = [...this.state.mesCons]</span><br><span class=\"line\">    <span class=\"keyword\">let</span> keywords = <span class=\"string\">'钱'</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.state.message.indexOf(keywords) &gt; <span class=\"number\">-1</span>) &#123;</span><br><span class=\"line\">      list.push(&#123;</span><br><span class=\"line\">        type: <span class=\"number\">4</span>,</span><br><span class=\"line\">        value: <span class=\"keyword\">this</span>.state.message,</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      list.push(&#123;</span><br><span class=\"line\">        type: <span class=\"number\">1</span>,</span><br><span class=\"line\">        value: <span class=\"keyword\">this</span>.state.message,</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.setState(&#123;</span><br><span class=\"line\">      mesCons: list,</span><br><span class=\"line\">      hidden: <span class=\"literal\">false</span>,</span><br><span class=\"line\">      message: <span class=\"string\">''</span>,</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  callback = <span class=\"function\"><span class=\"params\">mes</span> =&gt;</span> &#123;</span><br><span class=\"line\">    alert(<span class=\"string\">'子组件改变父组件'</span>, mes)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  render() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      &lt;div className=<span class=\"string\">\"layout\"</span>&gt;</span><br><span class=\"line\">        &lt;div className=<span class=\"string\">\"contain\"</span>&gt;</span><br><span class=\"line\">          &lt;div className=<span class=\"string\">\"text-box\"</span>&gt;</span><br><span class=\"line\">            &lt;Test</span><br><span class=\"line\">              &#123;...this.state&#125;</span><br><span class=\"line\">              list=&#123;<span class=\"keyword\">this</span>.state.mesCons&#125;</span><br><span class=\"line\">              jbFn=&#123;<span class=\"keyword\">this</span>.callback&#125;</span><br><span class=\"line\">            /&gt;</span><br><span class=\"line\">          &lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">          &lt;div className=\"input-box\"&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">            &lt;input</span></span><br><span class=\"line\"><span class=\"regexp\">              type=\"text\"</span></span><br><span class=\"line\"><span class=\"regexp\">              value=&#123;this.state.message&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">              placeholder=\"写下你想说的...\"</span></span><br><span class=\"line\"><span class=\"regexp\">              onFocus=&#123;this.handleFn.bind(this, 'focus')&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">              onChange=&#123;this.changeFn.bind(this)&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">              /</span><span class=\"regexp\">/ onBlur=&#123;this.handleFn.bind(this, 'blur')&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">            /</span>&gt;</span><br><span class=\"line\">            &#123;<span class=\"keyword\">this</span>.state.hidden ? (</span><br><span class=\"line\">              &lt;Button type=<span class=\"string\">\"primary\"</span> onClick=&#123;<span class=\"keyword\">this</span>.send.bind(<span class=\"keyword\">this</span>)&#125;&gt;</span><br><span class=\"line\">                发送</span><br><span class=\"line\">              &lt;<span class=\"regexp\">/Button&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">            ) : null&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">          &lt;/</span>div&gt;</span><br><span class=\"line\">        &lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">      &lt;/</span>div&gt;</span><br><span class=\"line\">    )</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> App</span><br></pre></td></tr></table></figure>\n<h2 id=\"子组件\"><a href=\"#子组件\" class=\"headerlink\" title=\"子组件\"></a>子组件</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> React, &#123; Component &#125; <span class=\"keyword\">from</span> <span class=\"string\">'react'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test</span> <span class=\"keyword\">extends</span> <span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>(props) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">super</span>(props)</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.state = &#123;&#125;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.test1 = <span class=\"keyword\">this</span>.test1.bind(<span class=\"keyword\">this</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  test1() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.props.jbFn(<span class=\"string\">'注意言行！！！'</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  render() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      &lt;div&gt;</span><br><span class=\"line\">        &lt;div&gt;</span><br><span class=\"line\">          &#123;<span class=\"keyword\">this</span>.props.list.map(<span class=\"function\">(<span class=\"params\">item, index</span>) =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> item.type !== <span class=\"number\">4</span> ? (</span><br><span class=\"line\">              &lt;div key=&#123;index&#125; className=<span class=\"string\">\"mesitem\"</span>&gt;</span><br><span class=\"line\">                &#123;item.value&#125;</span><br><span class=\"line\">              &lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">            ) : (</span></span><br><span class=\"line\"><span class=\"regexp\">              &lt;div key=&#123;index&#125;&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">                &lt;div className=\"tag_jg\" onClick=&#123;this.test1&#125;&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">                  以下文字有诱骗的嫌疑，点击举报！！</span></span><br><span class=\"line\"><span class=\"regexp\">                &lt;/</span>div&gt;</span><br><span class=\"line\">                &lt;div className=<span class=\"string\">\"mesitem\"</span>&gt;&#123;item.value&#125;&lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">              &lt;/</span>div&gt;</span><br><span class=\"line\">            )</span><br><span class=\"line\">          &#125;)&#125;</span><br><span class=\"line\">        &lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">      &lt;/</span>div&gt;</span><br><span class=\"line\">    )</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<h2 id=\"React子组件和父组件通信\"><a href=\"#React子组件和父组件通信\" class=\"headerlink\" title=\"React子组件和父组件通信\"></a>React子组件和父组件通信</h2><blockquote>\n<ol>\n<li>子组件获取父组件属性：props或者state   </li>\n<li>子组件调用父组件的方法   </li>\n<li>父组件获取子组件的属性：props或者state   </li>\n<li>父组件调用子组件的方法   </li>\n</ol>\n</blockquote>","more":"<h2 id=\"父组件\"><a href=\"#父组件\" class=\"headerlink\" title=\"父组件\"></a>父组件</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> React, &#123; Component &#125; <span class=\"keyword\">from</span> <span class=\"string\">'react'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; userList &#125; <span class=\"keyword\">from</span> <span class=\"string\">'src/services/user'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> Test <span class=\"keyword\">from</span> <span class=\"string\">'component/Test'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; Button &#125; <span class=\"keyword\">from</span> <span class=\"string\">'antd-mobile'</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">App</span> <span class=\"keyword\">extends</span> <span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>(props) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">super</span>(props)</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.state = &#123;</span><br><span class=\"line\">      hidden: <span class=\"literal\">false</span>,</span><br><span class=\"line\">      message: <span class=\"string\">''</span>,</span><br><span class=\"line\">      mesCons: [],</span><br><span class=\"line\">      name: <span class=\"string\">'zhangsan'</span>,</span><br><span class=\"line\">      age: <span class=\"string\">'12'</span>,</span><br><span class=\"line\">      sex: <span class=\"string\">'man'</span>,</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// this.handleFn = this.handleFn.bind(this)</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  getInitialState() &#123;&#125;</span><br><span class=\"line\">  <span class=\"keyword\">async</span> componentDidMount() &#123;</span><br><span class=\"line\">    <span class=\"comment\">// const &#123; data &#125; = await userList()</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  handleFn = <span class=\"function\"><span class=\"params\">value</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (value === <span class=\"string\">'focus'</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.setState(&#123; <span class=\"attr\">hidden</span>: <span class=\"literal\">true</span> &#125;, () =&gt; &#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">'这里执行了...'</span>)</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.setState(&#123; <span class=\"attr\">hidden</span>: <span class=\"literal\">false</span> &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  changeFn(e) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.setState(&#123;</span><br><span class=\"line\">      message: e.target.value,</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  send() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> list = [...this.state.mesCons]</span><br><span class=\"line\">    <span class=\"keyword\">let</span> keywords = <span class=\"string\">'钱'</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.state.message.indexOf(keywords) &gt; <span class=\"number\">-1</span>) &#123;</span><br><span class=\"line\">      list.push(&#123;</span><br><span class=\"line\">        type: <span class=\"number\">4</span>,</span><br><span class=\"line\">        value: <span class=\"keyword\">this</span>.state.message,</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      list.push(&#123;</span><br><span class=\"line\">        type: <span class=\"number\">1</span>,</span><br><span class=\"line\">        value: <span class=\"keyword\">this</span>.state.message,</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.setState(&#123;</span><br><span class=\"line\">      mesCons: list,</span><br><span class=\"line\">      hidden: <span class=\"literal\">false</span>,</span><br><span class=\"line\">      message: <span class=\"string\">''</span>,</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  callback = <span class=\"function\"><span class=\"params\">mes</span> =&gt;</span> &#123;</span><br><span class=\"line\">    alert(<span class=\"string\">'子组件改变父组件'</span>, mes)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  render() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      &lt;div className=<span class=\"string\">\"layout\"</span>&gt;</span><br><span class=\"line\">        &lt;div className=<span class=\"string\">\"contain\"</span>&gt;</span><br><span class=\"line\">          &lt;div className=<span class=\"string\">\"text-box\"</span>&gt;</span><br><span class=\"line\">            &lt;Test</span><br><span class=\"line\">              &#123;...this.state&#125;</span><br><span class=\"line\">              list=&#123;<span class=\"keyword\">this</span>.state.mesCons&#125;</span><br><span class=\"line\">              jbFn=&#123;<span class=\"keyword\">this</span>.callback&#125;</span><br><span class=\"line\">            /&gt;</span><br><span class=\"line\">          &lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">          &lt;div className=\"input-box\"&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">            &lt;input</span></span><br><span class=\"line\"><span class=\"regexp\">              type=\"text\"</span></span><br><span class=\"line\"><span class=\"regexp\">              value=&#123;this.state.message&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">              placeholder=\"写下你想说的...\"</span></span><br><span class=\"line\"><span class=\"regexp\">              onFocus=&#123;this.handleFn.bind(this, 'focus')&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">              onChange=&#123;this.changeFn.bind(this)&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">              /</span><span class=\"regexp\">/ onBlur=&#123;this.handleFn.bind(this, 'blur')&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">            /</span>&gt;</span><br><span class=\"line\">            &#123;<span class=\"keyword\">this</span>.state.hidden ? (</span><br><span class=\"line\">              &lt;Button type=<span class=\"string\">\"primary\"</span> onClick=&#123;<span class=\"keyword\">this</span>.send.bind(<span class=\"keyword\">this</span>)&#125;&gt;</span><br><span class=\"line\">                发送</span><br><span class=\"line\">              &lt;<span class=\"regexp\">/Button&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">            ) : null&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">          &lt;/</span>div&gt;</span><br><span class=\"line\">        &lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">      &lt;/</span>div&gt;</span><br><span class=\"line\">    )</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> App</span><br></pre></td></tr></table></figure>\n<h2 id=\"子组件\"><a href=\"#子组件\" class=\"headerlink\" title=\"子组件\"></a>子组件</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> React, &#123; Component &#125; <span class=\"keyword\">from</span> <span class=\"string\">'react'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test</span> <span class=\"keyword\">extends</span> <span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>(props) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">super</span>(props)</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.state = &#123;&#125;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.test1 = <span class=\"keyword\">this</span>.test1.bind(<span class=\"keyword\">this</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  test1() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.props.jbFn(<span class=\"string\">'注意言行！！！'</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  render() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      &lt;div&gt;</span><br><span class=\"line\">        &lt;div&gt;</span><br><span class=\"line\">          &#123;<span class=\"keyword\">this</span>.props.list.map(<span class=\"function\">(<span class=\"params\">item, index</span>) =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> item.type !== <span class=\"number\">4</span> ? (</span><br><span class=\"line\">              &lt;div key=&#123;index&#125; className=<span class=\"string\">\"mesitem\"</span>&gt;</span><br><span class=\"line\">                &#123;item.value&#125;</span><br><span class=\"line\">              &lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">            ) : (</span></span><br><span class=\"line\"><span class=\"regexp\">              &lt;div key=&#123;index&#125;&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">                &lt;div className=\"tag_jg\" onClick=&#123;this.test1&#125;&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">                  以下文字有诱骗的嫌疑，点击举报！！</span></span><br><span class=\"line\"><span class=\"regexp\">                &lt;/</span>div&gt;</span><br><span class=\"line\">                &lt;div className=<span class=\"string\">\"mesitem\"</span>&gt;&#123;item.value&#125;&lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">              &lt;/</span>div&gt;</span><br><span class=\"line\">            )</span><br><span class=\"line\">          &#125;)&#125;</span><br><span class=\"line\">        &lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">      &lt;/</span>div&gt;</span><br><span class=\"line\">    )</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"hexo/github 搭建github博客教程","date":"2019-05-31T06:27:08.000Z","_content":"\n之前买的阿里的云服务器，太贵了没钱续费，github的博客免费，代码托管上去，只需要买个域名甚至不买也行，挺合适，就是访问速度慢点，百度也不收录，但是这些也有解决的办法，具体的解决办法本文不介绍了，以后有时间可以再具体说一说，暂时也可以自己用，反正主要也是自己记录，不求他能有多高的baidu排名。\n\n1.[准备条件](#准备条件)   \n2.[设置本地博客的配置](#设置本地博客的配置)      \n3.[初始化hexo](#初始化hexo)    \n4.[上传项目](#上传项目)   \n<!-- more -->\n5.[文件目录](#文件目录)   \n6.[更换主题](#更换主题)   \n7.[使用方法](#使用方法)   \n8.[常见使用疑问](#常见使用疑问)   \n9.[配置自定义域名](#配置自定义域名)    \n\n## 准备条件\n\n```\n\t1.node 环境\n\t2.git 环境 配置公钥私钥\n\t3.npm 安装\n\t4.github 账号\n```\n\n> 如果您是开发人员，这应该都有，不会的可以网上找，依照一大堆的。\n\n## 设置本地博客的配置\n\n1.全局安装hexo\n```javascript\n\tnpm install -g hexo\n```\n2.新建一个文件夹，cd到当前文件夹，\n```javascript\n\tnpm install hexo --save\n```\n然后\n```javascript\n\thexo v\n```\n出现以下，说明安装成功   \n\n![blockchain](https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/1.png)\n\n> 别着急，就快成功了，再坚持一小小下\n\n## 初始化hexo\n1.继续输入\n```javascript\n\thexo init\n```\n实现初始化   \n2.下载好了，再输入\n```javascript\n\thexo s\n```\n![blockchain](https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/2.png)   \n>这时候我们就可以打开浏览器了，在地址栏中输入http://localhost:400/，我们就可以看到如下图的界面   \n\n![blockchain](https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/3.png)   \n\n> **基本搭建完成，其实你才完成了一半**\n\n## 上传项目   \n1.在github上面先创建一个项目，特别注意，名称的命名\n>github的用户名要和创建的博客的项目名称一致，如下：   \n\n![blockchain](https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/5.png)\n\n> **名称格式：username.github.io**\n\n2.打开项目中_config.yml（配置文件），对它做如下修改，repository后面的内容是 git@gitbub.com:username/库地址 的形式    \n\n> **type、repository、branch冒号的后面都有一个空格**\n\n![blockchain](https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/6.jpg)\n\n3.回到shell，输入\n```javascript\n\tnpm install hexo-deployer-git --save   \n\thexo g   \n\thexo d   \n```\n\n部署完之后将代码中的 **public**下的文件传到你创建的git项目下面，这样别人也可以通过域名访问我们博客了。在地址栏输入http://域名就可以访问。比如：http://xiaosongread.github.io\n\n## 文件目录\n\n![blockchain](https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/4.png)   \n\n## 更换主题   \n我更换的主题是：https://github.com/Sanonz/hexo-theme-concise，将次项目clone下来，其他主题：[hexo主题](https://hexo.io/themes/)   \n\n将下载下来的主题中的所有文件copy到你的代码中的themes文件夹中(可以新建一个主题文件夹，比如landscape1),修改文件根目录的配置文件的主题名，如下   \n![blockchain](https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/7.jpg)   \n\n> **此主题可能最后样式可以不起作用，应为此模板用了less，需要安装 npm install hexo-renderer-less --save**\n\n然后重新打包项目   \n``` \nhexo g\nhexo d\n```\n接着重新将public文件上传到你的github项目中。\n\n## 使用方法\n\nshell|表头\n---|:--:\nhexo s|本地启动服务\nhexo new 'filename'|创建md文件\nhexo s hexo g|修改内容打包文件\n\n## 常见使用疑问：\n1.此项目没有后台系统如何录数据？\n此系统录入数据的步骤是：\n* hexo new 'filename'（新建.md文件）\n* 用markdown格式排版内容\n* hexo s hexo g 重新打包上传就页面可以看见你添加的文章    \n\n2.如何为文章分类？\n添加分类列表，设置文章的 categories 字段然后访问 /categories/front-end\n\n```\n---\ntitle: Hello World\ndate: 2017-10-20 20:00:00\ncategories: front-end\n---\n```\n如何设置分页，截断文章等不会的问题可以在本项目提交issues,或者访问[本主题](https://github.com/sanonz/hexo-theme-concise)查看\n\n> **需要了解markdown的基本语法**\n\n[常用markdown语法](https://github.com/xiaosongread/markdow)   \n\n\n## 配置自定义域名\n此过程比较麻烦，有需要的可以提issure,有时间可以补充一下... ...\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<!-- [点击查看参考博客](https://www.cnblogs.com/trista222/p/8017300.html)\n\n```shell\nhexo new page 'tags'\nhexo new 'filename'   \nhexo g   \nhexo d   \n``` -->","source":"_posts/jc-1.md","raw":"---\ntitle: hexo/github 搭建github博客教程\ndate: 2019-05-31 14:27:08\ntags: github hexo\ncategories: gc-end\n---\n\n之前买的阿里的云服务器，太贵了没钱续费，github的博客免费，代码托管上去，只需要买个域名甚至不买也行，挺合适，就是访问速度慢点，百度也不收录，但是这些也有解决的办法，具体的解决办法本文不介绍了，以后有时间可以再具体说一说，暂时也可以自己用，反正主要也是自己记录，不求他能有多高的baidu排名。\n\n1.[准备条件](#准备条件)   \n2.[设置本地博客的配置](#设置本地博客的配置)      \n3.[初始化hexo](#初始化hexo)    \n4.[上传项目](#上传项目)   \n<!-- more -->\n5.[文件目录](#文件目录)   \n6.[更换主题](#更换主题)   \n7.[使用方法](#使用方法)   \n8.[常见使用疑问](#常见使用疑问)   \n9.[配置自定义域名](#配置自定义域名)    \n\n## 准备条件\n\n```\n\t1.node 环境\n\t2.git 环境 配置公钥私钥\n\t3.npm 安装\n\t4.github 账号\n```\n\n> 如果您是开发人员，这应该都有，不会的可以网上找，依照一大堆的。\n\n## 设置本地博客的配置\n\n1.全局安装hexo\n```javascript\n\tnpm install -g hexo\n```\n2.新建一个文件夹，cd到当前文件夹，\n```javascript\n\tnpm install hexo --save\n```\n然后\n```javascript\n\thexo v\n```\n出现以下，说明安装成功   \n\n![blockchain](https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/1.png)\n\n> 别着急，就快成功了，再坚持一小小下\n\n## 初始化hexo\n1.继续输入\n```javascript\n\thexo init\n```\n实现初始化   \n2.下载好了，再输入\n```javascript\n\thexo s\n```\n![blockchain](https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/2.png)   \n>这时候我们就可以打开浏览器了，在地址栏中输入http://localhost:400/，我们就可以看到如下图的界面   \n\n![blockchain](https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/3.png)   \n\n> **基本搭建完成，其实你才完成了一半**\n\n## 上传项目   \n1.在github上面先创建一个项目，特别注意，名称的命名\n>github的用户名要和创建的博客的项目名称一致，如下：   \n\n![blockchain](https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/5.png)\n\n> **名称格式：username.github.io**\n\n2.打开项目中_config.yml（配置文件），对它做如下修改，repository后面的内容是 git@gitbub.com:username/库地址 的形式    \n\n> **type、repository、branch冒号的后面都有一个空格**\n\n![blockchain](https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/6.jpg)\n\n3.回到shell，输入\n```javascript\n\tnpm install hexo-deployer-git --save   \n\thexo g   \n\thexo d   \n```\n\n部署完之后将代码中的 **public**下的文件传到你创建的git项目下面，这样别人也可以通过域名访问我们博客了。在地址栏输入http://域名就可以访问。比如：http://xiaosongread.github.io\n\n## 文件目录\n\n![blockchain](https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/4.png)   \n\n## 更换主题   \n我更换的主题是：https://github.com/Sanonz/hexo-theme-concise，将次项目clone下来，其他主题：[hexo主题](https://hexo.io/themes/)   \n\n将下载下来的主题中的所有文件copy到你的代码中的themes文件夹中(可以新建一个主题文件夹，比如landscape1),修改文件根目录的配置文件的主题名，如下   \n![blockchain](https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/7.jpg)   \n\n> **此主题可能最后样式可以不起作用，应为此模板用了less，需要安装 npm install hexo-renderer-less --save**\n\n然后重新打包项目   \n``` \nhexo g\nhexo d\n```\n接着重新将public文件上传到你的github项目中。\n\n## 使用方法\n\nshell|表头\n---|:--:\nhexo s|本地启动服务\nhexo new 'filename'|创建md文件\nhexo s hexo g|修改内容打包文件\n\n## 常见使用疑问：\n1.此项目没有后台系统如何录数据？\n此系统录入数据的步骤是：\n* hexo new 'filename'（新建.md文件）\n* 用markdown格式排版内容\n* hexo s hexo g 重新打包上传就页面可以看见你添加的文章    \n\n2.如何为文章分类？\n添加分类列表，设置文章的 categories 字段然后访问 /categories/front-end\n\n```\n---\ntitle: Hello World\ndate: 2017-10-20 20:00:00\ncategories: front-end\n---\n```\n如何设置分页，截断文章等不会的问题可以在本项目提交issues,或者访问[本主题](https://github.com/sanonz/hexo-theme-concise)查看\n\n> **需要了解markdown的基本语法**\n\n[常用markdown语法](https://github.com/xiaosongread/markdow)   \n\n\n## 配置自定义域名\n此过程比较麻烦，有需要的可以提issure,有时间可以补充一下... ...\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<!-- [点击查看参考博客](https://www.cnblogs.com/trista222/p/8017300.html)\n\n```shell\nhexo new page 'tags'\nhexo new 'filename'   \nhexo g   \nhexo d   \n``` -->","slug":"jc-1","published":1,"updated":"2020-07-01T09:12:26.383Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdr00y5m000ue7zcvuuqcm40","content":"<p>之前买的阿里的云服务器，太贵了没钱续费，github的博客免费，代码托管上去，只需要买个域名甚至不买也行，挺合适，就是访问速度慢点，百度也不收录，但是这些也有解决的办法，具体的解决办法本文不介绍了，以后有时间可以再具体说一说，暂时也可以自己用，反正主要也是自己记录，不求他能有多高的baidu排名。</p>\n<p>1.<a href=\"#准备条件\">准备条件</a><br>2.<a href=\"#设置本地博客的配置\">设置本地博客的配置</a><br>3.<a href=\"#初始化hexo\">初始化hexo</a><br>4.<a href=\"#上传项目\">上传项目</a><br><a id=\"more\"></a><br>5.<a href=\"#文件目录\">文件目录</a><br>6.<a href=\"#更换主题\">更换主题</a><br>7.<a href=\"#使用方法\">使用方法</a><br>8.<a href=\"#常见使用疑问\">常见使用疑问</a><br>9.<a href=\"#配置自定义域名\">配置自定义域名</a>    </p>\n<h2 id=\"准备条件\"><a href=\"#准备条件\" class=\"headerlink\" title=\"准备条件\"></a>准备条件</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.node 环境</span><br><span class=\"line\">2.git 环境 配置公钥私钥</span><br><span class=\"line\">3.npm 安装</span><br><span class=\"line\">4.github 账号</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>如果您是开发人员，这应该都有，不会的可以网上找，依照一大堆的。</p>\n</blockquote>\n<h2 id=\"设置本地博客的配置\"><a href=\"#设置本地博客的配置\" class=\"headerlink\" title=\"设置本地博客的配置\"></a>设置本地博客的配置</h2><p>1.全局安装hexo<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g hexo</span><br></pre></td></tr></table></figure></p>\n<p>2.新建一个文件夹，cd到当前文件夹，<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo --save</span><br></pre></td></tr></table></figure></p>\n<p>然后<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo v</span><br></pre></td></tr></table></figure></p>\n<p>出现以下，说明安装成功   </p>\n<p><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/1.png\" alt=\"blockchain\"></p>\n<blockquote>\n<p>别着急，就快成功了，再坚持一小小下</p>\n</blockquote>\n<h2 id=\"初始化hexo\"><a href=\"#初始化hexo\" class=\"headerlink\" title=\"初始化hexo\"></a>初始化hexo</h2><p>1.继续输入<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init</span><br></pre></td></tr></table></figure></p>\n<p>实现初始化<br>2.下载好了，再输入<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo s</span><br></pre></td></tr></table></figure></p>\n<p><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/2.png\" alt=\"blockchain\">   </p>\n<blockquote>\n<p>这时候我们就可以打开浏览器了，在地址栏中输入<a href=\"http://localhost:400/，我们就可以看到如下图的界面\" target=\"_blank\" rel=\"noopener\">http://localhost:400/，我们就可以看到如下图的界面</a>   </p>\n</blockquote>\n<p><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/3.png\" alt=\"blockchain\">   </p>\n<blockquote>\n<p><strong>基本搭建完成，其实你才完成了一半</strong></p>\n</blockquote>\n<h2 id=\"上传项目\"><a href=\"#上传项目\" class=\"headerlink\" title=\"上传项目\"></a>上传项目</h2><p>1.在github上面先创建一个项目，特别注意，名称的命名</p>\n<blockquote>\n<p>github的用户名要和创建的博客的项目名称一致，如下：   </p>\n</blockquote>\n<p><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/5.png\" alt=\"blockchain\"></p>\n<blockquote>\n<p><strong>名称格式：username.github.io</strong></p>\n</blockquote>\n<p>2.打开项目中_config.yml（配置文件），对它做如下修改，repository后面的内容是 <a href=\"mailto:git@gitbub.com\" target=\"_blank\" rel=\"noopener\">git@gitbub.com</a>:username/库地址 的形式    </p>\n<blockquote>\n<p><strong>type、repository、branch冒号的后面都有一个空格</strong></p>\n</blockquote>\n<p><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/6.jpg\" alt=\"blockchain\"></p>\n<p>3.回到shell，输入<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save   </span><br><span class=\"line\">hexo g   </span><br><span class=\"line\">hexo d</span><br></pre></td></tr></table></figure></p>\n<p>部署完之后将代码中的 <strong>public</strong>下的文件传到你创建的git项目下面，这样别人也可以通过域名访问我们博客了。在地址栏输入http://域名就可以访问。比如：<a href=\"http://xiaosongread.github.io\" target=\"_blank\" rel=\"noopener\">http://xiaosongread.github.io</a></p>\n<h2 id=\"文件目录\"><a href=\"#文件目录\" class=\"headerlink\" title=\"文件目录\"></a>文件目录</h2><p><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/4.png\" alt=\"blockchain\">   </p>\n<h2 id=\"更换主题\"><a href=\"#更换主题\" class=\"headerlink\" title=\"更换主题\"></a>更换主题</h2><p>我更换的主题是：<a href=\"https://github.com/Sanonz/hexo-theme-concise，将次项目clone下来，其他主题：[hexo主题](https://hexo.io/themes/)\" target=\"_blank\" rel=\"noopener\">https://github.com/Sanonz/hexo-theme-concise，将次项目clone下来，其他主题：[hexo主题](https://hexo.io/themes/)</a>   </p>\n<p>将下载下来的主题中的所有文件copy到你的代码中的themes文件夹中(可以新建一个主题文件夹，比如landscape1),修改文件根目录的配置文件的主题名，如下<br><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/7.jpg\" alt=\"blockchain\">   </p>\n<blockquote>\n<p><strong>此主题可能最后样式可以不起作用，应为此模板用了less，需要安装 npm install hexo-renderer-less –save</strong></p>\n</blockquote>\n<p>然后重新打包项目<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g</span><br><span class=\"line\">hexo d</span><br></pre></td></tr></table></figure></p>\n<p>接着重新将public文件上传到你的github项目中。</p>\n<h2 id=\"使用方法\"><a href=\"#使用方法\" class=\"headerlink\" title=\"使用方法\"></a>使用方法</h2><table>\n<thead>\n<tr>\n<th>shell</th>\n<th style=\"text-align:center\">表头</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>hexo s</td>\n<td style=\"text-align:center\">本地启动服务</td>\n</tr>\n<tr>\n<td>hexo new ‘filename’</td>\n<td style=\"text-align:center\">创建md文件</td>\n</tr>\n<tr>\n<td>hexo s hexo g</td>\n<td style=\"text-align:center\">修改内容打包文件</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"常见使用疑问：\"><a href=\"#常见使用疑问：\" class=\"headerlink\" title=\"常见使用疑问：\"></a>常见使用疑问：</h2><p>1.此项目没有后台系统如何录数据？<br>此系统录入数据的步骤是：</p>\n<ul>\n<li>hexo new ‘filename’（新建.md文件）</li>\n<li>用markdown格式排版内容</li>\n<li>hexo s hexo g 重新打包上传就页面可以看见你添加的文章    </li>\n</ul>\n<p>2.如何为文章分类？<br>添加分类列表，设置文章的 categories 字段然后访问 /categories/front-end</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: Hello World</span><br><span class=\"line\">date: 2017-10-20 20:00:00</span><br><span class=\"line\">categories: front-end</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n<p>如何设置分页，截断文章等不会的问题可以在本项目提交issues,或者访问<a href=\"https://github.com/sanonz/hexo-theme-concise\" target=\"_blank\" rel=\"noopener\">本主题</a>查看</p>\n<blockquote>\n<p><strong>需要了解markdown的基本语法</strong></p>\n</blockquote>\n<p><a href=\"https://github.com/xiaosongread/markdow\" target=\"_blank\" rel=\"noopener\">常用markdown语法</a>   </p>\n<h2 id=\"配置自定义域名\"><a href=\"#配置自定义域名\" class=\"headerlink\" title=\"配置自定义域名\"></a>配置自定义域名</h2><p>此过程比较麻烦，有需要的可以提issure,有时间可以补充一下… …</p>\n<!-- [点击查看参考博客](https://www.cnblogs.com/trista222/p/8017300.html)\n\n```shell\nhexo new page 'tags'\nhexo new 'filename'   \nhexo g   \nhexo d   \n``` -->","site":{"data":{}},"excerpt":"<p>之前买的阿里的云服务器，太贵了没钱续费，github的博客免费，代码托管上去，只需要买个域名甚至不买也行，挺合适，就是访问速度慢点，百度也不收录，但是这些也有解决的办法，具体的解决办法本文不介绍了，以后有时间可以再具体说一说，暂时也可以自己用，反正主要也是自己记录，不求他能有多高的baidu排名。</p>\n<p>1.<a href=\"#准备条件\">准备条件</a><br>2.<a href=\"#设置本地博客的配置\">设置本地博客的配置</a><br>3.<a href=\"#初始化hexo\">初始化hexo</a><br>4.<a href=\"#上传项目\">上传项目</a><br>","more":"<br>5.<a href=\"#文件目录\">文件目录</a><br>6.<a href=\"#更换主题\">更换主题</a><br>7.<a href=\"#使用方法\">使用方法</a><br>8.<a href=\"#常见使用疑问\">常见使用疑问</a><br>9.<a href=\"#配置自定义域名\">配置自定义域名</a>    </p>\n<h2 id=\"准备条件\"><a href=\"#准备条件\" class=\"headerlink\" title=\"准备条件\"></a>准备条件</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.node 环境</span><br><span class=\"line\">2.git 环境 配置公钥私钥</span><br><span class=\"line\">3.npm 安装</span><br><span class=\"line\">4.github 账号</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>如果您是开发人员，这应该都有，不会的可以网上找，依照一大堆的。</p>\n</blockquote>\n<h2 id=\"设置本地博客的配置\"><a href=\"#设置本地博客的配置\" class=\"headerlink\" title=\"设置本地博客的配置\"></a>设置本地博客的配置</h2><p>1.全局安装hexo<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g hexo</span><br></pre></td></tr></table></figure></p>\n<p>2.新建一个文件夹，cd到当前文件夹，<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo --save</span><br></pre></td></tr></table></figure></p>\n<p>然后<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo v</span><br></pre></td></tr></table></figure></p>\n<p>出现以下，说明安装成功   </p>\n<p><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/1.png\" alt=\"blockchain\"></p>\n<blockquote>\n<p>别着急，就快成功了，再坚持一小小下</p>\n</blockquote>\n<h2 id=\"初始化hexo\"><a href=\"#初始化hexo\" class=\"headerlink\" title=\"初始化hexo\"></a>初始化hexo</h2><p>1.继续输入<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init</span><br></pre></td></tr></table></figure></p>\n<p>实现初始化<br>2.下载好了，再输入<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo s</span><br></pre></td></tr></table></figure></p>\n<p><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/2.png\" alt=\"blockchain\">   </p>\n<blockquote>\n<p>这时候我们就可以打开浏览器了，在地址栏中输入<a href=\"http://localhost:400/，我们就可以看到如下图的界面\" target=\"_blank\" rel=\"noopener\">http://localhost:400/，我们就可以看到如下图的界面</a>   </p>\n</blockquote>\n<p><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/3.png\" alt=\"blockchain\">   </p>\n<blockquote>\n<p><strong>基本搭建完成，其实你才完成了一半</strong></p>\n</blockquote>\n<h2 id=\"上传项目\"><a href=\"#上传项目\" class=\"headerlink\" title=\"上传项目\"></a>上传项目</h2><p>1.在github上面先创建一个项目，特别注意，名称的命名</p>\n<blockquote>\n<p>github的用户名要和创建的博客的项目名称一致，如下：   </p>\n</blockquote>\n<p><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/5.png\" alt=\"blockchain\"></p>\n<blockquote>\n<p><strong>名称格式：username.github.io</strong></p>\n</blockquote>\n<p>2.打开项目中_config.yml（配置文件），对它做如下修改，repository后面的内容是 <a href=\"mailto:git@gitbub.com\" target=\"_blank\" rel=\"noopener\">git@gitbub.com</a>:username/库地址 的形式    </p>\n<blockquote>\n<p><strong>type、repository、branch冒号的后面都有一个空格</strong></p>\n</blockquote>\n<p><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/6.jpg\" alt=\"blockchain\"></p>\n<p>3.回到shell，输入<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save   </span><br><span class=\"line\">hexo g   </span><br><span class=\"line\">hexo d</span><br></pre></td></tr></table></figure></p>\n<p>部署完之后将代码中的 <strong>public</strong>下的文件传到你创建的git项目下面，这样别人也可以通过域名访问我们博客了。在地址栏输入http://域名就可以访问。比如：<a href=\"http://xiaosongread.github.io\" target=\"_blank\" rel=\"noopener\">http://xiaosongread.github.io</a></p>\n<h2 id=\"文件目录\"><a href=\"#文件目录\" class=\"headerlink\" title=\"文件目录\"></a>文件目录</h2><p><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/4.png\" alt=\"blockchain\">   </p>\n<h2 id=\"更换主题\"><a href=\"#更换主题\" class=\"headerlink\" title=\"更换主题\"></a>更换主题</h2><p>我更换的主题是：<a href=\"https://github.com/Sanonz/hexo-theme-concise，将次项目clone下来，其他主题：[hexo主题](https://hexo.io/themes/)\" target=\"_blank\" rel=\"noopener\">https://github.com/Sanonz/hexo-theme-concise，将次项目clone下来，其他主题：[hexo主题](https://hexo.io/themes/)</a>   </p>\n<p>将下载下来的主题中的所有文件copy到你的代码中的themes文件夹中(可以新建一个主题文件夹，比如landscape1),修改文件根目录的配置文件的主题名，如下<br><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/7.jpg\" alt=\"blockchain\">   </p>\n<blockquote>\n<p><strong>此主题可能最后样式可以不起作用，应为此模板用了less，需要安装 npm install hexo-renderer-less –save</strong></p>\n</blockquote>\n<p>然后重新打包项目<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g</span><br><span class=\"line\">hexo d</span><br></pre></td></tr></table></figure></p>\n<p>接着重新将public文件上传到你的github项目中。</p>\n<h2 id=\"使用方法\"><a href=\"#使用方法\" class=\"headerlink\" title=\"使用方法\"></a>使用方法</h2><table>\n<thead>\n<tr>\n<th>shell</th>\n<th style=\"text-align:center\">表头</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>hexo s</td>\n<td style=\"text-align:center\">本地启动服务</td>\n</tr>\n<tr>\n<td>hexo new ‘filename’</td>\n<td style=\"text-align:center\">创建md文件</td>\n</tr>\n<tr>\n<td>hexo s hexo g</td>\n<td style=\"text-align:center\">修改内容打包文件</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"常见使用疑问：\"><a href=\"#常见使用疑问：\" class=\"headerlink\" title=\"常见使用疑问：\"></a>常见使用疑问：</h2><p>1.此项目没有后台系统如何录数据？<br>此系统录入数据的步骤是：</p>\n<ul>\n<li>hexo new ‘filename’（新建.md文件）</li>\n<li>用markdown格式排版内容</li>\n<li>hexo s hexo g 重新打包上传就页面可以看见你添加的文章    </li>\n</ul>\n<p>2.如何为文章分类？<br>添加分类列表，设置文章的 categories 字段然后访问 /categories/front-end</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: Hello World</span><br><span class=\"line\">date: 2017-10-20 20:00:00</span><br><span class=\"line\">categories: front-end</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n<p>如何设置分页，截断文章等不会的问题可以在本项目提交issues,或者访问<a href=\"https://github.com/sanonz/hexo-theme-concise\" target=\"_blank\" rel=\"noopener\">本主题</a>查看</p>\n<blockquote>\n<p><strong>需要了解markdown的基本语法</strong></p>\n</blockquote>\n<p><a href=\"https://github.com/xiaosongread/markdow\" target=\"_blank\" rel=\"noopener\">常用markdown语法</a>   </p>\n<h2 id=\"配置自定义域名\"><a href=\"#配置自定义域名\" class=\"headerlink\" title=\"配置自定义域名\"></a>配置自定义域名</h2><p>此过程比较麻烦，有需要的可以提issure,有时间可以补充一下… …</p>\n<!-- [点击查看参考博客](https://www.cnblogs.com/trista222/p/8017300.html)\n\n```shell\nhexo new page 'tags'\nhexo new 'filename'   \nhexo g   \nhexo d   \n``` -->"},{"title":"<ruby> html标签","date":"2019-07-16T11:43:23.000Z","_content":"\n## 定义   \n\n> ruby 元素由一个或多个字符（需要一个解释/发音）和一个提供该信息的 rt 元素组成，还包括可选的 rp 元素，定义当浏览器不支持 \"ruby\" 元素时显示的内容。\n\n## 效果如下   \n\n![blockchain](https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/12-1.png)\n\n<!-- more -->\n\n## 使用方法   \n\n```html\n<ruby>\n  我 <rp>(</rp><rt>wo</rt><rp>)</rp>\n  的 <rp>(</rp><rt>de</rt><rp>)</rp>\n  名 <rp>(</rp><rt>min</rt><rp>)</rp>\n  字 <rp>(</rp><rt>zi</rt><rp>)</rp>\n  是 <rp>(</rp><rt>shi</rt><rp>)</rp>\n  小 <rp>(</rp><rt>xiao</rt><rp>)</rp>\n  宋 <rp>(</rp><rt>song</rt><rp>)</rp>\n</ruby>\n```","source":"_posts/jc-12.md","raw":"---\ntitle: <ruby> html标签\ncategories: html-end\ndate: 2019-07-16 19:43:23\ntags: html ruby\n---\n\n## 定义   \n\n> ruby 元素由一个或多个字符（需要一个解释/发音）和一个提供该信息的 rt 元素组成，还包括可选的 rp 元素，定义当浏览器不支持 \"ruby\" 元素时显示的内容。\n\n## 效果如下   \n\n![blockchain](https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/12-1.png)\n\n<!-- more -->\n\n## 使用方法   \n\n```html\n<ruby>\n  我 <rp>(</rp><rt>wo</rt><rp>)</rp>\n  的 <rp>(</rp><rt>de</rt><rp>)</rp>\n  名 <rp>(</rp><rt>min</rt><rp>)</rp>\n  字 <rp>(</rp><rt>zi</rt><rp>)</rp>\n  是 <rp>(</rp><rt>shi</rt><rp>)</rp>\n  小 <rp>(</rp><rt>xiao</rt><rp>)</rp>\n  宋 <rp>(</rp><rt>song</rt><rp>)</rp>\n</ruby>\n```","slug":"jc-12","published":1,"updated":"2020-07-01T09:12:26.384Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdr00y5n000xe7zcvaml3ub8","content":"<h2 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h2><blockquote>\n<p>ruby 元素由一个或多个字符（需要一个解释/发音）和一个提供该信息的 rt 元素组成，还包括可选的 rp 元素，定义当浏览器不支持 “ruby” 元素时显示的内容。</p>\n</blockquote>\n<h2 id=\"效果如下\"><a href=\"#效果如下\" class=\"headerlink\" title=\"效果如下\"></a>效果如下</h2><p><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/12-1.png\" alt=\"blockchain\"></p>\n<a id=\"more\"></a>\n<h2 id=\"使用方法\"><a href=\"#使用方法\" class=\"headerlink\" title=\"使用方法\"></a>使用方法</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ruby</span>&gt;</span></span><br><span class=\"line\">  我 <span class=\"tag\">&lt;<span class=\"name\">rp</span>&gt;</span>(<span class=\"tag\">&lt;/<span class=\"name\">rp</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">rt</span>&gt;</span>wo<span class=\"tag\">&lt;/<span class=\"name\">rt</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">rp</span>&gt;</span>)<span class=\"tag\">&lt;/<span class=\"name\">rp</span>&gt;</span></span><br><span class=\"line\">  的 <span class=\"tag\">&lt;<span class=\"name\">rp</span>&gt;</span>(<span class=\"tag\">&lt;/<span class=\"name\">rp</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">rt</span>&gt;</span>de<span class=\"tag\">&lt;/<span class=\"name\">rt</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">rp</span>&gt;</span>)<span class=\"tag\">&lt;/<span class=\"name\">rp</span>&gt;</span></span><br><span class=\"line\">  名 <span class=\"tag\">&lt;<span class=\"name\">rp</span>&gt;</span>(<span class=\"tag\">&lt;/<span class=\"name\">rp</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">rt</span>&gt;</span>min<span class=\"tag\">&lt;/<span class=\"name\">rt</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">rp</span>&gt;</span>)<span class=\"tag\">&lt;/<span class=\"name\">rp</span>&gt;</span></span><br><span class=\"line\">  字 <span class=\"tag\">&lt;<span class=\"name\">rp</span>&gt;</span>(<span class=\"tag\">&lt;/<span class=\"name\">rp</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">rt</span>&gt;</span>zi<span class=\"tag\">&lt;/<span class=\"name\">rt</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">rp</span>&gt;</span>)<span class=\"tag\">&lt;/<span class=\"name\">rp</span>&gt;</span></span><br><span class=\"line\">  是 <span class=\"tag\">&lt;<span class=\"name\">rp</span>&gt;</span>(<span class=\"tag\">&lt;/<span class=\"name\">rp</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">rt</span>&gt;</span>shi<span class=\"tag\">&lt;/<span class=\"name\">rt</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">rp</span>&gt;</span>)<span class=\"tag\">&lt;/<span class=\"name\">rp</span>&gt;</span></span><br><span class=\"line\">  小 <span class=\"tag\">&lt;<span class=\"name\">rp</span>&gt;</span>(<span class=\"tag\">&lt;/<span class=\"name\">rp</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">rt</span>&gt;</span>xiao<span class=\"tag\">&lt;/<span class=\"name\">rt</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">rp</span>&gt;</span>)<span class=\"tag\">&lt;/<span class=\"name\">rp</span>&gt;</span></span><br><span class=\"line\">  宋 <span class=\"tag\">&lt;<span class=\"name\">rp</span>&gt;</span>(<span class=\"tag\">&lt;/<span class=\"name\">rp</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">rt</span>&gt;</span>song<span class=\"tag\">&lt;/<span class=\"name\">rt</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">rp</span>&gt;</span>)<span class=\"tag\">&lt;/<span class=\"name\">rp</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ruby</span>&gt;</span></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<h2 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h2><blockquote>\n<p>ruby 元素由一个或多个字符（需要一个解释/发音）和一个提供该信息的 rt 元素组成，还包括可选的 rp 元素，定义当浏览器不支持 “ruby” 元素时显示的内容。</p>\n</blockquote>\n<h2 id=\"效果如下\"><a href=\"#效果如下\" class=\"headerlink\" title=\"效果如下\"></a>效果如下</h2><p><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/12-1.png\" alt=\"blockchain\"></p>","more":"<h2 id=\"使用方法\"><a href=\"#使用方法\" class=\"headerlink\" title=\"使用方法\"></a>使用方法</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ruby</span>&gt;</span></span><br><span class=\"line\">  我 <span class=\"tag\">&lt;<span class=\"name\">rp</span>&gt;</span>(<span class=\"tag\">&lt;/<span class=\"name\">rp</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">rt</span>&gt;</span>wo<span class=\"tag\">&lt;/<span class=\"name\">rt</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">rp</span>&gt;</span>)<span class=\"tag\">&lt;/<span class=\"name\">rp</span>&gt;</span></span><br><span class=\"line\">  的 <span class=\"tag\">&lt;<span class=\"name\">rp</span>&gt;</span>(<span class=\"tag\">&lt;/<span class=\"name\">rp</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">rt</span>&gt;</span>de<span class=\"tag\">&lt;/<span class=\"name\">rt</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">rp</span>&gt;</span>)<span class=\"tag\">&lt;/<span class=\"name\">rp</span>&gt;</span></span><br><span class=\"line\">  名 <span class=\"tag\">&lt;<span class=\"name\">rp</span>&gt;</span>(<span class=\"tag\">&lt;/<span class=\"name\">rp</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">rt</span>&gt;</span>min<span class=\"tag\">&lt;/<span class=\"name\">rt</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">rp</span>&gt;</span>)<span class=\"tag\">&lt;/<span class=\"name\">rp</span>&gt;</span></span><br><span class=\"line\">  字 <span class=\"tag\">&lt;<span class=\"name\">rp</span>&gt;</span>(<span class=\"tag\">&lt;/<span class=\"name\">rp</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">rt</span>&gt;</span>zi<span class=\"tag\">&lt;/<span class=\"name\">rt</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">rp</span>&gt;</span>)<span class=\"tag\">&lt;/<span class=\"name\">rp</span>&gt;</span></span><br><span class=\"line\">  是 <span class=\"tag\">&lt;<span class=\"name\">rp</span>&gt;</span>(<span class=\"tag\">&lt;/<span class=\"name\">rp</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">rt</span>&gt;</span>shi<span class=\"tag\">&lt;/<span class=\"name\">rt</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">rp</span>&gt;</span>)<span class=\"tag\">&lt;/<span class=\"name\">rp</span>&gt;</span></span><br><span class=\"line\">  小 <span class=\"tag\">&lt;<span class=\"name\">rp</span>&gt;</span>(<span class=\"tag\">&lt;/<span class=\"name\">rp</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">rt</span>&gt;</span>xiao<span class=\"tag\">&lt;/<span class=\"name\">rt</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">rp</span>&gt;</span>)<span class=\"tag\">&lt;/<span class=\"name\">rp</span>&gt;</span></span><br><span class=\"line\">  宋 <span class=\"tag\">&lt;<span class=\"name\">rp</span>&gt;</span>(<span class=\"tag\">&lt;/<span class=\"name\">rp</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">rt</span>&gt;</span>song<span class=\"tag\">&lt;/<span class=\"name\">rt</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">rp</span>&gt;</span>)<span class=\"tag\">&lt;/<span class=\"name\">rp</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ruby</span>&gt;</span></span><br></pre></td></tr></table></figure>"},{"title":"git把功能开发错了分支莫慌/恢复误删的本地分支","date":"2018-09-11T07:32:20.000Z","_content":"\n开发风风火火，功能开发完了，git branch一看，靠，在线上分支开发的，顿时瘫坐在椅子上，还得复制代码？不用，几步搞定，顿时觉得git是天下最伟大的发明。\n\n## 第一种场景\n\n你开发的功能还没有提交代码，像我这种喜欢开发完一次性提交的人会经常用到，这种习惯其实是不好的。\n\n```shell\ngit add .  // 把所有改动放到暂存\ngit stash  // 把暂存的文件提交到git的暂存栈\ngit checkout 本该提交代码的分支  // 切换到正确的分支\ngit stash pop  // 将暂存栈中的代码放出来\n```\n<!-- more -->\n## 第二种场景\n\n其实最常见的是这种问题，特别是喜欢用idea插件的童鞋，一顿操作猛如虎，一看结果心里哭。git  checkout 不该提交代码提交了代码的分支\n\n```shell\ngit reset HEAD~1 // 最近一次提交放回暂存区, 并取消此次提交\ngit stash // 把暂存的文件提交到git的暂存栈\ngit checkout 该提交代码的分支\ngit stash pop\n```\n\n下面一顿操作随你猛了，等你把代码提交到了正确的分支后，再次切到刚刚错的分支\n\n```shell\ngit push origin 错误的分支 -f  (把不该上去的文件回退掉)\n```\n\n## 恢复误删的本地分支\n\n```shell\ngit log -g // 找回之前提交的commit,并记下commit_id\ngit branch newbranch commit_id // 切换到newbranch分支，检查文件是否存在\n```\n","source":"_posts/jc-3.md","raw":"---\ntitle: git把功能开发错了分支莫慌/恢复误删的本地分支\ndate: 2018-09-11 15:32:20\ncategories: gc-end\ntags: git\n---\n\n开发风风火火，功能开发完了，git branch一看，靠，在线上分支开发的，顿时瘫坐在椅子上，还得复制代码？不用，几步搞定，顿时觉得git是天下最伟大的发明。\n\n## 第一种场景\n\n你开发的功能还没有提交代码，像我这种喜欢开发完一次性提交的人会经常用到，这种习惯其实是不好的。\n\n```shell\ngit add .  // 把所有改动放到暂存\ngit stash  // 把暂存的文件提交到git的暂存栈\ngit checkout 本该提交代码的分支  // 切换到正确的分支\ngit stash pop  // 将暂存栈中的代码放出来\n```\n<!-- more -->\n## 第二种场景\n\n其实最常见的是这种问题，特别是喜欢用idea插件的童鞋，一顿操作猛如虎，一看结果心里哭。git  checkout 不该提交代码提交了代码的分支\n\n```shell\ngit reset HEAD~1 // 最近一次提交放回暂存区, 并取消此次提交\ngit stash // 把暂存的文件提交到git的暂存栈\ngit checkout 该提交代码的分支\ngit stash pop\n```\n\n下面一顿操作随你猛了，等你把代码提交到了正确的分支后，再次切到刚刚错的分支\n\n```shell\ngit push origin 错误的分支 -f  (把不该上去的文件回退掉)\n```\n\n## 恢复误删的本地分支\n\n```shell\ngit log -g // 找回之前提交的commit,并记下commit_id\ngit branch newbranch commit_id // 切换到newbranch分支，检查文件是否存在\n```\n","slug":"jc-3","published":1,"updated":"2020-07-01T09:12:26.384Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdr00y5p0010e7zct82lvu5f","content":"<p>开发风风火火，功能开发完了，git branch一看，靠，在线上分支开发的，顿时瘫坐在椅子上，还得复制代码？不用，几步搞定，顿时觉得git是天下最伟大的发明。</p>\n<h2 id=\"第一种场景\"><a href=\"#第一种场景\" class=\"headerlink\" title=\"第一种场景\"></a>第一种场景</h2><p>你开发的功能还没有提交代码，像我这种喜欢开发完一次性提交的人会经常用到，这种习惯其实是不好的。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add .  // 把所有改动放到暂存</span><br><span class=\"line\">git stash  // 把暂存的文件提交到git的暂存栈</span><br><span class=\"line\">git checkout 本该提交代码的分支  // 切换到正确的分支</span><br><span class=\"line\">git stash pop  // 将暂存栈中的代码放出来</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h2 id=\"第二种场景\"><a href=\"#第二种场景\" class=\"headerlink\" title=\"第二种场景\"></a>第二种场景</h2><p>其实最常见的是这种问题，特别是喜欢用idea插件的童鞋，一顿操作猛如虎，一看结果心里哭。git  checkout 不该提交代码提交了代码的分支</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git reset HEAD~1 // 最近一次提交放回暂存区, 并取消此次提交</span><br><span class=\"line\">git stash // 把暂存的文件提交到git的暂存栈</span><br><span class=\"line\">git checkout 该提交代码的分支</span><br><span class=\"line\">git stash pop</span><br></pre></td></tr></table></figure>\n<p>下面一顿操作随你猛了，等你把代码提交到了正确的分支后，再次切到刚刚错的分支</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push origin 错误的分支 -f  (把不该上去的文件回退掉)</span><br></pre></td></tr></table></figure>\n<h2 id=\"恢复误删的本地分支\"><a href=\"#恢复误删的本地分支\" class=\"headerlink\" title=\"恢复误删的本地分支\"></a>恢复误删的本地分支</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git log -g // 找回之前提交的commit,并记下commit_id</span><br><span class=\"line\">git branch newbranch commit_id // 切换到newbranch分支，检查文件是否存在</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<p>开发风风火火，功能开发完了，git branch一看，靠，在线上分支开发的，顿时瘫坐在椅子上，还得复制代码？不用，几步搞定，顿时觉得git是天下最伟大的发明。</p>\n<h2 id=\"第一种场景\"><a href=\"#第一种场景\" class=\"headerlink\" title=\"第一种场景\"></a>第一种场景</h2><p>你开发的功能还没有提交代码，像我这种喜欢开发完一次性提交的人会经常用到，这种习惯其实是不好的。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add .  // 把所有改动放到暂存</span><br><span class=\"line\">git stash  // 把暂存的文件提交到git的暂存栈</span><br><span class=\"line\">git checkout 本该提交代码的分支  // 切换到正确的分支</span><br><span class=\"line\">git stash pop  // 将暂存栈中的代码放出来</span><br></pre></td></tr></table></figure>","more":"<h2 id=\"第二种场景\"><a href=\"#第二种场景\" class=\"headerlink\" title=\"第二种场景\"></a>第二种场景</h2><p>其实最常见的是这种问题，特别是喜欢用idea插件的童鞋，一顿操作猛如虎，一看结果心里哭。git  checkout 不该提交代码提交了代码的分支</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git reset HEAD~1 // 最近一次提交放回暂存区, 并取消此次提交</span><br><span class=\"line\">git stash // 把暂存的文件提交到git的暂存栈</span><br><span class=\"line\">git checkout 该提交代码的分支</span><br><span class=\"line\">git stash pop</span><br></pre></td></tr></table></figure>\n<p>下面一顿操作随你猛了，等你把代码提交到了正确的分支后，再次切到刚刚错的分支</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push origin 错误的分支 -f  (把不该上去的文件回退掉)</span><br></pre></td></tr></table></figure>\n<h2 id=\"恢复误删的本地分支\"><a href=\"#恢复误删的本地分支\" class=\"headerlink\" title=\"恢复误删的本地分支\"></a>恢复误删的本地分支</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git log -g // 找回之前提交的commit,并记下commit_id</span><br><span class=\"line\">git branch newbranch commit_id // 切换到newbranch分支，检查文件是否存在</span><br></pre></td></tr></table></figure>"},{"title":"JS replace()方法全文替换，遇到变量怎么办？","date":"2018-05-23T08:14:16.000Z","_content":"\n## replace 替换变量文本，改如何处理？\n\n### js 替换字符窜，一般情况下是\n```javascript\nlet string = \"aaabbbsssf\";\nlet a = string.replace(\"a\",\"我\");\n```\n<!-- more -->\n#### 以上只能替换第一个，全局替换\n```javascript\nlet string = \"aaabbbsssf\";\nlet a = string.replace(/a/g,\"我\");\n```\n#### 这样没问题，但是如果需要替换的字段不确定，是变量的话，如何写？\n\n#### 以上只能替换第一个，全局替换\n```javascript\nlet string = \"aaabbbsssf\";\nlet key = \"a\";\nlet a = string.replace(/key/g,\"我\");\n或者\nlet a = string.replace(/\\key/g,\"我\");\n再或者拼接？\n```\n\n##### 经过我的各种奇怪尝试都是不好使的，没办法，查看文档\n\n```javascript\nreplace() 方法用于在字符串中用一些字符替换另一些字符，或替换一个与正则表达式匹配的子串。\n​\n​stringObject.replace(regexp/substr,replacement)\n​\n​regexp/substr：必需。规定子字符串或要替换的模式的 RegExp 对象。\n                请注意，如果该值是一个字符串，则将它作为要检索的直接量文本模式，而不是首先被转换为 RegExp 对象。\nreplacement：必需。一个字符串值。规定了替换文本或生成替换文本的函数。\n```\n\n##### 是不是有点明白了，对了就是\n\n```javascript\nlet string = \"aaabbbsssf\";\nlet key = \"a\";\nlet a = string.replace(new RegExp(key,'g'),\"我\");\n```\n\n\n","source":"_posts/jc-4.md","raw":"---\ntitle: JS replace()方法全文替换，遇到变量怎么办？\ndate: 2018-05-23 16:14:16\ncategories: js-end\ntags: js replace\n---\n\n## replace 替换变量文本，改如何处理？\n\n### js 替换字符窜，一般情况下是\n```javascript\nlet string = \"aaabbbsssf\";\nlet a = string.replace(\"a\",\"我\");\n```\n<!-- more -->\n#### 以上只能替换第一个，全局替换\n```javascript\nlet string = \"aaabbbsssf\";\nlet a = string.replace(/a/g,\"我\");\n```\n#### 这样没问题，但是如果需要替换的字段不确定，是变量的话，如何写？\n\n#### 以上只能替换第一个，全局替换\n```javascript\nlet string = \"aaabbbsssf\";\nlet key = \"a\";\nlet a = string.replace(/key/g,\"我\");\n或者\nlet a = string.replace(/\\key/g,\"我\");\n再或者拼接？\n```\n\n##### 经过我的各种奇怪尝试都是不好使的，没办法，查看文档\n\n```javascript\nreplace() 方法用于在字符串中用一些字符替换另一些字符，或替换一个与正则表达式匹配的子串。\n​\n​stringObject.replace(regexp/substr,replacement)\n​\n​regexp/substr：必需。规定子字符串或要替换的模式的 RegExp 对象。\n                请注意，如果该值是一个字符串，则将它作为要检索的直接量文本模式，而不是首先被转换为 RegExp 对象。\nreplacement：必需。一个字符串值。规定了替换文本或生成替换文本的函数。\n```\n\n##### 是不是有点明白了，对了就是\n\n```javascript\nlet string = \"aaabbbsssf\";\nlet key = \"a\";\nlet a = string.replace(new RegExp(key,'g'),\"我\");\n```\n\n\n","slug":"jc-4","published":1,"updated":"2020-07-01T09:12:26.385Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdr00y5q0014e7zcl43qel6f","content":"<h2 id=\"replace-替换变量文本，改如何处理？\"><a href=\"#replace-替换变量文本，改如何处理？\" class=\"headerlink\" title=\"replace 替换变量文本，改如何处理？\"></a>replace 替换变量文本，改如何处理？</h2><h3 id=\"js-替换字符窜，一般情况下是\"><a href=\"#js-替换字符窜，一般情况下是\" class=\"headerlink\" title=\"js 替换字符窜，一般情况下是\"></a>js 替换字符窜，一般情况下是</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> string = <span class=\"string\">\"aaabbbsssf\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> a = string.replace(<span class=\"string\">\"a\"</span>,<span class=\"string\">\"我\"</span>);</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h4 id=\"以上只能替换第一个，全局替换\"><a href=\"#以上只能替换第一个，全局替换\" class=\"headerlink\" title=\"以上只能替换第一个，全局替换\"></a>以上只能替换第一个，全局替换</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> string = <span class=\"string\">\"aaabbbsssf\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> a = string.replace(<span class=\"regexp\">/a/g</span>,<span class=\"string\">\"我\"</span>);</span><br></pre></td></tr></table></figure>\n<h4 id=\"这样没问题，但是如果需要替换的字段不确定，是变量的话，如何写？\"><a href=\"#这样没问题，但是如果需要替换的字段不确定，是变量的话，如何写？\" class=\"headerlink\" title=\"这样没问题，但是如果需要替换的字段不确定，是变量的话，如何写？\"></a>这样没问题，但是如果需要替换的字段不确定，是变量的话，如何写？</h4><h4 id=\"以上只能替换第一个，全局替换-1\"><a href=\"#以上只能替换第一个，全局替换-1\" class=\"headerlink\" title=\"以上只能替换第一个，全局替换\"></a>以上只能替换第一个，全局替换</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> string = <span class=\"string\">\"aaabbbsssf\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> key = <span class=\"string\">\"a\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> a = string.replace(<span class=\"regexp\">/key/g</span>,<span class=\"string\">\"我\"</span>);</span><br><span class=\"line\">或者</span><br><span class=\"line\"><span class=\"keyword\">let</span> a = string.replace(<span class=\"regexp\">/\\key/g</span>,<span class=\"string\">\"我\"</span>);</span><br><span class=\"line\">再或者拼接？</span><br></pre></td></tr></table></figure>\n<h5 id=\"经过我的各种奇怪尝试都是不好使的，没办法，查看文档\"><a href=\"#经过我的各种奇怪尝试都是不好使的，没办法，查看文档\" class=\"headerlink\" title=\"经过我的各种奇怪尝试都是不好使的，没办法，查看文档\"></a>经过我的各种奇怪尝试都是不好使的，没办法，查看文档</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">replace() 方法用于在字符串中用一些字符替换另一些字符，或替换一个与正则表达式匹配的子串。</span><br><span class=\"line\">​</span><br><span class=\"line\">​stringObject.replace(regexp/substr,replacement)</span><br><span class=\"line\">​</span><br><span class=\"line\">​regexp/substr：必需。规定子字符串或要替换的模式的 <span class=\"built_in\">RegExp</span> 对象。</span><br><span class=\"line\">                请注意，如果该值是一个字符串，则将它作为要检索的直接量文本模式，而不是首先被转换为 <span class=\"built_in\">RegExp</span> 对象。</span><br><span class=\"line\">replacement：必需。一个字符串值。规定了替换文本或生成替换文本的函数。</span><br></pre></td></tr></table></figure>\n<h5 id=\"是不是有点明白了，对了就是\"><a href=\"#是不是有点明白了，对了就是\" class=\"headerlink\" title=\"是不是有点明白了，对了就是\"></a>是不是有点明白了，对了就是</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> string = <span class=\"string\">\"aaabbbsssf\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> key = <span class=\"string\">\"a\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> a = string.replace(<span class=\"keyword\">new</span> <span class=\"built_in\">RegExp</span>(key,<span class=\"string\">'g'</span>),<span class=\"string\">\"我\"</span>);</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<h2 id=\"replace-替换变量文本，改如何处理？\"><a href=\"#replace-替换变量文本，改如何处理？\" class=\"headerlink\" title=\"replace 替换变量文本，改如何处理？\"></a>replace 替换变量文本，改如何处理？</h2><h3 id=\"js-替换字符窜，一般情况下是\"><a href=\"#js-替换字符窜，一般情况下是\" class=\"headerlink\" title=\"js 替换字符窜，一般情况下是\"></a>js 替换字符窜，一般情况下是</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> string = <span class=\"string\">\"aaabbbsssf\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> a = string.replace(<span class=\"string\">\"a\"</span>,<span class=\"string\">\"我\"</span>);</span><br></pre></td></tr></table></figure>","more":"<h4 id=\"以上只能替换第一个，全局替换\"><a href=\"#以上只能替换第一个，全局替换\" class=\"headerlink\" title=\"以上只能替换第一个，全局替换\"></a>以上只能替换第一个，全局替换</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> string = <span class=\"string\">\"aaabbbsssf\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> a = string.replace(<span class=\"regexp\">/a/g</span>,<span class=\"string\">\"我\"</span>);</span><br></pre></td></tr></table></figure>\n<h4 id=\"这样没问题，但是如果需要替换的字段不确定，是变量的话，如何写？\"><a href=\"#这样没问题，但是如果需要替换的字段不确定，是变量的话，如何写？\" class=\"headerlink\" title=\"这样没问题，但是如果需要替换的字段不确定，是变量的话，如何写？\"></a>这样没问题，但是如果需要替换的字段不确定，是变量的话，如何写？</h4><h4 id=\"以上只能替换第一个，全局替换-1\"><a href=\"#以上只能替换第一个，全局替换-1\" class=\"headerlink\" title=\"以上只能替换第一个，全局替换\"></a>以上只能替换第一个，全局替换</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> string = <span class=\"string\">\"aaabbbsssf\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> key = <span class=\"string\">\"a\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> a = string.replace(<span class=\"regexp\">/key/g</span>,<span class=\"string\">\"我\"</span>);</span><br><span class=\"line\">或者</span><br><span class=\"line\"><span class=\"keyword\">let</span> a = string.replace(<span class=\"regexp\">/\\key/g</span>,<span class=\"string\">\"我\"</span>);</span><br><span class=\"line\">再或者拼接？</span><br></pre></td></tr></table></figure>\n<h5 id=\"经过我的各种奇怪尝试都是不好使的，没办法，查看文档\"><a href=\"#经过我的各种奇怪尝试都是不好使的，没办法，查看文档\" class=\"headerlink\" title=\"经过我的各种奇怪尝试都是不好使的，没办法，查看文档\"></a>经过我的各种奇怪尝试都是不好使的，没办法，查看文档</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">replace() 方法用于在字符串中用一些字符替换另一些字符，或替换一个与正则表达式匹配的子串。</span><br><span class=\"line\">​</span><br><span class=\"line\">​stringObject.replace(regexp/substr,replacement)</span><br><span class=\"line\">​</span><br><span class=\"line\">​regexp/substr：必需。规定子字符串或要替换的模式的 <span class=\"built_in\">RegExp</span> 对象。</span><br><span class=\"line\">                请注意，如果该值是一个字符串，则将它作为要检索的直接量文本模式，而不是首先被转换为 <span class=\"built_in\">RegExp</span> 对象。</span><br><span class=\"line\">replacement：必需。一个字符串值。规定了替换文本或生成替换文本的函数。</span><br></pre></td></tr></table></figure>\n<h5 id=\"是不是有点明白了，对了就是\"><a href=\"#是不是有点明白了，对了就是\" class=\"headerlink\" title=\"是不是有点明白了，对了就是\"></a>是不是有点明白了，对了就是</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> string = <span class=\"string\">\"aaabbbsssf\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> key = <span class=\"string\">\"a\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> a = string.replace(<span class=\"keyword\">new</span> <span class=\"built_in\">RegExp</span>(key,<span class=\"string\">'g'</span>),<span class=\"string\">\"我\"</span>);</span><br></pre></td></tr></table></figure>"},{"title":"微信小程序实现签名并保存图片","date":"2019-02-21T01:17:20.000Z","_content":"\n### 前言\n小程序实现签名并保存图片，主要的通过canvas来实现\n\n```html\n<!--pages/sign/sign.wxml-->\n<view class='container'>\n<!-- 签名画布 -->\n<canvas class=\"canvas\" id=\"canvas\" canvas-id=\"canvas\" disable-scroll=\"true\" bindtouchstart=\"canvasStart\" bindtouchmove=\"canvasMove\" bindtouchend=\"canvasEnd\" touchcancel=\"canvasEnd\" binderror=\"canvasIdErrorCallback\">\n</canvas>\n<view class='buttonBox'>\n<button bindtap='clickMe' class='addbutton' open-type=\"getuserinfo\">点击我生成图片保存相册</button>\n<button type=\"default\" class='delbutton' bindtap=\"cleardraw\">清除</button>\n</view>\n</view>\n```\n<!-- more -->\n\n### css代码\n```css\n/* pages/sign/sign.wxss */\n.canvas {\n  width: 100%;\n  height: 93%;\n  border-bottom: 1rpx solid #e2e2e2e2;  \n  position: fixed;\n  box-sizing: border-box;\n} \n.imageCanvas{\n  width: 100%;\n  height: 300rpx;\n}\n.buttonBox{\n  width: 100%;\n  justify-content: center;\n  display: flex;\n  position: fixed;\n  bottom: 0;\n  left: 0;\n}\n```\n### js代码\n```javascript\n// canvas 全局配置\nvar context = null;\nvar isButtonDown = false;\nvar arrx = [];\nvar arry = [];\nvar arrz = [];\nvar canvasw = 0;\nvar canvash = 0;\n//注册页面\nPage({\ncanvasIdErrorCallback: function (e) {\nconsole.error(e.detail.errMsg)\n},\n//开始\ncanvasStart: function (event) {\nconsole.log(\"start\", event.changedTouches[0])\nisButtonDown = true;\narrz.push(0);\narrx.push(event.changedTouches[0].x);\narry.push(event.changedTouches[0].y);\nconsole.log(\"\")\n},\ndata: {\nsrc: \"\",\nimg: \"https://ss0.bdstatic.com/70cFvHSh_Q1YnxGkpoWK1HF6hhy/it/u=578899140,1412678472&fm=27&gp=0.jpg\",\nrpx: ''\n},\n\nonLoad: function (options) {\nvar that = this\n// 使用 wx.createContext 获取绘图上下文 context\ncontext = wx.createCanvasContext('canvas');\ncontext.beginPath()\ncontext.setStrokeStyle('#000000');\ncontext.setLineWidth(4);\ncontext.setLineCap('round');\ncontext.setLineJoin('round');\n\n// context.drawImage('../../images/img111.png', 0, 0, canvasw, 500);\ncontext.draw();\n},\n\n//过程\ncanvasMove: function (event) {\nvar that = this\nif (isButtonDown) {\narrz.push(1);\nconsole.log(event)\narrx.push(event.changedTouches[0].x);\narry.push(event.changedTouches[0].y);\n};\n\nfor (var i = 0; i < arrx.length; i++) {\nif (arrz[i] == 0) {\ncontext.moveTo(arrx[i], arry[i])\n} else {\ncontext.lineTo(arrx[i], arry[i])\n};\n\n};\ncontext.clearRect(0, 0, canvasw, canvash);\ncontext.setStrokeStyle('#000000');\ncontext.setLineWidth(4);\ncontext.setLineCap('round');\ncontext.setLineJoin('round');\ncontext.stroke();\n\ncontext.draw(false);\n},\n// 点击保存图片\nclickMe: function () {\nwx.canvasToTempFilePath({\ncanvasId: 'canvas',\nfileType: 'jpg',\nsuccess: function (res) {\nconsole.log(res)\nwx.saveImageToPhotosAlbum({\nfilePath: res.tempFilePath,\nsuccess(res) {\nconsole.log(res)\nwx.hideLoading();\nwx.showToast({\ntitle: '保存成功',\n});\n// //存入服务器\n// wx.uploadFile({\n//   url: 'a.php', //接口地址\n//   filePath: res.tempFilePath,\n//   name: 'file',\n//   formData: {                                 //HTTP 请求中其他额外的 form data \n//     'user': 'test'\n//   },\n//   success: function (res) {\n//     console.log(res);\n\n//   },\n//   fail: function (res) {\n//     console.log(res);\n//   },\n//   complete: function (res) {\n//   }\n// });\n},\nfail() {\nwx.hideLoading()\n}\n})\n}\n})\n},\ncanvasEnd: function (event) {\nisButtonDown = false;\n},\ncleardraw: function () {\n//清除画布\narrx = [];\narry = [];\narrz = [];\ncontext.draw(false);\n}\n})\n```","source":"_posts/jc-2.md","raw":"---\ntitle: 微信小程序实现签名并保存图片\ndate: 2019-02-21 09:17:20\ntags: 微信小程序 canvas\ncategories: gc-end\n---\n\n### 前言\n小程序实现签名并保存图片，主要的通过canvas来实现\n\n```html\n<!--pages/sign/sign.wxml-->\n<view class='container'>\n<!-- 签名画布 -->\n<canvas class=\"canvas\" id=\"canvas\" canvas-id=\"canvas\" disable-scroll=\"true\" bindtouchstart=\"canvasStart\" bindtouchmove=\"canvasMove\" bindtouchend=\"canvasEnd\" touchcancel=\"canvasEnd\" binderror=\"canvasIdErrorCallback\">\n</canvas>\n<view class='buttonBox'>\n<button bindtap='clickMe' class='addbutton' open-type=\"getuserinfo\">点击我生成图片保存相册</button>\n<button type=\"default\" class='delbutton' bindtap=\"cleardraw\">清除</button>\n</view>\n</view>\n```\n<!-- more -->\n\n### css代码\n```css\n/* pages/sign/sign.wxss */\n.canvas {\n  width: 100%;\n  height: 93%;\n  border-bottom: 1rpx solid #e2e2e2e2;  \n  position: fixed;\n  box-sizing: border-box;\n} \n.imageCanvas{\n  width: 100%;\n  height: 300rpx;\n}\n.buttonBox{\n  width: 100%;\n  justify-content: center;\n  display: flex;\n  position: fixed;\n  bottom: 0;\n  left: 0;\n}\n```\n### js代码\n```javascript\n// canvas 全局配置\nvar context = null;\nvar isButtonDown = false;\nvar arrx = [];\nvar arry = [];\nvar arrz = [];\nvar canvasw = 0;\nvar canvash = 0;\n//注册页面\nPage({\ncanvasIdErrorCallback: function (e) {\nconsole.error(e.detail.errMsg)\n},\n//开始\ncanvasStart: function (event) {\nconsole.log(\"start\", event.changedTouches[0])\nisButtonDown = true;\narrz.push(0);\narrx.push(event.changedTouches[0].x);\narry.push(event.changedTouches[0].y);\nconsole.log(\"\")\n},\ndata: {\nsrc: \"\",\nimg: \"https://ss0.bdstatic.com/70cFvHSh_Q1YnxGkpoWK1HF6hhy/it/u=578899140,1412678472&fm=27&gp=0.jpg\",\nrpx: ''\n},\n\nonLoad: function (options) {\nvar that = this\n// 使用 wx.createContext 获取绘图上下文 context\ncontext = wx.createCanvasContext('canvas');\ncontext.beginPath()\ncontext.setStrokeStyle('#000000');\ncontext.setLineWidth(4);\ncontext.setLineCap('round');\ncontext.setLineJoin('round');\n\n// context.drawImage('../../images/img111.png', 0, 0, canvasw, 500);\ncontext.draw();\n},\n\n//过程\ncanvasMove: function (event) {\nvar that = this\nif (isButtonDown) {\narrz.push(1);\nconsole.log(event)\narrx.push(event.changedTouches[0].x);\narry.push(event.changedTouches[0].y);\n};\n\nfor (var i = 0; i < arrx.length; i++) {\nif (arrz[i] == 0) {\ncontext.moveTo(arrx[i], arry[i])\n} else {\ncontext.lineTo(arrx[i], arry[i])\n};\n\n};\ncontext.clearRect(0, 0, canvasw, canvash);\ncontext.setStrokeStyle('#000000');\ncontext.setLineWidth(4);\ncontext.setLineCap('round');\ncontext.setLineJoin('round');\ncontext.stroke();\n\ncontext.draw(false);\n},\n// 点击保存图片\nclickMe: function () {\nwx.canvasToTempFilePath({\ncanvasId: 'canvas',\nfileType: 'jpg',\nsuccess: function (res) {\nconsole.log(res)\nwx.saveImageToPhotosAlbum({\nfilePath: res.tempFilePath,\nsuccess(res) {\nconsole.log(res)\nwx.hideLoading();\nwx.showToast({\ntitle: '保存成功',\n});\n// //存入服务器\n// wx.uploadFile({\n//   url: 'a.php', //接口地址\n//   filePath: res.tempFilePath,\n//   name: 'file',\n//   formData: {                                 //HTTP 请求中其他额外的 form data \n//     'user': 'test'\n//   },\n//   success: function (res) {\n//     console.log(res);\n\n//   },\n//   fail: function (res) {\n//     console.log(res);\n//   },\n//   complete: function (res) {\n//   }\n// });\n},\nfail() {\nwx.hideLoading()\n}\n})\n}\n})\n},\ncanvasEnd: function (event) {\nisButtonDown = false;\n},\ncleardraw: function () {\n//清除画布\narrx = [];\narry = [];\narrz = [];\ncontext.draw(false);\n}\n})\n```","slug":"jc-2","published":1,"updated":"2020-07-01T09:12:26.384Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdr00y5s0017e7zcuqekn6dt","content":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>小程序实现签名并保存图片，主要的通过canvas来实现</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--pages/sign/sign.wxml--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">view</span> <span class=\"attr\">class</span>=<span class=\"string\">'container'</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 签名画布 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">canvas</span> <span class=\"attr\">class</span>=<span class=\"string\">\"canvas\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"canvas\"</span> <span class=\"attr\">canvas-id</span>=<span class=\"string\">\"canvas\"</span> <span class=\"attr\">disable-scroll</span>=<span class=\"string\">\"true\"</span> <span class=\"attr\">bindtouchstart</span>=<span class=\"string\">\"canvasStart\"</span> <span class=\"attr\">bindtouchmove</span>=<span class=\"string\">\"canvasMove\"</span> <span class=\"attr\">bindtouchend</span>=<span class=\"string\">\"canvasEnd\"</span> <span class=\"attr\">touchcancel</span>=<span class=\"string\">\"canvasEnd\"</span> <span class=\"attr\">binderror</span>=<span class=\"string\">\"canvasIdErrorCallback\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">canvas</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">view</span> <span class=\"attr\">class</span>=<span class=\"string\">'buttonBox'</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">bindtap</span>=<span class=\"string\">'clickMe'</span> <span class=\"attr\">class</span>=<span class=\"string\">'addbutton'</span> <span class=\"attr\">open-type</span>=<span class=\"string\">\"getuserinfo\"</span>&gt;</span>点击我生成图片保存相册<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">\"default\"</span> <span class=\"attr\">class</span>=<span class=\"string\">'delbutton'</span> <span class=\"attr\">bindtap</span>=<span class=\"string\">\"cleardraw\"</span>&gt;</span>清除<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">view</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">view</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h3 id=\"css代码\"><a href=\"#css代码\" class=\"headerlink\" title=\"css代码\"></a>css代码</h3><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* pages/sign/sign.wxss */</span></span><br><span class=\"line\"><span class=\"selector-class\">.canvas</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">93%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-bottom</span>: <span class=\"number\">1</span>rpx solid <span class=\"number\">#e2e2e2e2</span>;  </span><br><span class=\"line\">  <span class=\"attribute\">position</span>: fixed;</span><br><span class=\"line\">  <span class=\"attribute\">box-sizing</span>: border-box;</span><br><span class=\"line\">&#125; </span><br><span class=\"line\"><span class=\"selector-class\">.imageCanvas</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">300</span>rpx;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.buttonBox</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">justify-content</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: fixed;</span><br><span class=\"line\">  <span class=\"attribute\">bottom</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">left</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"js代码\"><a href=\"#js代码\" class=\"headerlink\" title=\"js代码\"></a>js代码</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// canvas 全局配置</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> context = <span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> isButtonDown = <span class=\"literal\">false</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> arrx = [];</span><br><span class=\"line\"><span class=\"keyword\">var</span> arry = [];</span><br><span class=\"line\"><span class=\"keyword\">var</span> arrz = [];</span><br><span class=\"line\"><span class=\"keyword\">var</span> canvasw = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> canvash = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"comment\">//注册页面</span></span><br><span class=\"line\">Page(&#123;</span><br><span class=\"line\">canvasIdErrorCallback: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.error(e.detail.errMsg)</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"><span class=\"comment\">//开始</span></span><br><span class=\"line\">canvasStart: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">event</span>) </span>&#123;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"start\"</span>, event.changedTouches[<span class=\"number\">0</span>])</span><br><span class=\"line\">isButtonDown = <span class=\"literal\">true</span>;</span><br><span class=\"line\">arrz.push(<span class=\"number\">0</span>);</span><br><span class=\"line\">arrx.push(event.changedTouches[<span class=\"number\">0</span>].x);</span><br><span class=\"line\">arry.push(event.changedTouches[<span class=\"number\">0</span>].y);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"\"</span>)</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">data: &#123;</span><br><span class=\"line\">src: <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">img: <span class=\"string\">\"https://ss0.bdstatic.com/70cFvHSh_Q1YnxGkpoWK1HF6hhy/it/u=578899140,1412678472&amp;fm=27&amp;gp=0.jpg\"</span>,</span><br><span class=\"line\">rpx: <span class=\"string\">''</span></span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">onLoad: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">options</span>) </span>&#123;</span><br><span class=\"line\"><span class=\"keyword\">var</span> that = <span class=\"keyword\">this</span></span><br><span class=\"line\"><span class=\"comment\">// 使用 wx.createContext 获取绘图上下文 context</span></span><br><span class=\"line\">context = wx.createCanvasContext(<span class=\"string\">'canvas'</span>);</span><br><span class=\"line\">context.beginPath()</span><br><span class=\"line\">context.setStrokeStyle(<span class=\"string\">'#000000'</span>);</span><br><span class=\"line\">context.setLineWidth(<span class=\"number\">4</span>);</span><br><span class=\"line\">context.setLineCap(<span class=\"string\">'round'</span>);</span><br><span class=\"line\">context.setLineJoin(<span class=\"string\">'round'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// context.drawImage('../../images/img111.png', 0, 0, canvasw, 500);</span></span><br><span class=\"line\">context.draw();</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//过程</span></span><br><span class=\"line\">canvasMove: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">event</span>) </span>&#123;</span><br><span class=\"line\"><span class=\"keyword\">var</span> that = <span class=\"keyword\">this</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (isButtonDown) &#123;</span><br><span class=\"line\">arrz.push(<span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(event)</span><br><span class=\"line\">arrx.push(event.changedTouches[<span class=\"number\">0</span>].x);</span><br><span class=\"line\">arry.push(event.changedTouches[<span class=\"number\">0</span>].y);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; arrx.length; i++) &#123;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (arrz[i] == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">context.moveTo(arrx[i], arry[i])</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">context.lineTo(arrx[i], arry[i])</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">context.clearRect(<span class=\"number\">0</span>, <span class=\"number\">0</span>, canvasw, canvash);</span><br><span class=\"line\">context.setStrokeStyle(<span class=\"string\">'#000000'</span>);</span><br><span class=\"line\">context.setLineWidth(<span class=\"number\">4</span>);</span><br><span class=\"line\">context.setLineCap(<span class=\"string\">'round'</span>);</span><br><span class=\"line\">context.setLineJoin(<span class=\"string\">'round'</span>);</span><br><span class=\"line\">context.stroke();</span><br><span class=\"line\"></span><br><span class=\"line\">context.draw(<span class=\"literal\">false</span>);</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"><span class=\"comment\">// 点击保存图片</span></span><br><span class=\"line\">clickMe: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">wx.canvasToTempFilePath(&#123;</span><br><span class=\"line\">canvasId: <span class=\"string\">'canvas'</span>,</span><br><span class=\"line\">fileType: <span class=\"string\">'jpg'</span>,</span><br><span class=\"line\">success: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">res</span>) </span>&#123;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(res)</span><br><span class=\"line\">wx.saveImageToPhotosAlbum(&#123;</span><br><span class=\"line\">filePath: res.tempFilePath,</span><br><span class=\"line\">success(res) &#123;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(res)</span><br><span class=\"line\">wx.hideLoading();</span><br><span class=\"line\">wx.showToast(&#123;</span><br><span class=\"line\">title: <span class=\"string\">'保存成功'</span>,</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">// //存入服务器</span></span><br><span class=\"line\"><span class=\"comment\">// wx.uploadFile(&#123;</span></span><br><span class=\"line\"><span class=\"comment\">//   url: 'a.php', //接口地址</span></span><br><span class=\"line\"><span class=\"comment\">//   filePath: res.tempFilePath,</span></span><br><span class=\"line\"><span class=\"comment\">//   name: 'file',</span></span><br><span class=\"line\"><span class=\"comment\">//   formData: &#123;                                 //HTTP 请求中其他额外的 form data </span></span><br><span class=\"line\"><span class=\"comment\">//     'user': 'test'</span></span><br><span class=\"line\"><span class=\"comment\">//   &#125;,</span></span><br><span class=\"line\"><span class=\"comment\">//   success: function (res) &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//     console.log(res);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//   &#125;,</span></span><br><span class=\"line\"><span class=\"comment\">//   fail: function (res) &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//     console.log(res);</span></span><br><span class=\"line\"><span class=\"comment\">//   &#125;,</span></span><br><span class=\"line\"><span class=\"comment\">//   complete: function (res) &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//   &#125;</span></span><br><span class=\"line\"><span class=\"comment\">// &#125;);</span></span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">fail() &#123;</span><br><span class=\"line\">wx.hideLoading()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">canvasEnd: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">event</span>) </span>&#123;</span><br><span class=\"line\">isButtonDown = <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">cleardraw: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\"><span class=\"comment\">//清除画布</span></span><br><span class=\"line\">arrx = [];</span><br><span class=\"line\">arry = [];</span><br><span class=\"line\">arrz = [];</span><br><span class=\"line\">context.draw(<span class=\"literal\">false</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>小程序实现签名并保存图片，主要的通过canvas来实现</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--pages/sign/sign.wxml--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">view</span> <span class=\"attr\">class</span>=<span class=\"string\">'container'</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 签名画布 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">canvas</span> <span class=\"attr\">class</span>=<span class=\"string\">\"canvas\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"canvas\"</span> <span class=\"attr\">canvas-id</span>=<span class=\"string\">\"canvas\"</span> <span class=\"attr\">disable-scroll</span>=<span class=\"string\">\"true\"</span> <span class=\"attr\">bindtouchstart</span>=<span class=\"string\">\"canvasStart\"</span> <span class=\"attr\">bindtouchmove</span>=<span class=\"string\">\"canvasMove\"</span> <span class=\"attr\">bindtouchend</span>=<span class=\"string\">\"canvasEnd\"</span> <span class=\"attr\">touchcancel</span>=<span class=\"string\">\"canvasEnd\"</span> <span class=\"attr\">binderror</span>=<span class=\"string\">\"canvasIdErrorCallback\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">canvas</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">view</span> <span class=\"attr\">class</span>=<span class=\"string\">'buttonBox'</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">bindtap</span>=<span class=\"string\">'clickMe'</span> <span class=\"attr\">class</span>=<span class=\"string\">'addbutton'</span> <span class=\"attr\">open-type</span>=<span class=\"string\">\"getuserinfo\"</span>&gt;</span>点击我生成图片保存相册<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">\"default\"</span> <span class=\"attr\">class</span>=<span class=\"string\">'delbutton'</span> <span class=\"attr\">bindtap</span>=<span class=\"string\">\"cleardraw\"</span>&gt;</span>清除<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">view</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">view</span>&gt;</span></span><br></pre></td></tr></table></figure>","more":"<h3 id=\"css代码\"><a href=\"#css代码\" class=\"headerlink\" title=\"css代码\"></a>css代码</h3><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* pages/sign/sign.wxss */</span></span><br><span class=\"line\"><span class=\"selector-class\">.canvas</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">93%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-bottom</span>: <span class=\"number\">1</span>rpx solid <span class=\"number\">#e2e2e2e2</span>;  </span><br><span class=\"line\">  <span class=\"attribute\">position</span>: fixed;</span><br><span class=\"line\">  <span class=\"attribute\">box-sizing</span>: border-box;</span><br><span class=\"line\">&#125; </span><br><span class=\"line\"><span class=\"selector-class\">.imageCanvas</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">300</span>rpx;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.buttonBox</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">justify-content</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: fixed;</span><br><span class=\"line\">  <span class=\"attribute\">bottom</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">left</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"js代码\"><a href=\"#js代码\" class=\"headerlink\" title=\"js代码\"></a>js代码</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// canvas 全局配置</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> context = <span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> isButtonDown = <span class=\"literal\">false</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> arrx = [];</span><br><span class=\"line\"><span class=\"keyword\">var</span> arry = [];</span><br><span class=\"line\"><span class=\"keyword\">var</span> arrz = [];</span><br><span class=\"line\"><span class=\"keyword\">var</span> canvasw = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> canvash = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"comment\">//注册页面</span></span><br><span class=\"line\">Page(&#123;</span><br><span class=\"line\">canvasIdErrorCallback: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.error(e.detail.errMsg)</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"><span class=\"comment\">//开始</span></span><br><span class=\"line\">canvasStart: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">event</span>) </span>&#123;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"start\"</span>, event.changedTouches[<span class=\"number\">0</span>])</span><br><span class=\"line\">isButtonDown = <span class=\"literal\">true</span>;</span><br><span class=\"line\">arrz.push(<span class=\"number\">0</span>);</span><br><span class=\"line\">arrx.push(event.changedTouches[<span class=\"number\">0</span>].x);</span><br><span class=\"line\">arry.push(event.changedTouches[<span class=\"number\">0</span>].y);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"\"</span>)</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">data: &#123;</span><br><span class=\"line\">src: <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">img: <span class=\"string\">\"https://ss0.bdstatic.com/70cFvHSh_Q1YnxGkpoWK1HF6hhy/it/u=578899140,1412678472&amp;fm=27&amp;gp=0.jpg\"</span>,</span><br><span class=\"line\">rpx: <span class=\"string\">''</span></span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">onLoad: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">options</span>) </span>&#123;</span><br><span class=\"line\"><span class=\"keyword\">var</span> that = <span class=\"keyword\">this</span></span><br><span class=\"line\"><span class=\"comment\">// 使用 wx.createContext 获取绘图上下文 context</span></span><br><span class=\"line\">context = wx.createCanvasContext(<span class=\"string\">'canvas'</span>);</span><br><span class=\"line\">context.beginPath()</span><br><span class=\"line\">context.setStrokeStyle(<span class=\"string\">'#000000'</span>);</span><br><span class=\"line\">context.setLineWidth(<span class=\"number\">4</span>);</span><br><span class=\"line\">context.setLineCap(<span class=\"string\">'round'</span>);</span><br><span class=\"line\">context.setLineJoin(<span class=\"string\">'round'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// context.drawImage('../../images/img111.png', 0, 0, canvasw, 500);</span></span><br><span class=\"line\">context.draw();</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//过程</span></span><br><span class=\"line\">canvasMove: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">event</span>) </span>&#123;</span><br><span class=\"line\"><span class=\"keyword\">var</span> that = <span class=\"keyword\">this</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (isButtonDown) &#123;</span><br><span class=\"line\">arrz.push(<span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(event)</span><br><span class=\"line\">arrx.push(event.changedTouches[<span class=\"number\">0</span>].x);</span><br><span class=\"line\">arry.push(event.changedTouches[<span class=\"number\">0</span>].y);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; arrx.length; i++) &#123;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (arrz[i] == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">context.moveTo(arrx[i], arry[i])</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">context.lineTo(arrx[i], arry[i])</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">context.clearRect(<span class=\"number\">0</span>, <span class=\"number\">0</span>, canvasw, canvash);</span><br><span class=\"line\">context.setStrokeStyle(<span class=\"string\">'#000000'</span>);</span><br><span class=\"line\">context.setLineWidth(<span class=\"number\">4</span>);</span><br><span class=\"line\">context.setLineCap(<span class=\"string\">'round'</span>);</span><br><span class=\"line\">context.setLineJoin(<span class=\"string\">'round'</span>);</span><br><span class=\"line\">context.stroke();</span><br><span class=\"line\"></span><br><span class=\"line\">context.draw(<span class=\"literal\">false</span>);</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"><span class=\"comment\">// 点击保存图片</span></span><br><span class=\"line\">clickMe: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">wx.canvasToTempFilePath(&#123;</span><br><span class=\"line\">canvasId: <span class=\"string\">'canvas'</span>,</span><br><span class=\"line\">fileType: <span class=\"string\">'jpg'</span>,</span><br><span class=\"line\">success: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">res</span>) </span>&#123;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(res)</span><br><span class=\"line\">wx.saveImageToPhotosAlbum(&#123;</span><br><span class=\"line\">filePath: res.tempFilePath,</span><br><span class=\"line\">success(res) &#123;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(res)</span><br><span class=\"line\">wx.hideLoading();</span><br><span class=\"line\">wx.showToast(&#123;</span><br><span class=\"line\">title: <span class=\"string\">'保存成功'</span>,</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">// //存入服务器</span></span><br><span class=\"line\"><span class=\"comment\">// wx.uploadFile(&#123;</span></span><br><span class=\"line\"><span class=\"comment\">//   url: 'a.php', //接口地址</span></span><br><span class=\"line\"><span class=\"comment\">//   filePath: res.tempFilePath,</span></span><br><span class=\"line\"><span class=\"comment\">//   name: 'file',</span></span><br><span class=\"line\"><span class=\"comment\">//   formData: &#123;                                 //HTTP 请求中其他额外的 form data </span></span><br><span class=\"line\"><span class=\"comment\">//     'user': 'test'</span></span><br><span class=\"line\"><span class=\"comment\">//   &#125;,</span></span><br><span class=\"line\"><span class=\"comment\">//   success: function (res) &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//     console.log(res);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//   &#125;,</span></span><br><span class=\"line\"><span class=\"comment\">//   fail: function (res) &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//     console.log(res);</span></span><br><span class=\"line\"><span class=\"comment\">//   &#125;,</span></span><br><span class=\"line\"><span class=\"comment\">//   complete: function (res) &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//   &#125;</span></span><br><span class=\"line\"><span class=\"comment\">// &#125;);</span></span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">fail() &#123;</span><br><span class=\"line\">wx.hideLoading()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">canvasEnd: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">event</span>) </span>&#123;</span><br><span class=\"line\">isButtonDown = <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">cleardraw: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\"><span class=\"comment\">//清除画布</span></span><br><span class=\"line\">arrx = [];</span><br><span class=\"line\">arry = [];</span><br><span class=\"line\">arrz = [];</span><br><span class=\"line\">context.draw(<span class=\"literal\">false</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>"},{"title":"代码回退","date":"2019-07-22T06:23:42.000Z","_content":"\n## 问题\n```html\n  如果提交了一个错误的版本，怎么回退版本？\n  如果提交了一个错误的版本到远程分支，怎么回退远程分支版本？\n  如果提交了一个错误的版本到公共远程分支，又该怎么回退版本？\n```\n<!-- more -->\n### 回退本地分支版本\n这个比较简单，依次执行如下命令：   \n```shell\n// 先用下面命令找到要回退的版本的commit id\ngit reflog \n```\n```shell\n接着回退版本:\ngit reset --hard 回退版本的id\n```\n### 自己的远程分支版本回退的方法\n如果你的错误提交已经推送到自己的远程分支了，那么就需要回滚远程分支了。 \n首先要回退本地分支：\n```shell\ngit reflog\ngit reset --hard 回退版本的id \n```\n紧接着强制推送到远程分支：\n```shell\ngit push -f 回退强推的分支名称\n```\n> 本地分支回滚后，版本将落后远程分支，必须使用强制推送覆盖远程分支，否则无法推送到远程分支\n\n### 公共远程分支版本回退的问题\n看到这里，相信你已经能够回滚远程分支的版本了，那么你也许会问了，回滚公共远程分支和回滚自己的远程分支有区别吗？   \n答案是，当然有区别啦。   \n```shell\n一个显而易见的问题：如果你回退公共远程分支，把别人的提交给丢掉了怎么办？\n```\n下面来分析:   \n假如你的远程master分支情况是这样的:A1–A2–B1   \n\n其中A、B分别代表两个人，A1、A2、B1代表各自的提交。并且所有人的本地分支都已经更新到最新版本，和远程分支一致。   \n理想状态是你的队友一拉代码git pull，他们的master分支也回滚了，然而现实却是，你的队友会看到下面的提示：   \n```shell\n$ git status\nOn branch master\nYour branch is ahead of 'origin/master' by 2 commits.\n  (use \"git push\" to publish your local commits)\nnothing to commit, working directory clean\n```\n也就是说，你的队友的分支并没有主动回退，而是比远程分支超前了两次提交，因为远程分支回退了嘛   \n\n如果你的队友是git大神(Tony)，他会这么做：\n使用下面的命令来找出你回退版本后覆盖掉的他的提交，也就是B1那次提交：\n```shell\ngit reflog\n```\n然后冷静的把自己的分支回退到那次提交，并且拉个分支:\n```shell\ngit checkout tony_branch        //先回到自己的分支  \ngit reflog                      //接着看看当前的commit id,例如:0bbbbb    \ngit reset --hard B1             //回到被覆盖的那次提交B1\ngit checkout -b tony_backup     //拉个分支，用于保存之前因为回退版本被覆盖掉的提交B1\ngit checkout tony_branch        //拉完分支，迅速回到自己分支\ngit reset --hard 0bbbbbb        //马上回到自己分支的最前端\n```\n通过上面一通敲，Tony暂时舒了一口气，还好，B1那次提交找回来了,这时tony_backup分支最新的一次提交就是B1，接着Tony要把自己的本地master分支和远程master分支保持一致：   \n```shell\ngit reset --hard origin/master\n```\n执行了上面这条命令后，Tony的master分支才真正的回滚了,也就是说你的回滚操作才能对Tony生效，这个时候Tony的本地maser是这样的：A1\n\n接着Tony要再次合并那个被丢掉的B1提交：\n```shell\ngit checkout master             //切换到master\ngit merge tony_backup           //再合并一次带有B1的分支到master\n```\n\n好了，Tony终于长舒一口气，这个时候他的master分支是下面这样的：A1 – B1\n\n终于把丢掉的B1给找回来了，接着他push一下，你一拉也能同步。   \n> 同理对于所有队友也要这样做，但是如果该队友没有提交被你丢掉，那么他拉完代码git pull之后，只需要强制用远程master覆盖掉本地master就可以了：\n\n```\ngit reset --hard origin/master\n```\n\n然而很不幸的是，现实中，我们经常遇到的都是猪一样的队友，他们一看到下面提示：\n\n```\n$ git status\nOn branch master\nYour branch is ahead of 'origin/master' by 2 commits.\n  (use \"git push\" to publish your local commits)\nnothing to commit, working directory clean\n```\n就习惯性的git push一下，或者他们直接用的SourceTree这样的图形界面工具，一看到界面上显示的是推送的提示就直接点了推送按钮，卧&槽，你辛辛苦苦回滚的版本就这样轻松的被你猪一样的队友给还原了，所以，只要有一个队友push之后，远程master又变成了：A1 – A2 – B1   \n\n这就是分布式，每个人都有副本。这个时候你连揍他的心都有了，怎么办呢？你不能指望每个人队友都是git高手，下面我们用另外一种方法来回退版本。   \n\n> 注意：博主是在虚拟机中实验的，用于模拟两个人的操作，如果你在一个机器上，用同一个账号在不同的目录下克隆两份代码来实验的话，回退远程分支后，另外一个人是不会看到落后远程分支两次提交的，所以请务必使用虚拟机来模拟A、B两个人的操作   \n\n### 公共远程分支版本回退的方法\n\n使用git reset回退公共远程分支的版本后，需要其他所有人手动用远程master分支覆盖本地master分支，显然，这不是优雅的回退方法，下面我们使用另个一个命令来回退版本：\n\n```shell\ngit revert HEAD                     //撤销最近一次提交\ngit revert HEAD~1                   //撤销上上次的提交，注意：数字从0开始\ngit revert 0ffaacc                  //撤销0ffaacc这次提交\n```\ngit revert 命令意思是撤销某次提交。它会产生一个新的提交，虽然代码回退了，但是版本依然是向前的，所以，当你用revert回退之后，所有人pull之后，他们的代码也自动的回退了。\n\n> 1.revert 是撤销一次提交，所以后面的commit id是你需要回滚到的版本的前一次提交   \n2.使用revert HEAD是撤销最近的一次提交，如果你最近一次提交是用revert命令产生的，那么你再执行一次，就相当于撤销了上次的撤销操作，换句话说，你连续执行两次revert HEAD命令，就跟没执行是一样的   \n3.使用revert HEAD~1 表示撤销最近2次提交，这个数字是从0开始的，如果你之前撤销过产生了commi id，那么也会计算在内的。   \n4.如果使用 revert 撤销的不是最近一次提交，那么一定会有代码冲突，需要你合并代码，合并代码只需要把当前的代码全部去掉，保留之前版本的代码就可以了.   \n\ngit revert 命令的好处就是不会丢掉别人的提交，即使你撤销后覆盖了别人的提交，他更新代码后，可以在本地用 reset 向前回滚，找到自己的代码，然后拉一下分支，再回来合并上去就可以找回被你覆盖的提交了。   \n\n### revert 合并代码，解决冲突\n\n使用revert命令，如果不是撤销的最近一次提交，那么一定会有冲突，如下所示：\n\n```\n<<<<<<< HEAD\n全部清空\n第一次提交\n=======\n全部清空\n>>>>>>> parent of c24cde7... 全部清空\n```\n\n解决冲突很简单，因为我们只想回到某次提交，因此需要把当前最新的代码去掉即可，也就是HEAD标记的代码：   \n\n```\n\n<<<<<<< HEAD\n全部清空\n第一次提交\n=======\n```\n把上面部分代码去掉就可以了，然后再提交一次代码就可以解决冲突了。\n\n### 继续扩展，简单粗暴的回滚方法\n\n看到这里也许你已经觉得学会了远程仓库版本回滚方法了，但是实践中总是会遇到很多不按套路来的问题，考虑下面一种情况：\n\n> 如果你们开发中，忽然发现前面很远的地方有一次错误的合并代码，把本来下一次才能发的功能的代码合并到了这一次来了，这个时候全体成员都觉得直接回滚比较快，因为他们都有备份，覆盖了无所谓，这个时候用reset的话对队友的要求比较高，用revert的话呢要大面积的解决冲突，也很麻烦呀，怎么办呢？\n\n这个时候，可以使用简单粗暴的办法，直接从那个错误的提交的前一次拉取一份代码放到其他目录，然后将master代码全部删除，把那份新代码方进去，然后提交，果然简单粗暴啊，虽然这种方法不入流，但是，实践中发现很好使啊，所以，实践是检验真理的唯一标准。遇到问题还是要灵活应对。   \n\n### 总结\n\n远程分支回滚的三种方法：\n\n> 1.自己的分支回滚直接用reset\n2.公共分支回滚用revert\n3.错的太远了直接将代码全部删掉，用正确代码替代\n\n转载： http://blog.csdn.net/fuchaosz/article/details/52170105","source":"_posts/jc-13.md","raw":"---\ntitle: 代码回退\ncategories: gc-end\ndate: 2019-07-22 14:23:42\ntags: git\n---\n\n## 问题\n```html\n  如果提交了一个错误的版本，怎么回退版本？\n  如果提交了一个错误的版本到远程分支，怎么回退远程分支版本？\n  如果提交了一个错误的版本到公共远程分支，又该怎么回退版本？\n```\n<!-- more -->\n### 回退本地分支版本\n这个比较简单，依次执行如下命令：   \n```shell\n// 先用下面命令找到要回退的版本的commit id\ngit reflog \n```\n```shell\n接着回退版本:\ngit reset --hard 回退版本的id\n```\n### 自己的远程分支版本回退的方法\n如果你的错误提交已经推送到自己的远程分支了，那么就需要回滚远程分支了。 \n首先要回退本地分支：\n```shell\ngit reflog\ngit reset --hard 回退版本的id \n```\n紧接着强制推送到远程分支：\n```shell\ngit push -f 回退强推的分支名称\n```\n> 本地分支回滚后，版本将落后远程分支，必须使用强制推送覆盖远程分支，否则无法推送到远程分支\n\n### 公共远程分支版本回退的问题\n看到这里，相信你已经能够回滚远程分支的版本了，那么你也许会问了，回滚公共远程分支和回滚自己的远程分支有区别吗？   \n答案是，当然有区别啦。   \n```shell\n一个显而易见的问题：如果你回退公共远程分支，把别人的提交给丢掉了怎么办？\n```\n下面来分析:   \n假如你的远程master分支情况是这样的:A1–A2–B1   \n\n其中A、B分别代表两个人，A1、A2、B1代表各自的提交。并且所有人的本地分支都已经更新到最新版本，和远程分支一致。   \n理想状态是你的队友一拉代码git pull，他们的master分支也回滚了，然而现实却是，你的队友会看到下面的提示：   \n```shell\n$ git status\nOn branch master\nYour branch is ahead of 'origin/master' by 2 commits.\n  (use \"git push\" to publish your local commits)\nnothing to commit, working directory clean\n```\n也就是说，你的队友的分支并没有主动回退，而是比远程分支超前了两次提交，因为远程分支回退了嘛   \n\n如果你的队友是git大神(Tony)，他会这么做：\n使用下面的命令来找出你回退版本后覆盖掉的他的提交，也就是B1那次提交：\n```shell\ngit reflog\n```\n然后冷静的把自己的分支回退到那次提交，并且拉个分支:\n```shell\ngit checkout tony_branch        //先回到自己的分支  \ngit reflog                      //接着看看当前的commit id,例如:0bbbbb    \ngit reset --hard B1             //回到被覆盖的那次提交B1\ngit checkout -b tony_backup     //拉个分支，用于保存之前因为回退版本被覆盖掉的提交B1\ngit checkout tony_branch        //拉完分支，迅速回到自己分支\ngit reset --hard 0bbbbbb        //马上回到自己分支的最前端\n```\n通过上面一通敲，Tony暂时舒了一口气，还好，B1那次提交找回来了,这时tony_backup分支最新的一次提交就是B1，接着Tony要把自己的本地master分支和远程master分支保持一致：   \n```shell\ngit reset --hard origin/master\n```\n执行了上面这条命令后，Tony的master分支才真正的回滚了,也就是说你的回滚操作才能对Tony生效，这个时候Tony的本地maser是这样的：A1\n\n接着Tony要再次合并那个被丢掉的B1提交：\n```shell\ngit checkout master             //切换到master\ngit merge tony_backup           //再合并一次带有B1的分支到master\n```\n\n好了，Tony终于长舒一口气，这个时候他的master分支是下面这样的：A1 – B1\n\n终于把丢掉的B1给找回来了，接着他push一下，你一拉也能同步。   \n> 同理对于所有队友也要这样做，但是如果该队友没有提交被你丢掉，那么他拉完代码git pull之后，只需要强制用远程master覆盖掉本地master就可以了：\n\n```\ngit reset --hard origin/master\n```\n\n然而很不幸的是，现实中，我们经常遇到的都是猪一样的队友，他们一看到下面提示：\n\n```\n$ git status\nOn branch master\nYour branch is ahead of 'origin/master' by 2 commits.\n  (use \"git push\" to publish your local commits)\nnothing to commit, working directory clean\n```\n就习惯性的git push一下，或者他们直接用的SourceTree这样的图形界面工具，一看到界面上显示的是推送的提示就直接点了推送按钮，卧&槽，你辛辛苦苦回滚的版本就这样轻松的被你猪一样的队友给还原了，所以，只要有一个队友push之后，远程master又变成了：A1 – A2 – B1   \n\n这就是分布式，每个人都有副本。这个时候你连揍他的心都有了，怎么办呢？你不能指望每个人队友都是git高手，下面我们用另外一种方法来回退版本。   \n\n> 注意：博主是在虚拟机中实验的，用于模拟两个人的操作，如果你在一个机器上，用同一个账号在不同的目录下克隆两份代码来实验的话，回退远程分支后，另外一个人是不会看到落后远程分支两次提交的，所以请务必使用虚拟机来模拟A、B两个人的操作   \n\n### 公共远程分支版本回退的方法\n\n使用git reset回退公共远程分支的版本后，需要其他所有人手动用远程master分支覆盖本地master分支，显然，这不是优雅的回退方法，下面我们使用另个一个命令来回退版本：\n\n```shell\ngit revert HEAD                     //撤销最近一次提交\ngit revert HEAD~1                   //撤销上上次的提交，注意：数字从0开始\ngit revert 0ffaacc                  //撤销0ffaacc这次提交\n```\ngit revert 命令意思是撤销某次提交。它会产生一个新的提交，虽然代码回退了，但是版本依然是向前的，所以，当你用revert回退之后，所有人pull之后，他们的代码也自动的回退了。\n\n> 1.revert 是撤销一次提交，所以后面的commit id是你需要回滚到的版本的前一次提交   \n2.使用revert HEAD是撤销最近的一次提交，如果你最近一次提交是用revert命令产生的，那么你再执行一次，就相当于撤销了上次的撤销操作，换句话说，你连续执行两次revert HEAD命令，就跟没执行是一样的   \n3.使用revert HEAD~1 表示撤销最近2次提交，这个数字是从0开始的，如果你之前撤销过产生了commi id，那么也会计算在内的。   \n4.如果使用 revert 撤销的不是最近一次提交，那么一定会有代码冲突，需要你合并代码，合并代码只需要把当前的代码全部去掉，保留之前版本的代码就可以了.   \n\ngit revert 命令的好处就是不会丢掉别人的提交，即使你撤销后覆盖了别人的提交，他更新代码后，可以在本地用 reset 向前回滚，找到自己的代码，然后拉一下分支，再回来合并上去就可以找回被你覆盖的提交了。   \n\n### revert 合并代码，解决冲突\n\n使用revert命令，如果不是撤销的最近一次提交，那么一定会有冲突，如下所示：\n\n```\n<<<<<<< HEAD\n全部清空\n第一次提交\n=======\n全部清空\n>>>>>>> parent of c24cde7... 全部清空\n```\n\n解决冲突很简单，因为我们只想回到某次提交，因此需要把当前最新的代码去掉即可，也就是HEAD标记的代码：   \n\n```\n\n<<<<<<< HEAD\n全部清空\n第一次提交\n=======\n```\n把上面部分代码去掉就可以了，然后再提交一次代码就可以解决冲突了。\n\n### 继续扩展，简单粗暴的回滚方法\n\n看到这里也许你已经觉得学会了远程仓库版本回滚方法了，但是实践中总是会遇到很多不按套路来的问题，考虑下面一种情况：\n\n> 如果你们开发中，忽然发现前面很远的地方有一次错误的合并代码，把本来下一次才能发的功能的代码合并到了这一次来了，这个时候全体成员都觉得直接回滚比较快，因为他们都有备份，覆盖了无所谓，这个时候用reset的话对队友的要求比较高，用revert的话呢要大面积的解决冲突，也很麻烦呀，怎么办呢？\n\n这个时候，可以使用简单粗暴的办法，直接从那个错误的提交的前一次拉取一份代码放到其他目录，然后将master代码全部删除，把那份新代码方进去，然后提交，果然简单粗暴啊，虽然这种方法不入流，但是，实践中发现很好使啊，所以，实践是检验真理的唯一标准。遇到问题还是要灵活应对。   \n\n### 总结\n\n远程分支回滚的三种方法：\n\n> 1.自己的分支回滚直接用reset\n2.公共分支回滚用revert\n3.错的太远了直接将代码全部删掉，用正确代码替代\n\n转载： http://blog.csdn.net/fuchaosz/article/details/52170105","slug":"jc-13","published":1,"updated":"2020-07-01T09:12:26.384Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdr00y5t001ae7zcq290z4mn","content":"<h2 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">如果提交了一个错误的版本，怎么回退版本？</span><br><span class=\"line\">如果提交了一个错误的版本到远程分支，怎么回退远程分支版本？</span><br><span class=\"line\">如果提交了一个错误的版本到公共远程分支，又该怎么回退版本？</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h3 id=\"回退本地分支版本\"><a href=\"#回退本地分支版本\" class=\"headerlink\" title=\"回退本地分支版本\"></a>回退本地分支版本</h3><p>这个比较简单，依次执行如下命令：<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 先用下面命令找到要回退的版本的commit id</span><br><span class=\"line\">git reflog</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">接着回退版本:</span><br><span class=\"line\">git reset --hard 回退版本的id</span><br></pre></td></tr></table></figure>\n<h3 id=\"自己的远程分支版本回退的方法\"><a href=\"#自己的远程分支版本回退的方法\" class=\"headerlink\" title=\"自己的远程分支版本回退的方法\"></a>自己的远程分支版本回退的方法</h3><p>如果你的错误提交已经推送到自己的远程分支了，那么就需要回滚远程分支了。<br>首先要回退本地分支：<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git reflog</span><br><span class=\"line\">git reset --hard 回退版本的id</span><br></pre></td></tr></table></figure></p>\n<p>紧接着强制推送到远程分支：<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push -f 回退强推的分支名称</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>本地分支回滚后，版本将落后远程分支，必须使用强制推送覆盖远程分支，否则无法推送到远程分支</p>\n</blockquote>\n<h3 id=\"公共远程分支版本回退的问题\"><a href=\"#公共远程分支版本回退的问题\" class=\"headerlink\" title=\"公共远程分支版本回退的问题\"></a>公共远程分支版本回退的问题</h3><p>看到这里，相信你已经能够回滚远程分支的版本了，那么你也许会问了，回滚公共远程分支和回滚自己的远程分支有区别吗？<br>答案是，当然有区别啦。<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">一个显而易见的问题：如果你回退公共远程分支，把别人的提交给丢掉了怎么办？</span><br></pre></td></tr></table></figure></p>\n<p>下面来分析:<br>假如你的远程master分支情况是这样的:A1–A2–B1   </p>\n<p>其中A、B分别代表两个人，A1、A2、B1代表各自的提交。并且所有人的本地分支都已经更新到最新版本，和远程分支一致。<br>理想状态是你的队友一拉代码git pull，他们的master分支也回滚了，然而现实却是，你的队友会看到下面的提示：<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> git status</span><br><span class=\"line\">On branch master</span><br><span class=\"line\">Your branch is ahead of 'origin/master' by 2 commits.</span><br><span class=\"line\">  (use \"git push\" to publish your local commits)</span><br><span class=\"line\">nothing to commit, working directory clean</span><br></pre></td></tr></table></figure></p>\n<p>也就是说，你的队友的分支并没有主动回退，而是比远程分支超前了两次提交，因为远程分支回退了嘛   </p>\n<p>如果你的队友是git大神(Tony)，他会这么做：<br>使用下面的命令来找出你回退版本后覆盖掉的他的提交，也就是B1那次提交：<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git reflog</span><br></pre></td></tr></table></figure></p>\n<p>然后冷静的把自己的分支回退到那次提交，并且拉个分支:<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout tony_branch        //先回到自己的分支  </span><br><span class=\"line\">git reflog                      //接着看看当前的commit id,例如:0bbbbb    </span><br><span class=\"line\">git reset --hard B1             //回到被覆盖的那次提交B1</span><br><span class=\"line\">git checkout -b tony_backup     //拉个分支，用于保存之前因为回退版本被覆盖掉的提交B1</span><br><span class=\"line\">git checkout tony_branch        //拉完分支，迅速回到自己分支</span><br><span class=\"line\">git reset --hard 0bbbbbb        //马上回到自己分支的最前端</span><br></pre></td></tr></table></figure></p>\n<p>通过上面一通敲，Tony暂时舒了一口气，还好，B1那次提交找回来了,这时tony_backup分支最新的一次提交就是B1，接着Tony要把自己的本地master分支和远程master分支保持一致：<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git reset --hard origin/master</span><br></pre></td></tr></table></figure></p>\n<p>执行了上面这条命令后，Tony的master分支才真正的回滚了,也就是说你的回滚操作才能对Tony生效，这个时候Tony的本地maser是这样的：A1</p>\n<p>接着Tony要再次合并那个被丢掉的B1提交：<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout master             //切换到master</span><br><span class=\"line\">git merge tony_backup           //再合并一次带有B1的分支到master</span><br></pre></td></tr></table></figure></p>\n<p>好了，Tony终于长舒一口气，这个时候他的master分支是下面这样的：A1 – B1</p>\n<p>终于把丢掉的B1给找回来了，接着他push一下，你一拉也能同步。   </p>\n<blockquote>\n<p>同理对于所有队友也要这样做，但是如果该队友没有提交被你丢掉，那么他拉完代码git pull之后，只需要强制用远程master覆盖掉本地master就可以了：</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git reset --hard origin/master</span><br></pre></td></tr></table></figure>\n<p>然而很不幸的是，现实中，我们经常遇到的都是猪一样的队友，他们一看到下面提示：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git status</span><br><span class=\"line\">On branch master</span><br><span class=\"line\">Your branch is ahead of &apos;origin/master&apos; by 2 commits.</span><br><span class=\"line\">  (use &quot;git push&quot; to publish your local commits)</span><br><span class=\"line\">nothing to commit, working directory clean</span><br></pre></td></tr></table></figure>\n<p>就习惯性的git push一下，或者他们直接用的SourceTree这样的图形界面工具，一看到界面上显示的是推送的提示就直接点了推送按钮，卧&amp;槽，你辛辛苦苦回滚的版本就这样轻松的被你猪一样的队友给还原了，所以，只要有一个队友push之后，远程master又变成了：A1 – A2 – B1   </p>\n<p>这就是分布式，每个人都有副本。这个时候你连揍他的心都有了，怎么办呢？你不能指望每个人队友都是git高手，下面我们用另外一种方法来回退版本。   </p>\n<blockquote>\n<p>注意：博主是在虚拟机中实验的，用于模拟两个人的操作，如果你在一个机器上，用同一个账号在不同的目录下克隆两份代码来实验的话，回退远程分支后，另外一个人是不会看到落后远程分支两次提交的，所以请务必使用虚拟机来模拟A、B两个人的操作   </p>\n</blockquote>\n<h3 id=\"公共远程分支版本回退的方法\"><a href=\"#公共远程分支版本回退的方法\" class=\"headerlink\" title=\"公共远程分支版本回退的方法\"></a>公共远程分支版本回退的方法</h3><p>使用git reset回退公共远程分支的版本后，需要其他所有人手动用远程master分支覆盖本地master分支，显然，这不是优雅的回退方法，下面我们使用另个一个命令来回退版本：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git revert HEAD                     //撤销最近一次提交</span><br><span class=\"line\">git revert HEAD~1                   //撤销上上次的提交，注意：数字从0开始</span><br><span class=\"line\">git revert 0ffaacc                  //撤销0ffaacc这次提交</span><br></pre></td></tr></table></figure>\n<p>git revert 命令意思是撤销某次提交。它会产生一个新的提交，虽然代码回退了，但是版本依然是向前的，所以，当你用revert回退之后，所有人pull之后，他们的代码也自动的回退了。</p>\n<blockquote>\n<p>1.revert 是撤销一次提交，所以后面的commit id是你需要回滚到的版本的前一次提交<br>2.使用revert HEAD是撤销最近的一次提交，如果你最近一次提交是用revert命令产生的，那么你再执行一次，就相当于撤销了上次的撤销操作，换句话说，你连续执行两次revert HEAD命令，就跟没执行是一样的<br>3.使用revert HEAD~1 表示撤销最近2次提交，这个数字是从0开始的，如果你之前撤销过产生了commi id，那么也会计算在内的。<br>4.如果使用 revert 撤销的不是最近一次提交，那么一定会有代码冲突，需要你合并代码，合并代码只需要把当前的代码全部去掉，保留之前版本的代码就可以了.   </p>\n</blockquote>\n<p>git revert 命令的好处就是不会丢掉别人的提交，即使你撤销后覆盖了别人的提交，他更新代码后，可以在本地用 reset 向前回滚，找到自己的代码，然后拉一下分支，再回来合并上去就可以找回被你覆盖的提交了。   </p>\n<h3 id=\"revert-合并代码，解决冲突\"><a href=\"#revert-合并代码，解决冲突\" class=\"headerlink\" title=\"revert 合并代码，解决冲突\"></a>revert 合并代码，解决冲突</h3><p>使用revert命令，如果不是撤销的最近一次提交，那么一定会有冲突，如下所示：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD</span><br><span class=\"line\">全部清空</span><br><span class=\"line\">第一次提交</span><br><span class=\"line\">=======</span><br><span class=\"line\">全部清空</span><br><span class=\"line\">&gt;&gt;&gt;&gt;&gt;&gt;&gt; parent of c24cde7... 全部清空</span><br></pre></td></tr></table></figure>\n<p>解决冲突很简单，因为我们只想回到某次提交，因此需要把当前最新的代码去掉即可，也就是HEAD标记的代码：   </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD</span><br><span class=\"line\">全部清空</span><br><span class=\"line\">第一次提交</span><br><span class=\"line\">=======</span><br></pre></td></tr></table></figure>\n<p>把上面部分代码去掉就可以了，然后再提交一次代码就可以解决冲突了。</p>\n<h3 id=\"继续扩展，简单粗暴的回滚方法\"><a href=\"#继续扩展，简单粗暴的回滚方法\" class=\"headerlink\" title=\"继续扩展，简单粗暴的回滚方法\"></a>继续扩展，简单粗暴的回滚方法</h3><p>看到这里也许你已经觉得学会了远程仓库版本回滚方法了，但是实践中总是会遇到很多不按套路来的问题，考虑下面一种情况：</p>\n<blockquote>\n<p>如果你们开发中，忽然发现前面很远的地方有一次错误的合并代码，把本来下一次才能发的功能的代码合并到了这一次来了，这个时候全体成员都觉得直接回滚比较快，因为他们都有备份，覆盖了无所谓，这个时候用reset的话对队友的要求比较高，用revert的话呢要大面积的解决冲突，也很麻烦呀，怎么办呢？</p>\n</blockquote>\n<p>这个时候，可以使用简单粗暴的办法，直接从那个错误的提交的前一次拉取一份代码放到其他目录，然后将master代码全部删除，把那份新代码方进去，然后提交，果然简单粗暴啊，虽然这种方法不入流，但是，实践中发现很好使啊，所以，实践是检验真理的唯一标准。遇到问题还是要灵活应对。   </p>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>远程分支回滚的三种方法：</p>\n<blockquote>\n<p>1.自己的分支回滚直接用reset<br>2.公共分支回滚用revert<br>3.错的太远了直接将代码全部删掉，用正确代码替代</p>\n</blockquote>\n<p>转载： <a href=\"http://blog.csdn.net/fuchaosz/article/details/52170105\" target=\"_blank\" rel=\"noopener\">http://blog.csdn.net/fuchaosz/article/details/52170105</a></p>\n","site":{"data":{}},"excerpt":"<h2 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">如果提交了一个错误的版本，怎么回退版本？</span><br><span class=\"line\">如果提交了一个错误的版本到远程分支，怎么回退远程分支版本？</span><br><span class=\"line\">如果提交了一个错误的版本到公共远程分支，又该怎么回退版本？</span><br></pre></td></tr></table></figure>","more":"<h3 id=\"回退本地分支版本\"><a href=\"#回退本地分支版本\" class=\"headerlink\" title=\"回退本地分支版本\"></a>回退本地分支版本</h3><p>这个比较简单，依次执行如下命令：<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 先用下面命令找到要回退的版本的commit id</span><br><span class=\"line\">git reflog</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">接着回退版本:</span><br><span class=\"line\">git reset --hard 回退版本的id</span><br></pre></td></tr></table></figure>\n<h3 id=\"自己的远程分支版本回退的方法\"><a href=\"#自己的远程分支版本回退的方法\" class=\"headerlink\" title=\"自己的远程分支版本回退的方法\"></a>自己的远程分支版本回退的方法</h3><p>如果你的错误提交已经推送到自己的远程分支了，那么就需要回滚远程分支了。<br>首先要回退本地分支：<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git reflog</span><br><span class=\"line\">git reset --hard 回退版本的id</span><br></pre></td></tr></table></figure></p>\n<p>紧接着强制推送到远程分支：<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push -f 回退强推的分支名称</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>本地分支回滚后，版本将落后远程分支，必须使用强制推送覆盖远程分支，否则无法推送到远程分支</p>\n</blockquote>\n<h3 id=\"公共远程分支版本回退的问题\"><a href=\"#公共远程分支版本回退的问题\" class=\"headerlink\" title=\"公共远程分支版本回退的问题\"></a>公共远程分支版本回退的问题</h3><p>看到这里，相信你已经能够回滚远程分支的版本了，那么你也许会问了，回滚公共远程分支和回滚自己的远程分支有区别吗？<br>答案是，当然有区别啦。<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">一个显而易见的问题：如果你回退公共远程分支，把别人的提交给丢掉了怎么办？</span><br></pre></td></tr></table></figure></p>\n<p>下面来分析:<br>假如你的远程master分支情况是这样的:A1–A2–B1   </p>\n<p>其中A、B分别代表两个人，A1、A2、B1代表各自的提交。并且所有人的本地分支都已经更新到最新版本，和远程分支一致。<br>理想状态是你的队友一拉代码git pull，他们的master分支也回滚了，然而现实却是，你的队友会看到下面的提示：<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> git status</span><br><span class=\"line\">On branch master</span><br><span class=\"line\">Your branch is ahead of 'origin/master' by 2 commits.</span><br><span class=\"line\">  (use \"git push\" to publish your local commits)</span><br><span class=\"line\">nothing to commit, working directory clean</span><br></pre></td></tr></table></figure></p>\n<p>也就是说，你的队友的分支并没有主动回退，而是比远程分支超前了两次提交，因为远程分支回退了嘛   </p>\n<p>如果你的队友是git大神(Tony)，他会这么做：<br>使用下面的命令来找出你回退版本后覆盖掉的他的提交，也就是B1那次提交：<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git reflog</span><br></pre></td></tr></table></figure></p>\n<p>然后冷静的把自己的分支回退到那次提交，并且拉个分支:<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout tony_branch        //先回到自己的分支  </span><br><span class=\"line\">git reflog                      //接着看看当前的commit id,例如:0bbbbb    </span><br><span class=\"line\">git reset --hard B1             //回到被覆盖的那次提交B1</span><br><span class=\"line\">git checkout -b tony_backup     //拉个分支，用于保存之前因为回退版本被覆盖掉的提交B1</span><br><span class=\"line\">git checkout tony_branch        //拉完分支，迅速回到自己分支</span><br><span class=\"line\">git reset --hard 0bbbbbb        //马上回到自己分支的最前端</span><br></pre></td></tr></table></figure></p>\n<p>通过上面一通敲，Tony暂时舒了一口气，还好，B1那次提交找回来了,这时tony_backup分支最新的一次提交就是B1，接着Tony要把自己的本地master分支和远程master分支保持一致：<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git reset --hard origin/master</span><br></pre></td></tr></table></figure></p>\n<p>执行了上面这条命令后，Tony的master分支才真正的回滚了,也就是说你的回滚操作才能对Tony生效，这个时候Tony的本地maser是这样的：A1</p>\n<p>接着Tony要再次合并那个被丢掉的B1提交：<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout master             //切换到master</span><br><span class=\"line\">git merge tony_backup           //再合并一次带有B1的分支到master</span><br></pre></td></tr></table></figure></p>\n<p>好了，Tony终于长舒一口气，这个时候他的master分支是下面这样的：A1 – B1</p>\n<p>终于把丢掉的B1给找回来了，接着他push一下，你一拉也能同步。   </p>\n<blockquote>\n<p>同理对于所有队友也要这样做，但是如果该队友没有提交被你丢掉，那么他拉完代码git pull之后，只需要强制用远程master覆盖掉本地master就可以了：</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git reset --hard origin/master</span><br></pre></td></tr></table></figure>\n<p>然而很不幸的是，现实中，我们经常遇到的都是猪一样的队友，他们一看到下面提示：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git status</span><br><span class=\"line\">On branch master</span><br><span class=\"line\">Your branch is ahead of &apos;origin/master&apos; by 2 commits.</span><br><span class=\"line\">  (use &quot;git push&quot; to publish your local commits)</span><br><span class=\"line\">nothing to commit, working directory clean</span><br></pre></td></tr></table></figure>\n<p>就习惯性的git push一下，或者他们直接用的SourceTree这样的图形界面工具，一看到界面上显示的是推送的提示就直接点了推送按钮，卧&amp;槽，你辛辛苦苦回滚的版本就这样轻松的被你猪一样的队友给还原了，所以，只要有一个队友push之后，远程master又变成了：A1 – A2 – B1   </p>\n<p>这就是分布式，每个人都有副本。这个时候你连揍他的心都有了，怎么办呢？你不能指望每个人队友都是git高手，下面我们用另外一种方法来回退版本。   </p>\n<blockquote>\n<p>注意：博主是在虚拟机中实验的，用于模拟两个人的操作，如果你在一个机器上，用同一个账号在不同的目录下克隆两份代码来实验的话，回退远程分支后，另外一个人是不会看到落后远程分支两次提交的，所以请务必使用虚拟机来模拟A、B两个人的操作   </p>\n</blockquote>\n<h3 id=\"公共远程分支版本回退的方法\"><a href=\"#公共远程分支版本回退的方法\" class=\"headerlink\" title=\"公共远程分支版本回退的方法\"></a>公共远程分支版本回退的方法</h3><p>使用git reset回退公共远程分支的版本后，需要其他所有人手动用远程master分支覆盖本地master分支，显然，这不是优雅的回退方法，下面我们使用另个一个命令来回退版本：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git revert HEAD                     //撤销最近一次提交</span><br><span class=\"line\">git revert HEAD~1                   //撤销上上次的提交，注意：数字从0开始</span><br><span class=\"line\">git revert 0ffaacc                  //撤销0ffaacc这次提交</span><br></pre></td></tr></table></figure>\n<p>git revert 命令意思是撤销某次提交。它会产生一个新的提交，虽然代码回退了，但是版本依然是向前的，所以，当你用revert回退之后，所有人pull之后，他们的代码也自动的回退了。</p>\n<blockquote>\n<p>1.revert 是撤销一次提交，所以后面的commit id是你需要回滚到的版本的前一次提交<br>2.使用revert HEAD是撤销最近的一次提交，如果你最近一次提交是用revert命令产生的，那么你再执行一次，就相当于撤销了上次的撤销操作，换句话说，你连续执行两次revert HEAD命令，就跟没执行是一样的<br>3.使用revert HEAD~1 表示撤销最近2次提交，这个数字是从0开始的，如果你之前撤销过产生了commi id，那么也会计算在内的。<br>4.如果使用 revert 撤销的不是最近一次提交，那么一定会有代码冲突，需要你合并代码，合并代码只需要把当前的代码全部去掉，保留之前版本的代码就可以了.   </p>\n</blockquote>\n<p>git revert 命令的好处就是不会丢掉别人的提交，即使你撤销后覆盖了别人的提交，他更新代码后，可以在本地用 reset 向前回滚，找到自己的代码，然后拉一下分支，再回来合并上去就可以找回被你覆盖的提交了。   </p>\n<h3 id=\"revert-合并代码，解决冲突\"><a href=\"#revert-合并代码，解决冲突\" class=\"headerlink\" title=\"revert 合并代码，解决冲突\"></a>revert 合并代码，解决冲突</h3><p>使用revert命令，如果不是撤销的最近一次提交，那么一定会有冲突，如下所示：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD</span><br><span class=\"line\">全部清空</span><br><span class=\"line\">第一次提交</span><br><span class=\"line\">=======</span><br><span class=\"line\">全部清空</span><br><span class=\"line\">&gt;&gt;&gt;&gt;&gt;&gt;&gt; parent of c24cde7... 全部清空</span><br></pre></td></tr></table></figure>\n<p>解决冲突很简单，因为我们只想回到某次提交，因此需要把当前最新的代码去掉即可，也就是HEAD标记的代码：   </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD</span><br><span class=\"line\">全部清空</span><br><span class=\"line\">第一次提交</span><br><span class=\"line\">=======</span><br></pre></td></tr></table></figure>\n<p>把上面部分代码去掉就可以了，然后再提交一次代码就可以解决冲突了。</p>\n<h3 id=\"继续扩展，简单粗暴的回滚方法\"><a href=\"#继续扩展，简单粗暴的回滚方法\" class=\"headerlink\" title=\"继续扩展，简单粗暴的回滚方法\"></a>继续扩展，简单粗暴的回滚方法</h3><p>看到这里也许你已经觉得学会了远程仓库版本回滚方法了，但是实践中总是会遇到很多不按套路来的问题，考虑下面一种情况：</p>\n<blockquote>\n<p>如果你们开发中，忽然发现前面很远的地方有一次错误的合并代码，把本来下一次才能发的功能的代码合并到了这一次来了，这个时候全体成员都觉得直接回滚比较快，因为他们都有备份，覆盖了无所谓，这个时候用reset的话对队友的要求比较高，用revert的话呢要大面积的解决冲突，也很麻烦呀，怎么办呢？</p>\n</blockquote>\n<p>这个时候，可以使用简单粗暴的办法，直接从那个错误的提交的前一次拉取一份代码放到其他目录，然后将master代码全部删除，把那份新代码方进去，然后提交，果然简单粗暴啊，虽然这种方法不入流，但是，实践中发现很好使啊，所以，实践是检验真理的唯一标准。遇到问题还是要灵活应对。   </p>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>远程分支回滚的三种方法：</p>\n<blockquote>\n<p>1.自己的分支回滚直接用reset<br>2.公共分支回滚用revert<br>3.错的太远了直接将代码全部删掉，用正确代码替代</p>\n</blockquote>\n<p>转载： <a href=\"http://blog.csdn.net/fuchaosz/article/details/52170105\" target=\"_blank\" rel=\"noopener\">http://blog.csdn.net/fuchaosz/article/details/52170105</a></p>"},{"title":"npm包模块发布","date":"2018-06-26T06:44:11.000Z","_content":"\n现在前端开发框架特别流行，vue,react,angular，在开发中，npm包是必不可少的，这就是相当于传统开发中的插件，那么如何发布自己的包？\n\nnpm i 包名称 ，就能下载一个包插件，那发布的流程是什么呢？\n<!-- more -->\n##### 必备的环境\n\n>node(npm)环境是必须的;nrm是用来管理npm镜像的\n\n```javascript\nnpm install -g nrm :安装nrm\nnrm ls :npm镜像列表\nnrm use 镜像名称 :切换镜像\n```\n\n##### 发布包\n\n  1.npm init 一直回车，新建package.json文件\n  2.注册npm账号：https://www.npmjs.com/\n  3.npm login; 输入账号密码邮箱\n  4.npm publish\n\n>登陆状态中保证了，特别注意官网注册成功后要在邮箱中先确认，不然之后提交包的时候会报错\n\n提交成功会提示，然后就可以在npm官网个人中心查看，我测试的时候会有点延迟，在使用的时候要新建项目在npm install 你的包名称，想想也是，谁会在自己这个包中在下载，我觉下了好几次，报错，仔细一看原来是包的不能在此目录下面下载此包文件.\n\n[github:https://github.com/xiaosongread/mgd-localstorage](https://github.com/xiaosongread/mgd-localstorage)\n\n\n\n\n","source":"_posts/jc-7.md","raw":"---\ntitle: npm包模块发布\ncategories: gc-end\ndate: 2018-06-26 14:44:11\ntags: npm webpack es6\n---\n\n现在前端开发框架特别流行，vue,react,angular，在开发中，npm包是必不可少的，这就是相当于传统开发中的插件，那么如何发布自己的包？\n\nnpm i 包名称 ，就能下载一个包插件，那发布的流程是什么呢？\n<!-- more -->\n##### 必备的环境\n\n>node(npm)环境是必须的;nrm是用来管理npm镜像的\n\n```javascript\nnpm install -g nrm :安装nrm\nnrm ls :npm镜像列表\nnrm use 镜像名称 :切换镜像\n```\n\n##### 发布包\n\n  1.npm init 一直回车，新建package.json文件\n  2.注册npm账号：https://www.npmjs.com/\n  3.npm login; 输入账号密码邮箱\n  4.npm publish\n\n>登陆状态中保证了，特别注意官网注册成功后要在邮箱中先确认，不然之后提交包的时候会报错\n\n提交成功会提示，然后就可以在npm官网个人中心查看，我测试的时候会有点延迟，在使用的时候要新建项目在npm install 你的包名称，想想也是，谁会在自己这个包中在下载，我觉下了好几次，报错，仔细一看原来是包的不能在此目录下面下载此包文件.\n\n[github:https://github.com/xiaosongread/mgd-localstorage](https://github.com/xiaosongread/mgd-localstorage)\n\n\n\n\n","slug":"jc-7","published":1,"updated":"2020-07-01T09:12:26.385Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdr00y5u001de7zcis6do270","content":"<p>现在前端开发框架特别流行，vue,react,angular，在开发中，npm包是必不可少的，这就是相当于传统开发中的插件，那么如何发布自己的包？</p>\n<p>npm i 包名称 ，就能下载一个包插件，那发布的流程是什么呢？<br><a id=\"more\"></a></p>\n<h5 id=\"必备的环境\"><a href=\"#必备的环境\" class=\"headerlink\" title=\"必备的环境\"></a>必备的环境</h5><blockquote>\n<p>node(npm)环境是必须的;nrm是用来管理npm镜像的</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g nrm :安装nrm</span><br><span class=\"line\">nrm ls :npm镜像列表</span><br><span class=\"line\">nrm use 镜像名称 :切换镜像</span><br></pre></td></tr></table></figure>\n<h5 id=\"发布包\"><a href=\"#发布包\" class=\"headerlink\" title=\"发布包\"></a>发布包</h5><p>  1.npm init 一直回车，新建package.json文件<br>  2.注册npm账号：<a href=\"https://www.npmjs.com/\" target=\"_blank\" rel=\"noopener\">https://www.npmjs.com/</a><br>  3.npm login; 输入账号密码邮箱<br>  4.npm publish</p>\n<blockquote>\n<p>登陆状态中保证了，特别注意官网注册成功后要在邮箱中先确认，不然之后提交包的时候会报错</p>\n</blockquote>\n<p>提交成功会提示，然后就可以在npm官网个人中心查看，我测试的时候会有点延迟，在使用的时候要新建项目在npm install 你的包名称，想想也是，谁会在自己这个包中在下载，我觉下了好几次，报错，仔细一看原来是包的不能在此目录下面下载此包文件.</p>\n<p><a href=\"https://github.com/xiaosongread/mgd-localstorage\" target=\"_blank\" rel=\"noopener\">github:https://github.com/xiaosongread/mgd-localstorage</a></p>\n","site":{"data":{}},"excerpt":"<p>现在前端开发框架特别流行，vue,react,angular，在开发中，npm包是必不可少的，这就是相当于传统开发中的插件，那么如何发布自己的包？</p>\n<p>npm i 包名称 ，就能下载一个包插件，那发布的流程是什么呢？<br>","more":"</p>\n<h5 id=\"必备的环境\"><a href=\"#必备的环境\" class=\"headerlink\" title=\"必备的环境\"></a>必备的环境</h5><blockquote>\n<p>node(npm)环境是必须的;nrm是用来管理npm镜像的</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g nrm :安装nrm</span><br><span class=\"line\">nrm ls :npm镜像列表</span><br><span class=\"line\">nrm use 镜像名称 :切换镜像</span><br></pre></td></tr></table></figure>\n<h5 id=\"发布包\"><a href=\"#发布包\" class=\"headerlink\" title=\"发布包\"></a>发布包</h5><p>  1.npm init 一直回车，新建package.json文件<br>  2.注册npm账号：<a href=\"https://www.npmjs.com/\" target=\"_blank\" rel=\"noopener\">https://www.npmjs.com/</a><br>  3.npm login; 输入账号密码邮箱<br>  4.npm publish</p>\n<blockquote>\n<p>登陆状态中保证了，特别注意官网注册成功后要在邮箱中先确认，不然之后提交包的时候会报错</p>\n</blockquote>\n<p>提交成功会提示，然后就可以在npm官网个人中心查看，我测试的时候会有点延迟，在使用的时候要新建项目在npm install 你的包名称，想想也是，谁会在自己这个包中在下载，我觉下了好几次，报错，仔细一看原来是包的不能在此目录下面下载此包文件.</p>\n<p><a href=\"https://github.com/xiaosongread/mgd-localstorage\" target=\"_blank\" rel=\"noopener\">github:https://github.com/xiaosongread/mgd-localstorage</a></p>"},{"title":"文本溢出显示... 和文本的断点换行","date":"2017-12-14T03:32:00.000Z","_content":"\n文本的显示在前端算是比较X疼的一件事，如何处理断行和在手机端的显示内容呢？\n\n### 文本换行 断点\n\n```css\nword-break:  属性规定自动换行的处理方法\n         normal     使用浏览器的默认换行方式\n         break-all  允许在单词内断行\n                    在使用英文多的时候能够整齐换行\n         keep-all   只能在半角空格或连字符处换行\n\nword-wrap：  允许长单词或 URL 地址换行到下一行\n         normal      只在允许的断点处处理（按浏览器默认的处理方式）\n         break-word  在长单词或者url内部进行换行\n```\n\n<!-- more -->\n\n#### 自己的看法\n```css\nword-wrap： 决定句尾放不下单词时，单词是否换行\nword-break: 决定单词内该怎么换行\n```\n\n#### 单行显示省略号\n\n```css\noverflow: hidden;\ntext-overflow: ellipsis;\nwhite-space: nowrap;\n```\n\n#### 多行显示省略号\n\n```css\ndisplay: -webkit-box;\n-webkit-box-orient: vertical;\n-webkit-line-clamp: 3;\noverflow: hidden;\n```","source":"_posts/jc-5.md","raw":"---\ntitle: 文本溢出显示... 和文本的断点换行\ncategories: css-end\ndate: 2017-12-14 11:32:00\ntags: css\n---\n\n文本的显示在前端算是比较X疼的一件事，如何处理断行和在手机端的显示内容呢？\n\n### 文本换行 断点\n\n```css\nword-break:  属性规定自动换行的处理方法\n         normal     使用浏览器的默认换行方式\n         break-all  允许在单词内断行\n                    在使用英文多的时候能够整齐换行\n         keep-all   只能在半角空格或连字符处换行\n\nword-wrap：  允许长单词或 URL 地址换行到下一行\n         normal      只在允许的断点处处理（按浏览器默认的处理方式）\n         break-word  在长单词或者url内部进行换行\n```\n\n<!-- more -->\n\n#### 自己的看法\n```css\nword-wrap： 决定句尾放不下单词时，单词是否换行\nword-break: 决定单词内该怎么换行\n```\n\n#### 单行显示省略号\n\n```css\noverflow: hidden;\ntext-overflow: ellipsis;\nwhite-space: nowrap;\n```\n\n#### 多行显示省略号\n\n```css\ndisplay: -webkit-box;\n-webkit-box-orient: vertical;\n-webkit-line-clamp: 3;\noverflow: hidden;\n```","slug":"jc-5","published":1,"updated":"2020-07-01T09:12:26.385Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdr00y5v001ge7zcolj1olsi","content":"<p>文本的显示在前端算是比较X疼的一件事，如何处理断行和在手机端的显示内容呢？</p>\n<h3 id=\"文本换行-断点\"><a href=\"#文本换行-断点\" class=\"headerlink\" title=\"文本换行 断点\"></a>文本换行 断点</h3><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">word-break</span>:  属性规定自动换行的处理方法</span><br><span class=\"line\">         <span class=\"selector-tag\">normal</span>     使用浏览器的默认换行方式</span><br><span class=\"line\">         <span class=\"selector-tag\">break-all</span>  允许在单词内断行</span><br><span class=\"line\">                    在使用英文多的时候能够整齐换行</span><br><span class=\"line\">         <span class=\"selector-tag\">keep-all</span>   只能在半角空格或连字符处换行</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">word-wrap</span>：  允许长单词或 <span class=\"selector-tag\">URL</span> 地址换行到下一行</span><br><span class=\"line\">         <span class=\"selector-tag\">normal</span>      只在允许的断点处处理（按浏览器默认的处理方式）</span><br><span class=\"line\">         <span class=\"selector-tag\">break-word</span>  在长单词或者<span class=\"selector-tag\">url</span>内部进行换行</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h4 id=\"自己的看法\"><a href=\"#自己的看法\" class=\"headerlink\" title=\"自己的看法\"></a>自己的看法</h4><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">word-wrap</span>： 决定句尾放不下单词时，单词是否换行</span><br><span class=\"line\"><span class=\"selector-tag\">word-break</span>: 决定单词内该怎么换行</span><br></pre></td></tr></table></figure>\n<h4 id=\"单行显示省略号\"><a href=\"#单行显示省略号\" class=\"headerlink\" title=\"单行显示省略号\"></a>单行显示省略号</h4><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">overflow</span>: <span class=\"selector-tag\">hidden</span>;</span><br><span class=\"line\"><span class=\"selector-tag\">text-overflow</span>: <span class=\"selector-tag\">ellipsis</span>;</span><br><span class=\"line\"><span class=\"selector-tag\">white-space</span>: <span class=\"selector-tag\">nowrap</span>;</span><br></pre></td></tr></table></figure>\n<h4 id=\"多行显示省略号\"><a href=\"#多行显示省略号\" class=\"headerlink\" title=\"多行显示省略号\"></a>多行显示省略号</h4><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">display</span>: <span class=\"selector-tag\">-webkit-box</span>;</span><br><span class=\"line\"><span class=\"selector-tag\">-webkit-box-orient</span>: <span class=\"selector-tag\">vertical</span>;</span><br><span class=\"line\"><span class=\"selector-tag\">-webkit-line-clamp</span>: 3;</span><br><span class=\"line\"><span class=\"selector-tag\">overflow</span>: <span class=\"selector-tag\">hidden</span>;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<p>文本的显示在前端算是比较X疼的一件事，如何处理断行和在手机端的显示内容呢？</p>\n<h3 id=\"文本换行-断点\"><a href=\"#文本换行-断点\" class=\"headerlink\" title=\"文本换行 断点\"></a>文本换行 断点</h3><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">word-break</span>:  属性规定自动换行的处理方法</span><br><span class=\"line\">         <span class=\"selector-tag\">normal</span>     使用浏览器的默认换行方式</span><br><span class=\"line\">         <span class=\"selector-tag\">break-all</span>  允许在单词内断行</span><br><span class=\"line\">                    在使用英文多的时候能够整齐换行</span><br><span class=\"line\">         <span class=\"selector-tag\">keep-all</span>   只能在半角空格或连字符处换行</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">word-wrap</span>：  允许长单词或 <span class=\"selector-tag\">URL</span> 地址换行到下一行</span><br><span class=\"line\">         <span class=\"selector-tag\">normal</span>      只在允许的断点处处理（按浏览器默认的处理方式）</span><br><span class=\"line\">         <span class=\"selector-tag\">break-word</span>  在长单词或者<span class=\"selector-tag\">url</span>内部进行换行</span><br></pre></td></tr></table></figure>","more":"<h4 id=\"自己的看法\"><a href=\"#自己的看法\" class=\"headerlink\" title=\"自己的看法\"></a>自己的看法</h4><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">word-wrap</span>： 决定句尾放不下单词时，单词是否换行</span><br><span class=\"line\"><span class=\"selector-tag\">word-break</span>: 决定单词内该怎么换行</span><br></pre></td></tr></table></figure>\n<h4 id=\"单行显示省略号\"><a href=\"#单行显示省略号\" class=\"headerlink\" title=\"单行显示省略号\"></a>单行显示省略号</h4><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">overflow</span>: <span class=\"selector-tag\">hidden</span>;</span><br><span class=\"line\"><span class=\"selector-tag\">text-overflow</span>: <span class=\"selector-tag\">ellipsis</span>;</span><br><span class=\"line\"><span class=\"selector-tag\">white-space</span>: <span class=\"selector-tag\">nowrap</span>;</span><br></pre></td></tr></table></figure>\n<h4 id=\"多行显示省略号\"><a href=\"#多行显示省略号\" class=\"headerlink\" title=\"多行显示省略号\"></a>多行显示省略号</h4><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">display</span>: <span class=\"selector-tag\">-webkit-box</span>;</span><br><span class=\"line\"><span class=\"selector-tag\">-webkit-box-orient</span>: <span class=\"selector-tag\">vertical</span>;</span><br><span class=\"line\"><span class=\"selector-tag\">-webkit-line-clamp</span>: 3;</span><br><span class=\"line\"><span class=\"selector-tag\">overflow</span>: <span class=\"selector-tag\">hidden</span>;</span><br></pre></td></tr></table></figure>"},{"title":"import和require的区别","date":"2019-06-11T03:55:32.000Z","_content":"\nnode编程中最重要的思想就是模块化，import和require都是被模块化所使用。\n\n## 遵循规范\n+ require 是 AMD规范引入方式\n+ import是es6的一个语法标准，如果要兼容浏览器的话必须转化成es5的语法\n<!-- more -->\n## 调用时间\n+ require是运行时调用\n+ import是编译时调用\n\n## 本质\n+ require是赋值过程，其实require的结果就是对象、数字、字符串、函数等，再把require的结果赋值给某个变量\n+ import是解构过程，但是目前所有的引擎都还没有实现import，我们在node中使用babel支持ES6，也仅仅是将ES6转码为ES5再执行，import语法会被转码为require\n\n## require / exports\n```javascript\n// CommonJS模块\nlet { stat, exists, readFile } = require('fs');\n\n// 等同于\nlet _fs = require('fs');\nlet stat = _fs.stat;\nlet exists = _fs.exists;\nlet readfile = _fs.readfile;\n\nconst fs = require('fs')\nexports.fs = fs\nmodule.exports = fs\n```\n\n## import / export\n```javascript\nimport fs from 'fs'\nimport {default as fs} from 'fs'\nimport * as fs from 'fs'\nimport {readFile} from 'fs'\nimport {readFile as read} from 'fs'\nimport fs, {readFile} from 'fs'\n\nexport default fs\nexport const fs\nexport function readFile\nexport {readFile, read}\nexport * from 'fs'\n```\n\n1.通过require引入基础数据类型时，属于复制该变量。\n2.通过require引入复杂数据类型时，数据浅拷贝该对象。\n3.出现模块之间的循环引用时，会输出已经执行的模块，而未执行的模块不输出（比较复杂）\n4.CommonJS模块默认export的是一个对象，即使导出的是基础数据类型\n\n加载方式|规范|命令|特点\n---|:--:|---:\n运行时加载|CommonJS/AMD|require|社区方案，提供了服务器/浏览器的模块加载方案。非语言层面的标准。只能在运行时确定模块的依赖关系及输入/输出的变量，无法进行静态优化。\n编译时加载|ESMAScript6+|import|语言规格层面支持模块功能。支持编译时静态分析，便于JS引入宏和类型检验。动态绑定","source":"_posts/jc-8.md","raw":"---\ntitle: import和require的区别\ncategories: js-end\ndate: 2019-06-11 11:55:32\ntags: js import require\n---\n\nnode编程中最重要的思想就是模块化，import和require都是被模块化所使用。\n\n## 遵循规范\n+ require 是 AMD规范引入方式\n+ import是es6的一个语法标准，如果要兼容浏览器的话必须转化成es5的语法\n<!-- more -->\n## 调用时间\n+ require是运行时调用\n+ import是编译时调用\n\n## 本质\n+ require是赋值过程，其实require的结果就是对象、数字、字符串、函数等，再把require的结果赋值给某个变量\n+ import是解构过程，但是目前所有的引擎都还没有实现import，我们在node中使用babel支持ES6，也仅仅是将ES6转码为ES5再执行，import语法会被转码为require\n\n## require / exports\n```javascript\n// CommonJS模块\nlet { stat, exists, readFile } = require('fs');\n\n// 等同于\nlet _fs = require('fs');\nlet stat = _fs.stat;\nlet exists = _fs.exists;\nlet readfile = _fs.readfile;\n\nconst fs = require('fs')\nexports.fs = fs\nmodule.exports = fs\n```\n\n## import / export\n```javascript\nimport fs from 'fs'\nimport {default as fs} from 'fs'\nimport * as fs from 'fs'\nimport {readFile} from 'fs'\nimport {readFile as read} from 'fs'\nimport fs, {readFile} from 'fs'\n\nexport default fs\nexport const fs\nexport function readFile\nexport {readFile, read}\nexport * from 'fs'\n```\n\n1.通过require引入基础数据类型时，属于复制该变量。\n2.通过require引入复杂数据类型时，数据浅拷贝该对象。\n3.出现模块之间的循环引用时，会输出已经执行的模块，而未执行的模块不输出（比较复杂）\n4.CommonJS模块默认export的是一个对象，即使导出的是基础数据类型\n\n加载方式|规范|命令|特点\n---|:--:|---:\n运行时加载|CommonJS/AMD|require|社区方案，提供了服务器/浏览器的模块加载方案。非语言层面的标准。只能在运行时确定模块的依赖关系及输入/输出的变量，无法进行静态优化。\n编译时加载|ESMAScript6+|import|语言规格层面支持模块功能。支持编译时静态分析，便于JS引入宏和类型检验。动态绑定","slug":"jc-8","published":1,"updated":"2020-07-01T09:12:26.385Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdr00y5x001je7zczzr8xom6","content":"<p>node编程中最重要的思想就是模块化，import和require都是被模块化所使用。</p>\n<h2 id=\"遵循规范\"><a href=\"#遵循规范\" class=\"headerlink\" title=\"遵循规范\"></a>遵循规范</h2><ul>\n<li>require 是 AMD规范引入方式</li>\n<li>import是es6的一个语法标准，如果要兼容浏览器的话必须转化成es5的语法<a id=\"more\"></a>\n<h2 id=\"调用时间\"><a href=\"#调用时间\" class=\"headerlink\" title=\"调用时间\"></a>调用时间</h2></li>\n<li>require是运行时调用</li>\n<li>import是编译时调用</li>\n</ul>\n<h2 id=\"本质\"><a href=\"#本质\" class=\"headerlink\" title=\"本质\"></a>本质</h2><ul>\n<li>require是赋值过程，其实require的结果就是对象、数字、字符串、函数等，再把require的结果赋值给某个变量</li>\n<li>import是解构过程，但是目前所有的引擎都还没有实现import，我们在node中使用babel支持ES6，也仅仅是将ES6转码为ES5再执行，import语法会被转码为require</li>\n</ul>\n<h2 id=\"require-exports\"><a href=\"#require-exports\" class=\"headerlink\" title=\"require / exports\"></a>require / exports</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// CommonJS模块</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> &#123; stat, exists, readFile &#125; = <span class=\"built_in\">require</span>(<span class=\"string\">'fs'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 等同于</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> _fs = <span class=\"built_in\">require</span>(<span class=\"string\">'fs'</span>);</span><br><span class=\"line\"><span class=\"keyword\">let</span> stat = _fs.stat;</span><br><span class=\"line\"><span class=\"keyword\">let</span> exists = _fs.exists;</span><br><span class=\"line\"><span class=\"keyword\">let</span> readfile = _fs.readfile;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">'fs'</span>)</span><br><span class=\"line\">exports.fs = fs</span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = fs</span><br></pre></td></tr></table></figure>\n<h2 id=\"import-export\"><a href=\"#import-export\" class=\"headerlink\" title=\"import / export\"></a>import / export</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> fs <span class=\"keyword\">from</span> <span class=\"string\">'fs'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;<span class=\"keyword\">default</span> <span class=\"keyword\">as</span> fs&#125; <span class=\"keyword\">from</span> <span class=\"string\">'fs'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> * <span class=\"keyword\">as</span> fs <span class=\"keyword\">from</span> <span class=\"string\">'fs'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;readFile&#125; <span class=\"keyword\">from</span> <span class=\"string\">'fs'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;readFile <span class=\"keyword\">as</span> read&#125; <span class=\"keyword\">from</span> <span class=\"string\">'fs'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> fs, &#123;readFile&#125; <span class=\"keyword\">from</span> <span class=\"string\">'fs'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> fs</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> fs</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">readFile</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">export</span> </span>&#123;readFile, read&#125;</span><br><span class=\"line\"><span class=\"keyword\">export</span> * <span class=\"keyword\">from</span> <span class=\"string\">'fs'</span></span><br></pre></td></tr></table></figure>\n<p>1.通过require引入基础数据类型时，属于复制该变量。<br>2.通过require引入复杂数据类型时，数据浅拷贝该对象。<br>3.出现模块之间的循环引用时，会输出已经执行的模块，而未执行的模块不输出（比较复杂）<br>4.CommonJS模块默认export的是一个对象，即使导出的是基础数据类型</p>\n<table>\n<thead>\n<tr>\n<th>加载方式</th>\n<th style=\"text-align:center\">规范</th>\n<th style=\"text-align:right\">命令</th>\n<th>特点</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>运行时加载</td>\n<td style=\"text-align:center\">CommonJS/AMD</td>\n<td style=\"text-align:right\">require</td>\n<td>社区方案，提供了服务器/浏览器的模块加载方案。非语言层面的标准。只能在运行时确定模块的依赖关系及输入/输出的变量，无法进行静态优化。</td>\n</tr>\n<tr>\n<td>编译时加载</td>\n<td style=\"text-align:center\">ESMAScript6+</td>\n<td style=\"text-align:right\">import</td>\n<td>语言规格层面支持模块功能。支持编译时静态分析，便于JS引入宏和类型检验。动态绑定</td>\n</tr>\n</tbody>\n</table>\n","site":{"data":{}},"excerpt":"<p>node编程中最重要的思想就是模块化，import和require都是被模块化所使用。</p>\n<h2 id=\"遵循规范\"><a href=\"#遵循规范\" class=\"headerlink\" title=\"遵循规范\"></a>遵循规范</h2><ul>\n<li>require 是 AMD规范引入方式</li>\n<li>import是es6的一个语法标准，如果要兼容浏览器的话必须转化成es5的语法","more":"<h2 id=\"调用时间\"><a href=\"#调用时间\" class=\"headerlink\" title=\"调用时间\"></a>调用时间</h2></li>\n<li>require是运行时调用</li>\n<li>import是编译时调用</li>\n</ul>\n<h2 id=\"本质\"><a href=\"#本质\" class=\"headerlink\" title=\"本质\"></a>本质</h2><ul>\n<li>require是赋值过程，其实require的结果就是对象、数字、字符串、函数等，再把require的结果赋值给某个变量</li>\n<li>import是解构过程，但是目前所有的引擎都还没有实现import，我们在node中使用babel支持ES6，也仅仅是将ES6转码为ES5再执行，import语法会被转码为require</li>\n</ul>\n<h2 id=\"require-exports\"><a href=\"#require-exports\" class=\"headerlink\" title=\"require / exports\"></a>require / exports</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// CommonJS模块</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> &#123; stat, exists, readFile &#125; = <span class=\"built_in\">require</span>(<span class=\"string\">'fs'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 等同于</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> _fs = <span class=\"built_in\">require</span>(<span class=\"string\">'fs'</span>);</span><br><span class=\"line\"><span class=\"keyword\">let</span> stat = _fs.stat;</span><br><span class=\"line\"><span class=\"keyword\">let</span> exists = _fs.exists;</span><br><span class=\"line\"><span class=\"keyword\">let</span> readfile = _fs.readfile;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">'fs'</span>)</span><br><span class=\"line\">exports.fs = fs</span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = fs</span><br></pre></td></tr></table></figure>\n<h2 id=\"import-export\"><a href=\"#import-export\" class=\"headerlink\" title=\"import / export\"></a>import / export</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> fs <span class=\"keyword\">from</span> <span class=\"string\">'fs'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;<span class=\"keyword\">default</span> <span class=\"keyword\">as</span> fs&#125; <span class=\"keyword\">from</span> <span class=\"string\">'fs'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> * <span class=\"keyword\">as</span> fs <span class=\"keyword\">from</span> <span class=\"string\">'fs'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;readFile&#125; <span class=\"keyword\">from</span> <span class=\"string\">'fs'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;readFile <span class=\"keyword\">as</span> read&#125; <span class=\"keyword\">from</span> <span class=\"string\">'fs'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> fs, &#123;readFile&#125; <span class=\"keyword\">from</span> <span class=\"string\">'fs'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> fs</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> fs</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">readFile</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">export</span> </span>&#123;readFile, read&#125;</span><br><span class=\"line\"><span class=\"keyword\">export</span> * <span class=\"keyword\">from</span> <span class=\"string\">'fs'</span></span><br></pre></td></tr></table></figure>\n<p>1.通过require引入基础数据类型时，属于复制该变量。<br>2.通过require引入复杂数据类型时，数据浅拷贝该对象。<br>3.出现模块之间的循环引用时，会输出已经执行的模块，而未执行的模块不输出（比较复杂）<br>4.CommonJS模块默认export的是一个对象，即使导出的是基础数据类型</p>\n<table>\n<thead>\n<tr>\n<th>加载方式</th>\n<th style=\"text-align:center\">规范</th>\n<th style=\"text-align:right\">命令</th>\n<th>特点</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>运行时加载</td>\n<td style=\"text-align:center\">CommonJS/AMD</td>\n<td style=\"text-align:right\">require</td>\n<td>社区方案，提供了服务器/浏览器的模块加载方案。非语言层面的标准。只能在运行时确定模块的依赖关系及输入/输出的变量，无法进行静态优化。</td>\n</tr>\n<tr>\n<td>编译时加载</td>\n<td style=\"text-align:center\">ESMAScript6+</td>\n<td style=\"text-align:right\">import</td>\n<td>语言规格层面支持模块功能。支持编译时静态分析，便于JS引入宏和类型检验。动态绑定</td>\n</tr>\n</tbody>\n</table>"},{"title":"vue 组件之间通信","date":"2019-04-27T10:32:52.000Z","_content":"\nvue 的组件在vue框架中是特别重要的一个环节，在大型的项目中，组件显的相当的重要，这样在后期特别好维护，一块内容就是一个组件，随时随地的删除和修改不同的组件，接下来我想写一篇vuex 集中管理状态，所以在之前先简单的介绍一下vue组件之间的相互传参方式。\n\n```shell\n父传子：Props\n子传父：子：$emit(eventName)  父$on(eventName)\n父访问子：ref\n非父子组件通信:https://vuefe.cn/guide/components.html#非父子组件通信\nvue2.0 移除：1.$dispatch() 2.$broadcast() 3.events\n```\n\n<!-- more -->\nselect.vue\n\n```javascript\n<template>\n    <div class=\"select\" id=\"app\">\n      <select-input @upup=\"setData\" :msgfromfather=\"value\"></select-input>\n      <list v-if=\"showList\" @getValue=\"getValueData\"></list>\n    </div>\n</template>\n\n<script>\nimport selectInput from '@/components/selectInput'\nimport list from '@/components/list'\n\nexport default{\n  created(){\n\n  },\n  mounted(){\n\n  },\n  data(){\n    return {\n      showList: false,\n      value:\"\"\n    }\n  },\n  computed: {\n\n  },\n  methods: {\n    setData(msg) {\n      this.showList = msg\n    },\n    getValueData(msg,msg1){\n      console.log(\"触发了这个事件了:\",msg,msg1)\n      this.value = msg\n      this.showList = msg1\n    }\n  },\n  components: {\n    selectInput,\n    list\n  }\n}\n</script>\n```\n\nselectInput.vue\n\n```javascript\n<template>\n    <div class=\"selectInput\">\n      <input type=\"text\" placeholder=\"请输入搜索关键字\" class=\"searchInput\" @click=\"up\" :value=\"msgfromfather\"/>\n      <button class=\"searchBtn\">搜索</button>\n    </div>\n</template>\n\n<script>\nexport default {\n  data(){\n    return {\n      showList: true\n    }\n  },\n  created(){\n\n  },\n  props: ['msgfromfather'],\n  computed: {},\n  methods: {\n    up() {\n      this.$emit('upup',this.showList); //主动触发upup方法，\n    }\n  }\n}\n</script>\n```\n\nlist.vue\n\n```javascript\n<template>\n    <ul class=\"selectList\">\n      <li v-for=\"historyItem in history\" @click=\"getData(historyItem)\">{{historyItem}}</li>\n    </ul>\n</template>\n\n<script>\nexport default {\n  created(){\n    //组件二接受\n//    Hub.$on('change', (msg) => { //Hub接收事件\n//      console.log(msg)\n//    });\n  },\n  data() {\n    return {\n      hidden:false,\n      history:['html','css','css3','js','vue','react','php','java']\n    }\n  },\n  computed: {},\n  methods: {\n    getData(value){\n      console.log(value)\n      this.$emit('getValue',value,this.hidden); //主动触发upup方法，\n    }\n  }\n}\n</script>\n```\n## 以上例子主要使用了父子组件之间的相互传递\n\n---\n\n### 父传子：\n\n父组件定义一个变量\n\n```html\n<select-input @upup=\"setData\" :msgfromfather=\"value\"></select-input>\n```\n\n子组件props接受并回显\n\n```javascript\n<input type=\"text\" placeholder=\"请输入搜索关键字\" class=\"searchInput\" @click=\"up\" :value=\"msgfromfather\"/>\nexport default {\n  data(){\n    return {\n      showList: true\n    }\n  },\n  created(){\n\n  },\n  props: ['msgfromfather'],\n  computed: {},\n  methods: {\n    up() {\n      this.$emit('upup',this.showList); //主动触发upup方法，\n    }\n  }\n}\n\n```\n\n### 子传父\n\n子组件点击事件$emit触发父组件的事件，父组件事件中接受传递过来的数据\n\n#### 子组件\n\n```html\n<li v-for=\"historyItem in history\" @click=\"getData(historyItem)\">{{historyItem}}</li>\nmethods: {\n  getData(value){\n    console.log(value)\n    this.$emit('getValue',value,this.hidden); //主动触发upup方法，\n  }\n}\n```\n\n#### 父组件\n\n```html\n<list v-if=\"showList\" @getValue=\"getValueData\"></list>\ngetValueData(msg,msg1){\n  console.log(\"触发了这个事件了:\",msg,msg1)\n  this.value = msg\n  this.showList = msg1\n}\n```\n\n> 1.2.3.0新增的语法糖2.这种就不涉及到通过方法去操控父组件中的data改变，而是利用子传父的思想，把props中的属性值和父组件中的data形成捆绑，利用$emit改变子组件的data，变相改变了父组件中的data\n\n```javascript\n<div id=\"app\">\n    {{count}}    <!--子组件用来传递父组件的方法-->\n    <my-Com2 v-bind:parent-Count.sync = 'count'></my-Com2>\n</div>\n\n<template id=\"com\">\n    <!--在组件内部特意定义了一个触发父组件方法的点击事件-->\n    <button @click=\"changeParent\">操作父组件的子组件方法</button>\n</template>\n\n<script>\n    let myCom2 = {        \n        template:'#com',\n        data(){            \n        return {                \n            title:'子组件',\n            }\n        },        \n        // 父传子\n        props:['parentCount'],        \n        methods:{          \n            // 用来专门触发父组件方法子组件，用来触发$emit\n            changeParent(){                \n                // 根据上面的介绍原则等号左面的属于子组件的右面属于父组件\n                // 将父子组件data 都绑定在一起，改变子组件就是改变了父组件\n                this.$emit('update:parentCount',1000)\n            }\n        },\n    };    \n    var vm = new Vue({        \n        el: '#app',        \n        data:{          \n            count:0,\n        },        \n        components:{            \n            // 在外部声明变量，使用代码简洁\n            myCom2,\n        }\n    });\n</script>\n```\n\n---\n\n### 兄弟组件之间的通信\n\n> 如果2个组件不是父子组件那么如何通信呢？这时可以通过eventHub来实现通信. \n所谓eventHub就是创建一个事件中心，相当于中转站，可以用它来传递事件和接收事件.\n\n```html\nlet Hub = new Vue(); //创建事件中心\n```\n\n组件1触发:   \n\n```html\n<div @click=\"eve\"></div>methods: {\n    eve() {\n        Hub.$emit('change','hehe'); //Hub触发事件\n    }\n}\n```\n\n组件2触发:\n\n```html\n<div></div>\ncreated() {\n    Hub.$on('change', () => { //Hub接收事件        this.msg = 'hehe';\n    });\n}\n```\n\n这样就实现了非父子组件之间的通信了.原理就是把Hub当作一个中转站！","source":"_posts/jc-6.md","raw":"---\ntitle: vue 组件之间通信\ncategories: gc-end\ndate: 2019-04-27 18:32:52\ntags: vue 组件\n---\n\nvue 的组件在vue框架中是特别重要的一个环节，在大型的项目中，组件显的相当的重要，这样在后期特别好维护，一块内容就是一个组件，随时随地的删除和修改不同的组件，接下来我想写一篇vuex 集中管理状态，所以在之前先简单的介绍一下vue组件之间的相互传参方式。\n\n```shell\n父传子：Props\n子传父：子：$emit(eventName)  父$on(eventName)\n父访问子：ref\n非父子组件通信:https://vuefe.cn/guide/components.html#非父子组件通信\nvue2.0 移除：1.$dispatch() 2.$broadcast() 3.events\n```\n\n<!-- more -->\nselect.vue\n\n```javascript\n<template>\n    <div class=\"select\" id=\"app\">\n      <select-input @upup=\"setData\" :msgfromfather=\"value\"></select-input>\n      <list v-if=\"showList\" @getValue=\"getValueData\"></list>\n    </div>\n</template>\n\n<script>\nimport selectInput from '@/components/selectInput'\nimport list from '@/components/list'\n\nexport default{\n  created(){\n\n  },\n  mounted(){\n\n  },\n  data(){\n    return {\n      showList: false,\n      value:\"\"\n    }\n  },\n  computed: {\n\n  },\n  methods: {\n    setData(msg) {\n      this.showList = msg\n    },\n    getValueData(msg,msg1){\n      console.log(\"触发了这个事件了:\",msg,msg1)\n      this.value = msg\n      this.showList = msg1\n    }\n  },\n  components: {\n    selectInput,\n    list\n  }\n}\n</script>\n```\n\nselectInput.vue\n\n```javascript\n<template>\n    <div class=\"selectInput\">\n      <input type=\"text\" placeholder=\"请输入搜索关键字\" class=\"searchInput\" @click=\"up\" :value=\"msgfromfather\"/>\n      <button class=\"searchBtn\">搜索</button>\n    </div>\n</template>\n\n<script>\nexport default {\n  data(){\n    return {\n      showList: true\n    }\n  },\n  created(){\n\n  },\n  props: ['msgfromfather'],\n  computed: {},\n  methods: {\n    up() {\n      this.$emit('upup',this.showList); //主动触发upup方法，\n    }\n  }\n}\n</script>\n```\n\nlist.vue\n\n```javascript\n<template>\n    <ul class=\"selectList\">\n      <li v-for=\"historyItem in history\" @click=\"getData(historyItem)\">{{historyItem}}</li>\n    </ul>\n</template>\n\n<script>\nexport default {\n  created(){\n    //组件二接受\n//    Hub.$on('change', (msg) => { //Hub接收事件\n//      console.log(msg)\n//    });\n  },\n  data() {\n    return {\n      hidden:false,\n      history:['html','css','css3','js','vue','react','php','java']\n    }\n  },\n  computed: {},\n  methods: {\n    getData(value){\n      console.log(value)\n      this.$emit('getValue',value,this.hidden); //主动触发upup方法，\n    }\n  }\n}\n</script>\n```\n## 以上例子主要使用了父子组件之间的相互传递\n\n---\n\n### 父传子：\n\n父组件定义一个变量\n\n```html\n<select-input @upup=\"setData\" :msgfromfather=\"value\"></select-input>\n```\n\n子组件props接受并回显\n\n```javascript\n<input type=\"text\" placeholder=\"请输入搜索关键字\" class=\"searchInput\" @click=\"up\" :value=\"msgfromfather\"/>\nexport default {\n  data(){\n    return {\n      showList: true\n    }\n  },\n  created(){\n\n  },\n  props: ['msgfromfather'],\n  computed: {},\n  methods: {\n    up() {\n      this.$emit('upup',this.showList); //主动触发upup方法，\n    }\n  }\n}\n\n```\n\n### 子传父\n\n子组件点击事件$emit触发父组件的事件，父组件事件中接受传递过来的数据\n\n#### 子组件\n\n```html\n<li v-for=\"historyItem in history\" @click=\"getData(historyItem)\">{{historyItem}}</li>\nmethods: {\n  getData(value){\n    console.log(value)\n    this.$emit('getValue',value,this.hidden); //主动触发upup方法，\n  }\n}\n```\n\n#### 父组件\n\n```html\n<list v-if=\"showList\" @getValue=\"getValueData\"></list>\ngetValueData(msg,msg1){\n  console.log(\"触发了这个事件了:\",msg,msg1)\n  this.value = msg\n  this.showList = msg1\n}\n```\n\n> 1.2.3.0新增的语法糖2.这种就不涉及到通过方法去操控父组件中的data改变，而是利用子传父的思想，把props中的属性值和父组件中的data形成捆绑，利用$emit改变子组件的data，变相改变了父组件中的data\n\n```javascript\n<div id=\"app\">\n    {{count}}    <!--子组件用来传递父组件的方法-->\n    <my-Com2 v-bind:parent-Count.sync = 'count'></my-Com2>\n</div>\n\n<template id=\"com\">\n    <!--在组件内部特意定义了一个触发父组件方法的点击事件-->\n    <button @click=\"changeParent\">操作父组件的子组件方法</button>\n</template>\n\n<script>\n    let myCom2 = {        \n        template:'#com',\n        data(){            \n        return {                \n            title:'子组件',\n            }\n        },        \n        // 父传子\n        props:['parentCount'],        \n        methods:{          \n            // 用来专门触发父组件方法子组件，用来触发$emit\n            changeParent(){                \n                // 根据上面的介绍原则等号左面的属于子组件的右面属于父组件\n                // 将父子组件data 都绑定在一起，改变子组件就是改变了父组件\n                this.$emit('update:parentCount',1000)\n            }\n        },\n    };    \n    var vm = new Vue({        \n        el: '#app',        \n        data:{          \n            count:0,\n        },        \n        components:{            \n            // 在外部声明变量，使用代码简洁\n            myCom2,\n        }\n    });\n</script>\n```\n\n---\n\n### 兄弟组件之间的通信\n\n> 如果2个组件不是父子组件那么如何通信呢？这时可以通过eventHub来实现通信. \n所谓eventHub就是创建一个事件中心，相当于中转站，可以用它来传递事件和接收事件.\n\n```html\nlet Hub = new Vue(); //创建事件中心\n```\n\n组件1触发:   \n\n```html\n<div @click=\"eve\"></div>methods: {\n    eve() {\n        Hub.$emit('change','hehe'); //Hub触发事件\n    }\n}\n```\n\n组件2触发:\n\n```html\n<div></div>\ncreated() {\n    Hub.$on('change', () => { //Hub接收事件        this.msg = 'hehe';\n    });\n}\n```\n\n这样就实现了非父子组件之间的通信了.原理就是把Hub当作一个中转站！","slug":"jc-6","published":1,"updated":"2020-07-01T09:12:26.385Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdr00y5y001me7zcie9z2hfp","content":"<p>vue 的组件在vue框架中是特别重要的一个环节，在大型的项目中，组件显的相当的重要，这样在后期特别好维护，一块内容就是一个组件，随时随地的删除和修改不同的组件，接下来我想写一篇vuex 集中管理状态，所以在之前先简单的介绍一下vue组件之间的相互传参方式。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">父传子：Props</span><br><span class=\"line\">子传父：子：$emit(eventName)  父$on(eventName)</span><br><span class=\"line\">父访问子：ref</span><br><span class=\"line\">非父子组件通信:https://vuefe.cn/guide/components.html#非父子组件通信</span><br><span class=\"line\">vue2.0 移除：1.$dispatch() 2.$broadcast() 3.events</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<p>select.vue</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    &lt;div <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"select\"</span> id=<span class=\"string\">\"app\"</span>&gt;</span><br><span class=\"line\">      &lt;select-input @upup=<span class=\"string\">\"setData\"</span> :msgfromfather=<span class=\"string\">\"value\"</span>&gt;<span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">select-input</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">      <span class=\"tag\">&lt;<span class=\"name\">list</span> <span class=\"attr\">v-if</span>=<span class=\"string\">\"showList\"</span> @<span class=\"attr\">getValue</span>=<span class=\"string\">\"getValueData\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">list</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">&lt;<span class=\"regexp\">/template&gt;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">&lt;script&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">import selectInput from '@/</span>components/selectInput<span class=\"string\">'</span></span><br><span class=\"line\"><span class=\"string\">import list from '</span>@/components/list<span class=\"string\">'</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">export default&#123;</span></span><br><span class=\"line\"><span class=\"string\">  created()&#123;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">  &#125;,</span></span><br><span class=\"line\"><span class=\"string\">  mounted()&#123;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">  &#125;,</span></span><br><span class=\"line\"><span class=\"string\">  data()&#123;</span></span><br><span class=\"line\"><span class=\"string\">    return &#123;</span></span><br><span class=\"line\"><span class=\"string\">      showList: false,</span></span><br><span class=\"line\"><span class=\"string\">      value:\"\"</span></span><br><span class=\"line\"><span class=\"string\">    &#125;</span></span><br><span class=\"line\"><span class=\"string\">  &#125;,</span></span><br><span class=\"line\"><span class=\"string\">  computed: &#123;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">  &#125;,</span></span><br><span class=\"line\"><span class=\"string\">  methods: &#123;</span></span><br><span class=\"line\"><span class=\"string\">    setData(msg) &#123;</span></span><br><span class=\"line\"><span class=\"string\">      this.showList = msg</span></span><br><span class=\"line\"><span class=\"string\">    &#125;,</span></span><br><span class=\"line\"><span class=\"string\">    getValueData(msg,msg1)&#123;</span></span><br><span class=\"line\"><span class=\"string\">      console.log(\"触发了这个事件了:\",msg,msg1)</span></span><br><span class=\"line\"><span class=\"string\">      this.value = msg</span></span><br><span class=\"line\"><span class=\"string\">      this.showList = msg1</span></span><br><span class=\"line\"><span class=\"string\">    &#125;</span></span><br><span class=\"line\"><span class=\"string\">  &#125;,</span></span><br><span class=\"line\"><span class=\"string\">  components: &#123;</span></span><br><span class=\"line\"><span class=\"string\">    selectInput,</span></span><br><span class=\"line\"><span class=\"string\">    list</span></span><br><span class=\"line\"><span class=\"string\">  &#125;</span></span><br><span class=\"line\"><span class=\"string\">&#125;</span></span><br><span class=\"line\"><span class=\"string\">&lt;/script&gt;</span></span><br></pre></td></tr></table></figure>\n<p>selectInput.vue</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    &lt;div <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"selectInput\"</span>&gt;</span><br><span class=\"line\">      &lt;input type=<span class=\"string\">\"text\"</span> placeholder=<span class=\"string\">\"请输入搜索关键字\"</span> <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"searchInput\"</span> @click=<span class=\"string\">\"up\"</span> :value=<span class=\"string\">\"msgfromfather\"</span>/&gt;</span><br><span class=\"line\">      &lt;button <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"searchBtn\"</span>&gt;搜索&lt;<span class=\"regexp\">/button&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;/</span>div&gt;</span><br><span class=\"line\">&lt;<span class=\"regexp\">/template&gt;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">&lt;script&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">export default &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">  data()&#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    return &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">      showList: true</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;,</span></span><br><span class=\"line\"><span class=\"regexp\">  created()&#123;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;,</span></span><br><span class=\"line\"><span class=\"regexp\">  props: ['msgfromfather'],</span></span><br><span class=\"line\"><span class=\"regexp\">  computed: &#123;&#125;,</span></span><br><span class=\"line\"><span class=\"regexp\">  methods: &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    up() &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">      this.$emit('upup',this.showList); /</span><span class=\"regexp\">/主动触发upup方法，</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>script&gt;</span><br></pre></td></tr></table></figure>\n<p>list.vue</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    &lt;ul <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"selectList\"</span>&gt;</span><br><span class=\"line\">      &lt;li v-<span class=\"keyword\">for</span>=<span class=\"string\">\"historyItem in history\"</span> @click=<span class=\"string\">\"getData(historyItem)\"</span>&gt;&#123;&#123;historyItem&#125;&#125;&lt;<span class=\"regexp\">/li&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;/u</span>l&gt;</span><br><span class=\"line\">&lt;<span class=\"regexp\">/template&gt;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">&lt;script&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">export default &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">  created()&#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    /</span><span class=\"regexp\">/组件二接受</span></span><br><span class=\"line\"><span class=\"regexp\">/</span><span class=\"regexp\">/    Hub.$on('change', (msg) =&gt; &#123; /</span><span class=\"regexp\">/Hub接收事件</span></span><br><span class=\"line\"><span class=\"regexp\">/</span><span class=\"regexp\">/      console.log(msg)</span></span><br><span class=\"line\"><span class=\"regexp\">/</span><span class=\"regexp\">/    &#125;);</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;,</span></span><br><span class=\"line\"><span class=\"regexp\">  data() &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    return &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">      hidden:false,</span></span><br><span class=\"line\"><span class=\"regexp\">      history:['html','css','css3','js','vue','react','php','java']</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;,</span></span><br><span class=\"line\"><span class=\"regexp\">  computed: &#123;&#125;,</span></span><br><span class=\"line\"><span class=\"regexp\">  methods: &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    getData(value)&#123;</span></span><br><span class=\"line\"><span class=\"regexp\">      console.log(value)</span></span><br><span class=\"line\"><span class=\"regexp\">      this.$emit('getValue',value,this.hidden); /</span><span class=\"regexp\">/主动触发upup方法，</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>script&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"以上例子主要使用了父子组件之间的相互传递\"><a href=\"#以上例子主要使用了父子组件之间的相互传递\" class=\"headerlink\" title=\"以上例子主要使用了父子组件之间的相互传递\"></a>以上例子主要使用了父子组件之间的相互传递</h2><hr>\n<h3 id=\"父传子：\"><a href=\"#父传子：\" class=\"headerlink\" title=\"父传子：\"></a>父传子：</h3><p>父组件定义一个变量</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select-input</span> @<span class=\"attr\">upup</span>=<span class=\"string\">\"setData\"</span> <span class=\"attr\">:msgfromfather</span>=<span class=\"string\">\"value\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">select-input</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>子组件props接受并回显</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;input type=<span class=\"string\">\"text\"</span> placeholder=<span class=\"string\">\"请输入搜索关键字\"</span> <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"searchInput\"</span> @click=<span class=\"string\">\"up\"</span> :value=<span class=\"string\">\"msgfromfather\"</span>/&gt;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  data()&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      showList: <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  created()&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  props: [<span class=\"string\">'msgfromfather'</span>],</span><br><span class=\"line\">  computed: &#123;&#125;,</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\">    up() &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.$emit(<span class=\"string\">'upup'</span>,<span class=\"keyword\">this</span>.showList); <span class=\"comment\">//主动触发upup方法，</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"子传父\"><a href=\"#子传父\" class=\"headerlink\" title=\"子传父\"></a>子传父</h3><p>子组件点击事件$emit触发父组件的事件，父组件事件中接受传递过来的数据</p>\n<h4 id=\"子组件\"><a href=\"#子组件\" class=\"headerlink\" title=\"子组件\"></a>子组件</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"historyItem in history\"</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"getData(historyItem)\"</span>&gt;</span>&#123;&#123;historyItem&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">methods: &#123;</span><br><span class=\"line\">  getData(value)&#123;</span><br><span class=\"line\">    console.log(value)</span><br><span class=\"line\">    this.$emit('getValue',value,this.hidden); //主动触发upup方法，</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"父组件\"><a href=\"#父组件\" class=\"headerlink\" title=\"父组件\"></a>父组件</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">list</span> <span class=\"attr\">v-if</span>=<span class=\"string\">\"showList\"</span> @<span class=\"attr\">getValue</span>=<span class=\"string\">\"getValueData\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">list</span>&gt;</span></span><br><span class=\"line\">getValueData(msg,msg1)&#123;</span><br><span class=\"line\">  console.log(\"触发了这个事件了:\",msg,msg1)</span><br><span class=\"line\">  this.value = msg</span><br><span class=\"line\">  this.showList = msg1</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>1.2.3.0新增的语法糖2.这种就不涉及到通过方法去操控父组件中的data改变，而是利用子传父的思想，把props中的属性值和父组件中的data形成捆绑，利用$emit改变子组件的data，变相改变了父组件中的data</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div id=<span class=\"string\">\"app\"</span>&gt;</span><br><span class=\"line\">    &#123;&#123;count&#125;&#125;    &lt;!--子组件用来传递父组件的方法--&gt;</span><br><span class=\"line\">    &lt;my-Com2 v-bind:parent-Count.sync = <span class=\"string\">'count'</span>&gt;<span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">my-Com2</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;template id=<span class=\"string\">\"com\"</span>&gt;</span><br><span class=\"line\">    &lt;!--在组件内部特意定义了一个触发父组件方法的点击事件--&gt;</span><br><span class=\"line\">    &lt;button @click=<span class=\"string\">\"changeParent\"</span>&gt;操作父组件的子组件方法&lt;<span class=\"regexp\">/button&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> myCom2 = &#123;        </span><br><span class=\"line\">        template:<span class=\"string\">'#com'</span>,</span><br><span class=\"line\">        data()&#123;            </span><br><span class=\"line\">        <span class=\"keyword\">return</span> &#123;                </span><br><span class=\"line\">            title:<span class=\"string\">'子组件'</span>,</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;,        </span><br><span class=\"line\">        <span class=\"comment\">// 父传子</span></span><br><span class=\"line\">        props:[<span class=\"string\">'parentCount'</span>],        </span><br><span class=\"line\">        methods:&#123;          </span><br><span class=\"line\">            <span class=\"comment\">// 用来专门触发父组件方法子组件，用来触发$emit</span></span><br><span class=\"line\">            changeParent()&#123;                </span><br><span class=\"line\">                <span class=\"comment\">// 根据上面的介绍原则等号左面的属于子组件的右面属于父组件</span></span><br><span class=\"line\">                <span class=\"comment\">// 将父子组件data 都绑定在一起，改变子组件就是改变了父组件</span></span><br><span class=\"line\">                <span class=\"keyword\">this</span>.$emit(<span class=\"string\">'update:parentCount'</span>,<span class=\"number\">1000</span>)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">    &#125;;    </span><br><span class=\"line\">    <span class=\"keyword\">var</span> vm = <span class=\"keyword\">new</span> Vue(&#123;        </span><br><span class=\"line\">        el: <span class=\"string\">'#app'</span>,        </span><br><span class=\"line\">        data:&#123;          </span><br><span class=\"line\">            count:<span class=\"number\">0</span>,</span><br><span class=\"line\">        &#125;,        </span><br><span class=\"line\">        components:&#123;            </span><br><span class=\"line\">            <span class=\"comment\">// 在外部声明变量，使用代码简洁</span></span><br><span class=\"line\">            myCom2,</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"兄弟组件之间的通信\"><a href=\"#兄弟组件之间的通信\" class=\"headerlink\" title=\"兄弟组件之间的通信\"></a>兄弟组件之间的通信</h3><blockquote>\n<p>如果2个组件不是父子组件那么如何通信呢？这时可以通过eventHub来实现通信.<br>所谓eventHub就是创建一个事件中心，相当于中转站，可以用它来传递事件和接收事件.</p>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">let Hub = new Vue(); //创建事件中心</span><br></pre></td></tr></table></figure>\n<p>组件1触发:   </p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"eve\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span>methods: &#123;</span><br><span class=\"line\">    eve() &#123;</span><br><span class=\"line\">        Hub.$emit('change','hehe'); //Hub触发事件</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>组件2触发:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">created() &#123;</span><br><span class=\"line\">    Hub.$on('change', () =&gt; &#123; //Hub接收事件        this.msg = 'hehe';</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这样就实现了非父子组件之间的通信了.原理就是把Hub当作一个中转站！</p>\n","site":{"data":{}},"excerpt":"<p>vue 的组件在vue框架中是特别重要的一个环节，在大型的项目中，组件显的相当的重要，这样在后期特别好维护，一块内容就是一个组件，随时随地的删除和修改不同的组件，接下来我想写一篇vuex 集中管理状态，所以在之前先简单的介绍一下vue组件之间的相互传参方式。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">父传子：Props</span><br><span class=\"line\">子传父：子：$emit(eventName)  父$on(eventName)</span><br><span class=\"line\">父访问子：ref</span><br><span class=\"line\">非父子组件通信:https://vuefe.cn/guide/components.html#非父子组件通信</span><br><span class=\"line\">vue2.0 移除：1.$dispatch() 2.$broadcast() 3.events</span><br></pre></td></tr></table></figure>","more":"<p>select.vue</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    &lt;div <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"select\"</span> id=<span class=\"string\">\"app\"</span>&gt;</span><br><span class=\"line\">      &lt;select-input @upup=<span class=\"string\">\"setData\"</span> :msgfromfather=<span class=\"string\">\"value\"</span>&gt;<span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">select-input</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">      <span class=\"tag\">&lt;<span class=\"name\">list</span> <span class=\"attr\">v-if</span>=<span class=\"string\">\"showList\"</span> @<span class=\"attr\">getValue</span>=<span class=\"string\">\"getValueData\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">list</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">&lt;<span class=\"regexp\">/template&gt;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">&lt;script&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">import selectInput from '@/</span>components/selectInput<span class=\"string\">'</span></span><br><span class=\"line\"><span class=\"string\">import list from '</span>@/components/list<span class=\"string\">'</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">export default&#123;</span></span><br><span class=\"line\"><span class=\"string\">  created()&#123;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">  &#125;,</span></span><br><span class=\"line\"><span class=\"string\">  mounted()&#123;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">  &#125;,</span></span><br><span class=\"line\"><span class=\"string\">  data()&#123;</span></span><br><span class=\"line\"><span class=\"string\">    return &#123;</span></span><br><span class=\"line\"><span class=\"string\">      showList: false,</span></span><br><span class=\"line\"><span class=\"string\">      value:\"\"</span></span><br><span class=\"line\"><span class=\"string\">    &#125;</span></span><br><span class=\"line\"><span class=\"string\">  &#125;,</span></span><br><span class=\"line\"><span class=\"string\">  computed: &#123;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">  &#125;,</span></span><br><span class=\"line\"><span class=\"string\">  methods: &#123;</span></span><br><span class=\"line\"><span class=\"string\">    setData(msg) &#123;</span></span><br><span class=\"line\"><span class=\"string\">      this.showList = msg</span></span><br><span class=\"line\"><span class=\"string\">    &#125;,</span></span><br><span class=\"line\"><span class=\"string\">    getValueData(msg,msg1)&#123;</span></span><br><span class=\"line\"><span class=\"string\">      console.log(\"触发了这个事件了:\",msg,msg1)</span></span><br><span class=\"line\"><span class=\"string\">      this.value = msg</span></span><br><span class=\"line\"><span class=\"string\">      this.showList = msg1</span></span><br><span class=\"line\"><span class=\"string\">    &#125;</span></span><br><span class=\"line\"><span class=\"string\">  &#125;,</span></span><br><span class=\"line\"><span class=\"string\">  components: &#123;</span></span><br><span class=\"line\"><span class=\"string\">    selectInput,</span></span><br><span class=\"line\"><span class=\"string\">    list</span></span><br><span class=\"line\"><span class=\"string\">  &#125;</span></span><br><span class=\"line\"><span class=\"string\">&#125;</span></span><br><span class=\"line\"><span class=\"string\">&lt;/script&gt;</span></span><br></pre></td></tr></table></figure>\n<p>selectInput.vue</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    &lt;div <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"selectInput\"</span>&gt;</span><br><span class=\"line\">      &lt;input type=<span class=\"string\">\"text\"</span> placeholder=<span class=\"string\">\"请输入搜索关键字\"</span> <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"searchInput\"</span> @click=<span class=\"string\">\"up\"</span> :value=<span class=\"string\">\"msgfromfather\"</span>/&gt;</span><br><span class=\"line\">      &lt;button <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"searchBtn\"</span>&gt;搜索&lt;<span class=\"regexp\">/button&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;/</span>div&gt;</span><br><span class=\"line\">&lt;<span class=\"regexp\">/template&gt;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">&lt;script&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">export default &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">  data()&#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    return &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">      showList: true</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;,</span></span><br><span class=\"line\"><span class=\"regexp\">  created()&#123;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;,</span></span><br><span class=\"line\"><span class=\"regexp\">  props: ['msgfromfather'],</span></span><br><span class=\"line\"><span class=\"regexp\">  computed: &#123;&#125;,</span></span><br><span class=\"line\"><span class=\"regexp\">  methods: &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    up() &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">      this.$emit('upup',this.showList); /</span><span class=\"regexp\">/主动触发upup方法，</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>script&gt;</span><br></pre></td></tr></table></figure>\n<p>list.vue</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    &lt;ul <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"selectList\"</span>&gt;</span><br><span class=\"line\">      &lt;li v-<span class=\"keyword\">for</span>=<span class=\"string\">\"historyItem in history\"</span> @click=<span class=\"string\">\"getData(historyItem)\"</span>&gt;&#123;&#123;historyItem&#125;&#125;&lt;<span class=\"regexp\">/li&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;/u</span>l&gt;</span><br><span class=\"line\">&lt;<span class=\"regexp\">/template&gt;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">&lt;script&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">export default &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">  created()&#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    /</span><span class=\"regexp\">/组件二接受</span></span><br><span class=\"line\"><span class=\"regexp\">/</span><span class=\"regexp\">/    Hub.$on('change', (msg) =&gt; &#123; /</span><span class=\"regexp\">/Hub接收事件</span></span><br><span class=\"line\"><span class=\"regexp\">/</span><span class=\"regexp\">/      console.log(msg)</span></span><br><span class=\"line\"><span class=\"regexp\">/</span><span class=\"regexp\">/    &#125;);</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;,</span></span><br><span class=\"line\"><span class=\"regexp\">  data() &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    return &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">      hidden:false,</span></span><br><span class=\"line\"><span class=\"regexp\">      history:['html','css','css3','js','vue','react','php','java']</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;,</span></span><br><span class=\"line\"><span class=\"regexp\">  computed: &#123;&#125;,</span></span><br><span class=\"line\"><span class=\"regexp\">  methods: &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    getData(value)&#123;</span></span><br><span class=\"line\"><span class=\"regexp\">      console.log(value)</span></span><br><span class=\"line\"><span class=\"regexp\">      this.$emit('getValue',value,this.hidden); /</span><span class=\"regexp\">/主动触发upup方法，</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>script&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"以上例子主要使用了父子组件之间的相互传递\"><a href=\"#以上例子主要使用了父子组件之间的相互传递\" class=\"headerlink\" title=\"以上例子主要使用了父子组件之间的相互传递\"></a>以上例子主要使用了父子组件之间的相互传递</h2><hr>\n<h3 id=\"父传子：\"><a href=\"#父传子：\" class=\"headerlink\" title=\"父传子：\"></a>父传子：</h3><p>父组件定义一个变量</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select-input</span> @<span class=\"attr\">upup</span>=<span class=\"string\">\"setData\"</span> <span class=\"attr\">:msgfromfather</span>=<span class=\"string\">\"value\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">select-input</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>子组件props接受并回显</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;input type=<span class=\"string\">\"text\"</span> placeholder=<span class=\"string\">\"请输入搜索关键字\"</span> <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"searchInput\"</span> @click=<span class=\"string\">\"up\"</span> :value=<span class=\"string\">\"msgfromfather\"</span>/&gt;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  data()&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      showList: <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  created()&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  props: [<span class=\"string\">'msgfromfather'</span>],</span><br><span class=\"line\">  computed: &#123;&#125;,</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\">    up() &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.$emit(<span class=\"string\">'upup'</span>,<span class=\"keyword\">this</span>.showList); <span class=\"comment\">//主动触发upup方法，</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"子传父\"><a href=\"#子传父\" class=\"headerlink\" title=\"子传父\"></a>子传父</h3><p>子组件点击事件$emit触发父组件的事件，父组件事件中接受传递过来的数据</p>\n<h4 id=\"子组件\"><a href=\"#子组件\" class=\"headerlink\" title=\"子组件\"></a>子组件</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"historyItem in history\"</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"getData(historyItem)\"</span>&gt;</span>&#123;&#123;historyItem&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">methods: &#123;</span><br><span class=\"line\">  getData(value)&#123;</span><br><span class=\"line\">    console.log(value)</span><br><span class=\"line\">    this.$emit('getValue',value,this.hidden); //主动触发upup方法，</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"父组件\"><a href=\"#父组件\" class=\"headerlink\" title=\"父组件\"></a>父组件</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">list</span> <span class=\"attr\">v-if</span>=<span class=\"string\">\"showList\"</span> @<span class=\"attr\">getValue</span>=<span class=\"string\">\"getValueData\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">list</span>&gt;</span></span><br><span class=\"line\">getValueData(msg,msg1)&#123;</span><br><span class=\"line\">  console.log(\"触发了这个事件了:\",msg,msg1)</span><br><span class=\"line\">  this.value = msg</span><br><span class=\"line\">  this.showList = msg1</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>1.2.3.0新增的语法糖2.这种就不涉及到通过方法去操控父组件中的data改变，而是利用子传父的思想，把props中的属性值和父组件中的data形成捆绑，利用$emit改变子组件的data，变相改变了父组件中的data</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div id=<span class=\"string\">\"app\"</span>&gt;</span><br><span class=\"line\">    &#123;&#123;count&#125;&#125;    &lt;!--子组件用来传递父组件的方法--&gt;</span><br><span class=\"line\">    &lt;my-Com2 v-bind:parent-Count.sync = <span class=\"string\">'count'</span>&gt;<span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">my-Com2</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;template id=<span class=\"string\">\"com\"</span>&gt;</span><br><span class=\"line\">    &lt;!--在组件内部特意定义了一个触发父组件方法的点击事件--&gt;</span><br><span class=\"line\">    &lt;button @click=<span class=\"string\">\"changeParent\"</span>&gt;操作父组件的子组件方法&lt;<span class=\"regexp\">/button&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> myCom2 = &#123;        </span><br><span class=\"line\">        template:<span class=\"string\">'#com'</span>,</span><br><span class=\"line\">        data()&#123;            </span><br><span class=\"line\">        <span class=\"keyword\">return</span> &#123;                </span><br><span class=\"line\">            title:<span class=\"string\">'子组件'</span>,</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;,        </span><br><span class=\"line\">        <span class=\"comment\">// 父传子</span></span><br><span class=\"line\">        props:[<span class=\"string\">'parentCount'</span>],        </span><br><span class=\"line\">        methods:&#123;          </span><br><span class=\"line\">            <span class=\"comment\">// 用来专门触发父组件方法子组件，用来触发$emit</span></span><br><span class=\"line\">            changeParent()&#123;                </span><br><span class=\"line\">                <span class=\"comment\">// 根据上面的介绍原则等号左面的属于子组件的右面属于父组件</span></span><br><span class=\"line\">                <span class=\"comment\">// 将父子组件data 都绑定在一起，改变子组件就是改变了父组件</span></span><br><span class=\"line\">                <span class=\"keyword\">this</span>.$emit(<span class=\"string\">'update:parentCount'</span>,<span class=\"number\">1000</span>)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">    &#125;;    </span><br><span class=\"line\">    <span class=\"keyword\">var</span> vm = <span class=\"keyword\">new</span> Vue(&#123;        </span><br><span class=\"line\">        el: <span class=\"string\">'#app'</span>,        </span><br><span class=\"line\">        data:&#123;          </span><br><span class=\"line\">            count:<span class=\"number\">0</span>,</span><br><span class=\"line\">        &#125;,        </span><br><span class=\"line\">        components:&#123;            </span><br><span class=\"line\">            <span class=\"comment\">// 在外部声明变量，使用代码简洁</span></span><br><span class=\"line\">            myCom2,</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"兄弟组件之间的通信\"><a href=\"#兄弟组件之间的通信\" class=\"headerlink\" title=\"兄弟组件之间的通信\"></a>兄弟组件之间的通信</h3><blockquote>\n<p>如果2个组件不是父子组件那么如何通信呢？这时可以通过eventHub来实现通信.<br>所谓eventHub就是创建一个事件中心，相当于中转站，可以用它来传递事件和接收事件.</p>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">let Hub = new Vue(); //创建事件中心</span><br></pre></td></tr></table></figure>\n<p>组件1触发:   </p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"eve\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span>methods: &#123;</span><br><span class=\"line\">    eve() &#123;</span><br><span class=\"line\">        Hub.$emit('change','hehe'); //Hub触发事件</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>组件2触发:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">created() &#123;</span><br><span class=\"line\">    Hub.$on('change', () =&gt; &#123; //Hub接收事件        this.msg = 'hehe';</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这样就实现了非父子组件之间的通信了.原理就是把Hub当作一个中转站！</p>"},{"title":"移动端（微信等）使用 vConsole调试console","date":"2019-06-16T07:10:29.000Z","_content":"\n移动端和h5的混合开发模式，在h5中调用原生的方法来获取数据的交互特别多，但是提示比较困难，因为在应用中不像浏览器，无法打开控制台，改如何调试呢？\n\n#### use\n```javascript\nnpm install vconsole\n\nimport VConsole from 'vconsole/dist/vconsole.min.js' //import vconsole\nlet vConsole = new VConsole() // 初始化\n```\n<!-- more -->\n或者，找到模块下面的dist/vconsole.min.js ，然后复制到自己的项目中\n```html\n<head>\n    <script src=\"dist/vconsole.min.js\"></script>\n</head>\n<!--建议在 `<head>` 中引入哦~ -->\n<script>\n  // 初始化\n  var vConsole = new VConsole();\n  console.log('VConsole is cool');\n</script>\n```\n\n![blockchain](https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/vconsole1.png)\n![blockchain](https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/vconsole.png)\n\n出现上面的就是安装成功了！\n\n> 请注意，VConsole 只是 vConsole 的原型，而非一个已实例化的对象。所以在手动 new 实例化之前，vConsole 不会被插入到网页中。\n\n[官方文档](https://github.com/Tencent/vConsole/blob/dev/doc/tutorial_CN.md)","source":"_posts/jc-9.md","raw":"---\ntitle: 移动端（微信等）使用 vConsole调试console\ncategories: gc-end\ndate: 2019-06-16 15:10:29\ntags: js vConsole\n---\n\n移动端和h5的混合开发模式，在h5中调用原生的方法来获取数据的交互特别多，但是提示比较困难，因为在应用中不像浏览器，无法打开控制台，改如何调试呢？\n\n#### use\n```javascript\nnpm install vconsole\n\nimport VConsole from 'vconsole/dist/vconsole.min.js' //import vconsole\nlet vConsole = new VConsole() // 初始化\n```\n<!-- more -->\n或者，找到模块下面的dist/vconsole.min.js ，然后复制到自己的项目中\n```html\n<head>\n    <script src=\"dist/vconsole.min.js\"></script>\n</head>\n<!--建议在 `<head>` 中引入哦~ -->\n<script>\n  // 初始化\n  var vConsole = new VConsole();\n  console.log('VConsole is cool');\n</script>\n```\n\n![blockchain](https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/vconsole1.png)\n![blockchain](https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/vconsole.png)\n\n出现上面的就是安装成功了！\n\n> 请注意，VConsole 只是 vConsole 的原型，而非一个已实例化的对象。所以在手动 new 实例化之前，vConsole 不会被插入到网页中。\n\n[官方文档](https://github.com/Tencent/vConsole/blob/dev/doc/tutorial_CN.md)","slug":"jc-9","published":1,"updated":"2020-07-01T09:12:26.385Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdr00y5z001pe7zc2un52hwy","content":"<p>移动端和h5的混合开发模式，在h5中调用原生的方法来获取数据的交互特别多，但是提示比较困难，因为在应用中不像浏览器，无法打开控制台，改如何调试呢？</p>\n<h4 id=\"use\"><a href=\"#use\" class=\"headerlink\" title=\"use\"></a>use</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install vconsole</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> VConsole <span class=\"keyword\">from</span> <span class=\"string\">'vconsole/dist/vconsole.min.js'</span> <span class=\"comment\">//import vconsole</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> vConsole = <span class=\"keyword\">new</span> VConsole() <span class=\"comment\">// 初始化</span></span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<p>或者，找到模块下面的dist/vconsole.min.js ，然后复制到自己的项目中<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"dist/vconsole.min.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--建议在 `&lt;head&gt;` 中引入哦~ --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\">  <span class=\"comment\">// 初始化</span></span></span><br><span class=\"line\"><span class=\"javascript\">  <span class=\"keyword\">var</span> vConsole = <span class=\"keyword\">new</span> VConsole();</span></span><br><span class=\"line\"><span class=\"javascript\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'VConsole is cool'</span>);</span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/vconsole1.png\" alt=\"blockchain\"><br><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/vconsole.png\" alt=\"blockchain\"></p>\n<p>出现上面的就是安装成功了！</p>\n<blockquote>\n<p>请注意，VConsole 只是 vConsole 的原型，而非一个已实例化的对象。所以在手动 new 实例化之前，vConsole 不会被插入到网页中。</p>\n</blockquote>\n<p><a href=\"https://github.com/Tencent/vConsole/blob/dev/doc/tutorial_CN.md\" target=\"_blank\" rel=\"noopener\">官方文档</a></p>\n","site":{"data":{}},"excerpt":"<p>移动端和h5的混合开发模式，在h5中调用原生的方法来获取数据的交互特别多，但是提示比较困难，因为在应用中不像浏览器，无法打开控制台，改如何调试呢？</p>\n<h4 id=\"use\"><a href=\"#use\" class=\"headerlink\" title=\"use\"></a>use</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install vconsole</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> VConsole <span class=\"keyword\">from</span> <span class=\"string\">'vconsole/dist/vconsole.min.js'</span> <span class=\"comment\">//import vconsole</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> vConsole = <span class=\"keyword\">new</span> VConsole() <span class=\"comment\">// 初始化</span></span><br></pre></td></tr></table></figure>","more":"<p>或者，找到模块下面的dist/vconsole.min.js ，然后复制到自己的项目中<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"dist/vconsole.min.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--建议在 `&lt;head&gt;` 中引入哦~ --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\">  <span class=\"comment\">// 初始化</span></span></span><br><span class=\"line\"><span class=\"javascript\">  <span class=\"keyword\">var</span> vConsole = <span class=\"keyword\">new</span> VConsole();</span></span><br><span class=\"line\"><span class=\"javascript\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'VConsole is cool'</span>);</span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/vconsole1.png\" alt=\"blockchain\"><br><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/vconsole.png\" alt=\"blockchain\"></p>\n<p>出现上面的就是安装成功了！</p>\n<blockquote>\n<p>请注意，VConsole 只是 vConsole 的原型，而非一个已实例化的对象。所以在手动 new 实例化之前，vConsole 不会被插入到网页中。</p>\n</blockquote>\n<p><a href=\"https://github.com/Tencent/vConsole/blob/dev/doc/tutorial_CN.md\" target=\"_blank\" rel=\"noopener\">官方文档</a></p>"},{"title":"nodetips","date":"2019-08-30T08:08:59.000Z","_content":"\n## 需求\n设计师给了一堆任务头像，文件名乱七八糟的，我这边其实就一个循环就渲染出来了，所以得统一按下标重新命名一下，五百多张不可能一张一张改吧，那只能通过程序来循环改了，前端页面仔这可怎么搞？\n\n<!-- more -->\n\n那还不简单嘛这简单的需求，node轻松搞定\n\n## fs.readdir\n\nfs.readdir(path[, options], callback)\n+ path <string> | <Buffer> | <URL>\n+ options <string> | <Object>\n  + encoding <string> 默认值: 'utf8'。\n  + withFileTypes <boolean> 默认值: false。\n+ callback <Function>\n\n异步的 readdir(3)。 读取目录的内容。 回调有两个参数 (err, files)，其中 files 是目录中的文件名的数组（不包括 '.' 和 '..'）。\n\n可选的 options 参数可以是指定编码的字符串，也可以是具有 encoding 属性的对象，该属性指定用于传给回调的文件名的字符编码。 如果 encoding 设置为 'buffer'，则返回的文件名是 Buffer 对象。\n\n如果 options.withFileTypes 设置为 true，则 files 数组将包含 fs.Dirent 对象。\n\n---\n\n## rename\nfs.rename(oldPath, newPath, callback)\n+ oldPath <string> | <Buffer> | <URL>\n+ newPath <string> | <Buffer> | <URL>\n+ callback <Function>\n\n异步地将 oldPath 上的文件重命名为 newPath 提供的路径名。 如果 newPath 已存在，则覆盖它。 除了可能的异常，完成回调没有其他参数。\n\n```javasctipt\nfs.rename('旧文件.txt', '新文件.txt', (err) => {\n  if (err) throw err;\n  console.log('重命名完成');\n});\n```\n---\n\n好了吧，比较简单，直接贴实现以上需求的js代码\n```javascript\n/** \n * use: 批量修改本地文件的文件名\n * \n * conditions: 本地一定要全局安装node环境\n * \n*/\nlet fs = require(\"fs\");\n// 操作的文件的文件名\nlet src = 'imgs';\n\n// 读取指定目录下的文件\nfs.readdir(src, function(err, files){\n  console.log(files) // [ '2.png', '5.png', '7.png' ]\n  files.forEach(function(fileName, index){\n    let oldPath = src + '/' + fileName\n    let newPath = src + '/' + (index + 1) + '.' + fileName.split('.')[1]\n    // 重新命名文件名称\n    fs.rename(oldPath, newPath, function(err){\n      // throw new Error('asdasdad') \n      // 返回 error: asdasdad,error_code: 500,\n      if (err) throw err\n      console.log('重命名成功！')\n    })\n  })\n})\n```\n> 命令行执行 node 文件名.js\n\n","source":"_posts/nodetips.md","raw":"---\ntitle: nodetips\ncategories: js-end\ndate: 2019-08-30 16:08:59\ntags: node\n---\n\n## 需求\n设计师给了一堆任务头像，文件名乱七八糟的，我这边其实就一个循环就渲染出来了，所以得统一按下标重新命名一下，五百多张不可能一张一张改吧，那只能通过程序来循环改了，前端页面仔这可怎么搞？\n\n<!-- more -->\n\n那还不简单嘛这简单的需求，node轻松搞定\n\n## fs.readdir\n\nfs.readdir(path[, options], callback)\n+ path <string> | <Buffer> | <URL>\n+ options <string> | <Object>\n  + encoding <string> 默认值: 'utf8'。\n  + withFileTypes <boolean> 默认值: false。\n+ callback <Function>\n\n异步的 readdir(3)。 读取目录的内容。 回调有两个参数 (err, files)，其中 files 是目录中的文件名的数组（不包括 '.' 和 '..'）。\n\n可选的 options 参数可以是指定编码的字符串，也可以是具有 encoding 属性的对象，该属性指定用于传给回调的文件名的字符编码。 如果 encoding 设置为 'buffer'，则返回的文件名是 Buffer 对象。\n\n如果 options.withFileTypes 设置为 true，则 files 数组将包含 fs.Dirent 对象。\n\n---\n\n## rename\nfs.rename(oldPath, newPath, callback)\n+ oldPath <string> | <Buffer> | <URL>\n+ newPath <string> | <Buffer> | <URL>\n+ callback <Function>\n\n异步地将 oldPath 上的文件重命名为 newPath 提供的路径名。 如果 newPath 已存在，则覆盖它。 除了可能的异常，完成回调没有其他参数。\n\n```javasctipt\nfs.rename('旧文件.txt', '新文件.txt', (err) => {\n  if (err) throw err;\n  console.log('重命名完成');\n});\n```\n---\n\n好了吧，比较简单，直接贴实现以上需求的js代码\n```javascript\n/** \n * use: 批量修改本地文件的文件名\n * \n * conditions: 本地一定要全局安装node环境\n * \n*/\nlet fs = require(\"fs\");\n// 操作的文件的文件名\nlet src = 'imgs';\n\n// 读取指定目录下的文件\nfs.readdir(src, function(err, files){\n  console.log(files) // [ '2.png', '5.png', '7.png' ]\n  files.forEach(function(fileName, index){\n    let oldPath = src + '/' + fileName\n    let newPath = src + '/' + (index + 1) + '.' + fileName.split('.')[1]\n    // 重新命名文件名称\n    fs.rename(oldPath, newPath, function(err){\n      // throw new Error('asdasdad') \n      // 返回 error: asdasdad,error_code: 500,\n      if (err) throw err\n      console.log('重命名成功！')\n    })\n  })\n})\n```\n> 命令行执行 node 文件名.js\n\n","slug":"nodetips","published":1,"updated":"2020-07-01T09:12:26.386Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdr00y60001re7zc9ongolhe","content":"<h2 id=\"需求\"><a href=\"#需求\" class=\"headerlink\" title=\"需求\"></a>需求</h2><p>设计师给了一堆任务头像，文件名乱七八糟的，我这边其实就一个循环就渲染出来了，所以得统一按下标重新命名一下，五百多张不可能一张一张改吧，那只能通过程序来循环改了，前端页面仔这可怎么搞？</p>\n<a id=\"more\"></a>\n<p>那还不简单嘛这简单的需求，node轻松搞定</p>\n<h2 id=\"fs-readdir\"><a href=\"#fs-readdir\" class=\"headerlink\" title=\"fs.readdir\"></a>fs.readdir</h2><p>fs.readdir(path[, options], callback)</p>\n<ul>\n<li>path <string> | <buffer> | <url></url></buffer></string></li>\n<li>options <string> | <object><ul>\n<li>encoding <string> 默认值: ‘utf8’。</string></li>\n<li>withFileTypes <boolean> 默认值: false。</boolean></li>\n</ul>\n</object></string></li>\n<li>callback <function></function></li>\n</ul>\n<p>异步的 readdir(3)。 读取目录的内容。 回调有两个参数 (err, files)，其中 files 是目录中的文件名的数组（不包括 ‘.’ 和 ‘..’）。</p>\n<p>可选的 options 参数可以是指定编码的字符串，也可以是具有 encoding 属性的对象，该属性指定用于传给回调的文件名的字符编码。 如果 encoding 设置为 ‘buffer’，则返回的文件名是 Buffer 对象。</p>\n<p>如果 options.withFileTypes 设置为 true，则 files 数组将包含 fs.Dirent 对象。</p>\n<hr>\n<h2 id=\"rename\"><a href=\"#rename\" class=\"headerlink\" title=\"rename\"></a>rename</h2><p>fs.rename(oldPath, newPath, callback)</p>\n<ul>\n<li>oldPath <string> | <buffer> | <url></url></buffer></string></li>\n<li>newPath <string> | <buffer> | <url></url></buffer></string></li>\n<li>callback <function></function></li>\n</ul>\n<p>异步地将 oldPath 上的文件重命名为 newPath 提供的路径名。 如果 newPath 已存在，则覆盖它。 除了可能的异常，完成回调没有其他参数。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fs.rename(&apos;旧文件.txt&apos;, &apos;新文件.txt&apos;, (err) =&gt; &#123;</span><br><span class=\"line\">  if (err) throw err;</span><br><span class=\"line\">  console.log(&apos;重命名完成&apos;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<hr>\n<p>好了吧，比较简单，直接贴实现以上需求的js代码<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/** </span></span><br><span class=\"line\"><span class=\"comment\"> * use: 批量修改本地文件的文件名</span></span><br><span class=\"line\"><span class=\"comment\"> * </span></span><br><span class=\"line\"><span class=\"comment\"> * conditions: 本地一定要全局安装node环境</span></span><br><span class=\"line\"><span class=\"comment\"> * </span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">\"fs\"</span>);</span><br><span class=\"line\"><span class=\"comment\">// 操作的文件的文件名</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> src = <span class=\"string\">'imgs'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 读取指定目录下的文件</span></span><br><span class=\"line\">fs.readdir(src, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">err, files</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(files) <span class=\"comment\">// [ '2.png', '5.png', '7.png' ]</span></span><br><span class=\"line\">  files.forEach(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">fileName, index</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> oldPath = src + <span class=\"string\">'/'</span> + fileName</span><br><span class=\"line\">    <span class=\"keyword\">let</span> newPath = src + <span class=\"string\">'/'</span> + (index + <span class=\"number\">1</span>) + <span class=\"string\">'.'</span> + fileName.split(<span class=\"string\">'.'</span>)[<span class=\"number\">1</span>]</span><br><span class=\"line\">    <span class=\"comment\">// 重新命名文件名称</span></span><br><span class=\"line\">    fs.rename(oldPath, newPath, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">err</span>)</span>&#123;</span><br><span class=\"line\">      <span class=\"comment\">// throw new Error('asdasdad') </span></span><br><span class=\"line\">      <span class=\"comment\">// 返回 error: asdasdad,error_code: 500,</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (err) <span class=\"keyword\">throw</span> err</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">'重命名成功！'</span>)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>命令行执行 node 文件名.js</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<h2 id=\"需求\"><a href=\"#需求\" class=\"headerlink\" title=\"需求\"></a>需求</h2><p>设计师给了一堆任务头像，文件名乱七八糟的，我这边其实就一个循环就渲染出来了，所以得统一按下标重新命名一下，五百多张不可能一张一张改吧，那只能通过程序来循环改了，前端页面仔这可怎么搞？</p>","more":"<p>那还不简单嘛这简单的需求，node轻松搞定</p>\n<h2 id=\"fs-readdir\"><a href=\"#fs-readdir\" class=\"headerlink\" title=\"fs.readdir\"></a>fs.readdir</h2><p>fs.readdir(path[, options], callback)</p>\n<ul>\n<li>path <string> | <buffer> | <url></url></buffer></string></li>\n<li>options <string> | <object><ul>\n<li>encoding <string> 默认值: ‘utf8’。</string></li>\n<li>withFileTypes <boolean> 默认值: false。</boolean></li>\n</ul>\n</object></string></li>\n<li>callback <function></function></li>\n</ul>\n<p>异步的 readdir(3)。 读取目录的内容。 回调有两个参数 (err, files)，其中 files 是目录中的文件名的数组（不包括 ‘.’ 和 ‘..’）。</p>\n<p>可选的 options 参数可以是指定编码的字符串，也可以是具有 encoding 属性的对象，该属性指定用于传给回调的文件名的字符编码。 如果 encoding 设置为 ‘buffer’，则返回的文件名是 Buffer 对象。</p>\n<p>如果 options.withFileTypes 设置为 true，则 files 数组将包含 fs.Dirent 对象。</p>\n<hr>\n<h2 id=\"rename\"><a href=\"#rename\" class=\"headerlink\" title=\"rename\"></a>rename</h2><p>fs.rename(oldPath, newPath, callback)</p>\n<ul>\n<li>oldPath <string> | <buffer> | <url></url></buffer></string></li>\n<li>newPath <string> | <buffer> | <url></url></buffer></string></li>\n<li>callback <function></function></li>\n</ul>\n<p>异步地将 oldPath 上的文件重命名为 newPath 提供的路径名。 如果 newPath 已存在，则覆盖它。 除了可能的异常，完成回调没有其他参数。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fs.rename(&apos;旧文件.txt&apos;, &apos;新文件.txt&apos;, (err) =&gt; &#123;</span><br><span class=\"line\">  if (err) throw err;</span><br><span class=\"line\">  console.log(&apos;重命名完成&apos;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<hr>\n<p>好了吧，比较简单，直接贴实现以上需求的js代码<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/** </span></span><br><span class=\"line\"><span class=\"comment\"> * use: 批量修改本地文件的文件名</span></span><br><span class=\"line\"><span class=\"comment\"> * </span></span><br><span class=\"line\"><span class=\"comment\"> * conditions: 本地一定要全局安装node环境</span></span><br><span class=\"line\"><span class=\"comment\"> * </span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">\"fs\"</span>);</span><br><span class=\"line\"><span class=\"comment\">// 操作的文件的文件名</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> src = <span class=\"string\">'imgs'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 读取指定目录下的文件</span></span><br><span class=\"line\">fs.readdir(src, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">err, files</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(files) <span class=\"comment\">// [ '2.png', '5.png', '7.png' ]</span></span><br><span class=\"line\">  files.forEach(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">fileName, index</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> oldPath = src + <span class=\"string\">'/'</span> + fileName</span><br><span class=\"line\">    <span class=\"keyword\">let</span> newPath = src + <span class=\"string\">'/'</span> + (index + <span class=\"number\">1</span>) + <span class=\"string\">'.'</span> + fileName.split(<span class=\"string\">'.'</span>)[<span class=\"number\">1</span>]</span><br><span class=\"line\">    <span class=\"comment\">// 重新命名文件名称</span></span><br><span class=\"line\">    fs.rename(oldPath, newPath, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">err</span>)</span>&#123;</span><br><span class=\"line\">      <span class=\"comment\">// throw new Error('asdasdad') </span></span><br><span class=\"line\">      <span class=\"comment\">// 返回 error: asdasdad,error_code: 500,</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (err) <span class=\"keyword\">throw</span> err</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">'重命名成功！'</span>)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>命令行执行 node 文件名.js</p>\n</blockquote>"},{"title":"简单总结常用的正则表达式的Api","date":"2019-09-06T03:17:00.000Z","_content":"\n正则表达式可以: \n+ 测试字符串的某个模式。例如，可以对一个输入字符串进行测试，看在该字符串是否存在一个电话号码模式或一个信用卡号码模式。这称为数据有效性验证 \n+ 替换文本。可以在文档中使用一个正则表达式来标识特定文字，然后可以全部将其删除，或者替换为别的文字 \n+ 根据模式匹配从字符串中提取一个子字符串。可以用来在文本或输入字段中查找特定文字 \n\n<!-- more -->\n\n## 正则表达式对象的方法\n+ test,返回一个 Boolean 值，它指出在被查找的字符串中是否存在模式。如果存在则返回 true，否则就返回 false。\n+ exec,用正则表达式模式在字符串中运行查找，并返回含该查找结果的一个数组。\n+ compile,把正则表达式编译为内部格式，从而执行得更快。\n\n```javascript\ng （全文查找）\ni （忽略大小写）\nm （多行查找）\n^ 代表字符开始位置\n$ 代表字符结束位置\n```\n### test方法,测试字符串,符合模式时返回true,否则返回false\n```javascript\nvar reg = /he/\nvar reg1 = /he/i\nvar str = 'heaa'\nconsole.log(reg.test(str)) // true\nvar str1 = 'ahae'\nconsole.log(reg.test(str1)) // false\nvar str2 = 'HEHE'\nconsole.log(reg.test(str2)) // false\nconsole.log(reg1.test(str2)) // true\n\nreg = /\\s/;// \\s匹配任何空白字符，包括空格、制表符、换页符等等\nstr= \"user Name\";//用户名包含空格\nalert(reg.test(str));//true\n\nreg=/^[a-z]/i;//[]匹配指定范围内的任意字符,这里将匹配英文字母,不区分大小写\nstr=\"variableName\";//变量名必须以字母开头\nalert(reg.test(str));//true\nstr=\"123abc\";\nalert(reg.test(str));//false\n\nvar osVersion = \"Ubuntu 8\";//其中的8表示系统主版本号\nvar re = /^[a-z]+\\s+\\d+$/i; //+号表示字符至少要出现1次,\\s表示空白字符,\\d表示一个数字\nalert(re.test(osVersion));//true,但我们想知道主版本号\n```\n### exec,返回一个数组,数组的第一个元素为完整的匹配内容\n```javascript\nvar osVersion = \"Ubuntu 8\"\nre=/^[a-z]+\\s+\\d+$/i;\narr = re.exec(osVersion);\nconsole.log(arr[0]) // Ubuntu 8\n\nre=/\\d+/;\nvar arr = re.exec(osVersion);\nconsole.log(arr, arr[0]);//8\n\nvar osVersion = \"Ubuntu 822 11\"\nvar arr = re.exec(osVersion);\nconsole.log(arr, arr[0]);//822\n\nvar osVersion = \"Ubuntu 8\"\nre=/^[a-z]+\\s+(\\d+)$/i;//用()来创建子匹配\narr = re.exec(osVersion)\nconsole.log(arr) // [\"Ubuntu 8\", \"8\"]\nconsole.log(arr[0]);//整个osVersion,也就是正则表达式的完整匹配\nconsole.log(arr[1]);//8,第一个子匹配,事实也可以这样取出主版本号\nconsole.log(arr.length); // 2\nosVersion = \"Ubuntu 8.10\";//取出主版本号和次版本号\nre = /^[a-z]+\\s+\\d+\\.\\d+$/i//.是正则表达式元字符之一,若要用它的字面意义须转义\narr = re.exec(osVersion)\nconsole.log(arr, arr[0], arr[1], arr[2])// [Ubuntu 8.10]\nconsole.log(arr.length)// 1\nre = /^[a-z]+\\s+(\\d+)\\.(\\d+)$/i//.是正则表达式元字符之一,若要用它的字面意义须转义\narr = re.exec(osVersion)\nconsole.log(arr, arr[0], arr[1], arr[2])// [Ubuntu 8.10, 8, 10]\nconsole.log(arr.length)// 3\n```\n\n> 当字符串不匹配re时,exec方法将返回null\n\n```javascript\nvar osVersion = \"Ubuntu 8\"\nvar reg = /aa/\nvar arr = reg.exec(osVersion)\nconsole.log(arr) // null\n```\n## String对象的一些和正则表达式有关的方法\n\n### replace方法,用于替换字符串\n```javascript\nvar str = 'some money'\nvar str1 = str.replace('some', 'much')\nconsole.log(str1) // much money\n```\nreplace的第一个参数可以为正则表达式\n```javascript\nvar re = /\\s/;//空白字符\nalert(str.replace(re,\"%\"));//some%money\n\nstr =\"some some             \\tsome\\t\\f\";\nre = /\\s+/;\nalert(str.replace(re,\"#\"));//但这样只会将第一次出现的一堆空白字符替换掉\n```\n因为一个正则表达式只能进行一次匹配,\\s+匹配了第一个空格后就退出了\n```javascript\nre = /\\s+/g;//g,全局标志,将使正则表达式匹配整个字符串\nalert(str.replace(re,\"@\"));//some@some@some@\n```\n\n### split\n\n```javascript\nvar str = \"a-bd-c\";\nvar arr = str.split(\"-\");//返回[\"a\",\"bd\",\"c\"]\n如果str是用户输入的,他可能输入a-bd-c也可能输入a bd c或a_bd_c,但不会是abdc(这样就说他输错了)\nstr = \"a_db-c\";//用户以他喜欢的方式加分隔符s\nre=/[^a-z]/ig;//前面我们说^表示字符开始,但在[]里它表示一个负字符集\n//匹配任何不在指定范围内的任意字符,这里将匹配除字母处的所有字符\narr = str.split(re);//仍返回[\"a\",\"bd\",\"c\"];\nstr1 = str.replace(re, '@') // a@db@c\n```\n\n### search  在字符串中查找时我们常用indexOf,与之对应用于正则查找的方法是search\n```javascript\nstr = \"My age is 18.Golden age!\";//年龄不是一定的,我们用indexOf不能查找它的位置\nre = /\\d+/;\nalert(str.search(re));//返回查找到的字符串开始下标10\n//注意,因为查找本身就是出现第一次就立即返回,所以无需在search时使用g标志\n//下面的代码虽然不出错,但g标志是多余的\nre=/\\d+/g;\nalert(str.search(re));//仍然是10\n```\n\n> 注意,当search方法没有找到匹配时,将返回-1\n\n### match 方法也用于将字符串与正则表达式进行匹配并返回结果数组\n```javascript\nvar str = \"My name is CJ.Hello everyone!\";\nre = /[A-Z]/g;\narr = str.match(re);\nalert(arr);//M,C,J,H\n\n// 从字符串中抽取单词\nre = /\\b[a-z]*\\b/gi;//\\b表示单词边界\nstr = \"one two three four\";\nalert(str.match(re));//one,two,three,four\n```\n\n## 特殊字符\n字符|描述\n---|:--:\n\\n |换行符 \n\\r |回车符 \n\\t |制表符 \n\\f |换页符（Tab） \n\\cX|与X对应的控制字符 \n\\b |退格符(BackSpace) \n\\v |垂直制表符 \n\\0 |空字符(\"\") \n\n## 字符类 \n\n简单类，反向类，范围类，组合类，预定义类\n\n```javascript\n//简单类  \nvar re = /[abc123]/;//将匹配abc123这6个字符中一个  \n//负向类  \nre = /[^abc]/;//将匹配除abc之外的一个字符  \n//范围类  \nre = /[a-b]/;//将匹配小写a-b 26个字母  \nre = /[^0-9]/;//将匹配除0-9 10个字符之处的一个字符  \n//组合类  \nre = /[a-b0-9A-Z_]/;//将匹配字母，数字和下划线  \n```\n\n## 预定义类\n代码|等同于|匹配\n---|:--:|:--:\n.  |IE下[^\\n]，其它[^\\n\\r]  |匹配除换行符之外的任何一个字符 \n\\d |[0-9]               |    匹配数字 \n\\D |[^0-9]              |    匹配非数字字符 \n\\s |[ \\n\\r\\t\\f\\x0B]     |    匹配一个空白字符 \n\\S |[^ \\n\\r\\t\\f\\x0B]    |    匹配一个非空白字符 \n\\w |[a-zA-Z0-9_]        |    匹配字母数字和下划线 \n\\W |[^a-zA-Z0-9_]       |    匹配除字母数字下划线之外的字符 \n\n## 量词\n代码|描述\n---|:--:\n* |匹配前面的子表达式零次或多次。例如，zo* 能匹配 \"z\" 以及 \"zoo\"。 * 等价于{0,}。 \n+ |匹配前面的子表达式一次或多次。例如，'zo+' 能匹配 \"zo\" 以及 \"zoo\"，但不能匹配 \"z\"。+ 等价于 {1,}。 \n? |匹配前面的子表达式零次或一次。例如，\"do(es)?\" 可以匹配 \"do\" 或 \"does\" 中的\"do\" 。? 等价于 {0,1}。 \n{n}|n 是一个非负整数。匹配确定的 n 次。例如，'o{2}' 不能匹配 \"Bob\" 中的 'o'，但是能匹配 \"food\" 中的两个 o。\n{n,}|n 是一个非负整数。至少匹配n 次。例如，'o{2,}' 不能匹配 \"Bob\" 中的 'o'，但能匹配 \"foooood\" 中的所有 o。'o{1,}' 等价于 'o+'。'o{0,}' 则等价于 'o*'。 \n{n,m}|m 和 n 均为非负整数，其中n <= m。最少匹配 n 次且最多匹配 m 次。刘， \"o{1,3}\" 将匹配 \"fooooood\" 中的前三个 o。'o{0,1}' 等价于 'o?'。请注意在逗号和两个数之间不能有空格。 \n","source":"_posts/regular.md","raw":"---\ntitle: 简单总结常用的正则表达式的Api\ncategories: js-end\ndate: 2019-09-06 11:17:00\ntags: js 正则\n---\n\n正则表达式可以: \n+ 测试字符串的某个模式。例如，可以对一个输入字符串进行测试，看在该字符串是否存在一个电话号码模式或一个信用卡号码模式。这称为数据有效性验证 \n+ 替换文本。可以在文档中使用一个正则表达式来标识特定文字，然后可以全部将其删除，或者替换为别的文字 \n+ 根据模式匹配从字符串中提取一个子字符串。可以用来在文本或输入字段中查找特定文字 \n\n<!-- more -->\n\n## 正则表达式对象的方法\n+ test,返回一个 Boolean 值，它指出在被查找的字符串中是否存在模式。如果存在则返回 true，否则就返回 false。\n+ exec,用正则表达式模式在字符串中运行查找，并返回含该查找结果的一个数组。\n+ compile,把正则表达式编译为内部格式，从而执行得更快。\n\n```javascript\ng （全文查找）\ni （忽略大小写）\nm （多行查找）\n^ 代表字符开始位置\n$ 代表字符结束位置\n```\n### test方法,测试字符串,符合模式时返回true,否则返回false\n```javascript\nvar reg = /he/\nvar reg1 = /he/i\nvar str = 'heaa'\nconsole.log(reg.test(str)) // true\nvar str1 = 'ahae'\nconsole.log(reg.test(str1)) // false\nvar str2 = 'HEHE'\nconsole.log(reg.test(str2)) // false\nconsole.log(reg1.test(str2)) // true\n\nreg = /\\s/;// \\s匹配任何空白字符，包括空格、制表符、换页符等等\nstr= \"user Name\";//用户名包含空格\nalert(reg.test(str));//true\n\nreg=/^[a-z]/i;//[]匹配指定范围内的任意字符,这里将匹配英文字母,不区分大小写\nstr=\"variableName\";//变量名必须以字母开头\nalert(reg.test(str));//true\nstr=\"123abc\";\nalert(reg.test(str));//false\n\nvar osVersion = \"Ubuntu 8\";//其中的8表示系统主版本号\nvar re = /^[a-z]+\\s+\\d+$/i; //+号表示字符至少要出现1次,\\s表示空白字符,\\d表示一个数字\nalert(re.test(osVersion));//true,但我们想知道主版本号\n```\n### exec,返回一个数组,数组的第一个元素为完整的匹配内容\n```javascript\nvar osVersion = \"Ubuntu 8\"\nre=/^[a-z]+\\s+\\d+$/i;\narr = re.exec(osVersion);\nconsole.log(arr[0]) // Ubuntu 8\n\nre=/\\d+/;\nvar arr = re.exec(osVersion);\nconsole.log(arr, arr[0]);//8\n\nvar osVersion = \"Ubuntu 822 11\"\nvar arr = re.exec(osVersion);\nconsole.log(arr, arr[0]);//822\n\nvar osVersion = \"Ubuntu 8\"\nre=/^[a-z]+\\s+(\\d+)$/i;//用()来创建子匹配\narr = re.exec(osVersion)\nconsole.log(arr) // [\"Ubuntu 8\", \"8\"]\nconsole.log(arr[0]);//整个osVersion,也就是正则表达式的完整匹配\nconsole.log(arr[1]);//8,第一个子匹配,事实也可以这样取出主版本号\nconsole.log(arr.length); // 2\nosVersion = \"Ubuntu 8.10\";//取出主版本号和次版本号\nre = /^[a-z]+\\s+\\d+\\.\\d+$/i//.是正则表达式元字符之一,若要用它的字面意义须转义\narr = re.exec(osVersion)\nconsole.log(arr, arr[0], arr[1], arr[2])// [Ubuntu 8.10]\nconsole.log(arr.length)// 1\nre = /^[a-z]+\\s+(\\d+)\\.(\\d+)$/i//.是正则表达式元字符之一,若要用它的字面意义须转义\narr = re.exec(osVersion)\nconsole.log(arr, arr[0], arr[1], arr[2])// [Ubuntu 8.10, 8, 10]\nconsole.log(arr.length)// 3\n```\n\n> 当字符串不匹配re时,exec方法将返回null\n\n```javascript\nvar osVersion = \"Ubuntu 8\"\nvar reg = /aa/\nvar arr = reg.exec(osVersion)\nconsole.log(arr) // null\n```\n## String对象的一些和正则表达式有关的方法\n\n### replace方法,用于替换字符串\n```javascript\nvar str = 'some money'\nvar str1 = str.replace('some', 'much')\nconsole.log(str1) // much money\n```\nreplace的第一个参数可以为正则表达式\n```javascript\nvar re = /\\s/;//空白字符\nalert(str.replace(re,\"%\"));//some%money\n\nstr =\"some some             \\tsome\\t\\f\";\nre = /\\s+/;\nalert(str.replace(re,\"#\"));//但这样只会将第一次出现的一堆空白字符替换掉\n```\n因为一个正则表达式只能进行一次匹配,\\s+匹配了第一个空格后就退出了\n```javascript\nre = /\\s+/g;//g,全局标志,将使正则表达式匹配整个字符串\nalert(str.replace(re,\"@\"));//some@some@some@\n```\n\n### split\n\n```javascript\nvar str = \"a-bd-c\";\nvar arr = str.split(\"-\");//返回[\"a\",\"bd\",\"c\"]\n如果str是用户输入的,他可能输入a-bd-c也可能输入a bd c或a_bd_c,但不会是abdc(这样就说他输错了)\nstr = \"a_db-c\";//用户以他喜欢的方式加分隔符s\nre=/[^a-z]/ig;//前面我们说^表示字符开始,但在[]里它表示一个负字符集\n//匹配任何不在指定范围内的任意字符,这里将匹配除字母处的所有字符\narr = str.split(re);//仍返回[\"a\",\"bd\",\"c\"];\nstr1 = str.replace(re, '@') // a@db@c\n```\n\n### search  在字符串中查找时我们常用indexOf,与之对应用于正则查找的方法是search\n```javascript\nstr = \"My age is 18.Golden age!\";//年龄不是一定的,我们用indexOf不能查找它的位置\nre = /\\d+/;\nalert(str.search(re));//返回查找到的字符串开始下标10\n//注意,因为查找本身就是出现第一次就立即返回,所以无需在search时使用g标志\n//下面的代码虽然不出错,但g标志是多余的\nre=/\\d+/g;\nalert(str.search(re));//仍然是10\n```\n\n> 注意,当search方法没有找到匹配时,将返回-1\n\n### match 方法也用于将字符串与正则表达式进行匹配并返回结果数组\n```javascript\nvar str = \"My name is CJ.Hello everyone!\";\nre = /[A-Z]/g;\narr = str.match(re);\nalert(arr);//M,C,J,H\n\n// 从字符串中抽取单词\nre = /\\b[a-z]*\\b/gi;//\\b表示单词边界\nstr = \"one two three four\";\nalert(str.match(re));//one,two,three,four\n```\n\n## 特殊字符\n字符|描述\n---|:--:\n\\n |换行符 \n\\r |回车符 \n\\t |制表符 \n\\f |换页符（Tab） \n\\cX|与X对应的控制字符 \n\\b |退格符(BackSpace) \n\\v |垂直制表符 \n\\0 |空字符(\"\") \n\n## 字符类 \n\n简单类，反向类，范围类，组合类，预定义类\n\n```javascript\n//简单类  \nvar re = /[abc123]/;//将匹配abc123这6个字符中一个  \n//负向类  \nre = /[^abc]/;//将匹配除abc之外的一个字符  \n//范围类  \nre = /[a-b]/;//将匹配小写a-b 26个字母  \nre = /[^0-9]/;//将匹配除0-9 10个字符之处的一个字符  \n//组合类  \nre = /[a-b0-9A-Z_]/;//将匹配字母，数字和下划线  \n```\n\n## 预定义类\n代码|等同于|匹配\n---|:--:|:--:\n.  |IE下[^\\n]，其它[^\\n\\r]  |匹配除换行符之外的任何一个字符 \n\\d |[0-9]               |    匹配数字 \n\\D |[^0-9]              |    匹配非数字字符 \n\\s |[ \\n\\r\\t\\f\\x0B]     |    匹配一个空白字符 \n\\S |[^ \\n\\r\\t\\f\\x0B]    |    匹配一个非空白字符 \n\\w |[a-zA-Z0-9_]        |    匹配字母数字和下划线 \n\\W |[^a-zA-Z0-9_]       |    匹配除字母数字下划线之外的字符 \n\n## 量词\n代码|描述\n---|:--:\n* |匹配前面的子表达式零次或多次。例如，zo* 能匹配 \"z\" 以及 \"zoo\"。 * 等价于{0,}。 \n+ |匹配前面的子表达式一次或多次。例如，'zo+' 能匹配 \"zo\" 以及 \"zoo\"，但不能匹配 \"z\"。+ 等价于 {1,}。 \n? |匹配前面的子表达式零次或一次。例如，\"do(es)?\" 可以匹配 \"do\" 或 \"does\" 中的\"do\" 。? 等价于 {0,1}。 \n{n}|n 是一个非负整数。匹配确定的 n 次。例如，'o{2}' 不能匹配 \"Bob\" 中的 'o'，但是能匹配 \"food\" 中的两个 o。\n{n,}|n 是一个非负整数。至少匹配n 次。例如，'o{2,}' 不能匹配 \"Bob\" 中的 'o'，但能匹配 \"foooood\" 中的所有 o。'o{1,}' 等价于 'o+'。'o{0,}' 则等价于 'o*'。 \n{n,m}|m 和 n 均为非负整数，其中n <= m。最少匹配 n 次且最多匹配 m 次。刘， \"o{1,3}\" 将匹配 \"fooooood\" 中的前三个 o。'o{0,1}' 等价于 'o?'。请注意在逗号和两个数之间不能有空格。 \n","slug":"regular","published":1,"updated":"2020-07-01T09:12:26.386Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdr00y61001ve7zcqt93bzjm","content":"<p>正则表达式可以: </p>\n<ul>\n<li>测试字符串的某个模式。例如，可以对一个输入字符串进行测试，看在该字符串是否存在一个电话号码模式或一个信用卡号码模式。这称为数据有效性验证 </li>\n<li>替换文本。可以在文档中使用一个正则表达式来标识特定文字，然后可以全部将其删除，或者替换为别的文字 </li>\n<li>根据模式匹配从字符串中提取一个子字符串。可以用来在文本或输入字段中查找特定文字 </li>\n</ul>\n<a id=\"more\"></a>\n<h2 id=\"正则表达式对象的方法\"><a href=\"#正则表达式对象的方法\" class=\"headerlink\" title=\"正则表达式对象的方法\"></a>正则表达式对象的方法</h2><ul>\n<li>test,返回一个 Boolean 值，它指出在被查找的字符串中是否存在模式。如果存在则返回 true，否则就返回 false。</li>\n<li>exec,用正则表达式模式在字符串中运行查找，并返回含该查找结果的一个数组。</li>\n<li>compile,把正则表达式编译为内部格式，从而执行得更快。</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">g （全文查找）</span><br><span class=\"line\">i （忽略大小写）</span><br><span class=\"line\">m （多行查找）</span><br><span class=\"line\">^ 代表字符开始位置</span><br><span class=\"line\">$ 代表字符结束位置</span><br></pre></td></tr></table></figure>\n<h3 id=\"test方法-测试字符串-符合模式时返回true-否则返回false\"><a href=\"#test方法-测试字符串-符合模式时返回true-否则返回false\" class=\"headerlink\" title=\"test方法,测试字符串,符合模式时返回true,否则返回false\"></a>test方法,测试字符串,符合模式时返回true,否则返回false</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> reg = <span class=\"regexp\">/he/</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> reg1 = <span class=\"regexp\">/he/i</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">'heaa'</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(reg.test(str)) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> str1 = <span class=\"string\">'ahae'</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(reg.test(str1)) <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> str2 = <span class=\"string\">'HEHE'</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(reg.test(str2)) <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(reg1.test(str2)) <span class=\"comment\">// true</span></span><br><span class=\"line\"></span><br><span class=\"line\">reg = <span class=\"regexp\">/\\s/</span>;<span class=\"comment\">// \\s匹配任何空白字符，包括空格、制表符、换页符等等</span></span><br><span class=\"line\">str= <span class=\"string\">\"user Name\"</span>;<span class=\"comment\">//用户名包含空格</span></span><br><span class=\"line\">alert(reg.test(str));<span class=\"comment\">//true</span></span><br><span class=\"line\"></span><br><span class=\"line\">reg=<span class=\"regexp\">/^[a-z]/i</span>;<span class=\"comment\">//[]匹配指定范围内的任意字符,这里将匹配英文字母,不区分大小写</span></span><br><span class=\"line\">str=<span class=\"string\">\"variableName\"</span>;<span class=\"comment\">//变量名必须以字母开头</span></span><br><span class=\"line\">alert(reg.test(str));<span class=\"comment\">//true</span></span><br><span class=\"line\">str=<span class=\"string\">\"123abc\"</span>;</span><br><span class=\"line\">alert(reg.test(str));<span class=\"comment\">//false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> osVersion = <span class=\"string\">\"Ubuntu 8\"</span>;<span class=\"comment\">//其中的8表示系统主版本号</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> re = <span class=\"regexp\">/^[a-z]+\\s+\\d+$/i</span>; <span class=\"comment\">//+号表示字符至少要出现1次,\\s表示空白字符,\\d表示一个数字</span></span><br><span class=\"line\">alert(re.test(osVersion));<span class=\"comment\">//true,但我们想知道主版本号</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"exec-返回一个数组-数组的第一个元素为完整的匹配内容\"><a href=\"#exec-返回一个数组-数组的第一个元素为完整的匹配内容\" class=\"headerlink\" title=\"exec,返回一个数组,数组的第一个元素为完整的匹配内容\"></a>exec,返回一个数组,数组的第一个元素为完整的匹配内容</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> osVersion = <span class=\"string\">\"Ubuntu 8\"</span></span><br><span class=\"line\">re=<span class=\"regexp\">/^[a-z]+\\s+\\d+$/i</span>;</span><br><span class=\"line\">arr = re.exec(osVersion);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr[<span class=\"number\">0</span>]) <span class=\"comment\">// Ubuntu 8</span></span><br><span class=\"line\"></span><br><span class=\"line\">re=<span class=\"regexp\">/\\d+/</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr = re.exec(osVersion);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr, arr[<span class=\"number\">0</span>]);<span class=\"comment\">//8</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> osVersion = <span class=\"string\">\"Ubuntu 822 11\"</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> arr = re.exec(osVersion);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr, arr[<span class=\"number\">0</span>]);<span class=\"comment\">//822</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> osVersion = <span class=\"string\">\"Ubuntu 8\"</span></span><br><span class=\"line\">re=<span class=\"regexp\">/^[a-z]+\\s+(\\d+)$/i</span>;<span class=\"comment\">//用()来创建子匹配</span></span><br><span class=\"line\">arr = re.exec(osVersion)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr) <span class=\"comment\">// [\"Ubuntu 8\", \"8\"]</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr[<span class=\"number\">0</span>]);<span class=\"comment\">//整个osVersion,也就是正则表达式的完整匹配</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr[<span class=\"number\">1</span>]);<span class=\"comment\">//8,第一个子匹配,事实也可以这样取出主版本号</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr.length); <span class=\"comment\">// 2</span></span><br><span class=\"line\">osVersion = <span class=\"string\">\"Ubuntu 8.10\"</span>;<span class=\"comment\">//取出主版本号和次版本号</span></span><br><span class=\"line\">re = <span class=\"regexp\">/^[a-z]+\\s+\\d+\\.\\d+$/i</span><span class=\"comment\">//.是正则表达式元字符之一,若要用它的字面意义须转义</span></span><br><span class=\"line\">arr = re.exec(osVersion)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr, arr[<span class=\"number\">0</span>], arr[<span class=\"number\">1</span>], arr[<span class=\"number\">2</span>])<span class=\"comment\">// [Ubuntu 8.10]</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr.length)<span class=\"comment\">// 1</span></span><br><span class=\"line\">re = <span class=\"regexp\">/^[a-z]+\\s+(\\d+)\\.(\\d+)$/i</span><span class=\"comment\">//.是正则表达式元字符之一,若要用它的字面意义须转义</span></span><br><span class=\"line\">arr = re.exec(osVersion)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr, arr[<span class=\"number\">0</span>], arr[<span class=\"number\">1</span>], arr[<span class=\"number\">2</span>])<span class=\"comment\">// [Ubuntu 8.10, 8, 10]</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr.length)<span class=\"comment\">// 3</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>当字符串不匹配re时,exec方法将返回null</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> osVersion = <span class=\"string\">\"Ubuntu 8\"</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> reg = <span class=\"regexp\">/aa/</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> arr = reg.exec(osVersion)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr) <span class=\"comment\">// null</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"String对象的一些和正则表达式有关的方法\"><a href=\"#String对象的一些和正则表达式有关的方法\" class=\"headerlink\" title=\"String对象的一些和正则表达式有关的方法\"></a>String对象的一些和正则表达式有关的方法</h2><h3 id=\"replace方法-用于替换字符串\"><a href=\"#replace方法-用于替换字符串\" class=\"headerlink\" title=\"replace方法,用于替换字符串\"></a>replace方法,用于替换字符串</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">'some money'</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> str1 = str.replace(<span class=\"string\">'some'</span>, <span class=\"string\">'much'</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(str1) <span class=\"comment\">// much money</span></span><br></pre></td></tr></table></figure>\n<p>replace的第一个参数可以为正则表达式<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> re = <span class=\"regexp\">/\\s/</span>;<span class=\"comment\">//空白字符</span></span><br><span class=\"line\">alert(str.replace(re,<span class=\"string\">\"%\"</span>));<span class=\"comment\">//some%money</span></span><br><span class=\"line\"></span><br><span class=\"line\">str =<span class=\"string\">\"some some             \\tsome\\t\\f\"</span>;</span><br><span class=\"line\">re = <span class=\"regexp\">/\\s+/</span>;</span><br><span class=\"line\">alert(str.replace(re,<span class=\"string\">\"#\"</span>));<span class=\"comment\">//但这样只会将第一次出现的一堆空白字符替换掉</span></span><br></pre></td></tr></table></figure></p>\n<p>因为一个正则表达式只能进行一次匹配,\\s+匹配了第一个空格后就退出了<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">re = <span class=\"regexp\">/\\s+/g</span>;<span class=\"comment\">//g,全局标志,将使正则表达式匹配整个字符串</span></span><br><span class=\"line\">alert(str.replace(re,<span class=\"string\">\"@\"</span>));<span class=\"comment\">//some@some@some@</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"split\"><a href=\"#split\" class=\"headerlink\" title=\"split\"></a>split</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">\"a-bd-c\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr = str.split(<span class=\"string\">\"-\"</span>);<span class=\"comment\">//返回[\"a\",\"bd\",\"c\"]</span></span><br><span class=\"line\">如果str是用户输入的,他可能输入a-bd-c也可能输入a bd c或a_bd_c,但不会是abdc(这样就说他输错了)</span><br><span class=\"line\">str = <span class=\"string\">\"a_db-c\"</span>;<span class=\"comment\">//用户以他喜欢的方式加分隔符s</span></span><br><span class=\"line\">re=<span class=\"regexp\">/[^a-z]/ig</span>;<span class=\"comment\">//前面我们说^表示字符开始,但在[]里它表示一个负字符集</span></span><br><span class=\"line\"><span class=\"comment\">//匹配任何不在指定范围内的任意字符,这里将匹配除字母处的所有字符</span></span><br><span class=\"line\">arr = str.split(re);<span class=\"comment\">//仍返回[\"a\",\"bd\",\"c\"];</span></span><br><span class=\"line\">str1 = str.replace(re, <span class=\"string\">'@'</span>) <span class=\"comment\">// a@db@c</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"search-在字符串中查找时我们常用indexOf-与之对应用于正则查找的方法是search\"><a href=\"#search-在字符串中查找时我们常用indexOf-与之对应用于正则查找的方法是search\" class=\"headerlink\" title=\"search  在字符串中查找时我们常用indexOf,与之对应用于正则查找的方法是search\"></a>search  在字符串中查找时我们常用indexOf,与之对应用于正则查找的方法是search</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">str = <span class=\"string\">\"My age is 18.Golden age!\"</span>;<span class=\"comment\">//年龄不是一定的,我们用indexOf不能查找它的位置</span></span><br><span class=\"line\">re = <span class=\"regexp\">/\\d+/</span>;</span><br><span class=\"line\">alert(str.search(re));<span class=\"comment\">//返回查找到的字符串开始下标10</span></span><br><span class=\"line\"><span class=\"comment\">//注意,因为查找本身就是出现第一次就立即返回,所以无需在search时使用g标志</span></span><br><span class=\"line\"><span class=\"comment\">//下面的代码虽然不出错,但g标志是多余的</span></span><br><span class=\"line\">re=<span class=\"regexp\">/\\d+/g</span>;</span><br><span class=\"line\">alert(str.search(re));<span class=\"comment\">//仍然是10</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>注意,当search方法没有找到匹配时,将返回-1</p>\n</blockquote>\n<h3 id=\"match-方法也用于将字符串与正则表达式进行匹配并返回结果数组\"><a href=\"#match-方法也用于将字符串与正则表达式进行匹配并返回结果数组\" class=\"headerlink\" title=\"match 方法也用于将字符串与正则表达式进行匹配并返回结果数组\"></a>match 方法也用于将字符串与正则表达式进行匹配并返回结果数组</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">\"My name is CJ.Hello everyone!\"</span>;</span><br><span class=\"line\">re = <span class=\"regexp\">/[A-Z]/g</span>;</span><br><span class=\"line\">arr = str.match(re);</span><br><span class=\"line\">alert(arr);<span class=\"comment\">//M,C,J,H</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 从字符串中抽取单词</span></span><br><span class=\"line\">re = <span class=\"regexp\">/\\b[a-z]*\\b/gi</span>;<span class=\"comment\">//\\b表示单词边界</span></span><br><span class=\"line\">str = <span class=\"string\">\"one two three four\"</span>;</span><br><span class=\"line\">alert(str.match(re));<span class=\"comment\">//one,two,three,four</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"特殊字符\"><a href=\"#特殊字符\" class=\"headerlink\" title=\"特殊字符\"></a>特殊字符</h2><table>\n<thead>\n<tr>\n<th>字符</th>\n<th style=\"text-align:center\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>\\n</td>\n<td style=\"text-align:center\">换行符 </td>\n</tr>\n<tr>\n<td>\\r</td>\n<td style=\"text-align:center\">回车符 </td>\n</tr>\n<tr>\n<td>\\t</td>\n<td style=\"text-align:center\">制表符 </td>\n</tr>\n<tr>\n<td>\\f</td>\n<td style=\"text-align:center\">换页符（Tab） </td>\n</tr>\n<tr>\n<td>\\cX</td>\n<td style=\"text-align:center\">与X对应的控制字符 </td>\n</tr>\n<tr>\n<td>\\b</td>\n<td style=\"text-align:center\">退格符(BackSpace) </td>\n</tr>\n<tr>\n<td>\\v</td>\n<td style=\"text-align:center\">垂直制表符 </td>\n</tr>\n<tr>\n<td>\\0</td>\n<td style=\"text-align:center\">空字符(“”) </td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"字符类\"><a href=\"#字符类\" class=\"headerlink\" title=\"字符类\"></a>字符类</h2><p>简单类，反向类，范围类，组合类，预定义类</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//简单类  </span></span><br><span class=\"line\"><span class=\"keyword\">var</span> re = <span class=\"regexp\">/[abc123]/</span>;<span class=\"comment\">//将匹配abc123这6个字符中一个  </span></span><br><span class=\"line\"><span class=\"comment\">//负向类  </span></span><br><span class=\"line\">re = <span class=\"regexp\">/[^abc]/</span>;<span class=\"comment\">//将匹配除abc之外的一个字符  </span></span><br><span class=\"line\"><span class=\"comment\">//范围类  </span></span><br><span class=\"line\">re = <span class=\"regexp\">/[a-b]/</span>;<span class=\"comment\">//将匹配小写a-b 26个字母  </span></span><br><span class=\"line\">re = <span class=\"regexp\">/[^0-9]/</span>;<span class=\"comment\">//将匹配除0-9 10个字符之处的一个字符  </span></span><br><span class=\"line\"><span class=\"comment\">//组合类  </span></span><br><span class=\"line\">re = <span class=\"regexp\">/[a-b0-9A-Z_]/</span>;<span class=\"comment\">//将匹配字母，数字和下划线</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"预定义类\"><a href=\"#预定义类\" class=\"headerlink\" title=\"预定义类\"></a>预定义类</h2><table>\n<thead>\n<tr>\n<th>代码</th>\n<th style=\"text-align:center\">等同于</th>\n<th style=\"text-align:center\">匹配</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>.</td>\n<td style=\"text-align:center\">IE下[^\\n]，其它[^\\n\\r]</td>\n<td style=\"text-align:center\">匹配除换行符之外的任何一个字符 </td>\n</tr>\n<tr>\n<td>\\d</td>\n<td style=\"text-align:center\">[0-9]</td>\n<td style=\"text-align:center\">匹配数字 </td>\n</tr>\n<tr>\n<td>\\D</td>\n<td style=\"text-align:center\">[^0-9]</td>\n<td style=\"text-align:center\">匹配非数字字符 </td>\n</tr>\n<tr>\n<td>\\s</td>\n<td style=\"text-align:center\">[ \\n\\r\\t\\f\\x0B]</td>\n<td style=\"text-align:center\">匹配一个空白字符 </td>\n</tr>\n<tr>\n<td>\\S</td>\n<td style=\"text-align:center\">[^ \\n\\r\\t\\f\\x0B]</td>\n<td style=\"text-align:center\">匹配一个非空白字符 </td>\n</tr>\n<tr>\n<td>\\w</td>\n<td style=\"text-align:center\">[a-zA-Z0-9_]</td>\n<td style=\"text-align:center\">匹配字母数字和下划线 </td>\n</tr>\n<tr>\n<td>\\W</td>\n<td style=\"text-align:center\">[^a-zA-Z0-9_]</td>\n<td style=\"text-align:center\">匹配除字母数字下划线之外的字符 </td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"量词\"><a href=\"#量词\" class=\"headerlink\" title=\"量词\"></a>量词</h2><table>\n<thead>\n<tr>\n<th>代码</th>\n<th style=\"text-align:center\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>*</td>\n<td style=\"text-align:center\">匹配前面的子表达式零次或多次。例如，zo<em> 能匹配 “z” 以及 “zoo”。 </em> 等价于{0,}。 </td>\n</tr>\n<tr>\n<td>+</td>\n<td style=\"text-align:center\">匹配前面的子表达式一次或多次。例如，’zo+’ 能匹配 “zo” 以及 “zoo”，但不能匹配 “z”。+ 等价于 {1,}。 </td>\n</tr>\n<tr>\n<td>?</td>\n<td style=\"text-align:center\">匹配前面的子表达式零次或一次。例如，”do(es)?” 可以匹配 “do” 或 “does” 中的”do” 。? 等价于 {0,1}。 </td>\n</tr>\n<tr>\n<td>{n}</td>\n<td style=\"text-align:center\">n 是一个非负整数。匹配确定的 n 次。例如，’o{2}’ 不能匹配 “Bob” 中的 ‘o’，但是能匹配 “food” 中的两个 o。</td>\n</tr>\n<tr>\n<td>{n,}</td>\n<td style=\"text-align:center\">n 是一个非负整数。至少匹配n 次。例如，’o{2,}’ 不能匹配 “Bob” 中的 ‘o’，但能匹配 “foooood” 中的所有 o。’o{1,}’ 等价于 ‘o+’。’o{0,}’ 则等价于 ‘o*’。 </td>\n</tr>\n<tr>\n<td>{n,m}</td>\n<td style=\"text-align:center\">m 和 n 均为非负整数，其中n &lt;= m。最少匹配 n 次且最多匹配 m 次。刘， “o{1,3}” 将匹配 “fooooood” 中的前三个 o。’o{0,1}’ 等价于 ‘o?’。请注意在逗号和两个数之间不能有空格。 </td>\n</tr>\n</tbody>\n</table>\n","site":{"data":{}},"excerpt":"<p>正则表达式可以: </p>\n<ul>\n<li>测试字符串的某个模式。例如，可以对一个输入字符串进行测试，看在该字符串是否存在一个电话号码模式或一个信用卡号码模式。这称为数据有效性验证 </li>\n<li>替换文本。可以在文档中使用一个正则表达式来标识特定文字，然后可以全部将其删除，或者替换为别的文字 </li>\n<li>根据模式匹配从字符串中提取一个子字符串。可以用来在文本或输入字段中查找特定文字 </li>\n</ul>","more":"<h2 id=\"正则表达式对象的方法\"><a href=\"#正则表达式对象的方法\" class=\"headerlink\" title=\"正则表达式对象的方法\"></a>正则表达式对象的方法</h2><ul>\n<li>test,返回一个 Boolean 值，它指出在被查找的字符串中是否存在模式。如果存在则返回 true，否则就返回 false。</li>\n<li>exec,用正则表达式模式在字符串中运行查找，并返回含该查找结果的一个数组。</li>\n<li>compile,把正则表达式编译为内部格式，从而执行得更快。</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">g （全文查找）</span><br><span class=\"line\">i （忽略大小写）</span><br><span class=\"line\">m （多行查找）</span><br><span class=\"line\">^ 代表字符开始位置</span><br><span class=\"line\">$ 代表字符结束位置</span><br></pre></td></tr></table></figure>\n<h3 id=\"test方法-测试字符串-符合模式时返回true-否则返回false\"><a href=\"#test方法-测试字符串-符合模式时返回true-否则返回false\" class=\"headerlink\" title=\"test方法,测试字符串,符合模式时返回true,否则返回false\"></a>test方法,测试字符串,符合模式时返回true,否则返回false</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> reg = <span class=\"regexp\">/he/</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> reg1 = <span class=\"regexp\">/he/i</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">'heaa'</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(reg.test(str)) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> str1 = <span class=\"string\">'ahae'</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(reg.test(str1)) <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> str2 = <span class=\"string\">'HEHE'</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(reg.test(str2)) <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(reg1.test(str2)) <span class=\"comment\">// true</span></span><br><span class=\"line\"></span><br><span class=\"line\">reg = <span class=\"regexp\">/\\s/</span>;<span class=\"comment\">// \\s匹配任何空白字符，包括空格、制表符、换页符等等</span></span><br><span class=\"line\">str= <span class=\"string\">\"user Name\"</span>;<span class=\"comment\">//用户名包含空格</span></span><br><span class=\"line\">alert(reg.test(str));<span class=\"comment\">//true</span></span><br><span class=\"line\"></span><br><span class=\"line\">reg=<span class=\"regexp\">/^[a-z]/i</span>;<span class=\"comment\">//[]匹配指定范围内的任意字符,这里将匹配英文字母,不区分大小写</span></span><br><span class=\"line\">str=<span class=\"string\">\"variableName\"</span>;<span class=\"comment\">//变量名必须以字母开头</span></span><br><span class=\"line\">alert(reg.test(str));<span class=\"comment\">//true</span></span><br><span class=\"line\">str=<span class=\"string\">\"123abc\"</span>;</span><br><span class=\"line\">alert(reg.test(str));<span class=\"comment\">//false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> osVersion = <span class=\"string\">\"Ubuntu 8\"</span>;<span class=\"comment\">//其中的8表示系统主版本号</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> re = <span class=\"regexp\">/^[a-z]+\\s+\\d+$/i</span>; <span class=\"comment\">//+号表示字符至少要出现1次,\\s表示空白字符,\\d表示一个数字</span></span><br><span class=\"line\">alert(re.test(osVersion));<span class=\"comment\">//true,但我们想知道主版本号</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"exec-返回一个数组-数组的第一个元素为完整的匹配内容\"><a href=\"#exec-返回一个数组-数组的第一个元素为完整的匹配内容\" class=\"headerlink\" title=\"exec,返回一个数组,数组的第一个元素为完整的匹配内容\"></a>exec,返回一个数组,数组的第一个元素为完整的匹配内容</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> osVersion = <span class=\"string\">\"Ubuntu 8\"</span></span><br><span class=\"line\">re=<span class=\"regexp\">/^[a-z]+\\s+\\d+$/i</span>;</span><br><span class=\"line\">arr = re.exec(osVersion);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr[<span class=\"number\">0</span>]) <span class=\"comment\">// Ubuntu 8</span></span><br><span class=\"line\"></span><br><span class=\"line\">re=<span class=\"regexp\">/\\d+/</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr = re.exec(osVersion);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr, arr[<span class=\"number\">0</span>]);<span class=\"comment\">//8</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> osVersion = <span class=\"string\">\"Ubuntu 822 11\"</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> arr = re.exec(osVersion);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr, arr[<span class=\"number\">0</span>]);<span class=\"comment\">//822</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> osVersion = <span class=\"string\">\"Ubuntu 8\"</span></span><br><span class=\"line\">re=<span class=\"regexp\">/^[a-z]+\\s+(\\d+)$/i</span>;<span class=\"comment\">//用()来创建子匹配</span></span><br><span class=\"line\">arr = re.exec(osVersion)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr) <span class=\"comment\">// [\"Ubuntu 8\", \"8\"]</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr[<span class=\"number\">0</span>]);<span class=\"comment\">//整个osVersion,也就是正则表达式的完整匹配</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr[<span class=\"number\">1</span>]);<span class=\"comment\">//8,第一个子匹配,事实也可以这样取出主版本号</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr.length); <span class=\"comment\">// 2</span></span><br><span class=\"line\">osVersion = <span class=\"string\">\"Ubuntu 8.10\"</span>;<span class=\"comment\">//取出主版本号和次版本号</span></span><br><span class=\"line\">re = <span class=\"regexp\">/^[a-z]+\\s+\\d+\\.\\d+$/i</span><span class=\"comment\">//.是正则表达式元字符之一,若要用它的字面意义须转义</span></span><br><span class=\"line\">arr = re.exec(osVersion)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr, arr[<span class=\"number\">0</span>], arr[<span class=\"number\">1</span>], arr[<span class=\"number\">2</span>])<span class=\"comment\">// [Ubuntu 8.10]</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr.length)<span class=\"comment\">// 1</span></span><br><span class=\"line\">re = <span class=\"regexp\">/^[a-z]+\\s+(\\d+)\\.(\\d+)$/i</span><span class=\"comment\">//.是正则表达式元字符之一,若要用它的字面意义须转义</span></span><br><span class=\"line\">arr = re.exec(osVersion)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr, arr[<span class=\"number\">0</span>], arr[<span class=\"number\">1</span>], arr[<span class=\"number\">2</span>])<span class=\"comment\">// [Ubuntu 8.10, 8, 10]</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr.length)<span class=\"comment\">// 3</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>当字符串不匹配re时,exec方法将返回null</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> osVersion = <span class=\"string\">\"Ubuntu 8\"</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> reg = <span class=\"regexp\">/aa/</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> arr = reg.exec(osVersion)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr) <span class=\"comment\">// null</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"String对象的一些和正则表达式有关的方法\"><a href=\"#String对象的一些和正则表达式有关的方法\" class=\"headerlink\" title=\"String对象的一些和正则表达式有关的方法\"></a>String对象的一些和正则表达式有关的方法</h2><h3 id=\"replace方法-用于替换字符串\"><a href=\"#replace方法-用于替换字符串\" class=\"headerlink\" title=\"replace方法,用于替换字符串\"></a>replace方法,用于替换字符串</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">'some money'</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> str1 = str.replace(<span class=\"string\">'some'</span>, <span class=\"string\">'much'</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(str1) <span class=\"comment\">// much money</span></span><br></pre></td></tr></table></figure>\n<p>replace的第一个参数可以为正则表达式<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> re = <span class=\"regexp\">/\\s/</span>;<span class=\"comment\">//空白字符</span></span><br><span class=\"line\">alert(str.replace(re,<span class=\"string\">\"%\"</span>));<span class=\"comment\">//some%money</span></span><br><span class=\"line\"></span><br><span class=\"line\">str =<span class=\"string\">\"some some             \\tsome\\t\\f\"</span>;</span><br><span class=\"line\">re = <span class=\"regexp\">/\\s+/</span>;</span><br><span class=\"line\">alert(str.replace(re,<span class=\"string\">\"#\"</span>));<span class=\"comment\">//但这样只会将第一次出现的一堆空白字符替换掉</span></span><br></pre></td></tr></table></figure></p>\n<p>因为一个正则表达式只能进行一次匹配,\\s+匹配了第一个空格后就退出了<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">re = <span class=\"regexp\">/\\s+/g</span>;<span class=\"comment\">//g,全局标志,将使正则表达式匹配整个字符串</span></span><br><span class=\"line\">alert(str.replace(re,<span class=\"string\">\"@\"</span>));<span class=\"comment\">//some@some@some@</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"split\"><a href=\"#split\" class=\"headerlink\" title=\"split\"></a>split</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">\"a-bd-c\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr = str.split(<span class=\"string\">\"-\"</span>);<span class=\"comment\">//返回[\"a\",\"bd\",\"c\"]</span></span><br><span class=\"line\">如果str是用户输入的,他可能输入a-bd-c也可能输入a bd c或a_bd_c,但不会是abdc(这样就说他输错了)</span><br><span class=\"line\">str = <span class=\"string\">\"a_db-c\"</span>;<span class=\"comment\">//用户以他喜欢的方式加分隔符s</span></span><br><span class=\"line\">re=<span class=\"regexp\">/[^a-z]/ig</span>;<span class=\"comment\">//前面我们说^表示字符开始,但在[]里它表示一个负字符集</span></span><br><span class=\"line\"><span class=\"comment\">//匹配任何不在指定范围内的任意字符,这里将匹配除字母处的所有字符</span></span><br><span class=\"line\">arr = str.split(re);<span class=\"comment\">//仍返回[\"a\",\"bd\",\"c\"];</span></span><br><span class=\"line\">str1 = str.replace(re, <span class=\"string\">'@'</span>) <span class=\"comment\">// a@db@c</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"search-在字符串中查找时我们常用indexOf-与之对应用于正则查找的方法是search\"><a href=\"#search-在字符串中查找时我们常用indexOf-与之对应用于正则查找的方法是search\" class=\"headerlink\" title=\"search  在字符串中查找时我们常用indexOf,与之对应用于正则查找的方法是search\"></a>search  在字符串中查找时我们常用indexOf,与之对应用于正则查找的方法是search</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">str = <span class=\"string\">\"My age is 18.Golden age!\"</span>;<span class=\"comment\">//年龄不是一定的,我们用indexOf不能查找它的位置</span></span><br><span class=\"line\">re = <span class=\"regexp\">/\\d+/</span>;</span><br><span class=\"line\">alert(str.search(re));<span class=\"comment\">//返回查找到的字符串开始下标10</span></span><br><span class=\"line\"><span class=\"comment\">//注意,因为查找本身就是出现第一次就立即返回,所以无需在search时使用g标志</span></span><br><span class=\"line\"><span class=\"comment\">//下面的代码虽然不出错,但g标志是多余的</span></span><br><span class=\"line\">re=<span class=\"regexp\">/\\d+/g</span>;</span><br><span class=\"line\">alert(str.search(re));<span class=\"comment\">//仍然是10</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>注意,当search方法没有找到匹配时,将返回-1</p>\n</blockquote>\n<h3 id=\"match-方法也用于将字符串与正则表达式进行匹配并返回结果数组\"><a href=\"#match-方法也用于将字符串与正则表达式进行匹配并返回结果数组\" class=\"headerlink\" title=\"match 方法也用于将字符串与正则表达式进行匹配并返回结果数组\"></a>match 方法也用于将字符串与正则表达式进行匹配并返回结果数组</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">\"My name is CJ.Hello everyone!\"</span>;</span><br><span class=\"line\">re = <span class=\"regexp\">/[A-Z]/g</span>;</span><br><span class=\"line\">arr = str.match(re);</span><br><span class=\"line\">alert(arr);<span class=\"comment\">//M,C,J,H</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 从字符串中抽取单词</span></span><br><span class=\"line\">re = <span class=\"regexp\">/\\b[a-z]*\\b/gi</span>;<span class=\"comment\">//\\b表示单词边界</span></span><br><span class=\"line\">str = <span class=\"string\">\"one two three four\"</span>;</span><br><span class=\"line\">alert(str.match(re));<span class=\"comment\">//one,two,three,four</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"特殊字符\"><a href=\"#特殊字符\" class=\"headerlink\" title=\"特殊字符\"></a>特殊字符</h2><table>\n<thead>\n<tr>\n<th>字符</th>\n<th style=\"text-align:center\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>\\n</td>\n<td style=\"text-align:center\">换行符 </td>\n</tr>\n<tr>\n<td>\\r</td>\n<td style=\"text-align:center\">回车符 </td>\n</tr>\n<tr>\n<td>\\t</td>\n<td style=\"text-align:center\">制表符 </td>\n</tr>\n<tr>\n<td>\\f</td>\n<td style=\"text-align:center\">换页符（Tab） </td>\n</tr>\n<tr>\n<td>\\cX</td>\n<td style=\"text-align:center\">与X对应的控制字符 </td>\n</tr>\n<tr>\n<td>\\b</td>\n<td style=\"text-align:center\">退格符(BackSpace) </td>\n</tr>\n<tr>\n<td>\\v</td>\n<td style=\"text-align:center\">垂直制表符 </td>\n</tr>\n<tr>\n<td>\\0</td>\n<td style=\"text-align:center\">空字符(“”) </td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"字符类\"><a href=\"#字符类\" class=\"headerlink\" title=\"字符类\"></a>字符类</h2><p>简单类，反向类，范围类，组合类，预定义类</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//简单类  </span></span><br><span class=\"line\"><span class=\"keyword\">var</span> re = <span class=\"regexp\">/[abc123]/</span>;<span class=\"comment\">//将匹配abc123这6个字符中一个  </span></span><br><span class=\"line\"><span class=\"comment\">//负向类  </span></span><br><span class=\"line\">re = <span class=\"regexp\">/[^abc]/</span>;<span class=\"comment\">//将匹配除abc之外的一个字符  </span></span><br><span class=\"line\"><span class=\"comment\">//范围类  </span></span><br><span class=\"line\">re = <span class=\"regexp\">/[a-b]/</span>;<span class=\"comment\">//将匹配小写a-b 26个字母  </span></span><br><span class=\"line\">re = <span class=\"regexp\">/[^0-9]/</span>;<span class=\"comment\">//将匹配除0-9 10个字符之处的一个字符  </span></span><br><span class=\"line\"><span class=\"comment\">//组合类  </span></span><br><span class=\"line\">re = <span class=\"regexp\">/[a-b0-9A-Z_]/</span>;<span class=\"comment\">//将匹配字母，数字和下划线</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"预定义类\"><a href=\"#预定义类\" class=\"headerlink\" title=\"预定义类\"></a>预定义类</h2><table>\n<thead>\n<tr>\n<th>代码</th>\n<th style=\"text-align:center\">等同于</th>\n<th style=\"text-align:center\">匹配</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>.</td>\n<td style=\"text-align:center\">IE下[^\\n]，其它[^\\n\\r]</td>\n<td style=\"text-align:center\">匹配除换行符之外的任何一个字符 </td>\n</tr>\n<tr>\n<td>\\d</td>\n<td style=\"text-align:center\">[0-9]</td>\n<td style=\"text-align:center\">匹配数字 </td>\n</tr>\n<tr>\n<td>\\D</td>\n<td style=\"text-align:center\">[^0-9]</td>\n<td style=\"text-align:center\">匹配非数字字符 </td>\n</tr>\n<tr>\n<td>\\s</td>\n<td style=\"text-align:center\">[ \\n\\r\\t\\f\\x0B]</td>\n<td style=\"text-align:center\">匹配一个空白字符 </td>\n</tr>\n<tr>\n<td>\\S</td>\n<td style=\"text-align:center\">[^ \\n\\r\\t\\f\\x0B]</td>\n<td style=\"text-align:center\">匹配一个非空白字符 </td>\n</tr>\n<tr>\n<td>\\w</td>\n<td style=\"text-align:center\">[a-zA-Z0-9_]</td>\n<td style=\"text-align:center\">匹配字母数字和下划线 </td>\n</tr>\n<tr>\n<td>\\W</td>\n<td style=\"text-align:center\">[^a-zA-Z0-9_]</td>\n<td style=\"text-align:center\">匹配除字母数字下划线之外的字符 </td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"量词\"><a href=\"#量词\" class=\"headerlink\" title=\"量词\"></a>量词</h2><table>\n<thead>\n<tr>\n<th>代码</th>\n<th style=\"text-align:center\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>*</td>\n<td style=\"text-align:center\">匹配前面的子表达式零次或多次。例如，zo<em> 能匹配 “z” 以及 “zoo”。 </em> 等价于{0,}。 </td>\n</tr>\n<tr>\n<td>+</td>\n<td style=\"text-align:center\">匹配前面的子表达式一次或多次。例如，’zo+’ 能匹配 “zo” 以及 “zoo”，但不能匹配 “z”。+ 等价于 {1,}。 </td>\n</tr>\n<tr>\n<td>?</td>\n<td style=\"text-align:center\">匹配前面的子表达式零次或一次。例如，”do(es)?” 可以匹配 “do” 或 “does” 中的”do” 。? 等价于 {0,1}。 </td>\n</tr>\n<tr>\n<td>{n}</td>\n<td style=\"text-align:center\">n 是一个非负整数。匹配确定的 n 次。例如，’o{2}’ 不能匹配 “Bob” 中的 ‘o’，但是能匹配 “food” 中的两个 o。</td>\n</tr>\n<tr>\n<td>{n,}</td>\n<td style=\"text-align:center\">n 是一个非负整数。至少匹配n 次。例如，’o{2,}’ 不能匹配 “Bob” 中的 ‘o’，但能匹配 “foooood” 中的所有 o。’o{1,}’ 等价于 ‘o+’。’o{0,}’ 则等价于 ‘o*’。 </td>\n</tr>\n<tr>\n<td>{n,m}</td>\n<td style=\"text-align:center\">m 和 n 均为非负整数，其中n &lt;= m。最少匹配 n 次且最多匹配 m 次。刘， “o{1,3}” 将匹配 “fooooood” 中的前三个 o。’o{0,1}’ 等价于 ‘o?’。请注意在逗号和两个数之间不能有空格。 </td>\n</tr>\n</tbody>\n</table>"},{"title":"奇妙的 CSS shapes(CSS图形)","date":"2019-08-12T07:37:22.000Z","_content":"\n## 三角形\n![blockchain](https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/traingle.png)\n```css\n.traingle {\n width: 0;\n height: 0;\n border-left: 50px solid transparent;\n border-right: 50px solid transparent;\n border-bottom: 100px solid yellowgreen;\n}\n```\n<!-- more -->\n## 切角\n![blockchain](https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/notching.png)\n```css\n.notching {\n width: 40px;\n height: 40px;\n padding: 40px;\n background: linear-gradient(135deg, transparent 15px, yellowgreen 0) top left,\n linear-gradient(-135deg, transparent 15px, yellowgreen 0) top right,\n linear-gradient(-45deg, transparent 15px, yellowgreen 0) bottom right,\n linear-gradient(45deg, transparent 15px, yellowgreen 0) bottom left;\n background-size: 50% 50%;\n background-repeat: no-repeat;\n}\n```\n\n## 梯形\n![blockchain](https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/trapezoid.png)\n```css\n.trapezoid{\n position: relative;\n width: 60px;\n padding: 60px;\n}\n\n.trapezoid::before{\n content:\"\";\n position: absolute;\n top: 0; right: 0; bottom: 0; left: 0;\n transform: perspective(20px) scaleY(1.3) rotateX(5deg);\n transform-origin: bottom;\n background: yellowgreen;\n}\n// ---2---\n.trapezoid {\n position: relative;\n width: 60px;\n border-top: 60px solid yellowgreen;\n border-left: 40px solid transparent;\n border-right: 40px solid transparent;\n}\n```\n\n## 五边形\n![blockchain](https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/pentagon-1.png)\n```css\n.pentagon {\n position: relative;\n width: 60px;\n border-bottom: 60px solid yellowgreen;\n border-left: 40px solid transparent;\n border-right: 40px solid transparent; \n}\n\n.pentagon::before {\n content:\"\";\n position: absolute;\n top: 60px;\n left: -40px;\n border-top: 60px solid yellowgreen;\n border-left: 70px solid transparent;\n border-right: 70px solid transparent;\n}\n```\n\n## 六边形\n![blockchain](https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/pentagon-2.png)\n```css\n.pentagon {\n position: relative;\n width: 60px;\n border-bottom: 60px solid yellowgreen;\n border-left: 40px solid transparent;\n border-right: 40px solid transparent;\n}\n.pentagon::before {\n content: \"\";\n position: absolute;\n width: 60px;\n height: 0px;\n top: 60px;\n left: -40px;\n border-top: 60px solid yellowgreen;\n border-left: 40px solid transparent;\n border-right: 40px solid transparent;\n}\n```\n\n## 八边形\n![blockchain](https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/octagon.png)\n```css\n.octagon {\n position: relative;\n width: 40px;\n height: 100px;\n background: yellowgreen;\n}\n.octagon::before {\n content: \"\";\n height: 60px;\n position: absolute;\n top: 0;\n left: 40px;\n border-left: 30px solid yellowgreen;\n border-top: 20px solid transparent;\n border-bottom: 20px solid transparent;\n}\n.octagon::after {\n content: \"\";\n height: 60px;\n position: absolute;\n top: 0;\n left: -30px;\n border-right: 30px solid yellowgreen;\n border-top: 20px solid transparent;\n border-bottom: 20px solid transparent;\n}\n```\n\n## 五角星\n> 这里使用 3 个三角形叠加旋转在一起实现。\n\n![blockchain](https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/star.png)\n```css\n.star {\n margin: 50px 0;\n position: relative;\n width: 0;\n border-right: 100px solid transparent;\n border-bottom: 70px solid yellowgreen;\n border-left: 100px solid transparent;\n transform: rotate(35deg) scale(.6);\n}\n.star:before {\n content: '';\n position: absolute;\n border-bottom: 80px solid yellowgreen;\n border-left: 30px solid transparent;\n border-right: 30px solid transparent;\n top: -45px;\n left: -65px;\n transform: rotate(-35deg);\n}\n.star:after {\n content: '';\n position: absolute;\n top: 3px;\n left: -105px;\n border-right: 100px solid transparent;\n border-bottom: 70px solid yellowgreen;\n border-left: 100px solid transparent;\n transform: rotate(-70deg);\n}\n```\n\n## 六角星\n![blockchain](https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/sixstar.png)\n```css\n.sixstar {\n position: relative;\n width: 0;\n border-left: 50px solid transparent;\n border-right: 50px solid transparent;\n border-bottom: 100px solid yellowgreen;\n}\n.sixstar:after {\n content: \"\";\n position: absolute;\n border-left: 50px solid transparent;\n border-right: 50px solid transparent;\n border-top: 100px solid yellowgreen;\n top: 30px;\n left: -50px;\n}\n\n```\n\n## 八角形\n> 八角星呢？八个角那么多呢。其实使用两个矩形进行旋转拼接就可以了。\n\n![blockchain](https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/eightstar.png)\n```css\n.eightstar {\n position: relative;\n width: 100px;\n height: 100px;\n background-color: yellowgreen;\n transform: rotate(30deg);\n}\n\n.eightstar::before {\n content: \"\";\n position: absolute;\n top: 0;\n left: 0;\n width: 100px;\n height: 100px;\n transform: rotate(45deg);\n background-color: yellowgreen;\n}\n```\n\n## 十二角形\n> 好。最后多角星再来一个十二级角星。在八角星的基础上，再增加一个矩形，就能得到十二角啦。也就是要过第一个伪元素。\n\n![blockchain](https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/twelvestar.png)\n```css\n.twelvestar {\n position: relative;\n width: 100px;\n height: 100px;\n margin-bottom: 100px!important;\n background-color: yellowgreen;\n transform: rotate(30deg);\n}\n\n.twelvestar::before {\n content: \"\";\n position: absolute;\n top: 0;\n left: 0;\n width: 100px;\n height: 100px;\n transform: rotate(30deg);\n background-color: yellowgreen;\n}\n\n.twelvestar::after {\n content: \"\";\n position: absolute;\n top: 0;\n left: 0;\n width: 100px;\n height: 100px;\n transform: rotate(60deg);\n background-color: yellowgreen;\n}\n```\n","source":"_posts/shape.md","raw":"---\ntitle: 奇妙的 CSS shapes(CSS图形)\ncategories: css-end\ndate: 2019-08-12 15:37:22\ntags: css3 \n---\n\n## 三角形\n![blockchain](https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/traingle.png)\n```css\n.traingle {\n width: 0;\n height: 0;\n border-left: 50px solid transparent;\n border-right: 50px solid transparent;\n border-bottom: 100px solid yellowgreen;\n}\n```\n<!-- more -->\n## 切角\n![blockchain](https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/notching.png)\n```css\n.notching {\n width: 40px;\n height: 40px;\n padding: 40px;\n background: linear-gradient(135deg, transparent 15px, yellowgreen 0) top left,\n linear-gradient(-135deg, transparent 15px, yellowgreen 0) top right,\n linear-gradient(-45deg, transparent 15px, yellowgreen 0) bottom right,\n linear-gradient(45deg, transparent 15px, yellowgreen 0) bottom left;\n background-size: 50% 50%;\n background-repeat: no-repeat;\n}\n```\n\n## 梯形\n![blockchain](https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/trapezoid.png)\n```css\n.trapezoid{\n position: relative;\n width: 60px;\n padding: 60px;\n}\n\n.trapezoid::before{\n content:\"\";\n position: absolute;\n top: 0; right: 0; bottom: 0; left: 0;\n transform: perspective(20px) scaleY(1.3) rotateX(5deg);\n transform-origin: bottom;\n background: yellowgreen;\n}\n// ---2---\n.trapezoid {\n position: relative;\n width: 60px;\n border-top: 60px solid yellowgreen;\n border-left: 40px solid transparent;\n border-right: 40px solid transparent;\n}\n```\n\n## 五边形\n![blockchain](https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/pentagon-1.png)\n```css\n.pentagon {\n position: relative;\n width: 60px;\n border-bottom: 60px solid yellowgreen;\n border-left: 40px solid transparent;\n border-right: 40px solid transparent; \n}\n\n.pentagon::before {\n content:\"\";\n position: absolute;\n top: 60px;\n left: -40px;\n border-top: 60px solid yellowgreen;\n border-left: 70px solid transparent;\n border-right: 70px solid transparent;\n}\n```\n\n## 六边形\n![blockchain](https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/pentagon-2.png)\n```css\n.pentagon {\n position: relative;\n width: 60px;\n border-bottom: 60px solid yellowgreen;\n border-left: 40px solid transparent;\n border-right: 40px solid transparent;\n}\n.pentagon::before {\n content: \"\";\n position: absolute;\n width: 60px;\n height: 0px;\n top: 60px;\n left: -40px;\n border-top: 60px solid yellowgreen;\n border-left: 40px solid transparent;\n border-right: 40px solid transparent;\n}\n```\n\n## 八边形\n![blockchain](https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/octagon.png)\n```css\n.octagon {\n position: relative;\n width: 40px;\n height: 100px;\n background: yellowgreen;\n}\n.octagon::before {\n content: \"\";\n height: 60px;\n position: absolute;\n top: 0;\n left: 40px;\n border-left: 30px solid yellowgreen;\n border-top: 20px solid transparent;\n border-bottom: 20px solid transparent;\n}\n.octagon::after {\n content: \"\";\n height: 60px;\n position: absolute;\n top: 0;\n left: -30px;\n border-right: 30px solid yellowgreen;\n border-top: 20px solid transparent;\n border-bottom: 20px solid transparent;\n}\n```\n\n## 五角星\n> 这里使用 3 个三角形叠加旋转在一起实现。\n\n![blockchain](https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/star.png)\n```css\n.star {\n margin: 50px 0;\n position: relative;\n width: 0;\n border-right: 100px solid transparent;\n border-bottom: 70px solid yellowgreen;\n border-left: 100px solid transparent;\n transform: rotate(35deg) scale(.6);\n}\n.star:before {\n content: '';\n position: absolute;\n border-bottom: 80px solid yellowgreen;\n border-left: 30px solid transparent;\n border-right: 30px solid transparent;\n top: -45px;\n left: -65px;\n transform: rotate(-35deg);\n}\n.star:after {\n content: '';\n position: absolute;\n top: 3px;\n left: -105px;\n border-right: 100px solid transparent;\n border-bottom: 70px solid yellowgreen;\n border-left: 100px solid transparent;\n transform: rotate(-70deg);\n}\n```\n\n## 六角星\n![blockchain](https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/sixstar.png)\n```css\n.sixstar {\n position: relative;\n width: 0;\n border-left: 50px solid transparent;\n border-right: 50px solid transparent;\n border-bottom: 100px solid yellowgreen;\n}\n.sixstar:after {\n content: \"\";\n position: absolute;\n border-left: 50px solid transparent;\n border-right: 50px solid transparent;\n border-top: 100px solid yellowgreen;\n top: 30px;\n left: -50px;\n}\n\n```\n\n## 八角形\n> 八角星呢？八个角那么多呢。其实使用两个矩形进行旋转拼接就可以了。\n\n![blockchain](https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/eightstar.png)\n```css\n.eightstar {\n position: relative;\n width: 100px;\n height: 100px;\n background-color: yellowgreen;\n transform: rotate(30deg);\n}\n\n.eightstar::before {\n content: \"\";\n position: absolute;\n top: 0;\n left: 0;\n width: 100px;\n height: 100px;\n transform: rotate(45deg);\n background-color: yellowgreen;\n}\n```\n\n## 十二角形\n> 好。最后多角星再来一个十二级角星。在八角星的基础上，再增加一个矩形，就能得到十二角啦。也就是要过第一个伪元素。\n\n![blockchain](https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/twelvestar.png)\n```css\n.twelvestar {\n position: relative;\n width: 100px;\n height: 100px;\n margin-bottom: 100px!important;\n background-color: yellowgreen;\n transform: rotate(30deg);\n}\n\n.twelvestar::before {\n content: \"\";\n position: absolute;\n top: 0;\n left: 0;\n width: 100px;\n height: 100px;\n transform: rotate(30deg);\n background-color: yellowgreen;\n}\n\n.twelvestar::after {\n content: \"\";\n position: absolute;\n top: 0;\n left: 0;\n width: 100px;\n height: 100px;\n transform: rotate(60deg);\n background-color: yellowgreen;\n}\n```\n","slug":"shape","published":1,"updated":"2020-07-01T09:12:26.386Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdr00y62001xe7zcthdif5xd","content":"<h2 id=\"三角形\"><a href=\"#三角形\" class=\"headerlink\" title=\"三角形\"></a>三角形</h2><p><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/traingle.png\" alt=\"blockchain\"><br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.traingle</span> &#123;</span><br><span class=\"line\"> <span class=\"attribute\">width</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\"> <span class=\"attribute\">height</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\"> <span class=\"attribute\">border-left</span>: <span class=\"number\">50px</span> solid transparent;</span><br><span class=\"line\"> <span class=\"attribute\">border-right</span>: <span class=\"number\">50px</span> solid transparent;</span><br><span class=\"line\"> <span class=\"attribute\">border-bottom</span>: <span class=\"number\">100px</span> solid yellowgreen;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<a id=\"more\"></a>\n<h2 id=\"切角\"><a href=\"#切角\" class=\"headerlink\" title=\"切角\"></a>切角</h2><p><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/notching.png\" alt=\"blockchain\"><br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.notching</span> &#123;</span><br><span class=\"line\"> <span class=\"attribute\">width</span>: <span class=\"number\">40px</span>;</span><br><span class=\"line\"> <span class=\"attribute\">height</span>: <span class=\"number\">40px</span>;</span><br><span class=\"line\"> <span class=\"attribute\">padding</span>: <span class=\"number\">40px</span>;</span><br><span class=\"line\"> <span class=\"attribute\">background</span>: <span class=\"built_in\">linear-gradient</span>(135deg, transparent 15px, yellowgreen 0) top left,</span><br><span class=\"line\"> <span class=\"built_in\">linear-gradient</span>(-135deg, transparent 15px, yellowgreen 0) top right,</span><br><span class=\"line\"> <span class=\"built_in\">linear-gradient</span>(-45deg, transparent 15px, yellowgreen 0) bottom right,</span><br><span class=\"line\"> <span class=\"built_in\">linear-gradient</span>(45deg, transparent 15px, yellowgreen 0) bottom left;</span><br><span class=\"line\"> <span class=\"attribute\">background-size</span>: <span class=\"number\">50%</span> <span class=\"number\">50%</span>;</span><br><span class=\"line\"> <span class=\"attribute\">background-repeat</span>: no-repeat;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"梯形\"><a href=\"#梯形\" class=\"headerlink\" title=\"梯形\"></a>梯形</h2><p><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/trapezoid.png\" alt=\"blockchain\"><br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.trapezoid</span>&#123;</span><br><span class=\"line\"> <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\"> <span class=\"attribute\">width</span>: <span class=\"number\">60px</span>;</span><br><span class=\"line\"> <span class=\"attribute\">padding</span>: <span class=\"number\">60px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.trapezoid</span><span class=\"selector-pseudo\">::before</span>&#123;</span><br><span class=\"line\"> <span class=\"attribute\">content</span>:<span class=\"string\">\"\"</span>;</span><br><span class=\"line\"> <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\"> <span class=\"attribute\">top</span>: <span class=\"number\">0</span>; <span class=\"attribute\">right</span>: <span class=\"number\">0</span>; <span class=\"attribute\">bottom</span>: <span class=\"number\">0</span>; <span class=\"attribute\">left</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\"> <span class=\"attribute\">transform</span>: <span class=\"built_in\">perspective</span>(20px) <span class=\"built_in\">scaleY</span>(1.3) <span class=\"built_in\">rotateX</span>(5deg);</span><br><span class=\"line\"> <span class=\"attribute\">transform-origin</span>: bottom;</span><br><span class=\"line\"> <span class=\"attribute\">background</span>: yellowgreen;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">// ---2---</span><br><span class=\"line\"><span class=\"selector-class\">.trapezoid</span> &#123;</span><br><span class=\"line\"> <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\"> <span class=\"attribute\">width</span>: <span class=\"number\">60px</span>;</span><br><span class=\"line\"> <span class=\"attribute\">border-top</span>: <span class=\"number\">60px</span> solid yellowgreen;</span><br><span class=\"line\"> <span class=\"attribute\">border-left</span>: <span class=\"number\">40px</span> solid transparent;</span><br><span class=\"line\"> <span class=\"attribute\">border-right</span>: <span class=\"number\">40px</span> solid transparent;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"五边形\"><a href=\"#五边形\" class=\"headerlink\" title=\"五边形\"></a>五边形</h2><p><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/pentagon-1.png\" alt=\"blockchain\"><br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.pentagon</span> &#123;</span><br><span class=\"line\"> <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\"> <span class=\"attribute\">width</span>: <span class=\"number\">60px</span>;</span><br><span class=\"line\"> <span class=\"attribute\">border-bottom</span>: <span class=\"number\">60px</span> solid yellowgreen;</span><br><span class=\"line\"> <span class=\"attribute\">border-left</span>: <span class=\"number\">40px</span> solid transparent;</span><br><span class=\"line\"> <span class=\"attribute\">border-right</span>: <span class=\"number\">40px</span> solid transparent; </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.pentagon</span><span class=\"selector-pseudo\">::before</span> &#123;</span><br><span class=\"line\"> <span class=\"attribute\">content</span>:<span class=\"string\">\"\"</span>;</span><br><span class=\"line\"> <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\"> <span class=\"attribute\">top</span>: <span class=\"number\">60px</span>;</span><br><span class=\"line\"> <span class=\"attribute\">left</span>: -<span class=\"number\">40px</span>;</span><br><span class=\"line\"> <span class=\"attribute\">border-top</span>: <span class=\"number\">60px</span> solid yellowgreen;</span><br><span class=\"line\"> <span class=\"attribute\">border-left</span>: <span class=\"number\">70px</span> solid transparent;</span><br><span class=\"line\"> <span class=\"attribute\">border-right</span>: <span class=\"number\">70px</span> solid transparent;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"六边形\"><a href=\"#六边形\" class=\"headerlink\" title=\"六边形\"></a>六边形</h2><p><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/pentagon-2.png\" alt=\"blockchain\"><br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.pentagon</span> &#123;</span><br><span class=\"line\"> <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\"> <span class=\"attribute\">width</span>: <span class=\"number\">60px</span>;</span><br><span class=\"line\"> <span class=\"attribute\">border-bottom</span>: <span class=\"number\">60px</span> solid yellowgreen;</span><br><span class=\"line\"> <span class=\"attribute\">border-left</span>: <span class=\"number\">40px</span> solid transparent;</span><br><span class=\"line\"> <span class=\"attribute\">border-right</span>: <span class=\"number\">40px</span> solid transparent;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.pentagon</span><span class=\"selector-pseudo\">::before</span> &#123;</span><br><span class=\"line\"> <span class=\"attribute\">content</span>: <span class=\"string\">\"\"</span>;</span><br><span class=\"line\"> <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\"> <span class=\"attribute\">width</span>: <span class=\"number\">60px</span>;</span><br><span class=\"line\"> <span class=\"attribute\">height</span>: <span class=\"number\">0px</span>;</span><br><span class=\"line\"> <span class=\"attribute\">top</span>: <span class=\"number\">60px</span>;</span><br><span class=\"line\"> <span class=\"attribute\">left</span>: -<span class=\"number\">40px</span>;</span><br><span class=\"line\"> <span class=\"attribute\">border-top</span>: <span class=\"number\">60px</span> solid yellowgreen;</span><br><span class=\"line\"> <span class=\"attribute\">border-left</span>: <span class=\"number\">40px</span> solid transparent;</span><br><span class=\"line\"> <span class=\"attribute\">border-right</span>: <span class=\"number\">40px</span> solid transparent;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"八边形\"><a href=\"#八边形\" class=\"headerlink\" title=\"八边形\"></a>八边形</h2><p><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/octagon.png\" alt=\"blockchain\"><br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.octagon</span> &#123;</span><br><span class=\"line\"> <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\"> <span class=\"attribute\">width</span>: <span class=\"number\">40px</span>;</span><br><span class=\"line\"> <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\"> <span class=\"attribute\">background</span>: yellowgreen;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.octagon</span><span class=\"selector-pseudo\">::before</span> &#123;</span><br><span class=\"line\"> <span class=\"attribute\">content</span>: <span class=\"string\">\"\"</span>;</span><br><span class=\"line\"> <span class=\"attribute\">height</span>: <span class=\"number\">60px</span>;</span><br><span class=\"line\"> <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\"> <span class=\"attribute\">top</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\"> <span class=\"attribute\">left</span>: <span class=\"number\">40px</span>;</span><br><span class=\"line\"> <span class=\"attribute\">border-left</span>: <span class=\"number\">30px</span> solid yellowgreen;</span><br><span class=\"line\"> <span class=\"attribute\">border-top</span>: <span class=\"number\">20px</span> solid transparent;</span><br><span class=\"line\"> <span class=\"attribute\">border-bottom</span>: <span class=\"number\">20px</span> solid transparent;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.octagon</span><span class=\"selector-pseudo\">::after</span> &#123;</span><br><span class=\"line\"> <span class=\"attribute\">content</span>: <span class=\"string\">\"\"</span>;</span><br><span class=\"line\"> <span class=\"attribute\">height</span>: <span class=\"number\">60px</span>;</span><br><span class=\"line\"> <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\"> <span class=\"attribute\">top</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\"> <span class=\"attribute\">left</span>: -<span class=\"number\">30px</span>;</span><br><span class=\"line\"> <span class=\"attribute\">border-right</span>: <span class=\"number\">30px</span> solid yellowgreen;</span><br><span class=\"line\"> <span class=\"attribute\">border-top</span>: <span class=\"number\">20px</span> solid transparent;</span><br><span class=\"line\"> <span class=\"attribute\">border-bottom</span>: <span class=\"number\">20px</span> solid transparent;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"五角星\"><a href=\"#五角星\" class=\"headerlink\" title=\"五角星\"></a>五角星</h2><blockquote>\n<p>这里使用 3 个三角形叠加旋转在一起实现。</p>\n</blockquote>\n<p><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/star.png\" alt=\"blockchain\"><br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.star</span> &#123;</span><br><span class=\"line\"> <span class=\"attribute\">margin</span>: <span class=\"number\">50px</span> <span class=\"number\">0</span>;</span><br><span class=\"line\"> <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\"> <span class=\"attribute\">width</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\"> <span class=\"attribute\">border-right</span>: <span class=\"number\">100px</span> solid transparent;</span><br><span class=\"line\"> <span class=\"attribute\">border-bottom</span>: <span class=\"number\">70px</span> solid yellowgreen;</span><br><span class=\"line\"> <span class=\"attribute\">border-left</span>: <span class=\"number\">100px</span> solid transparent;</span><br><span class=\"line\"> <span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(35deg) <span class=\"built_in\">scale</span>(.6);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.star</span><span class=\"selector-pseudo\">:before</span> &#123;</span><br><span class=\"line\"> <span class=\"attribute\">content</span>: <span class=\"string\">''</span>;</span><br><span class=\"line\"> <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\"> <span class=\"attribute\">border-bottom</span>: <span class=\"number\">80px</span> solid yellowgreen;</span><br><span class=\"line\"> <span class=\"attribute\">border-left</span>: <span class=\"number\">30px</span> solid transparent;</span><br><span class=\"line\"> <span class=\"attribute\">border-right</span>: <span class=\"number\">30px</span> solid transparent;</span><br><span class=\"line\"> <span class=\"attribute\">top</span>: -<span class=\"number\">45px</span>;</span><br><span class=\"line\"> <span class=\"attribute\">left</span>: -<span class=\"number\">65px</span>;</span><br><span class=\"line\"> <span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(-35deg);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.star</span><span class=\"selector-pseudo\">:after</span> &#123;</span><br><span class=\"line\"> <span class=\"attribute\">content</span>: <span class=\"string\">''</span>;</span><br><span class=\"line\"> <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\"> <span class=\"attribute\">top</span>: <span class=\"number\">3px</span>;</span><br><span class=\"line\"> <span class=\"attribute\">left</span>: -<span class=\"number\">105px</span>;</span><br><span class=\"line\"> <span class=\"attribute\">border-right</span>: <span class=\"number\">100px</span> solid transparent;</span><br><span class=\"line\"> <span class=\"attribute\">border-bottom</span>: <span class=\"number\">70px</span> solid yellowgreen;</span><br><span class=\"line\"> <span class=\"attribute\">border-left</span>: <span class=\"number\">100px</span> solid transparent;</span><br><span class=\"line\"> <span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(-70deg);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"六角星\"><a href=\"#六角星\" class=\"headerlink\" title=\"六角星\"></a>六角星</h2><p><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/sixstar.png\" alt=\"blockchain\"><br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.sixstar</span> &#123;</span><br><span class=\"line\"> <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\"> <span class=\"attribute\">width</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\"> <span class=\"attribute\">border-left</span>: <span class=\"number\">50px</span> solid transparent;</span><br><span class=\"line\"> <span class=\"attribute\">border-right</span>: <span class=\"number\">50px</span> solid transparent;</span><br><span class=\"line\"> <span class=\"attribute\">border-bottom</span>: <span class=\"number\">100px</span> solid yellowgreen;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.sixstar</span><span class=\"selector-pseudo\">:after</span> &#123;</span><br><span class=\"line\"> <span class=\"attribute\">content</span>: <span class=\"string\">\"\"</span>;</span><br><span class=\"line\"> <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\"> <span class=\"attribute\">border-left</span>: <span class=\"number\">50px</span> solid transparent;</span><br><span class=\"line\"> <span class=\"attribute\">border-right</span>: <span class=\"number\">50px</span> solid transparent;</span><br><span class=\"line\"> <span class=\"attribute\">border-top</span>: <span class=\"number\">100px</span> solid yellowgreen;</span><br><span class=\"line\"> <span class=\"attribute\">top</span>: <span class=\"number\">30px</span>;</span><br><span class=\"line\"> <span class=\"attribute\">left</span>: -<span class=\"number\">50px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"八角形\"><a href=\"#八角形\" class=\"headerlink\" title=\"八角形\"></a>八角形</h2><blockquote>\n<p>八角星呢？八个角那么多呢。其实使用两个矩形进行旋转拼接就可以了。</p>\n</blockquote>\n<p><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/eightstar.png\" alt=\"blockchain\"><br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.eightstar</span> &#123;</span><br><span class=\"line\"> <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\"> <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\"> <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\"> <span class=\"attribute\">background-color</span>: yellowgreen;</span><br><span class=\"line\"> <span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(30deg);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.eightstar</span><span class=\"selector-pseudo\">::before</span> &#123;</span><br><span class=\"line\"> <span class=\"attribute\">content</span>: <span class=\"string\">\"\"</span>;</span><br><span class=\"line\"> <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\"> <span class=\"attribute\">top</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\"> <span class=\"attribute\">left</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\"> <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\"> <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\"> <span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(45deg);</span><br><span class=\"line\"> <span class=\"attribute\">background-color</span>: yellowgreen;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"十二角形\"><a href=\"#十二角形\" class=\"headerlink\" title=\"十二角形\"></a>十二角形</h2><blockquote>\n<p>好。最后多角星再来一个十二级角星。在八角星的基础上，再增加一个矩形，就能得到十二角啦。也就是要过第一个伪元素。</p>\n</blockquote>\n<p><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/twelvestar.png\" alt=\"blockchain\"><br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.twelvestar</span> &#123;</span><br><span class=\"line\"> <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\"> <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\"> <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\"> <span class=\"attribute\">margin-bottom</span>: <span class=\"number\">100px</span><span class=\"meta\">!important</span>;</span><br><span class=\"line\"> <span class=\"attribute\">background-color</span>: yellowgreen;</span><br><span class=\"line\"> <span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(30deg);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.twelvestar</span><span class=\"selector-pseudo\">::before</span> &#123;</span><br><span class=\"line\"> <span class=\"attribute\">content</span>: <span class=\"string\">\"\"</span>;</span><br><span class=\"line\"> <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\"> <span class=\"attribute\">top</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\"> <span class=\"attribute\">left</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\"> <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\"> <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\"> <span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(30deg);</span><br><span class=\"line\"> <span class=\"attribute\">background-color</span>: yellowgreen;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.twelvestar</span><span class=\"selector-pseudo\">::after</span> &#123;</span><br><span class=\"line\"> <span class=\"attribute\">content</span>: <span class=\"string\">\"\"</span>;</span><br><span class=\"line\"> <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\"> <span class=\"attribute\">top</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\"> <span class=\"attribute\">left</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\"> <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\"> <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\"> <span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(60deg);</span><br><span class=\"line\"> <span class=\"attribute\">background-color</span>: yellowgreen;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"<h2 id=\"三角形\"><a href=\"#三角形\" class=\"headerlink\" title=\"三角形\"></a>三角形</h2><p><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/traingle.png\" alt=\"blockchain\"><br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.traingle</span> &#123;</span><br><span class=\"line\"> <span class=\"attribute\">width</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\"> <span class=\"attribute\">height</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\"> <span class=\"attribute\">border-left</span>: <span class=\"number\">50px</span> solid transparent;</span><br><span class=\"line\"> <span class=\"attribute\">border-right</span>: <span class=\"number\">50px</span> solid transparent;</span><br><span class=\"line\"> <span class=\"attribute\">border-bottom</span>: <span class=\"number\">100px</span> solid yellowgreen;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>","more":"<h2 id=\"切角\"><a href=\"#切角\" class=\"headerlink\" title=\"切角\"></a>切角</h2><p><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/notching.png\" alt=\"blockchain\"><br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.notching</span> &#123;</span><br><span class=\"line\"> <span class=\"attribute\">width</span>: <span class=\"number\">40px</span>;</span><br><span class=\"line\"> <span class=\"attribute\">height</span>: <span class=\"number\">40px</span>;</span><br><span class=\"line\"> <span class=\"attribute\">padding</span>: <span class=\"number\">40px</span>;</span><br><span class=\"line\"> <span class=\"attribute\">background</span>: <span class=\"built_in\">linear-gradient</span>(135deg, transparent 15px, yellowgreen 0) top left,</span><br><span class=\"line\"> <span class=\"built_in\">linear-gradient</span>(-135deg, transparent 15px, yellowgreen 0) top right,</span><br><span class=\"line\"> <span class=\"built_in\">linear-gradient</span>(-45deg, transparent 15px, yellowgreen 0) bottom right,</span><br><span class=\"line\"> <span class=\"built_in\">linear-gradient</span>(45deg, transparent 15px, yellowgreen 0) bottom left;</span><br><span class=\"line\"> <span class=\"attribute\">background-size</span>: <span class=\"number\">50%</span> <span class=\"number\">50%</span>;</span><br><span class=\"line\"> <span class=\"attribute\">background-repeat</span>: no-repeat;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"梯形\"><a href=\"#梯形\" class=\"headerlink\" title=\"梯形\"></a>梯形</h2><p><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/trapezoid.png\" alt=\"blockchain\"><br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.trapezoid</span>&#123;</span><br><span class=\"line\"> <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\"> <span class=\"attribute\">width</span>: <span class=\"number\">60px</span>;</span><br><span class=\"line\"> <span class=\"attribute\">padding</span>: <span class=\"number\">60px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.trapezoid</span><span class=\"selector-pseudo\">::before</span>&#123;</span><br><span class=\"line\"> <span class=\"attribute\">content</span>:<span class=\"string\">\"\"</span>;</span><br><span class=\"line\"> <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\"> <span class=\"attribute\">top</span>: <span class=\"number\">0</span>; <span class=\"attribute\">right</span>: <span class=\"number\">0</span>; <span class=\"attribute\">bottom</span>: <span class=\"number\">0</span>; <span class=\"attribute\">left</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\"> <span class=\"attribute\">transform</span>: <span class=\"built_in\">perspective</span>(20px) <span class=\"built_in\">scaleY</span>(1.3) <span class=\"built_in\">rotateX</span>(5deg);</span><br><span class=\"line\"> <span class=\"attribute\">transform-origin</span>: bottom;</span><br><span class=\"line\"> <span class=\"attribute\">background</span>: yellowgreen;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">// ---2---</span><br><span class=\"line\"><span class=\"selector-class\">.trapezoid</span> &#123;</span><br><span class=\"line\"> <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\"> <span class=\"attribute\">width</span>: <span class=\"number\">60px</span>;</span><br><span class=\"line\"> <span class=\"attribute\">border-top</span>: <span class=\"number\">60px</span> solid yellowgreen;</span><br><span class=\"line\"> <span class=\"attribute\">border-left</span>: <span class=\"number\">40px</span> solid transparent;</span><br><span class=\"line\"> <span class=\"attribute\">border-right</span>: <span class=\"number\">40px</span> solid transparent;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"五边形\"><a href=\"#五边形\" class=\"headerlink\" title=\"五边形\"></a>五边形</h2><p><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/pentagon-1.png\" alt=\"blockchain\"><br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.pentagon</span> &#123;</span><br><span class=\"line\"> <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\"> <span class=\"attribute\">width</span>: <span class=\"number\">60px</span>;</span><br><span class=\"line\"> <span class=\"attribute\">border-bottom</span>: <span class=\"number\">60px</span> solid yellowgreen;</span><br><span class=\"line\"> <span class=\"attribute\">border-left</span>: <span class=\"number\">40px</span> solid transparent;</span><br><span class=\"line\"> <span class=\"attribute\">border-right</span>: <span class=\"number\">40px</span> solid transparent; </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.pentagon</span><span class=\"selector-pseudo\">::before</span> &#123;</span><br><span class=\"line\"> <span class=\"attribute\">content</span>:<span class=\"string\">\"\"</span>;</span><br><span class=\"line\"> <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\"> <span class=\"attribute\">top</span>: <span class=\"number\">60px</span>;</span><br><span class=\"line\"> <span class=\"attribute\">left</span>: -<span class=\"number\">40px</span>;</span><br><span class=\"line\"> <span class=\"attribute\">border-top</span>: <span class=\"number\">60px</span> solid yellowgreen;</span><br><span class=\"line\"> <span class=\"attribute\">border-left</span>: <span class=\"number\">70px</span> solid transparent;</span><br><span class=\"line\"> <span class=\"attribute\">border-right</span>: <span class=\"number\">70px</span> solid transparent;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"六边形\"><a href=\"#六边形\" class=\"headerlink\" title=\"六边形\"></a>六边形</h2><p><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/pentagon-2.png\" alt=\"blockchain\"><br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.pentagon</span> &#123;</span><br><span class=\"line\"> <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\"> <span class=\"attribute\">width</span>: <span class=\"number\">60px</span>;</span><br><span class=\"line\"> <span class=\"attribute\">border-bottom</span>: <span class=\"number\">60px</span> solid yellowgreen;</span><br><span class=\"line\"> <span class=\"attribute\">border-left</span>: <span class=\"number\">40px</span> solid transparent;</span><br><span class=\"line\"> <span class=\"attribute\">border-right</span>: <span class=\"number\">40px</span> solid transparent;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.pentagon</span><span class=\"selector-pseudo\">::before</span> &#123;</span><br><span class=\"line\"> <span class=\"attribute\">content</span>: <span class=\"string\">\"\"</span>;</span><br><span class=\"line\"> <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\"> <span class=\"attribute\">width</span>: <span class=\"number\">60px</span>;</span><br><span class=\"line\"> <span class=\"attribute\">height</span>: <span class=\"number\">0px</span>;</span><br><span class=\"line\"> <span class=\"attribute\">top</span>: <span class=\"number\">60px</span>;</span><br><span class=\"line\"> <span class=\"attribute\">left</span>: -<span class=\"number\">40px</span>;</span><br><span class=\"line\"> <span class=\"attribute\">border-top</span>: <span class=\"number\">60px</span> solid yellowgreen;</span><br><span class=\"line\"> <span class=\"attribute\">border-left</span>: <span class=\"number\">40px</span> solid transparent;</span><br><span class=\"line\"> <span class=\"attribute\">border-right</span>: <span class=\"number\">40px</span> solid transparent;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"八边形\"><a href=\"#八边形\" class=\"headerlink\" title=\"八边形\"></a>八边形</h2><p><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/octagon.png\" alt=\"blockchain\"><br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.octagon</span> &#123;</span><br><span class=\"line\"> <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\"> <span class=\"attribute\">width</span>: <span class=\"number\">40px</span>;</span><br><span class=\"line\"> <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\"> <span class=\"attribute\">background</span>: yellowgreen;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.octagon</span><span class=\"selector-pseudo\">::before</span> &#123;</span><br><span class=\"line\"> <span class=\"attribute\">content</span>: <span class=\"string\">\"\"</span>;</span><br><span class=\"line\"> <span class=\"attribute\">height</span>: <span class=\"number\">60px</span>;</span><br><span class=\"line\"> <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\"> <span class=\"attribute\">top</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\"> <span class=\"attribute\">left</span>: <span class=\"number\">40px</span>;</span><br><span class=\"line\"> <span class=\"attribute\">border-left</span>: <span class=\"number\">30px</span> solid yellowgreen;</span><br><span class=\"line\"> <span class=\"attribute\">border-top</span>: <span class=\"number\">20px</span> solid transparent;</span><br><span class=\"line\"> <span class=\"attribute\">border-bottom</span>: <span class=\"number\">20px</span> solid transparent;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.octagon</span><span class=\"selector-pseudo\">::after</span> &#123;</span><br><span class=\"line\"> <span class=\"attribute\">content</span>: <span class=\"string\">\"\"</span>;</span><br><span class=\"line\"> <span class=\"attribute\">height</span>: <span class=\"number\">60px</span>;</span><br><span class=\"line\"> <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\"> <span class=\"attribute\">top</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\"> <span class=\"attribute\">left</span>: -<span class=\"number\">30px</span>;</span><br><span class=\"line\"> <span class=\"attribute\">border-right</span>: <span class=\"number\">30px</span> solid yellowgreen;</span><br><span class=\"line\"> <span class=\"attribute\">border-top</span>: <span class=\"number\">20px</span> solid transparent;</span><br><span class=\"line\"> <span class=\"attribute\">border-bottom</span>: <span class=\"number\">20px</span> solid transparent;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"五角星\"><a href=\"#五角星\" class=\"headerlink\" title=\"五角星\"></a>五角星</h2><blockquote>\n<p>这里使用 3 个三角形叠加旋转在一起实现。</p>\n</blockquote>\n<p><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/star.png\" alt=\"blockchain\"><br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.star</span> &#123;</span><br><span class=\"line\"> <span class=\"attribute\">margin</span>: <span class=\"number\">50px</span> <span class=\"number\">0</span>;</span><br><span class=\"line\"> <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\"> <span class=\"attribute\">width</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\"> <span class=\"attribute\">border-right</span>: <span class=\"number\">100px</span> solid transparent;</span><br><span class=\"line\"> <span class=\"attribute\">border-bottom</span>: <span class=\"number\">70px</span> solid yellowgreen;</span><br><span class=\"line\"> <span class=\"attribute\">border-left</span>: <span class=\"number\">100px</span> solid transparent;</span><br><span class=\"line\"> <span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(35deg) <span class=\"built_in\">scale</span>(.6);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.star</span><span class=\"selector-pseudo\">:before</span> &#123;</span><br><span class=\"line\"> <span class=\"attribute\">content</span>: <span class=\"string\">''</span>;</span><br><span class=\"line\"> <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\"> <span class=\"attribute\">border-bottom</span>: <span class=\"number\">80px</span> solid yellowgreen;</span><br><span class=\"line\"> <span class=\"attribute\">border-left</span>: <span class=\"number\">30px</span> solid transparent;</span><br><span class=\"line\"> <span class=\"attribute\">border-right</span>: <span class=\"number\">30px</span> solid transparent;</span><br><span class=\"line\"> <span class=\"attribute\">top</span>: -<span class=\"number\">45px</span>;</span><br><span class=\"line\"> <span class=\"attribute\">left</span>: -<span class=\"number\">65px</span>;</span><br><span class=\"line\"> <span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(-35deg);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.star</span><span class=\"selector-pseudo\">:after</span> &#123;</span><br><span class=\"line\"> <span class=\"attribute\">content</span>: <span class=\"string\">''</span>;</span><br><span class=\"line\"> <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\"> <span class=\"attribute\">top</span>: <span class=\"number\">3px</span>;</span><br><span class=\"line\"> <span class=\"attribute\">left</span>: -<span class=\"number\">105px</span>;</span><br><span class=\"line\"> <span class=\"attribute\">border-right</span>: <span class=\"number\">100px</span> solid transparent;</span><br><span class=\"line\"> <span class=\"attribute\">border-bottom</span>: <span class=\"number\">70px</span> solid yellowgreen;</span><br><span class=\"line\"> <span class=\"attribute\">border-left</span>: <span class=\"number\">100px</span> solid transparent;</span><br><span class=\"line\"> <span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(-70deg);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"六角星\"><a href=\"#六角星\" class=\"headerlink\" title=\"六角星\"></a>六角星</h2><p><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/sixstar.png\" alt=\"blockchain\"><br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.sixstar</span> &#123;</span><br><span class=\"line\"> <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\"> <span class=\"attribute\">width</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\"> <span class=\"attribute\">border-left</span>: <span class=\"number\">50px</span> solid transparent;</span><br><span class=\"line\"> <span class=\"attribute\">border-right</span>: <span class=\"number\">50px</span> solid transparent;</span><br><span class=\"line\"> <span class=\"attribute\">border-bottom</span>: <span class=\"number\">100px</span> solid yellowgreen;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.sixstar</span><span class=\"selector-pseudo\">:after</span> &#123;</span><br><span class=\"line\"> <span class=\"attribute\">content</span>: <span class=\"string\">\"\"</span>;</span><br><span class=\"line\"> <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\"> <span class=\"attribute\">border-left</span>: <span class=\"number\">50px</span> solid transparent;</span><br><span class=\"line\"> <span class=\"attribute\">border-right</span>: <span class=\"number\">50px</span> solid transparent;</span><br><span class=\"line\"> <span class=\"attribute\">border-top</span>: <span class=\"number\">100px</span> solid yellowgreen;</span><br><span class=\"line\"> <span class=\"attribute\">top</span>: <span class=\"number\">30px</span>;</span><br><span class=\"line\"> <span class=\"attribute\">left</span>: -<span class=\"number\">50px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"八角形\"><a href=\"#八角形\" class=\"headerlink\" title=\"八角形\"></a>八角形</h2><blockquote>\n<p>八角星呢？八个角那么多呢。其实使用两个矩形进行旋转拼接就可以了。</p>\n</blockquote>\n<p><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/eightstar.png\" alt=\"blockchain\"><br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.eightstar</span> &#123;</span><br><span class=\"line\"> <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\"> <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\"> <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\"> <span class=\"attribute\">background-color</span>: yellowgreen;</span><br><span class=\"line\"> <span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(30deg);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.eightstar</span><span class=\"selector-pseudo\">::before</span> &#123;</span><br><span class=\"line\"> <span class=\"attribute\">content</span>: <span class=\"string\">\"\"</span>;</span><br><span class=\"line\"> <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\"> <span class=\"attribute\">top</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\"> <span class=\"attribute\">left</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\"> <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\"> <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\"> <span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(45deg);</span><br><span class=\"line\"> <span class=\"attribute\">background-color</span>: yellowgreen;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"十二角形\"><a href=\"#十二角形\" class=\"headerlink\" title=\"十二角形\"></a>十二角形</h2><blockquote>\n<p>好。最后多角星再来一个十二级角星。在八角星的基础上，再增加一个矩形，就能得到十二角啦。也就是要过第一个伪元素。</p>\n</blockquote>\n<p><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/twelvestar.png\" alt=\"blockchain\"><br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.twelvestar</span> &#123;</span><br><span class=\"line\"> <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\"> <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\"> <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\"> <span class=\"attribute\">margin-bottom</span>: <span class=\"number\">100px</span><span class=\"meta\">!important</span>;</span><br><span class=\"line\"> <span class=\"attribute\">background-color</span>: yellowgreen;</span><br><span class=\"line\"> <span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(30deg);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.twelvestar</span><span class=\"selector-pseudo\">::before</span> &#123;</span><br><span class=\"line\"> <span class=\"attribute\">content</span>: <span class=\"string\">\"\"</span>;</span><br><span class=\"line\"> <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\"> <span class=\"attribute\">top</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\"> <span class=\"attribute\">left</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\"> <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\"> <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\"> <span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(30deg);</span><br><span class=\"line\"> <span class=\"attribute\">background-color</span>: yellowgreen;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.twelvestar</span><span class=\"selector-pseudo\">::after</span> &#123;</span><br><span class=\"line\"> <span class=\"attribute\">content</span>: <span class=\"string\">\"\"</span>;</span><br><span class=\"line\"> <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\"> <span class=\"attribute\">top</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\"> <span class=\"attribute\">left</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\"> <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\"> <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\"> <span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(60deg);</span><br><span class=\"line\"> <span class=\"attribute\">background-color</span>: yellowgreen;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>"},{"title":"vue-router-打开新页面","date":"2020-06-23T08:21:44.000Z","_content":"## vue-router 如何在新窗口打开页面\n\n### 1. <router-link>标签实现新窗口打开   \n官方文档中说 v-link 指令被 <router-link> 组件指令替代，且 <router-link> 不支持 target=\"_blank\" 属性，如果需要打开一个新窗口必须要用<a>标签，但事实上vue2版本的 <router-link> 是支持 target=\"_blank\" 属性的(tag=\"a\")，如下：\n```html\n<router-link target=\"_blank\" :to=\"{path:'/home',query:{id:'1'}}\">新页面打开home页</router-link>\n```\n\n### 2.编程式导航\n有些时候需要在单击事件或者在函数中实现页面跳转，那么可以借助router的示例方法，通过编写代码实现。我们常用的是 $router.push 和 $router.go 但是vue2.0以后，这种方式就不支持新窗口打开的属性了，这个时候就需要使用this.$router.resolve,如下：\n```html\nseeShare(){\n  let routeUrl = this.$router.resolve({\n      path: \"/share\",\n      query: {id:96}\n  });\n  window.open(routeUrl .href, '_blank');\n}\n```","source":"_posts/vue-router-打开新页面.md","raw":"---\ntitle: vue-router-打开新页面\ncategories: gc-end\ndate: 2020-06-23 16:21:44\ntags: vue router\n---\n## vue-router 如何在新窗口打开页面\n\n### 1. <router-link>标签实现新窗口打开   \n官方文档中说 v-link 指令被 <router-link> 组件指令替代，且 <router-link> 不支持 target=\"_blank\" 属性，如果需要打开一个新窗口必须要用<a>标签，但事实上vue2版本的 <router-link> 是支持 target=\"_blank\" 属性的(tag=\"a\")，如下：\n```html\n<router-link target=\"_blank\" :to=\"{path:'/home',query:{id:'1'}}\">新页面打开home页</router-link>\n```\n\n### 2.编程式导航\n有些时候需要在单击事件或者在函数中实现页面跳转，那么可以借助router的示例方法，通过编写代码实现。我们常用的是 $router.push 和 $router.go 但是vue2.0以后，这种方式就不支持新窗口打开的属性了，这个时候就需要使用this.$router.resolve,如下：\n```html\nseeShare(){\n  let routeUrl = this.$router.resolve({\n      path: \"/share\",\n      query: {id:96}\n  });\n  window.open(routeUrl .href, '_blank');\n}\n```","slug":"vue-router-打开新页面","published":1,"updated":"2020-07-01T09:12:26.387Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdr00y630020e7zcgh7joc3u","content":"<h2 id=\"vue-router-如何在新窗口打开页面\"><a href=\"#vue-router-如何在新窗口打开页面\" class=\"headerlink\" title=\"vue-router 如何在新窗口打开页面\"></a>vue-router 如何在新窗口打开页面</h2><h3 id=\"1-标签实现新窗口打开\"><a href=\"#1-标签实现新窗口打开\" class=\"headerlink\" title=\"1. 标签实现新窗口打开\"></a>1. <router-link>标签实现新窗口打开</router-link></h3><p>官方文档中说 v-link 指令被 <router-link> 组件指令替代，且 <router-link> 不支持 target=”_blank” 属性，如果需要打开一个新窗口必须要用<a>标签，但事实上vue2版本的 <router-link> 是支持 target=”_blank” 属性的(tag=”a”)，如下：<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">target</span>=<span class=\"string\">\"_blank\"</span> <span class=\"attr\">:to</span>=<span class=\"string\">\"&#123;path:'/home',query:&#123;id:'1'&#125;&#125;\"</span>&gt;</span>新页面打开home页<span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span></span><br></pre></td></tr></table></figure></router-link></a></router-link></router-link></p>\n<h3 id=\"2-编程式导航\"><a href=\"#2-编程式导航\" class=\"headerlink\" title=\"2.编程式导航\"></a>2.编程式导航</h3><p>有些时候需要在单击事件或者在函数中实现页面跳转，那么可以借助router的示例方法，通过编写代码实现。我们常用的是 $router.push 和 $router.go 但是vue2.0以后，这种方式就不支持新窗口打开的属性了，这个时候就需要使用this.$router.resolve,如下：<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">seeShare()&#123;</span><br><span class=\"line\">  let routeUrl = this.$router.resolve(&#123;</span><br><span class=\"line\">      path: \"/share\",</span><br><span class=\"line\">      query: &#123;id:96&#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  window.open(routeUrl .href, '_blank');</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"vue-router-如何在新窗口打开页面\"><a href=\"#vue-router-如何在新窗口打开页面\" class=\"headerlink\" title=\"vue-router 如何在新窗口打开页面\"></a>vue-router 如何在新窗口打开页面</h2><h3 id=\"1-标签实现新窗口打开\"><a href=\"#1-标签实现新窗口打开\" class=\"headerlink\" title=\"1. 标签实现新窗口打开\"></a>1. <router-link>标签实现新窗口打开</router-link></h3><p>官方文档中说 v-link 指令被 <router-link> 组件指令替代，且 <router-link> 不支持 target=”_blank” 属性，如果需要打开一个新窗口必须要用<a>标签，但事实上vue2版本的 <router-link> 是支持 target=”_blank” 属性的(tag=”a”)，如下：<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">target</span>=<span class=\"string\">\"_blank\"</span> <span class=\"attr\">:to</span>=<span class=\"string\">\"&#123;path:'/home',query:&#123;id:'1'&#125;&#125;\"</span>&gt;</span>新页面打开home页<span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span></span><br></pre></td></tr></table></figure></router-link></a></router-link></router-link></p>\n<h3 id=\"2-编程式导航\"><a href=\"#2-编程式导航\" class=\"headerlink\" title=\"2.编程式导航\"></a>2.编程式导航</h3><p>有些时候需要在单击事件或者在函数中实现页面跳转，那么可以借助router的示例方法，通过编写代码实现。我们常用的是 $router.push 和 $router.go 但是vue2.0以后，这种方式就不支持新窗口打开的属性了，这个时候就需要使用this.$router.resolve,如下：<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">seeShare()&#123;</span><br><span class=\"line\">  let routeUrl = this.$router.resolve(&#123;</span><br><span class=\"line\">      path: \"/share\",</span><br><span class=\"line\">      query: &#123;id:96&#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  window.open(routeUrl .href, '_blank');</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n"},{"title":"video 常用api和播放器插件-vue","date":"2019-10-30T02:04:21.000Z","_content":"\n1.[播放/暂停](#播放/暂停)   \n2.[播放进度控制](#播放进度控制)   \n3.[音量控制](#音量控制)   \n4.[全屏控制](#全屏控制)   \n\n<!-- more -->\n\n![blockchain](https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/video.png)   \n\n## 播放/暂停   \napi：\n```api\n<!-- 语法 -->\naudio|video.play()\n<!-- 定义和用法 -->\nplay() 方法开始播放当前的音频或视频。\n<!-- 实例 -->\nvar myVideo=document.getElementById(\"video1\");\nfunction playVid()\n{\n  myVideo.play();\n}\nfunction pauseVid()\n{\n  myVideo.pause();\n}\n```\n\n```javascript\nplay () {\n  if (!this.videoState.play) {\n    this.videoState.play = true\n    this.videoDom.play()\n  } else {\n    this.videoState.play = false\n    this.videoDom.pause()\n  }\n},\n```\n## 播放进度控制   \napi：\n```api\n<!-- 语法 -->\naudio|video.duration\n<!-- 定义和用法 -->\nduration 属性返回当前音频/视频的长度，以秒计。   \n如果未设置音频/视频，则返回 NaN (Not-a-Number)。   \n```\n\n```api\n<!-- 语法 -->\naudio|video.currentTime=\"seconds\"\n<!-- 定义和用法 -->\ncurrentTime 属性设置或返回音频/视频播放的当前位置（以秒计）。   \n当设置该属性时，播放会跳跃到指定的位置。   \n```\n\n```javascript\nthis.videoDom.addEventListener('loadedmetadata', () => { // 获取视频总时长\n  console.log('时长', this.videoDom.duration)\n  this.duration = this.timeTranslate(this.videoDom.duration)\n})\nthis.videoDom.addEventListener('timeupdate', () => { // 监听视频播放过程中的时间\n  if (!this.videoState.startPlay) this.videoState.startPlay = true\n  const percentage = 100 * this.videoDom.currentTime / this.videoDom.duration\n  this.videoPro.style.width = percentage + '%'\n  this.videoPoint.style.left = percentage - 1 + '%'\n  this.currentTime = this.timeTranslate(this.videoDom.currentTime)\n})\n\ntimePrograssDown (ev) {\n  this.timeStartL = this.videoYlPoint.offsetLeft\n  this.timeMoveStartL = ev.pageX\n  this.timeFlag = true\n  console.log('开始')\n},\ntimePrograssMove (ev) {\n  if (!this.timeFlag) return\n  const timeLineWidth = this.videoTimeLine.offsetWidth\n  const timePointWidth = this.videoPoint.offsetWidth\n  const moveNum = ev.pageX - this.timeMoveStartL\n  if (moveNum < 0 || moveNum > (timeLineWidth - timePointWidth)) return\n  this.videoPoint.style.left = moveNum + 'px'\n  if (!moveNum) return\n  this.videoDom.currentTime = this.videoDom.duration * (moveNum / timeLineWidth)\n  this.currentTime = this.timeTranslate(this.videoDom.currentTime)\n  // console.log('移动', this.duration, moveNum, timeLineWidth, this.duration * (moveNum / timeLineWidth))\n},\ntimePrograssUp (ev) {\n  this.timeFlag = false\n}\n```\n## 音量控制  \napi：\n```api\n<!-- 语法 -->\nvolumechange 事件在音频/视频（audio/video）的音量发生改变时触发。   \n该事件被引用的情况:1)提高或降低音量   \n2)静音或取消静音   \n```\n\n```api\n<!-- 语法 -->\naudio|video.volume=volumevalue   \n规定音频/视频的当前音量。必须是介于 0.0 与 1.0 之间的数字。   \n1)1.0 是最高音量（默认）   \n2)0.5 是一半音量 （50%）   \n3) 0.0 是静音\n```\n\n```javascript\nthis.videoDom.addEventListener('volumechange', () => {\n  const percentage = this.videoDom.volume * 100\n  console.log('yinliang', percentage)\n})\n\nhandleVolPrograssDown (ev) {\n  this.videoYlPointCurrent = ev.pageY\n  this.ylMovePointStartY = this.videoYlPoint.offsetTop\n  this.videoYlPointFlag = true\n},\nhandleVolPrograssMove (ev) {\n  if (!this.videoYlPointFlag) return\n  const moveY = this.videoYlPointCurrent - ev.pageY\n  this.videoYlPointTop = this.ylMovePointStartY - moveY\n  if (this.videoYlPointTop > 90 || this.videoYlPointTop < 0) return\n  this.videoYlPoint.style.top = this.videoYlPointTop + 'px'\n  this.videoYlIng.style.height = (90 - this.videoYlPointTop) + 'px'\n  this.videoDom.volume = ((90 - this.videoYlPointTop) / 100).toFixed(1)\n},\nhandleVolPrograssUp (ev) {\n  this.videoYlPointFlag = false\n},\n```\n## 全屏控制   \n```javascript\nhandleScreen () { // 全屏操作\n  this.videoState.screenState = !this.videoState.screenState\n  if (this.videoState.screenState) {\n    this.fullScreen()\n  } else {\n    this.exitFullscreen()\n  }\n},\nfullScreen () {\n  let ele = document.documentElement\n  if (ele.requestFullscreen) {\n    ele.requestFullscreen()\n  } else if (ele.mozRequestFullScreen) {\n    ele.mozRequestFullScreen()\n  } else if (ele.webkitRequestFullScreen) {\n    ele.webkitRequestFullScreen()\n  }\n  this.$refs['custom-video_container'].style.width = '100%'\n  this.$refs['custom-video_container'].style.height = '100%'\n},\nexitFullscreen () {\n  let de = document\n  if (de.exitFullscreen) {\n    de.exitFullscreen()\n  } else if (de.mozCancelFullScreen) {\n    de.mozCancelFullScreen()\n  } else if (de.webkitCancelFullScreen) {\n    de.webkitCancelFullScreen()\n  }\n  this.$refs['custom-video_container'].style.width = '500px'\n  this.$refs['custom-video_container'].style.height = '300px'\n},\n```\n\n## 源码   \nhttps://github.com/xiaosongread/vue-pc-cli\n\n## 参考   \nhttps://juejin.im/post/5daef8b6e51d4524e60e0f6a#heading-7   \nhttps://github.com/yuelinghunyu/blog-demo/tree/master/video-player   \n\n> 效果有点糙，优化空间还很大。","source":"_posts/video.md","raw":"---\ntitle: video 常用api和播放器插件-vue\ncategories: js-end\ndate: 2019-10-30 10:04:21\n---\n\n1.[播放/暂停](#播放/暂停)   \n2.[播放进度控制](#播放进度控制)   \n3.[音量控制](#音量控制)   \n4.[全屏控制](#全屏控制)   \n\n<!-- more -->\n\n![blockchain](https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/video.png)   \n\n## 播放/暂停   \napi：\n```api\n<!-- 语法 -->\naudio|video.play()\n<!-- 定义和用法 -->\nplay() 方法开始播放当前的音频或视频。\n<!-- 实例 -->\nvar myVideo=document.getElementById(\"video1\");\nfunction playVid()\n{\n  myVideo.play();\n}\nfunction pauseVid()\n{\n  myVideo.pause();\n}\n```\n\n```javascript\nplay () {\n  if (!this.videoState.play) {\n    this.videoState.play = true\n    this.videoDom.play()\n  } else {\n    this.videoState.play = false\n    this.videoDom.pause()\n  }\n},\n```\n## 播放进度控制   \napi：\n```api\n<!-- 语法 -->\naudio|video.duration\n<!-- 定义和用法 -->\nduration 属性返回当前音频/视频的长度，以秒计。   \n如果未设置音频/视频，则返回 NaN (Not-a-Number)。   \n```\n\n```api\n<!-- 语法 -->\naudio|video.currentTime=\"seconds\"\n<!-- 定义和用法 -->\ncurrentTime 属性设置或返回音频/视频播放的当前位置（以秒计）。   \n当设置该属性时，播放会跳跃到指定的位置。   \n```\n\n```javascript\nthis.videoDom.addEventListener('loadedmetadata', () => { // 获取视频总时长\n  console.log('时长', this.videoDom.duration)\n  this.duration = this.timeTranslate(this.videoDom.duration)\n})\nthis.videoDom.addEventListener('timeupdate', () => { // 监听视频播放过程中的时间\n  if (!this.videoState.startPlay) this.videoState.startPlay = true\n  const percentage = 100 * this.videoDom.currentTime / this.videoDom.duration\n  this.videoPro.style.width = percentage + '%'\n  this.videoPoint.style.left = percentage - 1 + '%'\n  this.currentTime = this.timeTranslate(this.videoDom.currentTime)\n})\n\ntimePrograssDown (ev) {\n  this.timeStartL = this.videoYlPoint.offsetLeft\n  this.timeMoveStartL = ev.pageX\n  this.timeFlag = true\n  console.log('开始')\n},\ntimePrograssMove (ev) {\n  if (!this.timeFlag) return\n  const timeLineWidth = this.videoTimeLine.offsetWidth\n  const timePointWidth = this.videoPoint.offsetWidth\n  const moveNum = ev.pageX - this.timeMoveStartL\n  if (moveNum < 0 || moveNum > (timeLineWidth - timePointWidth)) return\n  this.videoPoint.style.left = moveNum + 'px'\n  if (!moveNum) return\n  this.videoDom.currentTime = this.videoDom.duration * (moveNum / timeLineWidth)\n  this.currentTime = this.timeTranslate(this.videoDom.currentTime)\n  // console.log('移动', this.duration, moveNum, timeLineWidth, this.duration * (moveNum / timeLineWidth))\n},\ntimePrograssUp (ev) {\n  this.timeFlag = false\n}\n```\n## 音量控制  \napi：\n```api\n<!-- 语法 -->\nvolumechange 事件在音频/视频（audio/video）的音量发生改变时触发。   \n该事件被引用的情况:1)提高或降低音量   \n2)静音或取消静音   \n```\n\n```api\n<!-- 语法 -->\naudio|video.volume=volumevalue   \n规定音频/视频的当前音量。必须是介于 0.0 与 1.0 之间的数字。   \n1)1.0 是最高音量（默认）   \n2)0.5 是一半音量 （50%）   \n3) 0.0 是静音\n```\n\n```javascript\nthis.videoDom.addEventListener('volumechange', () => {\n  const percentage = this.videoDom.volume * 100\n  console.log('yinliang', percentage)\n})\n\nhandleVolPrograssDown (ev) {\n  this.videoYlPointCurrent = ev.pageY\n  this.ylMovePointStartY = this.videoYlPoint.offsetTop\n  this.videoYlPointFlag = true\n},\nhandleVolPrograssMove (ev) {\n  if (!this.videoYlPointFlag) return\n  const moveY = this.videoYlPointCurrent - ev.pageY\n  this.videoYlPointTop = this.ylMovePointStartY - moveY\n  if (this.videoYlPointTop > 90 || this.videoYlPointTop < 0) return\n  this.videoYlPoint.style.top = this.videoYlPointTop + 'px'\n  this.videoYlIng.style.height = (90 - this.videoYlPointTop) + 'px'\n  this.videoDom.volume = ((90 - this.videoYlPointTop) / 100).toFixed(1)\n},\nhandleVolPrograssUp (ev) {\n  this.videoYlPointFlag = false\n},\n```\n## 全屏控制   \n```javascript\nhandleScreen () { // 全屏操作\n  this.videoState.screenState = !this.videoState.screenState\n  if (this.videoState.screenState) {\n    this.fullScreen()\n  } else {\n    this.exitFullscreen()\n  }\n},\nfullScreen () {\n  let ele = document.documentElement\n  if (ele.requestFullscreen) {\n    ele.requestFullscreen()\n  } else if (ele.mozRequestFullScreen) {\n    ele.mozRequestFullScreen()\n  } else if (ele.webkitRequestFullScreen) {\n    ele.webkitRequestFullScreen()\n  }\n  this.$refs['custom-video_container'].style.width = '100%'\n  this.$refs['custom-video_container'].style.height = '100%'\n},\nexitFullscreen () {\n  let de = document\n  if (de.exitFullscreen) {\n    de.exitFullscreen()\n  } else if (de.mozCancelFullScreen) {\n    de.mozCancelFullScreen()\n  } else if (de.webkitCancelFullScreen) {\n    de.webkitCancelFullScreen()\n  }\n  this.$refs['custom-video_container'].style.width = '500px'\n  this.$refs['custom-video_container'].style.height = '300px'\n},\n```\n\n## 源码   \nhttps://github.com/xiaosongread/vue-pc-cli\n\n## 参考   \nhttps://juejin.im/post/5daef8b6e51d4524e60e0f6a#heading-7   \nhttps://github.com/yuelinghunyu/blog-demo/tree/master/video-player   \n\n> 效果有点糙，优化空间还很大。","slug":"video","published":1,"updated":"2020-07-01T09:12:26.386Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdr00y640023e7zczjnsnhqf","content":"<p>1.<a href=\"#播放/暂停\">播放/暂停</a><br>2.<a href=\"#播放进度控制\">播放进度控制</a><br>3.<a href=\"#音量控制\">音量控制</a><br>4.<a href=\"#全屏控制\">全屏控制</a>   </p>\n<a id=\"more\"></a>\n<p><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/video.png\" alt=\"blockchain\">   </p>\n<h2 id=\"播放-暂停\"><a href=\"#播放-暂停\" class=\"headerlink\" title=\"播放/暂停\"></a>播放/暂停</h2><p>api：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 语法 --&gt;</span><br><span class=\"line\">audio|video.play()</span><br><span class=\"line\">&lt;!-- 定义和用法 --&gt;</span><br><span class=\"line\">play() 方法开始播放当前的音频或视频。</span><br><span class=\"line\">&lt;!-- 实例 --&gt;</span><br><span class=\"line\">var myVideo=document.getElementById(&quot;video1&quot;);</span><br><span class=\"line\">function playVid()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  myVideo.play();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">function pauseVid()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  myVideo.pause();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">play () &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!<span class=\"keyword\">this</span>.videoState.play) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.videoState.play = <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.videoDom.play()</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.videoState.play = <span class=\"literal\">false</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.videoDom.pause()</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<h2 id=\"播放进度控制\"><a href=\"#播放进度控制\" class=\"headerlink\" title=\"播放进度控制\"></a>播放进度控制</h2><p>api：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 语法 --&gt;</span><br><span class=\"line\">audio|video.duration</span><br><span class=\"line\">&lt;!-- 定义和用法 --&gt;</span><br><span class=\"line\">duration 属性返回当前音频/视频的长度，以秒计。   </span><br><span class=\"line\">如果未设置音频/视频，则返回 NaN (Not-a-Number)。</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 语法 --&gt;</span><br><span class=\"line\">audio|video.currentTime=&quot;seconds&quot;</span><br><span class=\"line\">&lt;!-- 定义和用法 --&gt;</span><br><span class=\"line\">currentTime 属性设置或返回音频/视频播放的当前位置（以秒计）。   </span><br><span class=\"line\">当设置该属性时，播放会跳跃到指定的位置。</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">this</span>.videoDom.addEventListener(<span class=\"string\">'loadedmetadata'</span>, () =&gt; &#123; <span class=\"comment\">// 获取视频总时长</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'时长'</span>, <span class=\"keyword\">this</span>.videoDom.duration)</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.duration = <span class=\"keyword\">this</span>.timeTranslate(<span class=\"keyword\">this</span>.videoDom.duration)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"keyword\">this</span>.videoDom.addEventListener(<span class=\"string\">'timeupdate'</span>, () =&gt; &#123; <span class=\"comment\">// 监听视频播放过程中的时间</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!<span class=\"keyword\">this</span>.videoState.startPlay) <span class=\"keyword\">this</span>.videoState.startPlay = <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> percentage = <span class=\"number\">100</span> * <span class=\"keyword\">this</span>.videoDom.currentTime / <span class=\"keyword\">this</span>.videoDom.duration</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.videoPro.style.width = percentage + <span class=\"string\">'%'</span></span><br><span class=\"line\">  <span class=\"keyword\">this</span>.videoPoint.style.left = percentage - <span class=\"number\">1</span> + <span class=\"string\">'%'</span></span><br><span class=\"line\">  <span class=\"keyword\">this</span>.currentTime = <span class=\"keyword\">this</span>.timeTranslate(<span class=\"keyword\">this</span>.videoDom.currentTime)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">timePrograssDown (ev) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.timeStartL = <span class=\"keyword\">this</span>.videoYlPoint.offsetLeft</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.timeMoveStartL = ev.pageX</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.timeFlag = <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'开始'</span>)</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">timePrograssMove (ev) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!<span class=\"keyword\">this</span>.timeFlag) <span class=\"keyword\">return</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> timeLineWidth = <span class=\"keyword\">this</span>.videoTimeLine.offsetWidth</span><br><span class=\"line\">  <span class=\"keyword\">const</span> timePointWidth = <span class=\"keyword\">this</span>.videoPoint.offsetWidth</span><br><span class=\"line\">  <span class=\"keyword\">const</span> moveNum = ev.pageX - <span class=\"keyword\">this</span>.timeMoveStartL</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (moveNum &lt; <span class=\"number\">0</span> || moveNum &gt; (timeLineWidth - timePointWidth)) <span class=\"keyword\">return</span></span><br><span class=\"line\">  <span class=\"keyword\">this</span>.videoPoint.style.left = moveNum + <span class=\"string\">'px'</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!moveNum) <span class=\"keyword\">return</span></span><br><span class=\"line\">  <span class=\"keyword\">this</span>.videoDom.currentTime = <span class=\"keyword\">this</span>.videoDom.duration * (moveNum / timeLineWidth)</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.currentTime = <span class=\"keyword\">this</span>.timeTranslate(<span class=\"keyword\">this</span>.videoDom.currentTime)</span><br><span class=\"line\">  <span class=\"comment\">// console.log('移动', this.duration, moveNum, timeLineWidth, this.duration * (moveNum / timeLineWidth))</span></span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">timePrograssUp (ev) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.timeFlag = <span class=\"literal\">false</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"音量控制\"><a href=\"#音量控制\" class=\"headerlink\" title=\"音量控制\"></a>音量控制</h2><p>api：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 语法 --&gt;</span><br><span class=\"line\">volumechange 事件在音频/视频（audio/video）的音量发生改变时触发。   </span><br><span class=\"line\">该事件被引用的情况:1)提高或降低音量   </span><br><span class=\"line\">2)静音或取消静音</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 语法 --&gt;</span><br><span class=\"line\">audio|video.volume=volumevalue   </span><br><span class=\"line\">规定音频/视频的当前音量。必须是介于 0.0 与 1.0 之间的数字。   </span><br><span class=\"line\">1)1.0 是最高音量（默认）   </span><br><span class=\"line\">2)0.5 是一半音量 （50%）   </span><br><span class=\"line\">3) 0.0 是静音</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">this</span>.videoDom.addEventListener(<span class=\"string\">'volumechange'</span>, () =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> percentage = <span class=\"keyword\">this</span>.videoDom.volume * <span class=\"number\">100</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'yinliang'</span>, percentage)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">handleVolPrograssDown (ev) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.videoYlPointCurrent = ev.pageY</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.ylMovePointStartY = <span class=\"keyword\">this</span>.videoYlPoint.offsetTop</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.videoYlPointFlag = <span class=\"literal\">true</span></span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">handleVolPrograssMove (ev) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!<span class=\"keyword\">this</span>.videoYlPointFlag) <span class=\"keyword\">return</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> moveY = <span class=\"keyword\">this</span>.videoYlPointCurrent - ev.pageY</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.videoYlPointTop = <span class=\"keyword\">this</span>.ylMovePointStartY - moveY</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.videoYlPointTop &gt; <span class=\"number\">90</span> || <span class=\"keyword\">this</span>.videoYlPointTop &lt; <span class=\"number\">0</span>) <span class=\"keyword\">return</span></span><br><span class=\"line\">  <span class=\"keyword\">this</span>.videoYlPoint.style.top = <span class=\"keyword\">this</span>.videoYlPointTop + <span class=\"string\">'px'</span></span><br><span class=\"line\">  <span class=\"keyword\">this</span>.videoYlIng.style.height = (<span class=\"number\">90</span> - <span class=\"keyword\">this</span>.videoYlPointTop) + <span class=\"string\">'px'</span></span><br><span class=\"line\">  <span class=\"keyword\">this</span>.videoDom.volume = ((<span class=\"number\">90</span> - <span class=\"keyword\">this</span>.videoYlPointTop) / <span class=\"number\">100</span>).toFixed(<span class=\"number\">1</span>)</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">handleVolPrograssUp (ev) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.videoYlPointFlag = <span class=\"literal\">false</span></span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<h2 id=\"全屏控制\"><a href=\"#全屏控制\" class=\"headerlink\" title=\"全屏控制\"></a>全屏控制</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">handleScreen () &#123; <span class=\"comment\">// 全屏操作</span></span><br><span class=\"line\">  <span class=\"keyword\">this</span>.videoState.screenState = !<span class=\"keyword\">this</span>.videoState.screenState</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.videoState.screenState) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.fullScreen()</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.exitFullscreen()</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">fullScreen () &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> ele = <span class=\"built_in\">document</span>.documentElement</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (ele.requestFullscreen) &#123;</span><br><span class=\"line\">    ele.requestFullscreen()</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (ele.mozRequestFullScreen) &#123;</span><br><span class=\"line\">    ele.mozRequestFullScreen()</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (ele.webkitRequestFullScreen) &#123;</span><br><span class=\"line\">    ele.webkitRequestFullScreen()</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.$refs[<span class=\"string\">'custom-video_container'</span>].style.width = <span class=\"string\">'100%'</span></span><br><span class=\"line\">  <span class=\"keyword\">this</span>.$refs[<span class=\"string\">'custom-video_container'</span>].style.height = <span class=\"string\">'100%'</span></span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">exitFullscreen () &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> de = <span class=\"built_in\">document</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (de.exitFullscreen) &#123;</span><br><span class=\"line\">    de.exitFullscreen()</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (de.mozCancelFullScreen) &#123;</span><br><span class=\"line\">    de.mozCancelFullScreen()</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (de.webkitCancelFullScreen) &#123;</span><br><span class=\"line\">    de.webkitCancelFullScreen()</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.$refs[<span class=\"string\">'custom-video_container'</span>].style.width = <span class=\"string\">'500px'</span></span><br><span class=\"line\">  <span class=\"keyword\">this</span>.$refs[<span class=\"string\">'custom-video_container'</span>].style.height = <span class=\"string\">'300px'</span></span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<h2 id=\"源码\"><a href=\"#源码\" class=\"headerlink\" title=\"源码\"></a>源码</h2><p><a href=\"https://github.com/xiaosongread/vue-pc-cli\" target=\"_blank\" rel=\"noopener\">https://github.com/xiaosongread/vue-pc-cli</a></p>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><p><a href=\"https://juejin.im/post/5daef8b6e51d4524e60e0f6a#heading-7\" target=\"_blank\" rel=\"noopener\">https://juejin.im/post/5daef8b6e51d4524e60e0f6a#heading-7</a><br><a href=\"https://github.com/yuelinghunyu/blog-demo/tree/master/video-player\" target=\"_blank\" rel=\"noopener\">https://github.com/yuelinghunyu/blog-demo/tree/master/video-player</a>   </p>\n<blockquote>\n<p>效果有点糙，优化空间还很大。</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<p>1.<a href=\"#播放/暂停\">播放/暂停</a><br>2.<a href=\"#播放进度控制\">播放进度控制</a><br>3.<a href=\"#音量控制\">音量控制</a><br>4.<a href=\"#全屏控制\">全屏控制</a>   </p>","more":"<p><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/video.png\" alt=\"blockchain\">   </p>\n<h2 id=\"播放-暂停\"><a href=\"#播放-暂停\" class=\"headerlink\" title=\"播放/暂停\"></a>播放/暂停</h2><p>api：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 语法 --&gt;</span><br><span class=\"line\">audio|video.play()</span><br><span class=\"line\">&lt;!-- 定义和用法 --&gt;</span><br><span class=\"line\">play() 方法开始播放当前的音频或视频。</span><br><span class=\"line\">&lt;!-- 实例 --&gt;</span><br><span class=\"line\">var myVideo=document.getElementById(&quot;video1&quot;);</span><br><span class=\"line\">function playVid()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  myVideo.play();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">function pauseVid()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  myVideo.pause();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">play () &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!<span class=\"keyword\">this</span>.videoState.play) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.videoState.play = <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.videoDom.play()</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.videoState.play = <span class=\"literal\">false</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.videoDom.pause()</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<h2 id=\"播放进度控制\"><a href=\"#播放进度控制\" class=\"headerlink\" title=\"播放进度控制\"></a>播放进度控制</h2><p>api：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 语法 --&gt;</span><br><span class=\"line\">audio|video.duration</span><br><span class=\"line\">&lt;!-- 定义和用法 --&gt;</span><br><span class=\"line\">duration 属性返回当前音频/视频的长度，以秒计。   </span><br><span class=\"line\">如果未设置音频/视频，则返回 NaN (Not-a-Number)。</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 语法 --&gt;</span><br><span class=\"line\">audio|video.currentTime=&quot;seconds&quot;</span><br><span class=\"line\">&lt;!-- 定义和用法 --&gt;</span><br><span class=\"line\">currentTime 属性设置或返回音频/视频播放的当前位置（以秒计）。   </span><br><span class=\"line\">当设置该属性时，播放会跳跃到指定的位置。</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">this</span>.videoDom.addEventListener(<span class=\"string\">'loadedmetadata'</span>, () =&gt; &#123; <span class=\"comment\">// 获取视频总时长</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'时长'</span>, <span class=\"keyword\">this</span>.videoDom.duration)</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.duration = <span class=\"keyword\">this</span>.timeTranslate(<span class=\"keyword\">this</span>.videoDom.duration)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"keyword\">this</span>.videoDom.addEventListener(<span class=\"string\">'timeupdate'</span>, () =&gt; &#123; <span class=\"comment\">// 监听视频播放过程中的时间</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!<span class=\"keyword\">this</span>.videoState.startPlay) <span class=\"keyword\">this</span>.videoState.startPlay = <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> percentage = <span class=\"number\">100</span> * <span class=\"keyword\">this</span>.videoDom.currentTime / <span class=\"keyword\">this</span>.videoDom.duration</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.videoPro.style.width = percentage + <span class=\"string\">'%'</span></span><br><span class=\"line\">  <span class=\"keyword\">this</span>.videoPoint.style.left = percentage - <span class=\"number\">1</span> + <span class=\"string\">'%'</span></span><br><span class=\"line\">  <span class=\"keyword\">this</span>.currentTime = <span class=\"keyword\">this</span>.timeTranslate(<span class=\"keyword\">this</span>.videoDom.currentTime)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">timePrograssDown (ev) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.timeStartL = <span class=\"keyword\">this</span>.videoYlPoint.offsetLeft</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.timeMoveStartL = ev.pageX</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.timeFlag = <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'开始'</span>)</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">timePrograssMove (ev) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!<span class=\"keyword\">this</span>.timeFlag) <span class=\"keyword\">return</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> timeLineWidth = <span class=\"keyword\">this</span>.videoTimeLine.offsetWidth</span><br><span class=\"line\">  <span class=\"keyword\">const</span> timePointWidth = <span class=\"keyword\">this</span>.videoPoint.offsetWidth</span><br><span class=\"line\">  <span class=\"keyword\">const</span> moveNum = ev.pageX - <span class=\"keyword\">this</span>.timeMoveStartL</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (moveNum &lt; <span class=\"number\">0</span> || moveNum &gt; (timeLineWidth - timePointWidth)) <span class=\"keyword\">return</span></span><br><span class=\"line\">  <span class=\"keyword\">this</span>.videoPoint.style.left = moveNum + <span class=\"string\">'px'</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!moveNum) <span class=\"keyword\">return</span></span><br><span class=\"line\">  <span class=\"keyword\">this</span>.videoDom.currentTime = <span class=\"keyword\">this</span>.videoDom.duration * (moveNum / timeLineWidth)</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.currentTime = <span class=\"keyword\">this</span>.timeTranslate(<span class=\"keyword\">this</span>.videoDom.currentTime)</span><br><span class=\"line\">  <span class=\"comment\">// console.log('移动', this.duration, moveNum, timeLineWidth, this.duration * (moveNum / timeLineWidth))</span></span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">timePrograssUp (ev) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.timeFlag = <span class=\"literal\">false</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"音量控制\"><a href=\"#音量控制\" class=\"headerlink\" title=\"音量控制\"></a>音量控制</h2><p>api：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 语法 --&gt;</span><br><span class=\"line\">volumechange 事件在音频/视频（audio/video）的音量发生改变时触发。   </span><br><span class=\"line\">该事件被引用的情况:1)提高或降低音量   </span><br><span class=\"line\">2)静音或取消静音</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 语法 --&gt;</span><br><span class=\"line\">audio|video.volume=volumevalue   </span><br><span class=\"line\">规定音频/视频的当前音量。必须是介于 0.0 与 1.0 之间的数字。   </span><br><span class=\"line\">1)1.0 是最高音量（默认）   </span><br><span class=\"line\">2)0.5 是一半音量 （50%）   </span><br><span class=\"line\">3) 0.0 是静音</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">this</span>.videoDom.addEventListener(<span class=\"string\">'volumechange'</span>, () =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> percentage = <span class=\"keyword\">this</span>.videoDom.volume * <span class=\"number\">100</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'yinliang'</span>, percentage)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">handleVolPrograssDown (ev) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.videoYlPointCurrent = ev.pageY</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.ylMovePointStartY = <span class=\"keyword\">this</span>.videoYlPoint.offsetTop</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.videoYlPointFlag = <span class=\"literal\">true</span></span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">handleVolPrograssMove (ev) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!<span class=\"keyword\">this</span>.videoYlPointFlag) <span class=\"keyword\">return</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> moveY = <span class=\"keyword\">this</span>.videoYlPointCurrent - ev.pageY</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.videoYlPointTop = <span class=\"keyword\">this</span>.ylMovePointStartY - moveY</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.videoYlPointTop &gt; <span class=\"number\">90</span> || <span class=\"keyword\">this</span>.videoYlPointTop &lt; <span class=\"number\">0</span>) <span class=\"keyword\">return</span></span><br><span class=\"line\">  <span class=\"keyword\">this</span>.videoYlPoint.style.top = <span class=\"keyword\">this</span>.videoYlPointTop + <span class=\"string\">'px'</span></span><br><span class=\"line\">  <span class=\"keyword\">this</span>.videoYlIng.style.height = (<span class=\"number\">90</span> - <span class=\"keyword\">this</span>.videoYlPointTop) + <span class=\"string\">'px'</span></span><br><span class=\"line\">  <span class=\"keyword\">this</span>.videoDom.volume = ((<span class=\"number\">90</span> - <span class=\"keyword\">this</span>.videoYlPointTop) / <span class=\"number\">100</span>).toFixed(<span class=\"number\">1</span>)</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">handleVolPrograssUp (ev) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.videoYlPointFlag = <span class=\"literal\">false</span></span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<h2 id=\"全屏控制\"><a href=\"#全屏控制\" class=\"headerlink\" title=\"全屏控制\"></a>全屏控制</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">handleScreen () &#123; <span class=\"comment\">// 全屏操作</span></span><br><span class=\"line\">  <span class=\"keyword\">this</span>.videoState.screenState = !<span class=\"keyword\">this</span>.videoState.screenState</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.videoState.screenState) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.fullScreen()</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.exitFullscreen()</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">fullScreen () &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> ele = <span class=\"built_in\">document</span>.documentElement</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (ele.requestFullscreen) &#123;</span><br><span class=\"line\">    ele.requestFullscreen()</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (ele.mozRequestFullScreen) &#123;</span><br><span class=\"line\">    ele.mozRequestFullScreen()</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (ele.webkitRequestFullScreen) &#123;</span><br><span class=\"line\">    ele.webkitRequestFullScreen()</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.$refs[<span class=\"string\">'custom-video_container'</span>].style.width = <span class=\"string\">'100%'</span></span><br><span class=\"line\">  <span class=\"keyword\">this</span>.$refs[<span class=\"string\">'custom-video_container'</span>].style.height = <span class=\"string\">'100%'</span></span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">exitFullscreen () &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> de = <span class=\"built_in\">document</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (de.exitFullscreen) &#123;</span><br><span class=\"line\">    de.exitFullscreen()</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (de.mozCancelFullScreen) &#123;</span><br><span class=\"line\">    de.mozCancelFullScreen()</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (de.webkitCancelFullScreen) &#123;</span><br><span class=\"line\">    de.webkitCancelFullScreen()</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.$refs[<span class=\"string\">'custom-video_container'</span>].style.width = <span class=\"string\">'500px'</span></span><br><span class=\"line\">  <span class=\"keyword\">this</span>.$refs[<span class=\"string\">'custom-video_container'</span>].style.height = <span class=\"string\">'300px'</span></span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<h2 id=\"源码\"><a href=\"#源码\" class=\"headerlink\" title=\"源码\"></a>源码</h2><p><a href=\"https://github.com/xiaosongread/vue-pc-cli\" target=\"_blank\" rel=\"noopener\">https://github.com/xiaosongread/vue-pc-cli</a></p>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><p><a href=\"https://juejin.im/post/5daef8b6e51d4524e60e0f6a#heading-7\" target=\"_blank\" rel=\"noopener\">https://juejin.im/post/5daef8b6e51d4524e60e0f6a#heading-7</a><br><a href=\"https://github.com/yuelinghunyu/blog-demo/tree/master/video-player\" target=\"_blank\" rel=\"noopener\">https://github.com/yuelinghunyu/blog-demo/tree/master/video-player</a>   </p>\n<blockquote>\n<p>效果有点糙，优化空间还很大。</p>\n</blockquote>"},{"title":"快速掌握vuex常用的所有api用法","date":"2019-07-24T03:52:50.000Z","_content":"\n## vuex中，有默认的五种基本的对象\n\n1.state：存储状态（变量）   \n2.getters：对数据获取之前的再次编译，可以理解为state的计算属性。我们在组件中使用 $sotre.getters.fun()   \n3.mutations：修改状态，并且是同步的。在组件中使用$store.commit('',params)。这个和我们组件中的自定义事件类似。   \n4.actions：异步操作。在组件中使用是$store.dispath('')   \n5.modules：store的子模块，为了开发大型项目，方便状态管理而使用的。这里我们就不解释了，用起来和上面的一样。   \n<!-- more -->\n首先新建一个vue项目，用来测试：\n```\nvue init webpack vuex\ncd app/\nnpm run dev\nsrc 下创建文件夹vuex\nvuex 文件夹下创建 store.js 文件夹modules\nmodules 文件夹下创建app.js user.js\n```\n目录如下：\n![blockchain](https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/vuex-1.png)\n\n安装vuex\n```\nnpm install vuex --save\n```\n安装成功之后，将vuex引入项目中：\n**store.js**\n```javascript\nimport Vue from 'vue'\nimport Vuex from 'vuex'\n\nVue.use(Vuex)\n\nconst state = {\n    name: '小张'\n}\n\nconst store = new Vuex.Store({\n  state\n})\nexport default store\n```\n自此你可以开始用vuex了\n\n接下来，在main.js中引入store.js\n```javascript\nimport Vue from 'vue'\nimport App from './App'\nimport router from './router'\nimport store from './vuex/store' // 引入store\nVue.config.productionTip = false\n\nnew Vue({\n  el: '#app',\n  router,\n  store,\n  components: { App },\n  template: '<App/>'\n})\n```\n完整APIdemo地址：[GitHub](https://github.com/xiaosongread/vuex)   \n运行效果如下：\n![blockchain](https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/vuex-2.png)\n\n***\n**关键代码：**\n**store.js**\n```javascript\nimport Vue from 'vue'\nimport Vuex from 'vuex'\nimport app from './modules/app'\nimport user from './modules/user'\n\n\nVue.use(Vuex)\n\nconst state = {\n    name: '小张'\n}\n\n// export default new Vuex.Store({\n//     state1\n// })\n\nconst store = new Vuex.Store({\n  state,\n  modules: {\n    app,\n    user\n  }\n})\nexport default store\n```\n**app.js**\n```javascript\nconst app = {\n  state: {\n    appConut: 0\n  },\n  getters: {\n    watchAppConut: state => {\n      return state.appConut + 100\n    }\n  },\n  mutations: {\n    ADD_APP_COUNT: (state, n) => {\n      state.appConut += n\n    },\n    DELETE_APP_COUNT: (state, n) => {\n      state.appConut -= n\n    },\n    RESET_APP_COUNT: (state, n) => {\n      state.appConut = n\n    }\n  },\n  actions: {\n    ACCTION_APP_COUNT: ({ commit }, mes) => {\n      commit('RESET_APP_COUNT', mes)\n    }\n  }\n}\n\nexport default app\n```\n**user.js**\n```javascript\nconst user = {\n  state: {\n    userConut: 0\n  },\n  mutations: {\n    ADD_USER_COUNT: (state, n) => {\n      state.userConut += n\n    },\n    DELETE_USER_COUNT: (state, n) => {\n      state.userConut -= n\n    },\n    RESET_USER_COUNT: (state, n) => {\n      state.userConut = n\n    }\n  },\n  actions: {\n    ACCTION_USER_COUNT: ({ commit }, mes) => {\n      commit('RESET_USER_COUNT', mes)\n    }\n  }\n}\n\nexport default user\n```\n**HelloWorld.vue**\n```html\n<template>\n  <div class=\"hello\">\n    <div>\n      <div>mapState简写：{{ name }}</div>\n      <div>app中的appConut：{{ $store.state.app.appConut}}</div>\n      <div>mapState简写：{{ appConut }}</div>\n      <div>app中计算属性(appConut+100)watchAppConut：{{ $store.getters.watchAppConut}}</div>\n      <div>watchAppConut(mapGetters简写)：{{ watchAppConut}}</div>\n      <button @click=\"clickAppAdd(100)\">+</button>\n      <button @click=\"clickAppDelete\">-</button>\n      <button @click=\"clickActionsApp('置空')\">actions</button>\n    </div>\n    <div>\n      <div>user中的userConut：{{ $store.state.user.userConut}}</div>\n      <button @click=\"clickUserAdd\">+</button>\n      <button @click=\"clickUserDelete\">-</button>\n      <button @click=\"clickActionsUser\">actions</button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapState, mapMutations, mapActions, mapGetters } from 'vuex'\nexport default {\n  name: 'HelloWorld',\n  data () {\n    return {\n      msg: 'Welcome to Your Vue.js App'\n    }\n  },\n  // computed: mapState(['name']), // 这样写更简单\n  computed: {\n    ...mapState({\n      name: 'name',\n      appConut: state => state.app.appConut\n    }),\n    ...mapGetters(\n      ['watchAppConut']\n    )\n  },\n  methods: {\n     ...mapMutations({\n       clickAppAdd: 'ADD_APP_COUNT'\n     }),\n    // clickAppAdd() {\n    //   this.$store.commit('ADD_APP_COUNT', 1)\n    // },\n    clickAppDelete() {\n      this.$store.commit('DELETE_APP_COUNT', 1)\n    },\n    ...mapActions({\n      clickActionsApp: 'ACCTION_APP_COUNT'\n    }),\n    // clickActionsApp() {\n    //   this.$store.dispatch('ACCTION_APP_COUNT')\n    // },\n    clickUserAdd() {\n      this.$store.commit('ADD_USER_COUNT', 2)\n    },\n    clickUserDelete() {\n      this.$store.commit('DELETE_USER_COUNT', 2)\n    },\n    clickActionsUser() {\n      this.$store.dispatch('ACCTION_USER_COUNT', '置空')\n    },\n  }\n}\n</script>\n```\n\n***\n\n### state\n> vuex的state和vue的data有很多相似之处,都是用于存储一些数据,或者说状态值.这些值都将被挂载 数据和dom的双向绑定事件,也就是当你改变值的时候可以触发dom的更新.\n\n使用：this.$store.state.name/$store.state.app.appConut(见 demo 的 HelloWorld.vue)\n> 为了防止store过于臃肿，只有state在取值的时候需要分块的，getters/mutations/actions 的调用是全局的。\n\n### mutations\n**app.js**\n```javascript\nmutations: {\n  ADD_APP_COUNT: (state, n) => {\n    state.appConut += n\n  },\n  DELETE_APP_COUNT: (state, n) => {\n    state.appConut -= n\n  },\n  RESET_APP_COUNT: (state, n) => {\n    state.appConut = n\n  }\n}\n```\n**HelloWorld.vue 调用**\n```javascript\nclickAppAdd() {\n  this.$store.commit('ADD_APP_COUNT', 1)\n}\n```\n### mapMutations\n**HelloWorld.vue**\n```javascript\nimport { mapState, mapMutations, mapActions, mapGetters } from 'vuex'\n\n...mapMutations({\n  clickAppAdd: 'ADD_APP_COUNT'\n})\n参数不用管，vuex以帮你处理\n```\n\n### actions\n**app.js**\n```javascript\nactions: {\n  ACCTION_APP_COUNT: ({ commit }, mes) => {\n    commit('RESET_APP_COUNT', mes)\n  }\n}\n```\n**HelloWorld.vue**\n```javascript\nclickActionsApp() {\n  this.$store.dispatch('ACCTION_APP_COUNT')\n}\n```\n\n> mutations 使用 $store.commit 调用，必须是同步的；actions 使用 $store.dispatch 调用通知，并且用commit 调用mutations 来修改数据，这个是异步操作使用的。\n\n\n### mapActions\n**HelloWorld.vue**\n```javascript\nimport { mapState, mapMutations, mapActions, mapGetters } from 'vuex'\n\n...mapActions({\n  clickActionsApp: 'ACCTION_APP_COUNT'\n})\n```\n\n### getters\n\n**app.js**\n```javascript\ngetters: {\n  watchAppConut: state => {\n    return state.appConut + 100\n  }\n}\n```\n**HelloWorld.vue**\n```html\n<div>app中计算属性(appConut+100)watchAppConut：{{ $store.getters.watchAppConut}}</div>\n<div>watchAppConut(mapGetters简写)：{{ watchAppConut}}</div>\n```\n\n### mapGetters\n\n**app.js**\n```javascript\ngetters: {\n  watchAppConut: state => {\n    return state.appConut + 100\n  }\n}\n```\n**HelloWorld.vue**\n```javascript\ncomputed: {\n  ...mapGetters(\n    ['watchAppConut']\n  )\n}\n```\n```html\n<div>app中计算属性(appConut+100)watchAppConut：{{ $store.getters.watchAppConut}}</div>\n<div>watchAppConut(mapGetters简写)：{{ watchAppConut}}</div>\n```\n\n### modules\n可以让每一个模块拥有自己的state、mutation、action、getters,使得结构非常清晰，方便管理\n```javascript\nconst moduleA = {\n state: { ... },\n mutations: { ... },\n actions: { ... },\n getters: { ... }\n }\nconst moduleB = {\n state: { ... },\n mutations: { ... },\n actions: { ... }\n }\n \nconst store = new Vuex.Store({\n modules: {\n  a: moduleA,\n  b: moduleB})\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/vuex.md","raw":"---\ntitle: 快速掌握vuex常用的所有api用法\ncategories: gc-end\ndate: 2019-07-24 11:52:50\ntags: vuex\n---\n\n## vuex中，有默认的五种基本的对象\n\n1.state：存储状态（变量）   \n2.getters：对数据获取之前的再次编译，可以理解为state的计算属性。我们在组件中使用 $sotre.getters.fun()   \n3.mutations：修改状态，并且是同步的。在组件中使用$store.commit('',params)。这个和我们组件中的自定义事件类似。   \n4.actions：异步操作。在组件中使用是$store.dispath('')   \n5.modules：store的子模块，为了开发大型项目，方便状态管理而使用的。这里我们就不解释了，用起来和上面的一样。   \n<!-- more -->\n首先新建一个vue项目，用来测试：\n```\nvue init webpack vuex\ncd app/\nnpm run dev\nsrc 下创建文件夹vuex\nvuex 文件夹下创建 store.js 文件夹modules\nmodules 文件夹下创建app.js user.js\n```\n目录如下：\n![blockchain](https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/vuex-1.png)\n\n安装vuex\n```\nnpm install vuex --save\n```\n安装成功之后，将vuex引入项目中：\n**store.js**\n```javascript\nimport Vue from 'vue'\nimport Vuex from 'vuex'\n\nVue.use(Vuex)\n\nconst state = {\n    name: '小张'\n}\n\nconst store = new Vuex.Store({\n  state\n})\nexport default store\n```\n自此你可以开始用vuex了\n\n接下来，在main.js中引入store.js\n```javascript\nimport Vue from 'vue'\nimport App from './App'\nimport router from './router'\nimport store from './vuex/store' // 引入store\nVue.config.productionTip = false\n\nnew Vue({\n  el: '#app',\n  router,\n  store,\n  components: { App },\n  template: '<App/>'\n})\n```\n完整APIdemo地址：[GitHub](https://github.com/xiaosongread/vuex)   \n运行效果如下：\n![blockchain](https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/vuex-2.png)\n\n***\n**关键代码：**\n**store.js**\n```javascript\nimport Vue from 'vue'\nimport Vuex from 'vuex'\nimport app from './modules/app'\nimport user from './modules/user'\n\n\nVue.use(Vuex)\n\nconst state = {\n    name: '小张'\n}\n\n// export default new Vuex.Store({\n//     state1\n// })\n\nconst store = new Vuex.Store({\n  state,\n  modules: {\n    app,\n    user\n  }\n})\nexport default store\n```\n**app.js**\n```javascript\nconst app = {\n  state: {\n    appConut: 0\n  },\n  getters: {\n    watchAppConut: state => {\n      return state.appConut + 100\n    }\n  },\n  mutations: {\n    ADD_APP_COUNT: (state, n) => {\n      state.appConut += n\n    },\n    DELETE_APP_COUNT: (state, n) => {\n      state.appConut -= n\n    },\n    RESET_APP_COUNT: (state, n) => {\n      state.appConut = n\n    }\n  },\n  actions: {\n    ACCTION_APP_COUNT: ({ commit }, mes) => {\n      commit('RESET_APP_COUNT', mes)\n    }\n  }\n}\n\nexport default app\n```\n**user.js**\n```javascript\nconst user = {\n  state: {\n    userConut: 0\n  },\n  mutations: {\n    ADD_USER_COUNT: (state, n) => {\n      state.userConut += n\n    },\n    DELETE_USER_COUNT: (state, n) => {\n      state.userConut -= n\n    },\n    RESET_USER_COUNT: (state, n) => {\n      state.userConut = n\n    }\n  },\n  actions: {\n    ACCTION_USER_COUNT: ({ commit }, mes) => {\n      commit('RESET_USER_COUNT', mes)\n    }\n  }\n}\n\nexport default user\n```\n**HelloWorld.vue**\n```html\n<template>\n  <div class=\"hello\">\n    <div>\n      <div>mapState简写：{{ name }}</div>\n      <div>app中的appConut：{{ $store.state.app.appConut}}</div>\n      <div>mapState简写：{{ appConut }}</div>\n      <div>app中计算属性(appConut+100)watchAppConut：{{ $store.getters.watchAppConut}}</div>\n      <div>watchAppConut(mapGetters简写)：{{ watchAppConut}}</div>\n      <button @click=\"clickAppAdd(100)\">+</button>\n      <button @click=\"clickAppDelete\">-</button>\n      <button @click=\"clickActionsApp('置空')\">actions</button>\n    </div>\n    <div>\n      <div>user中的userConut：{{ $store.state.user.userConut}}</div>\n      <button @click=\"clickUserAdd\">+</button>\n      <button @click=\"clickUserDelete\">-</button>\n      <button @click=\"clickActionsUser\">actions</button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapState, mapMutations, mapActions, mapGetters } from 'vuex'\nexport default {\n  name: 'HelloWorld',\n  data () {\n    return {\n      msg: 'Welcome to Your Vue.js App'\n    }\n  },\n  // computed: mapState(['name']), // 这样写更简单\n  computed: {\n    ...mapState({\n      name: 'name',\n      appConut: state => state.app.appConut\n    }),\n    ...mapGetters(\n      ['watchAppConut']\n    )\n  },\n  methods: {\n     ...mapMutations({\n       clickAppAdd: 'ADD_APP_COUNT'\n     }),\n    // clickAppAdd() {\n    //   this.$store.commit('ADD_APP_COUNT', 1)\n    // },\n    clickAppDelete() {\n      this.$store.commit('DELETE_APP_COUNT', 1)\n    },\n    ...mapActions({\n      clickActionsApp: 'ACCTION_APP_COUNT'\n    }),\n    // clickActionsApp() {\n    //   this.$store.dispatch('ACCTION_APP_COUNT')\n    // },\n    clickUserAdd() {\n      this.$store.commit('ADD_USER_COUNT', 2)\n    },\n    clickUserDelete() {\n      this.$store.commit('DELETE_USER_COUNT', 2)\n    },\n    clickActionsUser() {\n      this.$store.dispatch('ACCTION_USER_COUNT', '置空')\n    },\n  }\n}\n</script>\n```\n\n***\n\n### state\n> vuex的state和vue的data有很多相似之处,都是用于存储一些数据,或者说状态值.这些值都将被挂载 数据和dom的双向绑定事件,也就是当你改变值的时候可以触发dom的更新.\n\n使用：this.$store.state.name/$store.state.app.appConut(见 demo 的 HelloWorld.vue)\n> 为了防止store过于臃肿，只有state在取值的时候需要分块的，getters/mutations/actions 的调用是全局的。\n\n### mutations\n**app.js**\n```javascript\nmutations: {\n  ADD_APP_COUNT: (state, n) => {\n    state.appConut += n\n  },\n  DELETE_APP_COUNT: (state, n) => {\n    state.appConut -= n\n  },\n  RESET_APP_COUNT: (state, n) => {\n    state.appConut = n\n  }\n}\n```\n**HelloWorld.vue 调用**\n```javascript\nclickAppAdd() {\n  this.$store.commit('ADD_APP_COUNT', 1)\n}\n```\n### mapMutations\n**HelloWorld.vue**\n```javascript\nimport { mapState, mapMutations, mapActions, mapGetters } from 'vuex'\n\n...mapMutations({\n  clickAppAdd: 'ADD_APP_COUNT'\n})\n参数不用管，vuex以帮你处理\n```\n\n### actions\n**app.js**\n```javascript\nactions: {\n  ACCTION_APP_COUNT: ({ commit }, mes) => {\n    commit('RESET_APP_COUNT', mes)\n  }\n}\n```\n**HelloWorld.vue**\n```javascript\nclickActionsApp() {\n  this.$store.dispatch('ACCTION_APP_COUNT')\n}\n```\n\n> mutations 使用 $store.commit 调用，必须是同步的；actions 使用 $store.dispatch 调用通知，并且用commit 调用mutations 来修改数据，这个是异步操作使用的。\n\n\n### mapActions\n**HelloWorld.vue**\n```javascript\nimport { mapState, mapMutations, mapActions, mapGetters } from 'vuex'\n\n...mapActions({\n  clickActionsApp: 'ACCTION_APP_COUNT'\n})\n```\n\n### getters\n\n**app.js**\n```javascript\ngetters: {\n  watchAppConut: state => {\n    return state.appConut + 100\n  }\n}\n```\n**HelloWorld.vue**\n```html\n<div>app中计算属性(appConut+100)watchAppConut：{{ $store.getters.watchAppConut}}</div>\n<div>watchAppConut(mapGetters简写)：{{ watchAppConut}}</div>\n```\n\n### mapGetters\n\n**app.js**\n```javascript\ngetters: {\n  watchAppConut: state => {\n    return state.appConut + 100\n  }\n}\n```\n**HelloWorld.vue**\n```javascript\ncomputed: {\n  ...mapGetters(\n    ['watchAppConut']\n  )\n}\n```\n```html\n<div>app中计算属性(appConut+100)watchAppConut：{{ $store.getters.watchAppConut}}</div>\n<div>watchAppConut(mapGetters简写)：{{ watchAppConut}}</div>\n```\n\n### modules\n可以让每一个模块拥有自己的state、mutation、action、getters,使得结构非常清晰，方便管理\n```javascript\nconst moduleA = {\n state: { ... },\n mutations: { ... },\n actions: { ... },\n getters: { ... }\n }\nconst moduleB = {\n state: { ... },\n mutations: { ... },\n actions: { ... }\n }\n \nconst store = new Vuex.Store({\n modules: {\n  a: moduleA,\n  b: moduleB})\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","slug":"vuex","published":1,"updated":"2020-07-01T09:12:26.387Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdr00y660027e7zc4jvl7y5y","content":"<h2 id=\"vuex中，有默认的五种基本的对象\"><a href=\"#vuex中，有默认的五种基本的对象\" class=\"headerlink\" title=\"vuex中，有默认的五种基本的对象\"></a>vuex中，有默认的五种基本的对象</h2><p>1.state：存储状态（变量）<br>2.getters：对数据获取之前的再次编译，可以理解为state的计算属性。我们在组件中使用 $sotre.getters.fun()<br>3.mutations：修改状态，并且是同步的。在组件中使用$store.commit(‘’,params)。这个和我们组件中的自定义事件类似。<br>4.actions：异步操作。在组件中使用是$store.dispath(‘’)<br>5.modules：store的子模块，为了开发大型项目，方便状态管理而使用的。这里我们就不解释了，用起来和上面的一样。<br><a id=\"more\"></a><br>首先新建一个vue项目，用来测试：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vue init webpack vuex</span><br><span class=\"line\">cd app/</span><br><span class=\"line\">npm run dev</span><br><span class=\"line\">src 下创建文件夹vuex</span><br><span class=\"line\">vuex 文件夹下创建 store.js 文件夹modules</span><br><span class=\"line\">modules 文件夹下创建app.js user.js</span><br></pre></td></tr></table></figure></p>\n<p>目录如下：<br><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/vuex-1.png\" alt=\"blockchain\"></p>\n<p>安装vuex<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install vuex --save</span><br></pre></td></tr></table></figure></p>\n<p>安装成功之后，将vuex引入项目中：<br><strong>store.js</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> Vuex <span class=\"keyword\">from</span> <span class=\"string\">'vuex'</span></span><br><span class=\"line\"></span><br><span class=\"line\">Vue.use(Vuex)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> state = &#123;</span><br><span class=\"line\">    name: <span class=\"string\">'小张'</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> store = <span class=\"keyword\">new</span> Vuex.Store(&#123;</span><br><span class=\"line\">  state</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> store</span><br></pre></td></tr></table></figure></p>\n<p>自此你可以开始用vuex了</p>\n<p>接下来，在main.js中引入store.js<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> App <span class=\"keyword\">from</span> <span class=\"string\">'./App'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> router <span class=\"keyword\">from</span> <span class=\"string\">'./router'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> store <span class=\"keyword\">from</span> <span class=\"string\">'./vuex/store'</span> <span class=\"comment\">// 引入store</span></span><br><span class=\"line\">Vue.config.productionTip = <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  el: <span class=\"string\">'#app'</span>,</span><br><span class=\"line\">  router,</span><br><span class=\"line\">  store,</span><br><span class=\"line\">  components: &#123; App &#125;,</span><br><span class=\"line\">  template: <span class=\"string\">'&lt;App/&gt;'</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></p>\n<p>完整APIdemo地址：<a href=\"https://github.com/xiaosongread/vuex\" target=\"_blank\" rel=\"noopener\">GitHub</a><br>运行效果如下：<br><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/vuex-2.png\" alt=\"blockchain\"></p>\n<hr>\n<p><strong>关键代码：</strong><br><strong>store.js</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> Vuex <span class=\"keyword\">from</span> <span class=\"string\">'vuex'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> app <span class=\"keyword\">from</span> <span class=\"string\">'./modules/app'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> user <span class=\"keyword\">from</span> <span class=\"string\">'./modules/user'</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Vue.use(Vuex)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> state = &#123;</span><br><span class=\"line\">    name: <span class=\"string\">'小张'</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// export default new Vuex.Store(&#123;</span></span><br><span class=\"line\"><span class=\"comment\">//     state1</span></span><br><span class=\"line\"><span class=\"comment\">// &#125;)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> store = <span class=\"keyword\">new</span> Vuex.Store(&#123;</span><br><span class=\"line\">  state,</span><br><span class=\"line\">  modules: &#123;</span><br><span class=\"line\">    app,</span><br><span class=\"line\">    user</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> store</span><br></pre></td></tr></table></figure></p>\n<p><strong>app.js</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> app = &#123;</span><br><span class=\"line\">  state: &#123;</span><br><span class=\"line\">    appConut: <span class=\"number\">0</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  getters: &#123;</span><br><span class=\"line\">    watchAppConut: <span class=\"function\"><span class=\"params\">state</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> state.appConut + <span class=\"number\">100</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  mutations: &#123;</span><br><span class=\"line\">    ADD_APP_COUNT: <span class=\"function\">(<span class=\"params\">state, n</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      state.appConut += n</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    DELETE_APP_COUNT: <span class=\"function\">(<span class=\"params\">state, n</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      state.appConut -= n</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    RESET_APP_COUNT: <span class=\"function\">(<span class=\"params\">state, n</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      state.appConut = n</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  actions: &#123;</span><br><span class=\"line\">    ACCTION_APP_COUNT: <span class=\"function\">(<span class=\"params\">&#123; commit &#125;, mes</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      commit(<span class=\"string\">'RESET_APP_COUNT'</span>, mes)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> app</span><br></pre></td></tr></table></figure></p>\n<p><strong>user.js</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> user = &#123;</span><br><span class=\"line\">  state: &#123;</span><br><span class=\"line\">    userConut: <span class=\"number\">0</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  mutations: &#123;</span><br><span class=\"line\">    ADD_USER_COUNT: <span class=\"function\">(<span class=\"params\">state, n</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      state.userConut += n</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    DELETE_USER_COUNT: <span class=\"function\">(<span class=\"params\">state, n</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      state.userConut -= n</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    RESET_USER_COUNT: <span class=\"function\">(<span class=\"params\">state, n</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      state.userConut = n</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  actions: &#123;</span><br><span class=\"line\">    ACCTION_USER_COUNT: <span class=\"function\">(<span class=\"params\">&#123; commit &#125;, mes</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      commit(<span class=\"string\">'RESET_USER_COUNT'</span>, mes)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> user</span><br></pre></td></tr></table></figure></p>\n<p><strong>HelloWorld.vue</strong><br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hello\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>mapState简写：&#123;&#123; name &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>app中的appConut：&#123;&#123; $store.state.app.appConut&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>mapState简写：&#123;&#123; appConut &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>app中计算属性(appConut+100)watchAppConut：&#123;&#123; $store.getters.watchAppConut&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>watchAppConut(mapGetters简写)：&#123;&#123; watchAppConut&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"clickAppAdd(100)\"</span>&gt;</span>+<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"clickAppDelete\"</span>&gt;</span>-<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"clickActionsApp('置空')\"</span>&gt;</span>actions<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>user中的userConut：&#123;&#123; $store.state.user.userConut&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"clickUserAdd\"</span>&gt;</span>+<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"clickUserDelete\"</span>&gt;</span>-<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"clickActionsUser\"</span>&gt;</span>actions<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"keyword\">import</span> &#123; mapState, mapMutations, mapActions, mapGetters &#125; <span class=\"keyword\">from</span> <span class=\"string\">'vuex'</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">  name: <span class=\"string\">'HelloWorld'</span>,</span></span><br><span class=\"line\"><span class=\"undefined\">  data () &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">      msg: <span class=\"string\">'Welcome to Your Vue.js App'</span></span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">  &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">  <span class=\"comment\">// computed: mapState(['name']), // 这样写更简单</span></span></span><br><span class=\"line\"><span class=\"undefined\">  computed: &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">    ...mapState(&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">      name: <span class=\"string\">'name'</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">      appConut: <span class=\"function\"><span class=\"params\">state</span> =&gt;</span> state.app.appConut</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;),</span></span><br><span class=\"line\"><span class=\"undefined\">    ...mapGetters(</span></span><br><span class=\"line\"><span class=\"javascript\">      [<span class=\"string\">'watchAppConut'</span>]</span></span><br><span class=\"line\"><span class=\"undefined\">    )</span></span><br><span class=\"line\"><span class=\"undefined\">  &#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">  methods: &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">     ...mapMutations(&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">       clickAppAdd: <span class=\"string\">'ADD_APP_COUNT'</span></span></span><br><span class=\"line\"><span class=\"undefined\">     &#125;),</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"comment\">// clickAppAdd() &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"comment\">//   this.$store.commit('ADD_APP_COUNT', 1)</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"comment\">// &#125;,</span></span></span><br><span class=\"line\"><span class=\"undefined\">    clickAppDelete() &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"keyword\">this</span>.$store.commit(<span class=\"string\">'DELETE_APP_COUNT'</span>, <span class=\"number\">1</span>)</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">    ...mapActions(&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">      clickActionsApp: <span class=\"string\">'ACCTION_APP_COUNT'</span></span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;),</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"comment\">// clickActionsApp() &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"comment\">//   this.$store.dispatch('ACCTION_APP_COUNT')</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"comment\">// &#125;,</span></span></span><br><span class=\"line\"><span class=\"undefined\">    clickUserAdd() &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"keyword\">this</span>.$store.commit(<span class=\"string\">'ADD_USER_COUNT'</span>, <span class=\"number\">2</span>)</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">    clickUserDelete() &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"keyword\">this</span>.$store.commit(<span class=\"string\">'DELETE_USER_COUNT'</span>, <span class=\"number\">2</span>)</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">    clickActionsUser() &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"keyword\">this</span>.$store.dispatch(<span class=\"string\">'ACCTION_USER_COUNT'</span>, <span class=\"string\">'置空'</span>)</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">  &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">&#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<hr>\n<h3 id=\"state\"><a href=\"#state\" class=\"headerlink\" title=\"state\"></a>state</h3><blockquote>\n<p>vuex的state和vue的data有很多相似之处,都是用于存储一些数据,或者说状态值.这些值都将被挂载 数据和dom的双向绑定事件,也就是当你改变值的时候可以触发dom的更新.</p>\n</blockquote>\n<p>使用：this.$store.state.name/$store.state.app.appConut(见 demo 的 HelloWorld.vue)</p>\n<blockquote>\n<p>为了防止store过于臃肿，只有state在取值的时候需要分块的，getters/mutations/actions 的调用是全局的。</p>\n</blockquote>\n<h3 id=\"mutations\"><a href=\"#mutations\" class=\"headerlink\" title=\"mutations\"></a>mutations</h3><p><strong>app.js</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mutations: &#123;</span><br><span class=\"line\">  ADD_APP_COUNT: <span class=\"function\">(<span class=\"params\">state, n</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    state.appConut += n</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  DELETE_APP_COUNT: <span class=\"function\">(<span class=\"params\">state, n</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    state.appConut -= n</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  RESET_APP_COUNT: <span class=\"function\">(<span class=\"params\">state, n</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    state.appConut = n</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong>HelloWorld.vue 调用</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">clickAppAdd() &#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.$store.commit(<span class=\"string\">'ADD_APP_COUNT'</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"mapMutations\"><a href=\"#mapMutations\" class=\"headerlink\" title=\"mapMutations\"></a>mapMutations</h3><p><strong>HelloWorld.vue</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; mapState, mapMutations, mapActions, mapGetters &#125; <span class=\"keyword\">from</span> <span class=\"string\">'vuex'</span></span><br><span class=\"line\"></span><br><span class=\"line\">...mapMutations(&#123;</span><br><span class=\"line\">  clickAppAdd: <span class=\"string\">'ADD_APP_COUNT'</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">参数不用管，vuex以帮你处理</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"actions\"><a href=\"#actions\" class=\"headerlink\" title=\"actions\"></a>actions</h3><p><strong>app.js</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">actions: &#123;</span><br><span class=\"line\">  ACCTION_APP_COUNT: <span class=\"function\">(<span class=\"params\">&#123; commit &#125;, mes</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    commit(<span class=\"string\">'RESET_APP_COUNT'</span>, mes)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong>HelloWorld.vue</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">clickActionsApp() &#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.$store.dispatch(<span class=\"string\">'ACCTION_APP_COUNT'</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>mutations 使用 $store.commit 调用，必须是同步的；actions 使用 $store.dispatch 调用通知，并且用commit 调用mutations 来修改数据，这个是异步操作使用的。</p>\n</blockquote>\n<h3 id=\"mapActions\"><a href=\"#mapActions\" class=\"headerlink\" title=\"mapActions\"></a>mapActions</h3><p><strong>HelloWorld.vue</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; mapState, mapMutations, mapActions, mapGetters &#125; <span class=\"keyword\">from</span> <span class=\"string\">'vuex'</span></span><br><span class=\"line\"></span><br><span class=\"line\">...mapActions(&#123;</span><br><span class=\"line\">  clickActionsApp: <span class=\"string\">'ACCTION_APP_COUNT'</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"getters\"><a href=\"#getters\" class=\"headerlink\" title=\"getters\"></a>getters</h3><p><strong>app.js</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">getters: &#123;</span><br><span class=\"line\">  watchAppConut: <span class=\"function\"><span class=\"params\">state</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> state.appConut + <span class=\"number\">100</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong>HelloWorld.vue</strong><br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>app中计算属性(appConut+100)watchAppConut：&#123;&#123; $store.getters.watchAppConut&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>watchAppConut(mapGetters简写)：&#123;&#123; watchAppConut&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"mapGetters\"><a href=\"#mapGetters\" class=\"headerlink\" title=\"mapGetters\"></a>mapGetters</h3><p><strong>app.js</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">getters: &#123;</span><br><span class=\"line\">  watchAppConut: <span class=\"function\"><span class=\"params\">state</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> state.appConut + <span class=\"number\">100</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong>HelloWorld.vue</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">computed: &#123;</span><br><span class=\"line\">  ...mapGetters(</span><br><span class=\"line\">    [<span class=\"string\">'watchAppConut'</span>]</span><br><span class=\"line\">  )</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>app中计算属性(appConut+100)watchAppConut：&#123;&#123; $store.getters.watchAppConut&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>watchAppConut(mapGetters简写)：&#123;&#123; watchAppConut&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"modules\"><a href=\"#modules\" class=\"headerlink\" title=\"modules\"></a>modules</h3><p>可以让每一个模块拥有自己的state、mutation、action、getters,使得结构非常清晰，方便管理<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> moduleA = &#123;</span><br><span class=\"line\"> state: &#123; ... &#125;,</span><br><span class=\"line\"> mutations: &#123; ... &#125;,</span><br><span class=\"line\"> actions: &#123; ... &#125;,</span><br><span class=\"line\"> getters: &#123; ... &#125;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"><span class=\"keyword\">const</span> moduleB = &#123;</span><br><span class=\"line\"> state: &#123; ... &#125;,</span><br><span class=\"line\"> mutations: &#123; ... &#125;,</span><br><span class=\"line\"> actions: &#123; ... &#125;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">const</span> store = <span class=\"keyword\">new</span> Vuex.Store(&#123;</span><br><span class=\"line\"> modules: &#123;</span><br><span class=\"line\">  a: moduleA,</span><br><span class=\"line\">  b: moduleB&#125;)</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"<h2 id=\"vuex中，有默认的五种基本的对象\"><a href=\"#vuex中，有默认的五种基本的对象\" class=\"headerlink\" title=\"vuex中，有默认的五种基本的对象\"></a>vuex中，有默认的五种基本的对象</h2><p>1.state：存储状态（变量）<br>2.getters：对数据获取之前的再次编译，可以理解为state的计算属性。我们在组件中使用 $sotre.getters.fun()<br>3.mutations：修改状态，并且是同步的。在组件中使用$store.commit(‘’,params)。这个和我们组件中的自定义事件类似。<br>4.actions：异步操作。在组件中使用是$store.dispath(‘’)<br>5.modules：store的子模块，为了开发大型项目，方便状态管理而使用的。这里我们就不解释了，用起来和上面的一样。<br>","more":"<br>首先新建一个vue项目，用来测试：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vue init webpack vuex</span><br><span class=\"line\">cd app/</span><br><span class=\"line\">npm run dev</span><br><span class=\"line\">src 下创建文件夹vuex</span><br><span class=\"line\">vuex 文件夹下创建 store.js 文件夹modules</span><br><span class=\"line\">modules 文件夹下创建app.js user.js</span><br></pre></td></tr></table></figure></p>\n<p>目录如下：<br><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/vuex-1.png\" alt=\"blockchain\"></p>\n<p>安装vuex<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install vuex --save</span><br></pre></td></tr></table></figure></p>\n<p>安装成功之后，将vuex引入项目中：<br><strong>store.js</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> Vuex <span class=\"keyword\">from</span> <span class=\"string\">'vuex'</span></span><br><span class=\"line\"></span><br><span class=\"line\">Vue.use(Vuex)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> state = &#123;</span><br><span class=\"line\">    name: <span class=\"string\">'小张'</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> store = <span class=\"keyword\">new</span> Vuex.Store(&#123;</span><br><span class=\"line\">  state</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> store</span><br></pre></td></tr></table></figure></p>\n<p>自此你可以开始用vuex了</p>\n<p>接下来，在main.js中引入store.js<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> App <span class=\"keyword\">from</span> <span class=\"string\">'./App'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> router <span class=\"keyword\">from</span> <span class=\"string\">'./router'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> store <span class=\"keyword\">from</span> <span class=\"string\">'./vuex/store'</span> <span class=\"comment\">// 引入store</span></span><br><span class=\"line\">Vue.config.productionTip = <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  el: <span class=\"string\">'#app'</span>,</span><br><span class=\"line\">  router,</span><br><span class=\"line\">  store,</span><br><span class=\"line\">  components: &#123; App &#125;,</span><br><span class=\"line\">  template: <span class=\"string\">'&lt;App/&gt;'</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></p>\n<p>完整APIdemo地址：<a href=\"https://github.com/xiaosongread/vuex\" target=\"_blank\" rel=\"noopener\">GitHub</a><br>运行效果如下：<br><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/vuex-2.png\" alt=\"blockchain\"></p>\n<hr>\n<p><strong>关键代码：</strong><br><strong>store.js</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> Vuex <span class=\"keyword\">from</span> <span class=\"string\">'vuex'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> app <span class=\"keyword\">from</span> <span class=\"string\">'./modules/app'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> user <span class=\"keyword\">from</span> <span class=\"string\">'./modules/user'</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Vue.use(Vuex)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> state = &#123;</span><br><span class=\"line\">    name: <span class=\"string\">'小张'</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// export default new Vuex.Store(&#123;</span></span><br><span class=\"line\"><span class=\"comment\">//     state1</span></span><br><span class=\"line\"><span class=\"comment\">// &#125;)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> store = <span class=\"keyword\">new</span> Vuex.Store(&#123;</span><br><span class=\"line\">  state,</span><br><span class=\"line\">  modules: &#123;</span><br><span class=\"line\">    app,</span><br><span class=\"line\">    user</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> store</span><br></pre></td></tr></table></figure></p>\n<p><strong>app.js</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> app = &#123;</span><br><span class=\"line\">  state: &#123;</span><br><span class=\"line\">    appConut: <span class=\"number\">0</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  getters: &#123;</span><br><span class=\"line\">    watchAppConut: <span class=\"function\"><span class=\"params\">state</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> state.appConut + <span class=\"number\">100</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  mutations: &#123;</span><br><span class=\"line\">    ADD_APP_COUNT: <span class=\"function\">(<span class=\"params\">state, n</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      state.appConut += n</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    DELETE_APP_COUNT: <span class=\"function\">(<span class=\"params\">state, n</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      state.appConut -= n</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    RESET_APP_COUNT: <span class=\"function\">(<span class=\"params\">state, n</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      state.appConut = n</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  actions: &#123;</span><br><span class=\"line\">    ACCTION_APP_COUNT: <span class=\"function\">(<span class=\"params\">&#123; commit &#125;, mes</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      commit(<span class=\"string\">'RESET_APP_COUNT'</span>, mes)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> app</span><br></pre></td></tr></table></figure></p>\n<p><strong>user.js</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> user = &#123;</span><br><span class=\"line\">  state: &#123;</span><br><span class=\"line\">    userConut: <span class=\"number\">0</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  mutations: &#123;</span><br><span class=\"line\">    ADD_USER_COUNT: <span class=\"function\">(<span class=\"params\">state, n</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      state.userConut += n</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    DELETE_USER_COUNT: <span class=\"function\">(<span class=\"params\">state, n</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      state.userConut -= n</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    RESET_USER_COUNT: <span class=\"function\">(<span class=\"params\">state, n</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      state.userConut = n</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  actions: &#123;</span><br><span class=\"line\">    ACCTION_USER_COUNT: <span class=\"function\">(<span class=\"params\">&#123; commit &#125;, mes</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      commit(<span class=\"string\">'RESET_USER_COUNT'</span>, mes)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> user</span><br></pre></td></tr></table></figure></p>\n<p><strong>HelloWorld.vue</strong><br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hello\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>mapState简写：&#123;&#123; name &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>app中的appConut：&#123;&#123; $store.state.app.appConut&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>mapState简写：&#123;&#123; appConut &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>app中计算属性(appConut+100)watchAppConut：&#123;&#123; $store.getters.watchAppConut&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>watchAppConut(mapGetters简写)：&#123;&#123; watchAppConut&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"clickAppAdd(100)\"</span>&gt;</span>+<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"clickAppDelete\"</span>&gt;</span>-<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"clickActionsApp('置空')\"</span>&gt;</span>actions<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>user中的userConut：&#123;&#123; $store.state.user.userConut&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"clickUserAdd\"</span>&gt;</span>+<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"clickUserDelete\"</span>&gt;</span>-<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"clickActionsUser\"</span>&gt;</span>actions<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"keyword\">import</span> &#123; mapState, mapMutations, mapActions, mapGetters &#125; <span class=\"keyword\">from</span> <span class=\"string\">'vuex'</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">  name: <span class=\"string\">'HelloWorld'</span>,</span></span><br><span class=\"line\"><span class=\"undefined\">  data () &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">      msg: <span class=\"string\">'Welcome to Your Vue.js App'</span></span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">  &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">  <span class=\"comment\">// computed: mapState(['name']), // 这样写更简单</span></span></span><br><span class=\"line\"><span class=\"undefined\">  computed: &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">    ...mapState(&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">      name: <span class=\"string\">'name'</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">      appConut: <span class=\"function\"><span class=\"params\">state</span> =&gt;</span> state.app.appConut</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;),</span></span><br><span class=\"line\"><span class=\"undefined\">    ...mapGetters(</span></span><br><span class=\"line\"><span class=\"javascript\">      [<span class=\"string\">'watchAppConut'</span>]</span></span><br><span class=\"line\"><span class=\"undefined\">    )</span></span><br><span class=\"line\"><span class=\"undefined\">  &#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">  methods: &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">     ...mapMutations(&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">       clickAppAdd: <span class=\"string\">'ADD_APP_COUNT'</span></span></span><br><span class=\"line\"><span class=\"undefined\">     &#125;),</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"comment\">// clickAppAdd() &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"comment\">//   this.$store.commit('ADD_APP_COUNT', 1)</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"comment\">// &#125;,</span></span></span><br><span class=\"line\"><span class=\"undefined\">    clickAppDelete() &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"keyword\">this</span>.$store.commit(<span class=\"string\">'DELETE_APP_COUNT'</span>, <span class=\"number\">1</span>)</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">    ...mapActions(&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">      clickActionsApp: <span class=\"string\">'ACCTION_APP_COUNT'</span></span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;),</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"comment\">// clickActionsApp() &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"comment\">//   this.$store.dispatch('ACCTION_APP_COUNT')</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"comment\">// &#125;,</span></span></span><br><span class=\"line\"><span class=\"undefined\">    clickUserAdd() &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"keyword\">this</span>.$store.commit(<span class=\"string\">'ADD_USER_COUNT'</span>, <span class=\"number\">2</span>)</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">    clickUserDelete() &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"keyword\">this</span>.$store.commit(<span class=\"string\">'DELETE_USER_COUNT'</span>, <span class=\"number\">2</span>)</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">    clickActionsUser() &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"keyword\">this</span>.$store.dispatch(<span class=\"string\">'ACCTION_USER_COUNT'</span>, <span class=\"string\">'置空'</span>)</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">  &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">&#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<hr>\n<h3 id=\"state\"><a href=\"#state\" class=\"headerlink\" title=\"state\"></a>state</h3><blockquote>\n<p>vuex的state和vue的data有很多相似之处,都是用于存储一些数据,或者说状态值.这些值都将被挂载 数据和dom的双向绑定事件,也就是当你改变值的时候可以触发dom的更新.</p>\n</blockquote>\n<p>使用：this.$store.state.name/$store.state.app.appConut(见 demo 的 HelloWorld.vue)</p>\n<blockquote>\n<p>为了防止store过于臃肿，只有state在取值的时候需要分块的，getters/mutations/actions 的调用是全局的。</p>\n</blockquote>\n<h3 id=\"mutations\"><a href=\"#mutations\" class=\"headerlink\" title=\"mutations\"></a>mutations</h3><p><strong>app.js</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mutations: &#123;</span><br><span class=\"line\">  ADD_APP_COUNT: <span class=\"function\">(<span class=\"params\">state, n</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    state.appConut += n</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  DELETE_APP_COUNT: <span class=\"function\">(<span class=\"params\">state, n</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    state.appConut -= n</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  RESET_APP_COUNT: <span class=\"function\">(<span class=\"params\">state, n</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    state.appConut = n</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong>HelloWorld.vue 调用</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">clickAppAdd() &#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.$store.commit(<span class=\"string\">'ADD_APP_COUNT'</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"mapMutations\"><a href=\"#mapMutations\" class=\"headerlink\" title=\"mapMutations\"></a>mapMutations</h3><p><strong>HelloWorld.vue</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; mapState, mapMutations, mapActions, mapGetters &#125; <span class=\"keyword\">from</span> <span class=\"string\">'vuex'</span></span><br><span class=\"line\"></span><br><span class=\"line\">...mapMutations(&#123;</span><br><span class=\"line\">  clickAppAdd: <span class=\"string\">'ADD_APP_COUNT'</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">参数不用管，vuex以帮你处理</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"actions\"><a href=\"#actions\" class=\"headerlink\" title=\"actions\"></a>actions</h3><p><strong>app.js</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">actions: &#123;</span><br><span class=\"line\">  ACCTION_APP_COUNT: <span class=\"function\">(<span class=\"params\">&#123; commit &#125;, mes</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    commit(<span class=\"string\">'RESET_APP_COUNT'</span>, mes)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong>HelloWorld.vue</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">clickActionsApp() &#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.$store.dispatch(<span class=\"string\">'ACCTION_APP_COUNT'</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>mutations 使用 $store.commit 调用，必须是同步的；actions 使用 $store.dispatch 调用通知，并且用commit 调用mutations 来修改数据，这个是异步操作使用的。</p>\n</blockquote>\n<h3 id=\"mapActions\"><a href=\"#mapActions\" class=\"headerlink\" title=\"mapActions\"></a>mapActions</h3><p><strong>HelloWorld.vue</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; mapState, mapMutations, mapActions, mapGetters &#125; <span class=\"keyword\">from</span> <span class=\"string\">'vuex'</span></span><br><span class=\"line\"></span><br><span class=\"line\">...mapActions(&#123;</span><br><span class=\"line\">  clickActionsApp: <span class=\"string\">'ACCTION_APP_COUNT'</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"getters\"><a href=\"#getters\" class=\"headerlink\" title=\"getters\"></a>getters</h3><p><strong>app.js</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">getters: &#123;</span><br><span class=\"line\">  watchAppConut: <span class=\"function\"><span class=\"params\">state</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> state.appConut + <span class=\"number\">100</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong>HelloWorld.vue</strong><br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>app中计算属性(appConut+100)watchAppConut：&#123;&#123; $store.getters.watchAppConut&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>watchAppConut(mapGetters简写)：&#123;&#123; watchAppConut&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"mapGetters\"><a href=\"#mapGetters\" class=\"headerlink\" title=\"mapGetters\"></a>mapGetters</h3><p><strong>app.js</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">getters: &#123;</span><br><span class=\"line\">  watchAppConut: <span class=\"function\"><span class=\"params\">state</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> state.appConut + <span class=\"number\">100</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong>HelloWorld.vue</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">computed: &#123;</span><br><span class=\"line\">  ...mapGetters(</span><br><span class=\"line\">    [<span class=\"string\">'watchAppConut'</span>]</span><br><span class=\"line\">  )</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>app中计算属性(appConut+100)watchAppConut：&#123;&#123; $store.getters.watchAppConut&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>watchAppConut(mapGetters简写)：&#123;&#123; watchAppConut&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"modules\"><a href=\"#modules\" class=\"headerlink\" title=\"modules\"></a>modules</h3><p>可以让每一个模块拥有自己的state、mutation、action、getters,使得结构非常清晰，方便管理<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> moduleA = &#123;</span><br><span class=\"line\"> state: &#123; ... &#125;,</span><br><span class=\"line\"> mutations: &#123; ... &#125;,</span><br><span class=\"line\"> actions: &#123; ... &#125;,</span><br><span class=\"line\"> getters: &#123; ... &#125;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"><span class=\"keyword\">const</span> moduleB = &#123;</span><br><span class=\"line\"> state: &#123; ... &#125;,</span><br><span class=\"line\"> mutations: &#123; ... &#125;,</span><br><span class=\"line\"> actions: &#123; ... &#125;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">const</span> store = <span class=\"keyword\">new</span> Vuex.Store(&#123;</span><br><span class=\"line\"> modules: &#123;</span><br><span class=\"line\">  a: moduleA,</span><br><span class=\"line\">  b: moduleB&#125;)</span><br></pre></td></tr></table></figure></p>"},{"title":"box-shadow属性-天气预报","date":"2019-08-19T09:13:10.000Z","_content":"## 效果如下：\n\n![blockchain](https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/weather.gif)\n\n<!-- more -->\n\n```shell\nbox-shadow: h-shadow v-shadow blur spread color inset;\n 参数详解：\n h-shadow: 阴影的水平偏移量。\n v-shadow: 阴影的垂直偏移量。\n blur: 模糊距离(就是渐变的距离，设为0就没有渐变)。\n spread: 投影的尺寸，通过这个控制“影分身”的大小。\n color: 投影颜色，通过这个实现后方的乌云。\n inset: 改为内阴影。这里用不到。\n```\n\n### 晴天\n```html\n<div class=\"weather sunny\"></div>\n```\n```css\n@keyframes sunScale {\n  0% {\n      transform: scale(1);\n  }\n  50% {\n    transform: scale(1.1);\n  }\n  100% {\n      transform: scale(1);\n  }\n}\n.sunny {\n  &:before {\n    content: \"\";\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    width: 60px;\n    height: 60px;\n    background: #F6D963;\n    border-radius: 50%;\n    box-shadow: 0 0 20px #ff0;\n    z-index: 2;\n  }\n  &:after {\n    content: \"\";\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    margin: -45px 0 0 -45px; \n    width: 90px;\n    height: 90px;\n    background: #FFEB3B;\n    clip-path: polygon(\n      50% 0%,\n        64.43% 25%,\n        93.3% 25%,\n        78.87% 50%,\n        93.3% 75%,\n        64.43% 75%,\n        50% 100%,\n        35.57% 75%,\n        6.7% 75%,\n        21.13% 50%,\n        6.7% 25%,\n        35.57% 25%);\n    z-index: 1;\n    animation: sunScale 2s linear infinite;\n  }\n}\n```\n\n### 多云\n```html\n<div class=\"weather cloudy\"></div>\n```\n```css\n.cloudy:before,\n.rainy:before,\n.snowy:before {\n    content: \"\";\n    position: absolute;\n    top: 50%;\n    left: 25%;\n    transform: translate(-50%, -50%);\n    width: 36px;\n    height: 36px;\n    background: #fff;\n    border-radius: 50%;\n    z-index: 2;\n    box-shadow: #fff 22px -15px 0 6px,\n              #fff 22px -15px 0 6px,\n              #fff 57px -6px 0 2px, \n              #fff 87px 4px 0 -4px,\n              #fff 33px 6px 0 6px,\n              #fff 61px 6px 0 2px,\n              #ccc 29px -23px 0 6px,\n              #ccc 64px -14px 0 2px,\n              #ccc 94px -4px 0 -4px;\n}\n```\n\n### 雨天\n```html\n<div class=\"weather rainy\"></div>\n```\n```css\n@keyframes rainy{\n  from {\n    transform: translate(0, 0) rotate(10deg);\n  }\n  to {\n    transform: translate(-4px, 24px) rotate(10deg);\n    box-shadow:\n           #fff 25px -10px 0,\n           #fff 50px 0 0,\n           #fff 75px -10px 0,\n           #fff 0 25px 0,\n           #fff 25px 15px 0,\n           #fff 50px 25px 0,\n           #fff 75px 15px 0,\n           rgba(255, 255, 255, 0) 0 50px 0,\n           rgba(255, 255, 255, 0) 25px 40px 0,\n           rgba(255, 255, 255, 0) 50px 50px 0,\n           rgba(255, 255, 255, 0) 75px 40px 0;\n  }\n}\n.rainy{\n  &:after\n  {\n    content: \"\";\n    position: absolute;\n    top:50%;\n    left: 25%;\n    width: 4px;\n    height: 14px;\n    background: #fff;\n    border-radius: 2px;\n    box-shadow:    \t    #fff 25px -10px 0,    \t    #fff 50px 0 0,    \t    #fff 75px -10px 0,    \t    #fff 0 25px 0,    \t    #fff 25px 15px 0,    \t    #fff 50px 25px 0,    \t    #fff 75px 15px 0,    \t    #fff 0 50px 0,    \t    #fff 25px 40px 0,    \t    #fff 50px 50px 0,    \t    #fff 75px 40px 0;\n    -webkit-animation: rainy 2s linear infinite;\n    animation: rainy 2s linear infinite;\n  }\n}\n```\n\n### 雪天\n```html\n<div class=\"weather snowy\"></div>\n```\n```css\n@keyframes snowDrop {\n  0% {\n      transform: translateY(0);\n  }\n  100% {\n      transform: translateY(25px);\n      box-shadow:\n      #fff 25px -10px 0,\n      #fff 50px 0 0,\n      #fff 75px -10px 0,\n      #fff 0 25px 0,\n      #fff 25px 15px 0,\n      #fff 50px 25px 0,\n      #fff 75px 15px 0,\n      rgba(255, 255, 255, 0) 0 50px 0,\n      rgba(255, 255, 255, 0) 25px 40px 0,\n      rgba(255, 255, 255, 0) 50px 50px 0,\n      rgba(255, 255, 255, 0) 75px 40px 0;\n  }\n}\n.snowy:after {\n  content: \"\";\n  position: absolute;\n  top:50%;\n  left: 25%;\n  width: 8px;\n  height: 8px;\n  background: #fff;\n  border-radius: 50%;\n  box-shadow:\n      #fff 25px -10px 0,\n      #fff 50px 0 0,\n      #fff 75px -10px 0,\n      #fff 0 25px 0,\n      #fff 25px 15px 0,\n      #fff 50px 25px 0,\n      #fff 75px 15px 0,\n      #fff 0 50px 0,\n      #fff 25px 40px 0,\n      #fff 50px 50px 0,\n      #fff 75px 40px 0;\n  animation: snowDrop 2s linear infinite; \n}\n```\n\n### github\nhttps://github.com/xiaosongread/gulp-cli","source":"_posts/weather.md","raw":"---\ntitle: box-shadow属性-天气预报\ncategories: js-end\ndate: 2019-08-19 17:13:10\ntags: box-shadow\n---\n## 效果如下：\n\n![blockchain](https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/weather.gif)\n\n<!-- more -->\n\n```shell\nbox-shadow: h-shadow v-shadow blur spread color inset;\n 参数详解：\n h-shadow: 阴影的水平偏移量。\n v-shadow: 阴影的垂直偏移量。\n blur: 模糊距离(就是渐变的距离，设为0就没有渐变)。\n spread: 投影的尺寸，通过这个控制“影分身”的大小。\n color: 投影颜色，通过这个实现后方的乌云。\n inset: 改为内阴影。这里用不到。\n```\n\n### 晴天\n```html\n<div class=\"weather sunny\"></div>\n```\n```css\n@keyframes sunScale {\n  0% {\n      transform: scale(1);\n  }\n  50% {\n    transform: scale(1.1);\n  }\n  100% {\n      transform: scale(1);\n  }\n}\n.sunny {\n  &:before {\n    content: \"\";\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    width: 60px;\n    height: 60px;\n    background: #F6D963;\n    border-radius: 50%;\n    box-shadow: 0 0 20px #ff0;\n    z-index: 2;\n  }\n  &:after {\n    content: \"\";\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    margin: -45px 0 0 -45px; \n    width: 90px;\n    height: 90px;\n    background: #FFEB3B;\n    clip-path: polygon(\n      50% 0%,\n        64.43% 25%,\n        93.3% 25%,\n        78.87% 50%,\n        93.3% 75%,\n        64.43% 75%,\n        50% 100%,\n        35.57% 75%,\n        6.7% 75%,\n        21.13% 50%,\n        6.7% 25%,\n        35.57% 25%);\n    z-index: 1;\n    animation: sunScale 2s linear infinite;\n  }\n}\n```\n\n### 多云\n```html\n<div class=\"weather cloudy\"></div>\n```\n```css\n.cloudy:before,\n.rainy:before,\n.snowy:before {\n    content: \"\";\n    position: absolute;\n    top: 50%;\n    left: 25%;\n    transform: translate(-50%, -50%);\n    width: 36px;\n    height: 36px;\n    background: #fff;\n    border-radius: 50%;\n    z-index: 2;\n    box-shadow: #fff 22px -15px 0 6px,\n              #fff 22px -15px 0 6px,\n              #fff 57px -6px 0 2px, \n              #fff 87px 4px 0 -4px,\n              #fff 33px 6px 0 6px,\n              #fff 61px 6px 0 2px,\n              #ccc 29px -23px 0 6px,\n              #ccc 64px -14px 0 2px,\n              #ccc 94px -4px 0 -4px;\n}\n```\n\n### 雨天\n```html\n<div class=\"weather rainy\"></div>\n```\n```css\n@keyframes rainy{\n  from {\n    transform: translate(0, 0) rotate(10deg);\n  }\n  to {\n    transform: translate(-4px, 24px) rotate(10deg);\n    box-shadow:\n           #fff 25px -10px 0,\n           #fff 50px 0 0,\n           #fff 75px -10px 0,\n           #fff 0 25px 0,\n           #fff 25px 15px 0,\n           #fff 50px 25px 0,\n           #fff 75px 15px 0,\n           rgba(255, 255, 255, 0) 0 50px 0,\n           rgba(255, 255, 255, 0) 25px 40px 0,\n           rgba(255, 255, 255, 0) 50px 50px 0,\n           rgba(255, 255, 255, 0) 75px 40px 0;\n  }\n}\n.rainy{\n  &:after\n  {\n    content: \"\";\n    position: absolute;\n    top:50%;\n    left: 25%;\n    width: 4px;\n    height: 14px;\n    background: #fff;\n    border-radius: 2px;\n    box-shadow:    \t    #fff 25px -10px 0,    \t    #fff 50px 0 0,    \t    #fff 75px -10px 0,    \t    #fff 0 25px 0,    \t    #fff 25px 15px 0,    \t    #fff 50px 25px 0,    \t    #fff 75px 15px 0,    \t    #fff 0 50px 0,    \t    #fff 25px 40px 0,    \t    #fff 50px 50px 0,    \t    #fff 75px 40px 0;\n    -webkit-animation: rainy 2s linear infinite;\n    animation: rainy 2s linear infinite;\n  }\n}\n```\n\n### 雪天\n```html\n<div class=\"weather snowy\"></div>\n```\n```css\n@keyframes snowDrop {\n  0% {\n      transform: translateY(0);\n  }\n  100% {\n      transform: translateY(25px);\n      box-shadow:\n      #fff 25px -10px 0,\n      #fff 50px 0 0,\n      #fff 75px -10px 0,\n      #fff 0 25px 0,\n      #fff 25px 15px 0,\n      #fff 50px 25px 0,\n      #fff 75px 15px 0,\n      rgba(255, 255, 255, 0) 0 50px 0,\n      rgba(255, 255, 255, 0) 25px 40px 0,\n      rgba(255, 255, 255, 0) 50px 50px 0,\n      rgba(255, 255, 255, 0) 75px 40px 0;\n  }\n}\n.snowy:after {\n  content: \"\";\n  position: absolute;\n  top:50%;\n  left: 25%;\n  width: 8px;\n  height: 8px;\n  background: #fff;\n  border-radius: 50%;\n  box-shadow:\n      #fff 25px -10px 0,\n      #fff 50px 0 0,\n      #fff 75px -10px 0,\n      #fff 0 25px 0,\n      #fff 25px 15px 0,\n      #fff 50px 25px 0,\n      #fff 75px 15px 0,\n      #fff 0 50px 0,\n      #fff 25px 40px 0,\n      #fff 50px 50px 0,\n      #fff 75px 40px 0;\n  animation: snowDrop 2s linear infinite; \n}\n```\n\n### github\nhttps://github.com/xiaosongread/gulp-cli","slug":"weather","published":1,"updated":"2020-07-01T09:12:26.387Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdr00y67002ae7zcwhjg8wis","content":"<h2 id=\"效果如下：\"><a href=\"#效果如下：\" class=\"headerlink\" title=\"效果如下：\"></a>效果如下：</h2><p><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/weather.gif\" alt=\"blockchain\"></p>\n<a id=\"more\"></a>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">box-shadow: h-shadow v-shadow blur spread color inset;</span><br><span class=\"line\"> 参数详解：</span><br><span class=\"line\"> h-shadow: 阴影的水平偏移量。</span><br><span class=\"line\"> v-shadow: 阴影的垂直偏移量。</span><br><span class=\"line\"> blur: 模糊距离(就是渐变的距离，设为0就没有渐变)。</span><br><span class=\"line\"> spread: 投影的尺寸，通过这个控制“影分身”的大小。</span><br><span class=\"line\"> color: 投影颜色，通过这个实现后方的乌云。</span><br><span class=\"line\"> inset: 改为内阴影。这里用不到。</span><br></pre></td></tr></table></figure>\n<h3 id=\"晴天\"><a href=\"#晴天\" class=\"headerlink\" title=\"晴天\"></a>晴天</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"weather sunny\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@<span class=\"keyword\">keyframes</span> sunScale &#123;</span><br><span class=\"line\">  0% &#123;</span><br><span class=\"line\">      <span class=\"attribute\">transform</span>: <span class=\"built_in\">scale</span>(1);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  50% &#123;</span><br><span class=\"line\">    <span class=\"attribute\">transform</span>: <span class=\"built_in\">scale</span>(1.1);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  100% &#123;</span><br><span class=\"line\">      <span class=\"attribute\">transform</span>: <span class=\"built_in\">scale</span>(1);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.sunny</span> &#123;</span><br><span class=\"line\">  &amp;:before &#123;</span><br><span class=\"line\">    <span class=\"selector-tag\">content</span>: \"\";</span><br><span class=\"line\">    <span class=\"selector-tag\">position</span>: <span class=\"selector-tag\">absolute</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">top</span>: 50%;</span><br><span class=\"line\">    <span class=\"selector-tag\">left</span>: 50%;</span><br><span class=\"line\">    <span class=\"selector-tag\">transform</span>: <span class=\"selector-tag\">translate</span>(<span class=\"selector-tag\">-50</span>%, <span class=\"selector-tag\">-50</span>%);</span><br><span class=\"line\">    <span class=\"selector-tag\">width</span>: 60<span class=\"selector-tag\">px</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">height</span>: 60<span class=\"selector-tag\">px</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">background</span>: <span class=\"selector-id\">#F6D963</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">border-radius</span>: 50%;</span><br><span class=\"line\">    <span class=\"selector-tag\">box-shadow</span>: 0 0 20<span class=\"selector-tag\">px</span> <span class=\"selector-id\">#ff0</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">z-index</span>: 2;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  &amp;<span class=\"selector-pseudo\">:after</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">content</span>: <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">    <span class=\"attribute\">top</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">left</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">margin</span>: -<span class=\"number\">45px</span> <span class=\"number\">0</span> <span class=\"number\">0</span> -<span class=\"number\">45px</span>; </span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">90px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">90px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">background</span>: <span class=\"number\">#FFEB3B</span>;</span><br><span class=\"line\">    <span class=\"attribute\">clip-path</span>: <span class=\"built_in\">polygon</span>(</span><br><span class=\"line\">      50% 0%,</span><br><span class=\"line\">        64.43% 25%,</span><br><span class=\"line\">        93.3% 25%,</span><br><span class=\"line\">        78.87% 50%,</span><br><span class=\"line\">        93.3% 75%,</span><br><span class=\"line\">        64.43% 75%,</span><br><span class=\"line\">        50% 100%,</span><br><span class=\"line\">        35.57% 75%,</span><br><span class=\"line\">        6.7% 75%,</span><br><span class=\"line\">        21.13% 50%,</span><br><span class=\"line\">        6.7% 25%,</span><br><span class=\"line\">        35.57% 25%);</span><br><span class=\"line\">    <span class=\"attribute\">z-index</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"attribute\">animation</span>: sunScale <span class=\"number\">2s</span> linear infinite;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"多云\"><a href=\"#多云\" class=\"headerlink\" title=\"多云\"></a>多云</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"weather cloudy\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.cloudy</span><span class=\"selector-pseudo\">:before</span>,</span><br><span class=\"line\"><span class=\"selector-class\">.rainy</span><span class=\"selector-pseudo\">:before</span>,</span><br><span class=\"line\"><span class=\"selector-class\">.snowy</span><span class=\"selector-pseudo\">:before</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">content</span>: <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">    <span class=\"attribute\">top</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">left</span>: <span class=\"number\">25%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">transform</span>: <span class=\"built_in\">translate</span>(-50%, -50%);</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">36px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">36px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">background</span>: <span class=\"number\">#fff</span>;</span><br><span class=\"line\">    <span class=\"attribute\">border-radius</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">z-index</span>: <span class=\"number\">2</span>;</span><br><span class=\"line\">    <span class=\"attribute\">box-shadow</span>: <span class=\"number\">#fff</span> <span class=\"number\">22px</span> -<span class=\"number\">15px</span> <span class=\"number\">0</span> <span class=\"number\">6px</span>,</span><br><span class=\"line\">              <span class=\"number\">#fff</span> <span class=\"number\">22px</span> -<span class=\"number\">15px</span> <span class=\"number\">0</span> <span class=\"number\">6px</span>,</span><br><span class=\"line\">              <span class=\"number\">#fff</span> <span class=\"number\">57px</span> -<span class=\"number\">6px</span> <span class=\"number\">0</span> <span class=\"number\">2px</span>, </span><br><span class=\"line\">              <span class=\"number\">#fff</span> <span class=\"number\">87px</span> <span class=\"number\">4px</span> <span class=\"number\">0</span> -<span class=\"number\">4px</span>,</span><br><span class=\"line\">              <span class=\"number\">#fff</span> <span class=\"number\">33px</span> <span class=\"number\">6px</span> <span class=\"number\">0</span> <span class=\"number\">6px</span>,</span><br><span class=\"line\">              <span class=\"number\">#fff</span> <span class=\"number\">61px</span> <span class=\"number\">6px</span> <span class=\"number\">0</span> <span class=\"number\">2px</span>,</span><br><span class=\"line\">              <span class=\"number\">#ccc</span> <span class=\"number\">29px</span> -<span class=\"number\">23px</span> <span class=\"number\">0</span> <span class=\"number\">6px</span>,</span><br><span class=\"line\">              <span class=\"number\">#ccc</span> <span class=\"number\">64px</span> -<span class=\"number\">14px</span> <span class=\"number\">0</span> <span class=\"number\">2px</span>,</span><br><span class=\"line\">              <span class=\"number\">#ccc</span> <span class=\"number\">94px</span> -<span class=\"number\">4px</span> <span class=\"number\">0</span> -<span class=\"number\">4px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"雨天\"><a href=\"#雨天\" class=\"headerlink\" title=\"雨天\"></a>雨天</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"weather rainy\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@<span class=\"keyword\">keyframes</span> rainy&#123;</span><br><span class=\"line\">  <span class=\"selector-tag\">from</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">transform</span>: <span class=\"built_in\">translate</span>(0, 0) <span class=\"built_in\">rotate</span>(10deg);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"selector-tag\">to</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">transform</span>: <span class=\"built_in\">translate</span>(-4px, 24px) <span class=\"built_in\">rotate</span>(10deg);</span><br><span class=\"line\">    <span class=\"attribute\">box-shadow</span>:</span><br><span class=\"line\">           <span class=\"number\">#fff</span> <span class=\"number\">25px</span> -<span class=\"number\">10px</span> <span class=\"number\">0</span>,</span><br><span class=\"line\">           <span class=\"number\">#fff</span> <span class=\"number\">50px</span> <span class=\"number\">0</span> <span class=\"number\">0</span>,</span><br><span class=\"line\">           <span class=\"number\">#fff</span> <span class=\"number\">75px</span> -<span class=\"number\">10px</span> <span class=\"number\">0</span>,</span><br><span class=\"line\">           <span class=\"number\">#fff</span> <span class=\"number\">0</span> <span class=\"number\">25px</span> <span class=\"number\">0</span>,</span><br><span class=\"line\">           <span class=\"number\">#fff</span> <span class=\"number\">25px</span> <span class=\"number\">15px</span> <span class=\"number\">0</span>,</span><br><span class=\"line\">           <span class=\"number\">#fff</span> <span class=\"number\">50px</span> <span class=\"number\">25px</span> <span class=\"number\">0</span>,</span><br><span class=\"line\">           <span class=\"number\">#fff</span> <span class=\"number\">75px</span> <span class=\"number\">15px</span> <span class=\"number\">0</span>,</span><br><span class=\"line\">           <span class=\"built_in\">rgba</span>(255, 255, 255, 0) <span class=\"number\">0</span> <span class=\"number\">50px</span> <span class=\"number\">0</span>,</span><br><span class=\"line\">           <span class=\"built_in\">rgba</span>(255, 255, 255, 0) <span class=\"number\">25px</span> <span class=\"number\">40px</span> <span class=\"number\">0</span>,</span><br><span class=\"line\">           <span class=\"built_in\">rgba</span>(255, 255, 255, 0) <span class=\"number\">50px</span> <span class=\"number\">50px</span> <span class=\"number\">0</span>,</span><br><span class=\"line\">           <span class=\"built_in\">rgba</span>(255, 255, 255, 0) <span class=\"number\">75px</span> <span class=\"number\">40px</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.rainy</span>&#123;</span><br><span class=\"line\">  &amp;:after</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attribute\">content</span>: <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">    <span class=\"attribute\">top</span>:<span class=\"number\">50%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">left</span>: <span class=\"number\">25%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">4px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">14px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">background</span>: <span class=\"number\">#fff</span>;</span><br><span class=\"line\">    <span class=\"attribute\">border-radius</span>: <span class=\"number\">2px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">box-shadow</span>:    \t    <span class=\"number\">#fff</span> <span class=\"number\">25px</span> -<span class=\"number\">10px</span> <span class=\"number\">0</span>,    \t    <span class=\"number\">#fff</span> <span class=\"number\">50px</span> <span class=\"number\">0</span> <span class=\"number\">0</span>,    \t    <span class=\"number\">#fff</span> <span class=\"number\">75px</span> -<span class=\"number\">10px</span> <span class=\"number\">0</span>,    \t    <span class=\"number\">#fff</span> <span class=\"number\">0</span> <span class=\"number\">25px</span> <span class=\"number\">0</span>,    \t    <span class=\"number\">#fff</span> <span class=\"number\">25px</span> <span class=\"number\">15px</span> <span class=\"number\">0</span>,    \t    <span class=\"number\">#fff</span> <span class=\"number\">50px</span> <span class=\"number\">25px</span> <span class=\"number\">0</span>,    \t    <span class=\"number\">#fff</span> <span class=\"number\">75px</span> <span class=\"number\">15px</span> <span class=\"number\">0</span>,    \t    <span class=\"number\">#fff</span> <span class=\"number\">0</span> <span class=\"number\">50px</span> <span class=\"number\">0</span>,    \t    <span class=\"number\">#fff</span> <span class=\"number\">25px</span> <span class=\"number\">40px</span> <span class=\"number\">0</span>,    \t    <span class=\"number\">#fff</span> <span class=\"number\">50px</span> <span class=\"number\">50px</span> <span class=\"number\">0</span>,    \t    <span class=\"number\">#fff</span> <span class=\"number\">75px</span> <span class=\"number\">40px</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"attribute\">-webkit-animation</span>: rainy <span class=\"number\">2s</span> linear infinite;</span><br><span class=\"line\">    <span class=\"attribute\">animation</span>: rainy <span class=\"number\">2s</span> linear infinite;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"雪天\"><a href=\"#雪天\" class=\"headerlink\" title=\"雪天\"></a>雪天</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"weather snowy\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@<span class=\"keyword\">keyframes</span> snowDrop &#123;</span><br><span class=\"line\">  0% &#123;</span><br><span class=\"line\">      <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateY</span>(0);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  100% &#123;</span><br><span class=\"line\">      <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateY</span>(25px);</span><br><span class=\"line\">      <span class=\"attribute\">box-shadow</span>:</span><br><span class=\"line\">      <span class=\"number\">#fff</span> <span class=\"number\">25px</span> -<span class=\"number\">10px</span> <span class=\"number\">0</span>,</span><br><span class=\"line\">      <span class=\"number\">#fff</span> <span class=\"number\">50px</span> <span class=\"number\">0</span> <span class=\"number\">0</span>,</span><br><span class=\"line\">      <span class=\"number\">#fff</span> <span class=\"number\">75px</span> -<span class=\"number\">10px</span> <span class=\"number\">0</span>,</span><br><span class=\"line\">      <span class=\"number\">#fff</span> <span class=\"number\">0</span> <span class=\"number\">25px</span> <span class=\"number\">0</span>,</span><br><span class=\"line\">      <span class=\"number\">#fff</span> <span class=\"number\">25px</span> <span class=\"number\">15px</span> <span class=\"number\">0</span>,</span><br><span class=\"line\">      <span class=\"number\">#fff</span> <span class=\"number\">50px</span> <span class=\"number\">25px</span> <span class=\"number\">0</span>,</span><br><span class=\"line\">      <span class=\"number\">#fff</span> <span class=\"number\">75px</span> <span class=\"number\">15px</span> <span class=\"number\">0</span>,</span><br><span class=\"line\">      <span class=\"built_in\">rgba</span>(255, 255, 255, 0) <span class=\"number\">0</span> <span class=\"number\">50px</span> <span class=\"number\">0</span>,</span><br><span class=\"line\">      <span class=\"built_in\">rgba</span>(255, 255, 255, 0) <span class=\"number\">25px</span> <span class=\"number\">40px</span> <span class=\"number\">0</span>,</span><br><span class=\"line\">      <span class=\"built_in\">rgba</span>(255, 255, 255, 0) <span class=\"number\">50px</span> <span class=\"number\">50px</span> <span class=\"number\">0</span>,</span><br><span class=\"line\">      <span class=\"built_in\">rgba</span>(255, 255, 255, 0) <span class=\"number\">75px</span> <span class=\"number\">40px</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.snowy</span><span class=\"selector-pseudo\">:after</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">content</span>: <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">  <span class=\"attribute\">top</span>:<span class=\"number\">50%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">left</span>: <span class=\"number\">25%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">8px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">8px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"number\">#fff</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">box-shadow</span>:</span><br><span class=\"line\">      <span class=\"number\">#fff</span> <span class=\"number\">25px</span> -<span class=\"number\">10px</span> <span class=\"number\">0</span>,</span><br><span class=\"line\">      <span class=\"number\">#fff</span> <span class=\"number\">50px</span> <span class=\"number\">0</span> <span class=\"number\">0</span>,</span><br><span class=\"line\">      <span class=\"number\">#fff</span> <span class=\"number\">75px</span> -<span class=\"number\">10px</span> <span class=\"number\">0</span>,</span><br><span class=\"line\">      <span class=\"number\">#fff</span> <span class=\"number\">0</span> <span class=\"number\">25px</span> <span class=\"number\">0</span>,</span><br><span class=\"line\">      <span class=\"number\">#fff</span> <span class=\"number\">25px</span> <span class=\"number\">15px</span> <span class=\"number\">0</span>,</span><br><span class=\"line\">      <span class=\"number\">#fff</span> <span class=\"number\">50px</span> <span class=\"number\">25px</span> <span class=\"number\">0</span>,</span><br><span class=\"line\">      <span class=\"number\">#fff</span> <span class=\"number\">75px</span> <span class=\"number\">15px</span> <span class=\"number\">0</span>,</span><br><span class=\"line\">      <span class=\"number\">#fff</span> <span class=\"number\">0</span> <span class=\"number\">50px</span> <span class=\"number\">0</span>,</span><br><span class=\"line\">      <span class=\"number\">#fff</span> <span class=\"number\">25px</span> <span class=\"number\">40px</span> <span class=\"number\">0</span>,</span><br><span class=\"line\">      <span class=\"number\">#fff</span> <span class=\"number\">50px</span> <span class=\"number\">50px</span> <span class=\"number\">0</span>,</span><br><span class=\"line\">      <span class=\"number\">#fff</span> <span class=\"number\">75px</span> <span class=\"number\">40px</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">animation</span>: snowDrop <span class=\"number\">2s</span> linear infinite; </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"github\"><a href=\"#github\" class=\"headerlink\" title=\"github\"></a>github</h3><p><a href=\"https://github.com/xiaosongread/gulp-cli\" target=\"_blank\" rel=\"noopener\">https://github.com/xiaosongread/gulp-cli</a></p>\n","site":{"data":{}},"excerpt":"<h2 id=\"效果如下：\"><a href=\"#效果如下：\" class=\"headerlink\" title=\"效果如下：\"></a>效果如下：</h2><p><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/weather.gif\" alt=\"blockchain\"></p>","more":"<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">box-shadow: h-shadow v-shadow blur spread color inset;</span><br><span class=\"line\"> 参数详解：</span><br><span class=\"line\"> h-shadow: 阴影的水平偏移量。</span><br><span class=\"line\"> v-shadow: 阴影的垂直偏移量。</span><br><span class=\"line\"> blur: 模糊距离(就是渐变的距离，设为0就没有渐变)。</span><br><span class=\"line\"> spread: 投影的尺寸，通过这个控制“影分身”的大小。</span><br><span class=\"line\"> color: 投影颜色，通过这个实现后方的乌云。</span><br><span class=\"line\"> inset: 改为内阴影。这里用不到。</span><br></pre></td></tr></table></figure>\n<h3 id=\"晴天\"><a href=\"#晴天\" class=\"headerlink\" title=\"晴天\"></a>晴天</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"weather sunny\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@<span class=\"keyword\">keyframes</span> sunScale &#123;</span><br><span class=\"line\">  0% &#123;</span><br><span class=\"line\">      <span class=\"attribute\">transform</span>: <span class=\"built_in\">scale</span>(1);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  50% &#123;</span><br><span class=\"line\">    <span class=\"attribute\">transform</span>: <span class=\"built_in\">scale</span>(1.1);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  100% &#123;</span><br><span class=\"line\">      <span class=\"attribute\">transform</span>: <span class=\"built_in\">scale</span>(1);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.sunny</span> &#123;</span><br><span class=\"line\">  &amp;:before &#123;</span><br><span class=\"line\">    <span class=\"selector-tag\">content</span>: \"\";</span><br><span class=\"line\">    <span class=\"selector-tag\">position</span>: <span class=\"selector-tag\">absolute</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">top</span>: 50%;</span><br><span class=\"line\">    <span class=\"selector-tag\">left</span>: 50%;</span><br><span class=\"line\">    <span class=\"selector-tag\">transform</span>: <span class=\"selector-tag\">translate</span>(<span class=\"selector-tag\">-50</span>%, <span class=\"selector-tag\">-50</span>%);</span><br><span class=\"line\">    <span class=\"selector-tag\">width</span>: 60<span class=\"selector-tag\">px</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">height</span>: 60<span class=\"selector-tag\">px</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">background</span>: <span class=\"selector-id\">#F6D963</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">border-radius</span>: 50%;</span><br><span class=\"line\">    <span class=\"selector-tag\">box-shadow</span>: 0 0 20<span class=\"selector-tag\">px</span> <span class=\"selector-id\">#ff0</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">z-index</span>: 2;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  &amp;<span class=\"selector-pseudo\">:after</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">content</span>: <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">    <span class=\"attribute\">top</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">left</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">margin</span>: -<span class=\"number\">45px</span> <span class=\"number\">0</span> <span class=\"number\">0</span> -<span class=\"number\">45px</span>; </span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">90px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">90px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">background</span>: <span class=\"number\">#FFEB3B</span>;</span><br><span class=\"line\">    <span class=\"attribute\">clip-path</span>: <span class=\"built_in\">polygon</span>(</span><br><span class=\"line\">      50% 0%,</span><br><span class=\"line\">        64.43% 25%,</span><br><span class=\"line\">        93.3% 25%,</span><br><span class=\"line\">        78.87% 50%,</span><br><span class=\"line\">        93.3% 75%,</span><br><span class=\"line\">        64.43% 75%,</span><br><span class=\"line\">        50% 100%,</span><br><span class=\"line\">        35.57% 75%,</span><br><span class=\"line\">        6.7% 75%,</span><br><span class=\"line\">        21.13% 50%,</span><br><span class=\"line\">        6.7% 25%,</span><br><span class=\"line\">        35.57% 25%);</span><br><span class=\"line\">    <span class=\"attribute\">z-index</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"attribute\">animation</span>: sunScale <span class=\"number\">2s</span> linear infinite;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"多云\"><a href=\"#多云\" class=\"headerlink\" title=\"多云\"></a>多云</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"weather cloudy\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.cloudy</span><span class=\"selector-pseudo\">:before</span>,</span><br><span class=\"line\"><span class=\"selector-class\">.rainy</span><span class=\"selector-pseudo\">:before</span>,</span><br><span class=\"line\"><span class=\"selector-class\">.snowy</span><span class=\"selector-pseudo\">:before</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">content</span>: <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">    <span class=\"attribute\">top</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">left</span>: <span class=\"number\">25%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">transform</span>: <span class=\"built_in\">translate</span>(-50%, -50%);</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">36px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">36px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">background</span>: <span class=\"number\">#fff</span>;</span><br><span class=\"line\">    <span class=\"attribute\">border-radius</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">z-index</span>: <span class=\"number\">2</span>;</span><br><span class=\"line\">    <span class=\"attribute\">box-shadow</span>: <span class=\"number\">#fff</span> <span class=\"number\">22px</span> -<span class=\"number\">15px</span> <span class=\"number\">0</span> <span class=\"number\">6px</span>,</span><br><span class=\"line\">              <span class=\"number\">#fff</span> <span class=\"number\">22px</span> -<span class=\"number\">15px</span> <span class=\"number\">0</span> <span class=\"number\">6px</span>,</span><br><span class=\"line\">              <span class=\"number\">#fff</span> <span class=\"number\">57px</span> -<span class=\"number\">6px</span> <span class=\"number\">0</span> <span class=\"number\">2px</span>, </span><br><span class=\"line\">              <span class=\"number\">#fff</span> <span class=\"number\">87px</span> <span class=\"number\">4px</span> <span class=\"number\">0</span> -<span class=\"number\">4px</span>,</span><br><span class=\"line\">              <span class=\"number\">#fff</span> <span class=\"number\">33px</span> <span class=\"number\">6px</span> <span class=\"number\">0</span> <span class=\"number\">6px</span>,</span><br><span class=\"line\">              <span class=\"number\">#fff</span> <span class=\"number\">61px</span> <span class=\"number\">6px</span> <span class=\"number\">0</span> <span class=\"number\">2px</span>,</span><br><span class=\"line\">              <span class=\"number\">#ccc</span> <span class=\"number\">29px</span> -<span class=\"number\">23px</span> <span class=\"number\">0</span> <span class=\"number\">6px</span>,</span><br><span class=\"line\">              <span class=\"number\">#ccc</span> <span class=\"number\">64px</span> -<span class=\"number\">14px</span> <span class=\"number\">0</span> <span class=\"number\">2px</span>,</span><br><span class=\"line\">              <span class=\"number\">#ccc</span> <span class=\"number\">94px</span> -<span class=\"number\">4px</span> <span class=\"number\">0</span> -<span class=\"number\">4px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"雨天\"><a href=\"#雨天\" class=\"headerlink\" title=\"雨天\"></a>雨天</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"weather rainy\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@<span class=\"keyword\">keyframes</span> rainy&#123;</span><br><span class=\"line\">  <span class=\"selector-tag\">from</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">transform</span>: <span class=\"built_in\">translate</span>(0, 0) <span class=\"built_in\">rotate</span>(10deg);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"selector-tag\">to</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">transform</span>: <span class=\"built_in\">translate</span>(-4px, 24px) <span class=\"built_in\">rotate</span>(10deg);</span><br><span class=\"line\">    <span class=\"attribute\">box-shadow</span>:</span><br><span class=\"line\">           <span class=\"number\">#fff</span> <span class=\"number\">25px</span> -<span class=\"number\">10px</span> <span class=\"number\">0</span>,</span><br><span class=\"line\">           <span class=\"number\">#fff</span> <span class=\"number\">50px</span> <span class=\"number\">0</span> <span class=\"number\">0</span>,</span><br><span class=\"line\">           <span class=\"number\">#fff</span> <span class=\"number\">75px</span> -<span class=\"number\">10px</span> <span class=\"number\">0</span>,</span><br><span class=\"line\">           <span class=\"number\">#fff</span> <span class=\"number\">0</span> <span class=\"number\">25px</span> <span class=\"number\">0</span>,</span><br><span class=\"line\">           <span class=\"number\">#fff</span> <span class=\"number\">25px</span> <span class=\"number\">15px</span> <span class=\"number\">0</span>,</span><br><span class=\"line\">           <span class=\"number\">#fff</span> <span class=\"number\">50px</span> <span class=\"number\">25px</span> <span class=\"number\">0</span>,</span><br><span class=\"line\">           <span class=\"number\">#fff</span> <span class=\"number\">75px</span> <span class=\"number\">15px</span> <span class=\"number\">0</span>,</span><br><span class=\"line\">           <span class=\"built_in\">rgba</span>(255, 255, 255, 0) <span class=\"number\">0</span> <span class=\"number\">50px</span> <span class=\"number\">0</span>,</span><br><span class=\"line\">           <span class=\"built_in\">rgba</span>(255, 255, 255, 0) <span class=\"number\">25px</span> <span class=\"number\">40px</span> <span class=\"number\">0</span>,</span><br><span class=\"line\">           <span class=\"built_in\">rgba</span>(255, 255, 255, 0) <span class=\"number\">50px</span> <span class=\"number\">50px</span> <span class=\"number\">0</span>,</span><br><span class=\"line\">           <span class=\"built_in\">rgba</span>(255, 255, 255, 0) <span class=\"number\">75px</span> <span class=\"number\">40px</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.rainy</span>&#123;</span><br><span class=\"line\">  &amp;:after</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attribute\">content</span>: <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">    <span class=\"attribute\">top</span>:<span class=\"number\">50%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">left</span>: <span class=\"number\">25%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">4px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">14px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">background</span>: <span class=\"number\">#fff</span>;</span><br><span class=\"line\">    <span class=\"attribute\">border-radius</span>: <span class=\"number\">2px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">box-shadow</span>:    \t    <span class=\"number\">#fff</span> <span class=\"number\">25px</span> -<span class=\"number\">10px</span> <span class=\"number\">0</span>,    \t    <span class=\"number\">#fff</span> <span class=\"number\">50px</span> <span class=\"number\">0</span> <span class=\"number\">0</span>,    \t    <span class=\"number\">#fff</span> <span class=\"number\">75px</span> -<span class=\"number\">10px</span> <span class=\"number\">0</span>,    \t    <span class=\"number\">#fff</span> <span class=\"number\">0</span> <span class=\"number\">25px</span> <span class=\"number\">0</span>,    \t    <span class=\"number\">#fff</span> <span class=\"number\">25px</span> <span class=\"number\">15px</span> <span class=\"number\">0</span>,    \t    <span class=\"number\">#fff</span> <span class=\"number\">50px</span> <span class=\"number\">25px</span> <span class=\"number\">0</span>,    \t    <span class=\"number\">#fff</span> <span class=\"number\">75px</span> <span class=\"number\">15px</span> <span class=\"number\">0</span>,    \t    <span class=\"number\">#fff</span> <span class=\"number\">0</span> <span class=\"number\">50px</span> <span class=\"number\">0</span>,    \t    <span class=\"number\">#fff</span> <span class=\"number\">25px</span> <span class=\"number\">40px</span> <span class=\"number\">0</span>,    \t    <span class=\"number\">#fff</span> <span class=\"number\">50px</span> <span class=\"number\">50px</span> <span class=\"number\">0</span>,    \t    <span class=\"number\">#fff</span> <span class=\"number\">75px</span> <span class=\"number\">40px</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"attribute\">-webkit-animation</span>: rainy <span class=\"number\">2s</span> linear infinite;</span><br><span class=\"line\">    <span class=\"attribute\">animation</span>: rainy <span class=\"number\">2s</span> linear infinite;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"雪天\"><a href=\"#雪天\" class=\"headerlink\" title=\"雪天\"></a>雪天</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"weather snowy\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@<span class=\"keyword\">keyframes</span> snowDrop &#123;</span><br><span class=\"line\">  0% &#123;</span><br><span class=\"line\">      <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateY</span>(0);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  100% &#123;</span><br><span class=\"line\">      <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateY</span>(25px);</span><br><span class=\"line\">      <span class=\"attribute\">box-shadow</span>:</span><br><span class=\"line\">      <span class=\"number\">#fff</span> <span class=\"number\">25px</span> -<span class=\"number\">10px</span> <span class=\"number\">0</span>,</span><br><span class=\"line\">      <span class=\"number\">#fff</span> <span class=\"number\">50px</span> <span class=\"number\">0</span> <span class=\"number\">0</span>,</span><br><span class=\"line\">      <span class=\"number\">#fff</span> <span class=\"number\">75px</span> -<span class=\"number\">10px</span> <span class=\"number\">0</span>,</span><br><span class=\"line\">      <span class=\"number\">#fff</span> <span class=\"number\">0</span> <span class=\"number\">25px</span> <span class=\"number\">0</span>,</span><br><span class=\"line\">      <span class=\"number\">#fff</span> <span class=\"number\">25px</span> <span class=\"number\">15px</span> <span class=\"number\">0</span>,</span><br><span class=\"line\">      <span class=\"number\">#fff</span> <span class=\"number\">50px</span> <span class=\"number\">25px</span> <span class=\"number\">0</span>,</span><br><span class=\"line\">      <span class=\"number\">#fff</span> <span class=\"number\">75px</span> <span class=\"number\">15px</span> <span class=\"number\">0</span>,</span><br><span class=\"line\">      <span class=\"built_in\">rgba</span>(255, 255, 255, 0) <span class=\"number\">0</span> <span class=\"number\">50px</span> <span class=\"number\">0</span>,</span><br><span class=\"line\">      <span class=\"built_in\">rgba</span>(255, 255, 255, 0) <span class=\"number\">25px</span> <span class=\"number\">40px</span> <span class=\"number\">0</span>,</span><br><span class=\"line\">      <span class=\"built_in\">rgba</span>(255, 255, 255, 0) <span class=\"number\">50px</span> <span class=\"number\">50px</span> <span class=\"number\">0</span>,</span><br><span class=\"line\">      <span class=\"built_in\">rgba</span>(255, 255, 255, 0) <span class=\"number\">75px</span> <span class=\"number\">40px</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.snowy</span><span class=\"selector-pseudo\">:after</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">content</span>: <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">  <span class=\"attribute\">top</span>:<span class=\"number\">50%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">left</span>: <span class=\"number\">25%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">8px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">8px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"number\">#fff</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">box-shadow</span>:</span><br><span class=\"line\">      <span class=\"number\">#fff</span> <span class=\"number\">25px</span> -<span class=\"number\">10px</span> <span class=\"number\">0</span>,</span><br><span class=\"line\">      <span class=\"number\">#fff</span> <span class=\"number\">50px</span> <span class=\"number\">0</span> <span class=\"number\">0</span>,</span><br><span class=\"line\">      <span class=\"number\">#fff</span> <span class=\"number\">75px</span> -<span class=\"number\">10px</span> <span class=\"number\">0</span>,</span><br><span class=\"line\">      <span class=\"number\">#fff</span> <span class=\"number\">0</span> <span class=\"number\">25px</span> <span class=\"number\">0</span>,</span><br><span class=\"line\">      <span class=\"number\">#fff</span> <span class=\"number\">25px</span> <span class=\"number\">15px</span> <span class=\"number\">0</span>,</span><br><span class=\"line\">      <span class=\"number\">#fff</span> <span class=\"number\">50px</span> <span class=\"number\">25px</span> <span class=\"number\">0</span>,</span><br><span class=\"line\">      <span class=\"number\">#fff</span> <span class=\"number\">75px</span> <span class=\"number\">15px</span> <span class=\"number\">0</span>,</span><br><span class=\"line\">      <span class=\"number\">#fff</span> <span class=\"number\">0</span> <span class=\"number\">50px</span> <span class=\"number\">0</span>,</span><br><span class=\"line\">      <span class=\"number\">#fff</span> <span class=\"number\">25px</span> <span class=\"number\">40px</span> <span class=\"number\">0</span>,</span><br><span class=\"line\">      <span class=\"number\">#fff</span> <span class=\"number\">50px</span> <span class=\"number\">50px</span> <span class=\"number\">0</span>,</span><br><span class=\"line\">      <span class=\"number\">#fff</span> <span class=\"number\">75px</span> <span class=\"number\">40px</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">animation</span>: snowDrop <span class=\"number\">2s</span> linear infinite; </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"github\"><a href=\"#github\" class=\"headerlink\" title=\"github\"></a>github</h3><p><a href=\"https://github.com/xiaosongread/gulp-cli\" target=\"_blank\" rel=\"noopener\">https://github.com/xiaosongread/gulp-cli</a></p>"},{"title":"开发问题记录","date":"2020-06-09T09:24:28.000Z","_content":"\n## h5网页判断微信、小程序环境\n```javascript\n<script src=\"https://res.wx.qq.com/open/js/jweixin-1.3.2.js\"></script>\nexport function isWeChatMiniApp() {\n  const ua = window.navigator.userAgent.toLowerCase();\n  return new Promise((resolve) => {\n    if (ua.indexOf('micromessenger') == -1) {\n      console.log(\"不在微信或者小程序中\")\n      resolve(false);\n    } else {\n      wx.miniProgram.getEnv((res) => {\n        if (res.miniprogram) {\n          console.log(\"在小程序中\")\n          resolve(true);\n        } else {//在微信中\n          console.log(\"在微信中\")\n          resolve(false);\n        }\n      });\n    }\n  });\n}\n```\n\n<!-- more -->\n\n> **在网页内可通过window.__wxjs_environment变量判断是否在小程序环境，建议在WeixinJSBridgeReady回调中使用，也可以使用JSSDK 1.3.2提供的getEnv接口。\nhttps://developers.weixin.qq.com/miniprogram/dev/component/web-view.html\n\n## css2选择器\n1.li~p 选择li元素之后的每一个p元素\n```html\nli~p{\n  font-size: 20px;\n  font-weight: bold;\n}\n<ul>\n  <li>111</li>\n  <p>222</p>\n</ul>\n<p>888</p>\n<li>333</li>\n<div>666</div>\n<p class=\"a\">444</p>\n<p>555</p>\n```\n![blockchain](https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/css2/css2-1.png)\n\n2.div+p 选择所有<strong>紧接着</strong><div>元素之后的<p>元素\n```html\ndiv+p{\n    font-size: 20px;\n    font-weight: bold;\n  } \n<div>\n  <p>111</p>\n</div>\n<div>222</div>\n<p>333</p>\n<i>000</i>\n<p>asd</p>\n```\n![blockchain](https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/css2/css2-2.png)\n\n3.ul>li 选择所有父级是<ul>元素的<li>元素\n```html\nul>li{\n    font-size: 20px;\n    font-weight: bold;\n  } \n<ul>\n  <li>111</li>\n</ul>\n<ul>\n  <div>\n    <li>222</li>\n  </div>\n</ul>\n```\n![blockchain](https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/css2/css2-3.png)\n\n## 记住密码 输入框有黄色背景\n```css\ninput:-webkit-autofill {\n  -webkit-box-shadow: 0 0 0 1000px white inset !important;\n}\n```\n\n## 小程序onshow onload的区别\n> ** 注意：onshow 不管是新打开的页面还是返回的页面，都会执行这个周期函数\n\n## 小程序和h5页面的交互\n\n### 解决问题：微信小程序中嵌套h5网页的交互，相互传递参数的问题\n### 使用条件：\n  客户端 6.7.2 版本开始，navigationStyle: custom 对 <web-view> 组件无效。\n\tweb-view 组件是一个可以用来承载网页的容器，会自动铺满整个小程序页面。个人类型与海外类型的小程序暂不支持使用。\n\t基础库 1.6.4 开始支持，低版本需做兼容处理\n\t兼容方法：https://developers.weixin.qq.com/miniprogram/dev/framework/compatibility.html\n### 使用方法：\n  #### 1.小程序向网页传值\n  小程序内打开网页的话，有时需要向网页内传递参数。可将需要带向网页的值通过拼接参数方式实现，然后再在网页内截取即可\n```html\n\t<!-- 小程序page -->\n\t<web-view src=\"http://×××.html?id=123\"></web-view>\n\t<!-- 网页 a.html-->\n\t<script>\n   \t\t let id = getUrlParam('id'); \n\t</script>\n```\n  #### 2.网页向小程序传值\n  1.通过url和小程序的转发(分享)方法，将需要传给小程序的值当做参数放在当前url上，小程序中通过点击转发即可获取。这种方法缺点是只能在点击转发(分享)时才可传\n```html\nonShareAppMessage: function (options) {\n      let webViewUrl = options.webViewUrl;//web-view当前的网址\n}\n```\n2.另外一种是通过使用微信sdk的postMessage方法，然后小程序web-viewd中的bindmessage方法会在特定时机（小程序后退、组件销毁、分享）触发并收到消息。\n```html\n<!-- 网页 a.html-->\n<script type=\"text/javascript\" src=\"https://res.wx.qq.com/open/js/jweixin-1.3.2.js\"></script>\n// 先postMessage 然后再返回，不然不起作用         \t\t\n<script type=\"text/javascript\">\n// 别的框架找对应的方法             \t\t\nwx.miniProgram.postMessage({ data: {foo: 'bar'}})   wx.miniProgram.navigateBack({delta: 1})         \t\t</script>\n<!-- 小程序page -->\n<web-view bindmessage=\"handleGetMessage\" src=“a.html\"></web-view>\nPage({\n  handleGetMessage: function(e) {\n   console.log(e.target.data)\n  }\n})\n```\n> tips: 如果网页发送了多次消息，在小程序接收的时候会把 data 合并,接受到的是一个数组\n\n#### 跳转链接的传参：    \n```html\nh5网页：\nuni.navigateTo({\n   url: '/pageThi/testDriver/testDriver?a=123',\n})\n小程序页面接受：\nonLoad: function(options){\n  console.log('3b3b3b', options)\n},\n```\n结果：\n![blockchain](https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/css2/css2-4.png)\n\n## 解决 git pull/push 每次都要输入用户名密码的问题\n如果我们git clone的下载代码的时候是连接的https://而不是git@git (ssh)的形式，当我们操作git pull/push到远程的时候，总是提示我们输入账号和密码才能操作成功，频繁的输入账号和密码会很麻烦。\n```hash\ngit bash进入你的项目目录，输入：\ngit config --global credential.helper store\n```\n然后你会在你本地生成一个文本，上边记录你的账号和密码。当然这些你可以不用关心。\n然后你使用上述的命令配置好之后，再操作一次git pull，然后它会提示你输入账号密码，这一次之后就不需要再次输入密码了。","source":"_posts/开发问题记录.md","raw":"---\ntitle: 开发问题记录\ncategories: js-end\ndate: 2020-06-09 17:24:28\ntags: 小程序 css2 git\n---\n\n## h5网页判断微信、小程序环境\n```javascript\n<script src=\"https://res.wx.qq.com/open/js/jweixin-1.3.2.js\"></script>\nexport function isWeChatMiniApp() {\n  const ua = window.navigator.userAgent.toLowerCase();\n  return new Promise((resolve) => {\n    if (ua.indexOf('micromessenger') == -1) {\n      console.log(\"不在微信或者小程序中\")\n      resolve(false);\n    } else {\n      wx.miniProgram.getEnv((res) => {\n        if (res.miniprogram) {\n          console.log(\"在小程序中\")\n          resolve(true);\n        } else {//在微信中\n          console.log(\"在微信中\")\n          resolve(false);\n        }\n      });\n    }\n  });\n}\n```\n\n<!-- more -->\n\n> **在网页内可通过window.__wxjs_environment变量判断是否在小程序环境，建议在WeixinJSBridgeReady回调中使用，也可以使用JSSDK 1.3.2提供的getEnv接口。\nhttps://developers.weixin.qq.com/miniprogram/dev/component/web-view.html\n\n## css2选择器\n1.li~p 选择li元素之后的每一个p元素\n```html\nli~p{\n  font-size: 20px;\n  font-weight: bold;\n}\n<ul>\n  <li>111</li>\n  <p>222</p>\n</ul>\n<p>888</p>\n<li>333</li>\n<div>666</div>\n<p class=\"a\">444</p>\n<p>555</p>\n```\n![blockchain](https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/css2/css2-1.png)\n\n2.div+p 选择所有<strong>紧接着</strong><div>元素之后的<p>元素\n```html\ndiv+p{\n    font-size: 20px;\n    font-weight: bold;\n  } \n<div>\n  <p>111</p>\n</div>\n<div>222</div>\n<p>333</p>\n<i>000</i>\n<p>asd</p>\n```\n![blockchain](https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/css2/css2-2.png)\n\n3.ul>li 选择所有父级是<ul>元素的<li>元素\n```html\nul>li{\n    font-size: 20px;\n    font-weight: bold;\n  } \n<ul>\n  <li>111</li>\n</ul>\n<ul>\n  <div>\n    <li>222</li>\n  </div>\n</ul>\n```\n![blockchain](https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/css2/css2-3.png)\n\n## 记住密码 输入框有黄色背景\n```css\ninput:-webkit-autofill {\n  -webkit-box-shadow: 0 0 0 1000px white inset !important;\n}\n```\n\n## 小程序onshow onload的区别\n> ** 注意：onshow 不管是新打开的页面还是返回的页面，都会执行这个周期函数\n\n## 小程序和h5页面的交互\n\n### 解决问题：微信小程序中嵌套h5网页的交互，相互传递参数的问题\n### 使用条件：\n  客户端 6.7.2 版本开始，navigationStyle: custom 对 <web-view> 组件无效。\n\tweb-view 组件是一个可以用来承载网页的容器，会自动铺满整个小程序页面。个人类型与海外类型的小程序暂不支持使用。\n\t基础库 1.6.4 开始支持，低版本需做兼容处理\n\t兼容方法：https://developers.weixin.qq.com/miniprogram/dev/framework/compatibility.html\n### 使用方法：\n  #### 1.小程序向网页传值\n  小程序内打开网页的话，有时需要向网页内传递参数。可将需要带向网页的值通过拼接参数方式实现，然后再在网页内截取即可\n```html\n\t<!-- 小程序page -->\n\t<web-view src=\"http://×××.html?id=123\"></web-view>\n\t<!-- 网页 a.html-->\n\t<script>\n   \t\t let id = getUrlParam('id'); \n\t</script>\n```\n  #### 2.网页向小程序传值\n  1.通过url和小程序的转发(分享)方法，将需要传给小程序的值当做参数放在当前url上，小程序中通过点击转发即可获取。这种方法缺点是只能在点击转发(分享)时才可传\n```html\nonShareAppMessage: function (options) {\n      let webViewUrl = options.webViewUrl;//web-view当前的网址\n}\n```\n2.另外一种是通过使用微信sdk的postMessage方法，然后小程序web-viewd中的bindmessage方法会在特定时机（小程序后退、组件销毁、分享）触发并收到消息。\n```html\n<!-- 网页 a.html-->\n<script type=\"text/javascript\" src=\"https://res.wx.qq.com/open/js/jweixin-1.3.2.js\"></script>\n// 先postMessage 然后再返回，不然不起作用         \t\t\n<script type=\"text/javascript\">\n// 别的框架找对应的方法             \t\t\nwx.miniProgram.postMessage({ data: {foo: 'bar'}})   wx.miniProgram.navigateBack({delta: 1})         \t\t</script>\n<!-- 小程序page -->\n<web-view bindmessage=\"handleGetMessage\" src=“a.html\"></web-view>\nPage({\n  handleGetMessage: function(e) {\n   console.log(e.target.data)\n  }\n})\n```\n> tips: 如果网页发送了多次消息，在小程序接收的时候会把 data 合并,接受到的是一个数组\n\n#### 跳转链接的传参：    \n```html\nh5网页：\nuni.navigateTo({\n   url: '/pageThi/testDriver/testDriver?a=123',\n})\n小程序页面接受：\nonLoad: function(options){\n  console.log('3b3b3b', options)\n},\n```\n结果：\n![blockchain](https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/css2/css2-4.png)\n\n## 解决 git pull/push 每次都要输入用户名密码的问题\n如果我们git clone的下载代码的时候是连接的https://而不是git@git (ssh)的形式，当我们操作git pull/push到远程的时候，总是提示我们输入账号和密码才能操作成功，频繁的输入账号和密码会很麻烦。\n```hash\ngit bash进入你的项目目录，输入：\ngit config --global credential.helper store\n```\n然后你会在你本地生成一个文本，上边记录你的账号和密码。当然这些你可以不用关心。\n然后你使用上述的命令配置好之后，再操作一次git pull，然后它会提示你输入账号密码，这一次之后就不需要再次输入密码了。","slug":"开发问题记录","published":1,"updated":"2020-07-01T09:12:26.387Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdr00y68002de7zc97kqiwwe","content":"<h2 id=\"h5网页判断微信、小程序环境\"><a href=\"#h5网页判断微信、小程序环境\" class=\"headerlink\" title=\"h5网页判断微信、小程序环境\"></a>h5网页判断微信、小程序环境</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script src=<span class=\"string\">\"https://res.wx.qq.com/open/js/jweixin-1.3.2.js\"</span>&gt;<span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">isWeChatMiniApp</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> ua = <span class=\"built_in\">window</span>.navigator.userAgent.toLowerCase();</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (ua.indexOf(<span class=\"string\">'micromessenger'</span>) == <span class=\"number\">-1</span>) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">\"不在微信或者小程序中\"</span>)</span><br><span class=\"line\">      resolve(<span class=\"literal\">false</span>);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      wx.miniProgram.getEnv(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (res.miniprogram) &#123;</span><br><span class=\"line\">          <span class=\"built_in\">console</span>.log(<span class=\"string\">\"在小程序中\"</span>)</span><br><span class=\"line\">          resolve(<span class=\"literal\">true</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;<span class=\"comment\">//在微信中</span></span><br><span class=\"line\">          <span class=\"built_in\">console</span>.log(<span class=\"string\">\"在微信中\"</span>)</span><br><span class=\"line\">          resolve(<span class=\"literal\">false</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<blockquote>\n<p>**在网页内可通过window.__wxjs_environment变量判断是否在小程序环境，建议在WeixinJSBridgeReady回调中使用，也可以使用JSSDK 1.3.2提供的getEnv接口。<br><a href=\"https://developers.weixin.qq.com/miniprogram/dev/component/web-view.html\" target=\"_blank\" rel=\"noopener\">https://developers.weixin.qq.com/miniprogram/dev/component/web-view.html</a></p>\n</blockquote>\n<h2 id=\"css2选择器\"><a href=\"#css2选择器\" class=\"headerlink\" title=\"css2选择器\"></a>css2选择器</h2><p>1.li~p 选择li元素之后的每一个p元素<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">li~p&#123;</span><br><span class=\"line\">  font-size: 20px;</span><br><span class=\"line\">  font-weight: bold;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>111<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>222<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>888<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>333<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>666<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">class</span>=<span class=\"string\">\"a\"</span>&gt;</span>444<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>555<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/css2/css2-1.png\" alt=\"blockchain\"></p>\n<p>2.div+p 选择所有<strong>紧接着</strong><div>元素之后的<p>元素<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">div+p&#123;</span><br><span class=\"line\">    font-size: 20px;</span><br><span class=\"line\">    font-weight: bold;</span><br><span class=\"line\">  &#125; </span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>111<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>222<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>333<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">i</span>&gt;</span>000<span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>asd<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/css2/css2-2.png\" alt=\"blockchain\"></p>\n<p>3.ul&gt;li 选择所有父级是<ul>元素的<li>元素<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ul&gt;li&#123;</span><br><span class=\"line\">    font-size: 20px;</span><br><span class=\"line\">    font-weight: bold;</span><br><span class=\"line\">  &#125; </span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>111<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>222<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></p>\n<p><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/css2/css2-3.png\" alt=\"blockchain\"></p>\n<h2 id=\"记住密码-输入框有黄色背景\"><a href=\"#记住密码-输入框有黄色背景\" class=\"headerlink\" title=\"记住密码 输入框有黄色背景\"></a>记住密码 输入框有黄色背景</h2><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">input</span><span class=\"selector-pseudo\">:-webkit-autofill</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">-webkit-box-shadow</span>: <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">1000px</span> white inset <span class=\"meta\">!important</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"小程序onshow-onload的区别\"><a href=\"#小程序onshow-onload的区别\" class=\"headerlink\" title=\"小程序onshow onload的区别\"></a>小程序onshow onload的区别</h2><blockquote>\n<p>** 注意：onshow 不管是新打开的页面还是返回的页面，都会执行这个周期函数</p>\n</blockquote>\n<h2 id=\"小程序和h5页面的交互\"><a href=\"#小程序和h5页面的交互\" class=\"headerlink\" title=\"小程序和h5页面的交互\"></a>小程序和h5页面的交互</h2><h3 id=\"解决问题：微信小程序中嵌套h5网页的交互，相互传递参数的问题\"><a href=\"#解决问题：微信小程序中嵌套h5网页的交互，相互传递参数的问题\" class=\"headerlink\" title=\"解决问题：微信小程序中嵌套h5网页的交互，相互传递参数的问题\"></a>解决问题：微信小程序中嵌套h5网页的交互，相互传递参数的问题</h3><h3 id=\"使用条件：\"><a href=\"#使用条件：\" class=\"headerlink\" title=\"使用条件：\"></a>使用条件：</h3><p>  客户端 6.7.2 版本开始，navigationStyle: custom 对 <web-view> 组件无效。<br>    web-view 组件是一个可以用来承载网页的容器，会自动铺满整个小程序页面。个人类型与海外类型的小程序暂不支持使用。<br>    基础库 1.6.4 开始支持，低版本需做兼容处理<br>    兼容方法：<a href=\"https://developers.weixin.qq.com/miniprogram/dev/framework/compatibility.html\" target=\"_blank\" rel=\"noopener\">https://developers.weixin.qq.com/miniprogram/dev/framework/compatibility.html</a></web-view></p>\n<h3 id=\"使用方法：\"><a href=\"#使用方法：\" class=\"headerlink\" title=\"使用方法：\"></a>使用方法：</h3><h4 id=\"1-小程序向网页传值\"><a href=\"#1-小程序向网页传值\" class=\"headerlink\" title=\"1.小程序向网页传值\"></a>1.小程序向网页传值</h4><p>  小程序内打开网页的话，有时需要向网页内传递参数。可将需要带向网页的值通过拼接参数方式实现，然后再在网页内截取即可<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 小程序page --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">web-view</span> <span class=\"attr\">src</span>=<span class=\"string\">\"http://×××.html?id=123\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">web-view</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 网页 a.html--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\">  \t\t <span class=\"keyword\">let</span> id = getUrlParam(<span class=\"string\">'id'</span>); </span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<h4 id=\"2-网页向小程序传值\"><a href=\"#2-网页向小程序传值\" class=\"headerlink\" title=\"2.网页向小程序传值\"></a>2.网页向小程序传值</h4><p>  1.通过url和小程序的转发(分享)方法，将需要传给小程序的值当做参数放在当前url上，小程序中通过点击转发即可获取。这种方法缺点是只能在点击转发(分享)时才可传<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">onShareAppMessage: function (options) &#123;</span><br><span class=\"line\">      let webViewUrl = options.webViewUrl;//web-view当前的网址</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>2.另外一种是通过使用微信sdk的postMessage方法，然后小程序web-viewd中的bindmessage方法会在特定时机（小程序后退、组件销毁、分享）触发并收到消息。<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 网页 a.html--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span> <span class=\"attr\">src</span>=<span class=\"string\">\"https://res.wx.qq.com/open/js/jweixin-1.3.2.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">// 先postMessage 然后再返回，不然不起作用         \t\t</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"comment\">// 别的框架找对应的方法</span>             \t\t</span></span><br><span class=\"line\"><span class=\"javascript\">wx.miniProgram.postMessage(&#123; <span class=\"attr\">data</span>: &#123;<span class=\"attr\">foo</span>: <span class=\"string\">'bar'</span>&#125;&#125;)   wx.miniProgram.navigateBack(&#123;<span class=\"attr\">delta</span>: <span class=\"number\">1</span>&#125;)         \t\t</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 小程序page --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">web-view</span> <span class=\"attr\">bindmessage</span>=<span class=\"string\">\"handleGetMessage\"</span> <span class=\"attr\">src</span>=<span class=\"string\">“a.html</span>\"&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">web-view</span>&gt;</span></span><br><span class=\"line\">Page(&#123;</span><br><span class=\"line\">  handleGetMessage: function(e) &#123;</span><br><span class=\"line\">   console.log(e.target.data)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>tips: 如果网页发送了多次消息，在小程序接收的时候会把 data 合并,接受到的是一个数组</p>\n</blockquote>\n<h4 id=\"跳转链接的传参：\"><a href=\"#跳转链接的传参：\" class=\"headerlink\" title=\"跳转链接的传参：\"></a>跳转链接的传参：</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">h5网页：</span><br><span class=\"line\">uni.navigateTo(&#123;</span><br><span class=\"line\">   url: '/pageThi/testDriver/testDriver?a=123',</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">小程序页面接受：</span><br><span class=\"line\">onLoad: function(options)&#123;</span><br><span class=\"line\">  console.log('3b3b3b', options)</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<p>结果：<br><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/css2/css2-4.png\" alt=\"blockchain\"></p>\n<h2 id=\"解决-git-pull-push-每次都要输入用户名密码的问题\"><a href=\"#解决-git-pull-push-每次都要输入用户名密码的问题\" class=\"headerlink\" title=\"解决 git pull/push 每次都要输入用户名密码的问题\"></a>解决 git pull/push 每次都要输入用户名密码的问题</h2><p>如果我们git clone的下载代码的时候是连接的https://而不是git@git (ssh)的形式，当我们操作git pull/push到远程的时候，总是提示我们输入账号和密码才能操作成功，频繁的输入账号和密码会很麻烦。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git bash进入你的项目目录，输入：</span><br><span class=\"line\">git config --global credential.helper store</span><br></pre></td></tr></table></figure></p>\n<p>然后你会在你本地生成一个文本，上边记录你的账号和密码。当然这些你可以不用关心。<br>然后你使用上述的命令配置好之后，再操作一次git pull，然后它会提示你输入账号密码，这一次之后就不需要再次输入密码了。</p>\n</div></p>","site":{"data":{}},"excerpt":"<h2 id=\"h5网页判断微信、小程序环境\"><a href=\"#h5网页判断微信、小程序环境\" class=\"headerlink\" title=\"h5网页判断微信、小程序环境\"></a>h5网页判断微信、小程序环境</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script src=<span class=\"string\">\"https://res.wx.qq.com/open/js/jweixin-1.3.2.js\"</span>&gt;<span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">isWeChatMiniApp</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> ua = <span class=\"built_in\">window</span>.navigator.userAgent.toLowerCase();</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (ua.indexOf(<span class=\"string\">'micromessenger'</span>) == <span class=\"number\">-1</span>) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">\"不在微信或者小程序中\"</span>)</span><br><span class=\"line\">      resolve(<span class=\"literal\">false</span>);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      wx.miniProgram.getEnv(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (res.miniprogram) &#123;</span><br><span class=\"line\">          <span class=\"built_in\">console</span>.log(<span class=\"string\">\"在小程序中\"</span>)</span><br><span class=\"line\">          resolve(<span class=\"literal\">true</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;<span class=\"comment\">//在微信中</span></span><br><span class=\"line\">          <span class=\"built_in\">console</span>.log(<span class=\"string\">\"在微信中\"</span>)</span><br><span class=\"line\">          resolve(<span class=\"literal\">false</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","more":"<blockquote>\n<p>**在网页内可通过window.__wxjs_environment变量判断是否在小程序环境，建议在WeixinJSBridgeReady回调中使用，也可以使用JSSDK 1.3.2提供的getEnv接口。<br><a href=\"https://developers.weixin.qq.com/miniprogram/dev/component/web-view.html\" target=\"_blank\" rel=\"noopener\">https://developers.weixin.qq.com/miniprogram/dev/component/web-view.html</a></p>\n</blockquote>\n<h2 id=\"css2选择器\"><a href=\"#css2选择器\" class=\"headerlink\" title=\"css2选择器\"></a>css2选择器</h2><p>1.li~p 选择li元素之后的每一个p元素<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">li~p&#123;</span><br><span class=\"line\">  font-size: 20px;</span><br><span class=\"line\">  font-weight: bold;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>111<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>222<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>888<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>333<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>666<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">class</span>=<span class=\"string\">\"a\"</span>&gt;</span>444<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>555<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/css2/css2-1.png\" alt=\"blockchain\"></p>\n<p>2.div+p 选择所有<strong>紧接着</strong><div>元素之后的<p>元素<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">div+p&#123;</span><br><span class=\"line\">    font-size: 20px;</span><br><span class=\"line\">    font-weight: bold;</span><br><span class=\"line\">  &#125; </span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>111<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>222<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>333<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">i</span>&gt;</span>000<span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>asd<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/css2/css2-2.png\" alt=\"blockchain\"></p>\n<p>3.ul&gt;li 选择所有父级是<ul>元素的<li>元素<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ul&gt;li&#123;</span><br><span class=\"line\">    font-size: 20px;</span><br><span class=\"line\">    font-weight: bold;</span><br><span class=\"line\">  &#125; </span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>111<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>222<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></p>\n<p><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/css2/css2-3.png\" alt=\"blockchain\"></p>\n<h2 id=\"记住密码-输入框有黄色背景\"><a href=\"#记住密码-输入框有黄色背景\" class=\"headerlink\" title=\"记住密码 输入框有黄色背景\"></a>记住密码 输入框有黄色背景</h2><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">input</span><span class=\"selector-pseudo\">:-webkit-autofill</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">-webkit-box-shadow</span>: <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">1000px</span> white inset <span class=\"meta\">!important</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"小程序onshow-onload的区别\"><a href=\"#小程序onshow-onload的区别\" class=\"headerlink\" title=\"小程序onshow onload的区别\"></a>小程序onshow onload的区别</h2><blockquote>\n<p>** 注意：onshow 不管是新打开的页面还是返回的页面，都会执行这个周期函数</p>\n</blockquote>\n<h2 id=\"小程序和h5页面的交互\"><a href=\"#小程序和h5页面的交互\" class=\"headerlink\" title=\"小程序和h5页面的交互\"></a>小程序和h5页面的交互</h2><h3 id=\"解决问题：微信小程序中嵌套h5网页的交互，相互传递参数的问题\"><a href=\"#解决问题：微信小程序中嵌套h5网页的交互，相互传递参数的问题\" class=\"headerlink\" title=\"解决问题：微信小程序中嵌套h5网页的交互，相互传递参数的问题\"></a>解决问题：微信小程序中嵌套h5网页的交互，相互传递参数的问题</h3><h3 id=\"使用条件：\"><a href=\"#使用条件：\" class=\"headerlink\" title=\"使用条件：\"></a>使用条件：</h3><p>  客户端 6.7.2 版本开始，navigationStyle: custom 对 <web-view> 组件无效。<br>    web-view 组件是一个可以用来承载网页的容器，会自动铺满整个小程序页面。个人类型与海外类型的小程序暂不支持使用。<br>    基础库 1.6.4 开始支持，低版本需做兼容处理<br>    兼容方法：<a href=\"https://developers.weixin.qq.com/miniprogram/dev/framework/compatibility.html\" target=\"_blank\" rel=\"noopener\">https://developers.weixin.qq.com/miniprogram/dev/framework/compatibility.html</a></web-view></p>\n<h3 id=\"使用方法：\"><a href=\"#使用方法：\" class=\"headerlink\" title=\"使用方法：\"></a>使用方法：</h3><h4 id=\"1-小程序向网页传值\"><a href=\"#1-小程序向网页传值\" class=\"headerlink\" title=\"1.小程序向网页传值\"></a>1.小程序向网页传值</h4><p>  小程序内打开网页的话，有时需要向网页内传递参数。可将需要带向网页的值通过拼接参数方式实现，然后再在网页内截取即可<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 小程序page --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">web-view</span> <span class=\"attr\">src</span>=<span class=\"string\">\"http://×××.html?id=123\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">web-view</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 网页 a.html--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\">  \t\t <span class=\"keyword\">let</span> id = getUrlParam(<span class=\"string\">'id'</span>); </span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<h4 id=\"2-网页向小程序传值\"><a href=\"#2-网页向小程序传值\" class=\"headerlink\" title=\"2.网页向小程序传值\"></a>2.网页向小程序传值</h4><p>  1.通过url和小程序的转发(分享)方法，将需要传给小程序的值当做参数放在当前url上，小程序中通过点击转发即可获取。这种方法缺点是只能在点击转发(分享)时才可传<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">onShareAppMessage: function (options) &#123;</span><br><span class=\"line\">      let webViewUrl = options.webViewUrl;//web-view当前的网址</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>2.另外一种是通过使用微信sdk的postMessage方法，然后小程序web-viewd中的bindmessage方法会在特定时机（小程序后退、组件销毁、分享）触发并收到消息。<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 网页 a.html--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span> <span class=\"attr\">src</span>=<span class=\"string\">\"https://res.wx.qq.com/open/js/jweixin-1.3.2.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">// 先postMessage 然后再返回，不然不起作用         \t\t</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"comment\">// 别的框架找对应的方法</span>             \t\t</span></span><br><span class=\"line\"><span class=\"javascript\">wx.miniProgram.postMessage(&#123; <span class=\"attr\">data</span>: &#123;<span class=\"attr\">foo</span>: <span class=\"string\">'bar'</span>&#125;&#125;)   wx.miniProgram.navigateBack(&#123;<span class=\"attr\">delta</span>: <span class=\"number\">1</span>&#125;)         \t\t</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 小程序page --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">web-view</span> <span class=\"attr\">bindmessage</span>=<span class=\"string\">\"handleGetMessage\"</span> <span class=\"attr\">src</span>=<span class=\"string\">“a.html</span>\"&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">web-view</span>&gt;</span></span><br><span class=\"line\">Page(&#123;</span><br><span class=\"line\">  handleGetMessage: function(e) &#123;</span><br><span class=\"line\">   console.log(e.target.data)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>tips: 如果网页发送了多次消息，在小程序接收的时候会把 data 合并,接受到的是一个数组</p>\n</blockquote>\n<h4 id=\"跳转链接的传参：\"><a href=\"#跳转链接的传参：\" class=\"headerlink\" title=\"跳转链接的传参：\"></a>跳转链接的传参：</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">h5网页：</span><br><span class=\"line\">uni.navigateTo(&#123;</span><br><span class=\"line\">   url: '/pageThi/testDriver/testDriver?a=123',</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">小程序页面接受：</span><br><span class=\"line\">onLoad: function(options)&#123;</span><br><span class=\"line\">  console.log('3b3b3b', options)</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<p>结果：<br><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/css2/css2-4.png\" alt=\"blockchain\"></p>\n<h2 id=\"解决-git-pull-push-每次都要输入用户名密码的问题\"><a href=\"#解决-git-pull-push-每次都要输入用户名密码的问题\" class=\"headerlink\" title=\"解决 git pull/push 每次都要输入用户名密码的问题\"></a>解决 git pull/push 每次都要输入用户名密码的问题</h2><p>如果我们git clone的下载代码的时候是连接的https://而不是git@git (ssh)的形式，当我们操作git pull/push到远程的时候，总是提示我们输入账号和密码才能操作成功，频繁的输入账号和密码会很麻烦。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git bash进入你的项目目录，输入：</span><br><span class=\"line\">git config --global credential.helper store</span><br></pre></td></tr></table></figure></p>\n<p>然后你会在你本地生成一个文本，上边记录你的账号和密码。当然这些你可以不用关心。<br>然后你使用上述的命令配置好之后，再操作一次git pull，然后它会提示你输入账号密码，这一次之后就不需要再次输入密码了。</p>\n</div></p>"},{"title":"微信小程序-生成微信头像","date":"2019-09-24T09:35:01.000Z","_content":"\"请给我一面国旗@微信官方\"朋友圈刷屏了，只想说一句：\"腾讯的产品真牛逼！！！\"\n\n![blockchain](https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/canvas.gif)\n\n<!-- more -->\n\n```wxml\n<view>\n  <view class='canvasBox'>\n   <!--  -->\n    <canvas class='share-canvas' canvas-id=\"share_canvas\" style=\"width:{{canvasW}}px;height:{{canvasH}}px\"></canvas>\n  </view>\n  <view class='btnBox'>\n    <view bindtap=\"setHeader\" data-type=\"getImage\">选择头像</view>\n    <view bindtap='saveImage'>导出头像</view>\n  </view>\n</view>\n```\n\n```wxss\n.share-canvas{\n  /* width: 300px;\n  height: 300px; */\n  border-radius: 15px;\n  overflow: hidden;\n  margin: 20px 0 0 20px;\n  background: #ddd;\n}\n```\n```javascript\nvar app = getApp();\nPage({\n  data: {\n    decorationImage: '../img/1.jpg', // 右下角装饰图片\n    canvasW: 300,\n    canvasH: 300,\n    canvasWidth: 250,\n    canvasHeight: 250,\n    smallImage: 74,\n    marginWidth: 25,\n    headerImage: ''\n  },\n  onReady: function () {\n    this.drawCanvas()\n  },\n  // 获取相册头像图片\n  setHeader() {\n    let that = this\n    wx.chooseImage({\n      count: 1, // 默认9\n      sizeType: 'original', // 可以指定是原图还是压缩图，默认二者都有\n      sourceType: 'album', // 可以指定来源是相册还是相机，默认二者都有\n      success: function (res) {\n        // 返回选定照片的本地文件路径列表，tempFilePath可以作为img标签的src属性显示图片\n        var tempFilePaths = res.tempFilePaths\n        console.log(tempFilePaths)\n        that.setData({\n          headerImage: tempFilePaths[0]\n        });\n        that.drawCanvas()\n      }\n    })\n  },\n  // 绘制圆角矩形\n  roundRectColor: function (context, x, y, w, h, r) {  //绘制圆角矩形（纯色填充）\n    context.save();\n    context.fillStyle = \"#fff\";\n    context.strokeStyle = '#fff';\n    context.lineJoin = 'round';  //交点设置成圆角\n    context.lineWidth = r;\n    context.strokeRect(x + r / 2, y + r / 2, w - r, h - r);\n    context.fillRect(x + r, y + r, w - r * 2, h - r * 2);\n    context.stroke();\n    context.closePath();\n  },\n  // 渲染画布内容\n  drawCanvas: function () {\n    var that = this;\n    // 拿到canvas context\n    let ctx = wx.createCanvasContext('share_canvas');\n    this.roundRectColor(ctx, that.data.marginWidth, that.data.marginWidth, this.data.canvasWidth, this.data.canvasHeight, 30)\n    // ctx.setFillStyle('white')\n    // ctx.fillRect(0, 0, this.data.canvasWidth, this.data.canvasHeight);\n    if (that.data.headerImage) {\n      ctx.drawImage(that.data.headerImage, 35, 35, this.data.canvasWidth - 20, this.data.canvasHeight - 20)\n    }\n    let x = this.data.canvasWidth - (that.data.smallImage - 20)\n    let y = this.data.canvasWidth - (that.data.smallImage - 20)\n    ctx.drawImage(this.data.decorationImage, x, y, that.data.smallImage, that.data.smallImage)\n    ctx.draw();\n  },\n  // 保存图片到本地\n  saveImage: function () {\n    wx.showLoading({\n      title: '正在保存图片..',\n    });\n    let that = this;\n    wx.canvasToTempFilePath({\n      x: that.data.marginWidth, // 导出的位置\n      y: that.data.marginWidth,\n      fileType: 'jpg', // 导出图片的格式\n      width: that.data.canvasW - (that.data.marginWidth * 2), // 导出之前图片的尺寸\n      height: that.data.canvasH - (that.data.marginWidth * 2), // 导出之前图片的尺寸\n      destWidth: 960, // 导出之后图片的尺寸\n      destHeight: 960, // 导出之后图片的尺寸\n      canvasId: 'share_canvas',\n      success: function (res) {\n        wx.saveImageToPhotosAlbum({\n          filePath: res.tempFilePath,\n          success(res) {\n            console.log(res);\n            wx.showToast({\n              title: '保存到相册成功',\n              duration: 1500,\n            })\n          },\n          fail(res) {\n            console.log(res)\n            wx.showToast({\n              title: '保存到相册失败',\n              icon: 'fail'\n            })\n          },\n          complete(res) {\n            console.log(res)\n          }\n        })\n      }\n    })\n  }\n```\n[git地址: ](https://github.com/xiaosongread/minggedou)","source":"_posts/微信小程序生成微信头像.md","raw":"---\ntitle: 微信小程序-生成微信头像\ncategories: js-end\ndate: 2019-09-24 17:35:01\ntags: 微信小程序 canvas\n---\n\"请给我一面国旗@微信官方\"朋友圈刷屏了，只想说一句：\"腾讯的产品真牛逼！！！\"\n\n![blockchain](https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/canvas.gif)\n\n<!-- more -->\n\n```wxml\n<view>\n  <view class='canvasBox'>\n   <!--  -->\n    <canvas class='share-canvas' canvas-id=\"share_canvas\" style=\"width:{{canvasW}}px;height:{{canvasH}}px\"></canvas>\n  </view>\n  <view class='btnBox'>\n    <view bindtap=\"setHeader\" data-type=\"getImage\">选择头像</view>\n    <view bindtap='saveImage'>导出头像</view>\n  </view>\n</view>\n```\n\n```wxss\n.share-canvas{\n  /* width: 300px;\n  height: 300px; */\n  border-radius: 15px;\n  overflow: hidden;\n  margin: 20px 0 0 20px;\n  background: #ddd;\n}\n```\n```javascript\nvar app = getApp();\nPage({\n  data: {\n    decorationImage: '../img/1.jpg', // 右下角装饰图片\n    canvasW: 300,\n    canvasH: 300,\n    canvasWidth: 250,\n    canvasHeight: 250,\n    smallImage: 74,\n    marginWidth: 25,\n    headerImage: ''\n  },\n  onReady: function () {\n    this.drawCanvas()\n  },\n  // 获取相册头像图片\n  setHeader() {\n    let that = this\n    wx.chooseImage({\n      count: 1, // 默认9\n      sizeType: 'original', // 可以指定是原图还是压缩图，默认二者都有\n      sourceType: 'album', // 可以指定来源是相册还是相机，默认二者都有\n      success: function (res) {\n        // 返回选定照片的本地文件路径列表，tempFilePath可以作为img标签的src属性显示图片\n        var tempFilePaths = res.tempFilePaths\n        console.log(tempFilePaths)\n        that.setData({\n          headerImage: tempFilePaths[0]\n        });\n        that.drawCanvas()\n      }\n    })\n  },\n  // 绘制圆角矩形\n  roundRectColor: function (context, x, y, w, h, r) {  //绘制圆角矩形（纯色填充）\n    context.save();\n    context.fillStyle = \"#fff\";\n    context.strokeStyle = '#fff';\n    context.lineJoin = 'round';  //交点设置成圆角\n    context.lineWidth = r;\n    context.strokeRect(x + r / 2, y + r / 2, w - r, h - r);\n    context.fillRect(x + r, y + r, w - r * 2, h - r * 2);\n    context.stroke();\n    context.closePath();\n  },\n  // 渲染画布内容\n  drawCanvas: function () {\n    var that = this;\n    // 拿到canvas context\n    let ctx = wx.createCanvasContext('share_canvas');\n    this.roundRectColor(ctx, that.data.marginWidth, that.data.marginWidth, this.data.canvasWidth, this.data.canvasHeight, 30)\n    // ctx.setFillStyle('white')\n    // ctx.fillRect(0, 0, this.data.canvasWidth, this.data.canvasHeight);\n    if (that.data.headerImage) {\n      ctx.drawImage(that.data.headerImage, 35, 35, this.data.canvasWidth - 20, this.data.canvasHeight - 20)\n    }\n    let x = this.data.canvasWidth - (that.data.smallImage - 20)\n    let y = this.data.canvasWidth - (that.data.smallImage - 20)\n    ctx.drawImage(this.data.decorationImage, x, y, that.data.smallImage, that.data.smallImage)\n    ctx.draw();\n  },\n  // 保存图片到本地\n  saveImage: function () {\n    wx.showLoading({\n      title: '正在保存图片..',\n    });\n    let that = this;\n    wx.canvasToTempFilePath({\n      x: that.data.marginWidth, // 导出的位置\n      y: that.data.marginWidth,\n      fileType: 'jpg', // 导出图片的格式\n      width: that.data.canvasW - (that.data.marginWidth * 2), // 导出之前图片的尺寸\n      height: that.data.canvasH - (that.data.marginWidth * 2), // 导出之前图片的尺寸\n      destWidth: 960, // 导出之后图片的尺寸\n      destHeight: 960, // 导出之后图片的尺寸\n      canvasId: 'share_canvas',\n      success: function (res) {\n        wx.saveImageToPhotosAlbum({\n          filePath: res.tempFilePath,\n          success(res) {\n            console.log(res);\n            wx.showToast({\n              title: '保存到相册成功',\n              duration: 1500,\n            })\n          },\n          fail(res) {\n            console.log(res)\n            wx.showToast({\n              title: '保存到相册失败',\n              icon: 'fail'\n            })\n          },\n          complete(res) {\n            console.log(res)\n          }\n        })\n      }\n    })\n  }\n```\n[git地址: ](https://github.com/xiaosongread/minggedou)","slug":"微信小程序生成微信头像","published":1,"updated":"2020-07-01T09:12:26.387Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdr00y69002ge7zcugnqmo0q","content":"<p>“请给我一面国旗@微信官方”朋友圈刷屏了，只想说一句：”腾讯的产品真牛逼！！！”</p>\n<p><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/canvas.gif\" alt=\"blockchain\"></p>\n<a id=\"more\"></a>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;view&gt;</span><br><span class=\"line\">  &lt;view class=&apos;canvasBox&apos;&gt;</span><br><span class=\"line\">   &lt;!--  --&gt;</span><br><span class=\"line\">    &lt;canvas class=&apos;share-canvas&apos; canvas-id=&quot;share_canvas&quot; style=&quot;width:&#123;&#123;canvasW&#125;&#125;px;height:&#123;&#123;canvasH&#125;&#125;px&quot;&gt;&lt;/canvas&gt;</span><br><span class=\"line\">  &lt;/view&gt;</span><br><span class=\"line\">  &lt;view class=&apos;btnBox&apos;&gt;</span><br><span class=\"line\">    &lt;view bindtap=&quot;setHeader&quot; data-type=&quot;getImage&quot;&gt;选择头像&lt;/view&gt;</span><br><span class=\"line\">    &lt;view bindtap=&apos;saveImage&apos;&gt;导出头像&lt;/view&gt;</span><br><span class=\"line\">  &lt;/view&gt;</span><br><span class=\"line\">&lt;/view&gt;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.share-canvas&#123;</span><br><span class=\"line\">  /* width: 300px;</span><br><span class=\"line\">  height: 300px; */</span><br><span class=\"line\">  border-radius: 15px;</span><br><span class=\"line\">  overflow: hidden;</span><br><span class=\"line\">  margin: 20px 0 0 20px;</span><br><span class=\"line\">  background: #ddd;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> app = getApp();</span><br><span class=\"line\">Page(&#123;</span><br><span class=\"line\">  data: &#123;</span><br><span class=\"line\">    decorationImage: <span class=\"string\">'../img/1.jpg'</span>, <span class=\"comment\">// 右下角装饰图片</span></span><br><span class=\"line\">    canvasW: <span class=\"number\">300</span>,</span><br><span class=\"line\">    canvasH: <span class=\"number\">300</span>,</span><br><span class=\"line\">    canvasWidth: <span class=\"number\">250</span>,</span><br><span class=\"line\">    canvasHeight: <span class=\"number\">250</span>,</span><br><span class=\"line\">    smallImage: <span class=\"number\">74</span>,</span><br><span class=\"line\">    marginWidth: <span class=\"number\">25</span>,</span><br><span class=\"line\">    headerImage: <span class=\"string\">''</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  onReady: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.drawCanvas()</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">// 获取相册头像图片</span></span><br><span class=\"line\">  setHeader() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> that = <span class=\"keyword\">this</span></span><br><span class=\"line\">    wx.chooseImage(&#123;</span><br><span class=\"line\">      count: <span class=\"number\">1</span>, <span class=\"comment\">// 默认9</span></span><br><span class=\"line\">      sizeType: <span class=\"string\">'original'</span>, <span class=\"comment\">// 可以指定是原图还是压缩图，默认二者都有</span></span><br><span class=\"line\">      sourceType: <span class=\"string\">'album'</span>, <span class=\"comment\">// 可以指定来源是相册还是相机，默认二者都有</span></span><br><span class=\"line\">      success: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">res</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 返回选定照片的本地文件路径列表，tempFilePath可以作为img标签的src属性显示图片</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> tempFilePaths = res.tempFilePaths</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(tempFilePaths)</span><br><span class=\"line\">        that.setData(&#123;</span><br><span class=\"line\">          headerImage: tempFilePaths[<span class=\"number\">0</span>]</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        that.drawCanvas()</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">// 绘制圆角矩形</span></span><br><span class=\"line\">  roundRectColor: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">context, x, y, w, h, r</span>) </span>&#123;  <span class=\"comment\">//绘制圆角矩形（纯色填充）</span></span><br><span class=\"line\">    context.save();</span><br><span class=\"line\">    context.fillStyle = <span class=\"string\">\"#fff\"</span>;</span><br><span class=\"line\">    context.strokeStyle = <span class=\"string\">'#fff'</span>;</span><br><span class=\"line\">    context.lineJoin = <span class=\"string\">'round'</span>;  <span class=\"comment\">//交点设置成圆角</span></span><br><span class=\"line\">    context.lineWidth = r;</span><br><span class=\"line\">    context.strokeRect(x + r / <span class=\"number\">2</span>, y + r / <span class=\"number\">2</span>, w - r, h - r);</span><br><span class=\"line\">    context.fillRect(x + r, y + r, w - r * <span class=\"number\">2</span>, h - r * <span class=\"number\">2</span>);</span><br><span class=\"line\">    context.stroke();</span><br><span class=\"line\">    context.closePath();</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">// 渲染画布内容</span></span><br><span class=\"line\">  drawCanvas: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"keyword\">this</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 拿到canvas context</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> ctx = wx.createCanvasContext(<span class=\"string\">'share_canvas'</span>);</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.roundRectColor(ctx, that.data.marginWidth, that.data.marginWidth, <span class=\"keyword\">this</span>.data.canvasWidth, <span class=\"keyword\">this</span>.data.canvasHeight, <span class=\"number\">30</span>)</span><br><span class=\"line\">    <span class=\"comment\">// ctx.setFillStyle('white')</span></span><br><span class=\"line\">    <span class=\"comment\">// ctx.fillRect(0, 0, this.data.canvasWidth, this.data.canvasHeight);</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (that.data.headerImage) &#123;</span><br><span class=\"line\">      ctx.drawImage(that.data.headerImage, <span class=\"number\">35</span>, <span class=\"number\">35</span>, <span class=\"keyword\">this</span>.data.canvasWidth - <span class=\"number\">20</span>, <span class=\"keyword\">this</span>.data.canvasHeight - <span class=\"number\">20</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> x = <span class=\"keyword\">this</span>.data.canvasWidth - (that.data.smallImage - <span class=\"number\">20</span>)</span><br><span class=\"line\">    <span class=\"keyword\">let</span> y = <span class=\"keyword\">this</span>.data.canvasWidth - (that.data.smallImage - <span class=\"number\">20</span>)</span><br><span class=\"line\">    ctx.drawImage(<span class=\"keyword\">this</span>.data.decorationImage, x, y, that.data.smallImage, that.data.smallImage)</span><br><span class=\"line\">    ctx.draw();</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">// 保存图片到本地</span></span><br><span class=\"line\">  saveImage: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    wx.showLoading(&#123;</span><br><span class=\"line\">      title: <span class=\"string\">'正在保存图片..'</span>,</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    <span class=\"keyword\">let</span> that = <span class=\"keyword\">this</span>;</span><br><span class=\"line\">    wx.canvasToTempFilePath(&#123;</span><br><span class=\"line\">      x: that.data.marginWidth, <span class=\"comment\">// 导出的位置</span></span><br><span class=\"line\">      y: that.data.marginWidth,</span><br><span class=\"line\">      fileType: <span class=\"string\">'jpg'</span>, <span class=\"comment\">// 导出图片的格式</span></span><br><span class=\"line\">      width: that.data.canvasW - (that.data.marginWidth * <span class=\"number\">2</span>), <span class=\"comment\">// 导出之前图片的尺寸</span></span><br><span class=\"line\">      height: that.data.canvasH - (that.data.marginWidth * <span class=\"number\">2</span>), <span class=\"comment\">// 导出之前图片的尺寸</span></span><br><span class=\"line\">      destWidth: <span class=\"number\">960</span>, <span class=\"comment\">// 导出之后图片的尺寸</span></span><br><span class=\"line\">      destHeight: <span class=\"number\">960</span>, <span class=\"comment\">// 导出之后图片的尺寸</span></span><br><span class=\"line\">      canvasId: <span class=\"string\">'share_canvas'</span>,</span><br><span class=\"line\">      success: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">res</span>) </span>&#123;</span><br><span class=\"line\">        wx.saveImageToPhotosAlbum(&#123;</span><br><span class=\"line\">          filePath: res.tempFilePath,</span><br><span class=\"line\">          success(res) &#123;</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(res);</span><br><span class=\"line\">            wx.showToast(&#123;</span><br><span class=\"line\">              title: <span class=\"string\">'保存到相册成功'</span>,</span><br><span class=\"line\">              duration: <span class=\"number\">1500</span>,</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          fail(res) &#123;</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(res)</span><br><span class=\"line\">            wx.showToast(&#123;</span><br><span class=\"line\">              title: <span class=\"string\">'保存到相册失败'</span>,</span><br><span class=\"line\">              icon: <span class=\"string\">'fail'</span></span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          complete(res) &#123;</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(res)</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://github.com/xiaosongread/minggedou\" target=\"_blank\" rel=\"noopener\">git地址: </a></p>\n","site":{"data":{}},"excerpt":"<p>“请给我一面国旗@微信官方”朋友圈刷屏了，只想说一句：”腾讯的产品真牛逼！！！”</p>\n<p><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/canvas.gif\" alt=\"blockchain\"></p>","more":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;view&gt;</span><br><span class=\"line\">  &lt;view class=&apos;canvasBox&apos;&gt;</span><br><span class=\"line\">   &lt;!--  --&gt;</span><br><span class=\"line\">    &lt;canvas class=&apos;share-canvas&apos; canvas-id=&quot;share_canvas&quot; style=&quot;width:&#123;&#123;canvasW&#125;&#125;px;height:&#123;&#123;canvasH&#125;&#125;px&quot;&gt;&lt;/canvas&gt;</span><br><span class=\"line\">  &lt;/view&gt;</span><br><span class=\"line\">  &lt;view class=&apos;btnBox&apos;&gt;</span><br><span class=\"line\">    &lt;view bindtap=&quot;setHeader&quot; data-type=&quot;getImage&quot;&gt;选择头像&lt;/view&gt;</span><br><span class=\"line\">    &lt;view bindtap=&apos;saveImage&apos;&gt;导出头像&lt;/view&gt;</span><br><span class=\"line\">  &lt;/view&gt;</span><br><span class=\"line\">&lt;/view&gt;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.share-canvas&#123;</span><br><span class=\"line\">  /* width: 300px;</span><br><span class=\"line\">  height: 300px; */</span><br><span class=\"line\">  border-radius: 15px;</span><br><span class=\"line\">  overflow: hidden;</span><br><span class=\"line\">  margin: 20px 0 0 20px;</span><br><span class=\"line\">  background: #ddd;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> app = getApp();</span><br><span class=\"line\">Page(&#123;</span><br><span class=\"line\">  data: &#123;</span><br><span class=\"line\">    decorationImage: <span class=\"string\">'../img/1.jpg'</span>, <span class=\"comment\">// 右下角装饰图片</span></span><br><span class=\"line\">    canvasW: <span class=\"number\">300</span>,</span><br><span class=\"line\">    canvasH: <span class=\"number\">300</span>,</span><br><span class=\"line\">    canvasWidth: <span class=\"number\">250</span>,</span><br><span class=\"line\">    canvasHeight: <span class=\"number\">250</span>,</span><br><span class=\"line\">    smallImage: <span class=\"number\">74</span>,</span><br><span class=\"line\">    marginWidth: <span class=\"number\">25</span>,</span><br><span class=\"line\">    headerImage: <span class=\"string\">''</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  onReady: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.drawCanvas()</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">// 获取相册头像图片</span></span><br><span class=\"line\">  setHeader() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> that = <span class=\"keyword\">this</span></span><br><span class=\"line\">    wx.chooseImage(&#123;</span><br><span class=\"line\">      count: <span class=\"number\">1</span>, <span class=\"comment\">// 默认9</span></span><br><span class=\"line\">      sizeType: <span class=\"string\">'original'</span>, <span class=\"comment\">// 可以指定是原图还是压缩图，默认二者都有</span></span><br><span class=\"line\">      sourceType: <span class=\"string\">'album'</span>, <span class=\"comment\">// 可以指定来源是相册还是相机，默认二者都有</span></span><br><span class=\"line\">      success: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">res</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 返回选定照片的本地文件路径列表，tempFilePath可以作为img标签的src属性显示图片</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> tempFilePaths = res.tempFilePaths</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(tempFilePaths)</span><br><span class=\"line\">        that.setData(&#123;</span><br><span class=\"line\">          headerImage: tempFilePaths[<span class=\"number\">0</span>]</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        that.drawCanvas()</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">// 绘制圆角矩形</span></span><br><span class=\"line\">  roundRectColor: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">context, x, y, w, h, r</span>) </span>&#123;  <span class=\"comment\">//绘制圆角矩形（纯色填充）</span></span><br><span class=\"line\">    context.save();</span><br><span class=\"line\">    context.fillStyle = <span class=\"string\">\"#fff\"</span>;</span><br><span class=\"line\">    context.strokeStyle = <span class=\"string\">'#fff'</span>;</span><br><span class=\"line\">    context.lineJoin = <span class=\"string\">'round'</span>;  <span class=\"comment\">//交点设置成圆角</span></span><br><span class=\"line\">    context.lineWidth = r;</span><br><span class=\"line\">    context.strokeRect(x + r / <span class=\"number\">2</span>, y + r / <span class=\"number\">2</span>, w - r, h - r);</span><br><span class=\"line\">    context.fillRect(x + r, y + r, w - r * <span class=\"number\">2</span>, h - r * <span class=\"number\">2</span>);</span><br><span class=\"line\">    context.stroke();</span><br><span class=\"line\">    context.closePath();</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">// 渲染画布内容</span></span><br><span class=\"line\">  drawCanvas: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"keyword\">this</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 拿到canvas context</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> ctx = wx.createCanvasContext(<span class=\"string\">'share_canvas'</span>);</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.roundRectColor(ctx, that.data.marginWidth, that.data.marginWidth, <span class=\"keyword\">this</span>.data.canvasWidth, <span class=\"keyword\">this</span>.data.canvasHeight, <span class=\"number\">30</span>)</span><br><span class=\"line\">    <span class=\"comment\">// ctx.setFillStyle('white')</span></span><br><span class=\"line\">    <span class=\"comment\">// ctx.fillRect(0, 0, this.data.canvasWidth, this.data.canvasHeight);</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (that.data.headerImage) &#123;</span><br><span class=\"line\">      ctx.drawImage(that.data.headerImage, <span class=\"number\">35</span>, <span class=\"number\">35</span>, <span class=\"keyword\">this</span>.data.canvasWidth - <span class=\"number\">20</span>, <span class=\"keyword\">this</span>.data.canvasHeight - <span class=\"number\">20</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> x = <span class=\"keyword\">this</span>.data.canvasWidth - (that.data.smallImage - <span class=\"number\">20</span>)</span><br><span class=\"line\">    <span class=\"keyword\">let</span> y = <span class=\"keyword\">this</span>.data.canvasWidth - (that.data.smallImage - <span class=\"number\">20</span>)</span><br><span class=\"line\">    ctx.drawImage(<span class=\"keyword\">this</span>.data.decorationImage, x, y, that.data.smallImage, that.data.smallImage)</span><br><span class=\"line\">    ctx.draw();</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">// 保存图片到本地</span></span><br><span class=\"line\">  saveImage: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    wx.showLoading(&#123;</span><br><span class=\"line\">      title: <span class=\"string\">'正在保存图片..'</span>,</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    <span class=\"keyword\">let</span> that = <span class=\"keyword\">this</span>;</span><br><span class=\"line\">    wx.canvasToTempFilePath(&#123;</span><br><span class=\"line\">      x: that.data.marginWidth, <span class=\"comment\">// 导出的位置</span></span><br><span class=\"line\">      y: that.data.marginWidth,</span><br><span class=\"line\">      fileType: <span class=\"string\">'jpg'</span>, <span class=\"comment\">// 导出图片的格式</span></span><br><span class=\"line\">      width: that.data.canvasW - (that.data.marginWidth * <span class=\"number\">2</span>), <span class=\"comment\">// 导出之前图片的尺寸</span></span><br><span class=\"line\">      height: that.data.canvasH - (that.data.marginWidth * <span class=\"number\">2</span>), <span class=\"comment\">// 导出之前图片的尺寸</span></span><br><span class=\"line\">      destWidth: <span class=\"number\">960</span>, <span class=\"comment\">// 导出之后图片的尺寸</span></span><br><span class=\"line\">      destHeight: <span class=\"number\">960</span>, <span class=\"comment\">// 导出之后图片的尺寸</span></span><br><span class=\"line\">      canvasId: <span class=\"string\">'share_canvas'</span>,</span><br><span class=\"line\">      success: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">res</span>) </span>&#123;</span><br><span class=\"line\">        wx.saveImageToPhotosAlbum(&#123;</span><br><span class=\"line\">          filePath: res.tempFilePath,</span><br><span class=\"line\">          success(res) &#123;</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(res);</span><br><span class=\"line\">            wx.showToast(&#123;</span><br><span class=\"line\">              title: <span class=\"string\">'保存到相册成功'</span>,</span><br><span class=\"line\">              duration: <span class=\"number\">1500</span>,</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          fail(res) &#123;</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(res)</span><br><span class=\"line\">            wx.showToast(&#123;</span><br><span class=\"line\">              title: <span class=\"string\">'保存到相册失败'</span>,</span><br><span class=\"line\">              icon: <span class=\"string\">'fail'</span></span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          complete(res) &#123;</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(res)</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://github.com/xiaosongread/minggedou\" target=\"_blank\" rel=\"noopener\">git地址: </a></p>"},{"title":"修改element源码，发布属于自己的element包，实现自定义并修改element源码的bug，来实现线上使用自己的包来打包文件","date":"2020-07-30T04:01:26.000Z","_content":"我们在项目中，在采用element框架的时候，框架本身也是有bug的或者不符合我们产品需求需要我们改动的，但是，如果是本地打包完上传到服务器的话，可以修改本地的element源码，如果是服务器打包的话，那我们就得自己发一个npm的包来进行打包了。\n### 案例：修改element Cascader 级联选择器，清空数据，下拉框仍然回显最后选择的数据的问题\n\n<!-- more -->\n\n修改前的效果：\n![blockchain](https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/npm-1.png)\n修改后的效果：\n![blockchain](https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/npm-2.png)\n\n### 修改源代码\n#### 1.首先把elementUI的项目从git上克隆下来\n```javascript\ngit clone https://github.com/ElemeFE/element.git\n```\n#### 2.然后进入element文件夹\n```javascript\ncd element\n```\n#### 3.安装相关的依赖\n```javascript\nnpm install\n```\n#### 4.修改源码，我修改的部分在packages里面的 cascader-panel.vue 文件，\n```javascript\nclearCheckedNodes() {\n  const { config, leafOnly } = this;\n  const { multiple, emitPath } = config;\n  if (multiple) {\n    this.getCheckedNodes(leafOnly)\n      .filter(node => !node.isDisabled)\n      .forEach(node => node.doCheck(false));\n    this.calculateMultiCheckedValue();\n  } else {\n    this.checkedValue = emitPath ? [] : null;\n    this.activePath = []; // add this line\n    this.calculateCheckedNodePaths(); // add this line\n    this.syncActivePath(); // add this line\n  }\n}\n\nvalue() {\n  this.clearCheckedNodes(); // add this line\n  this.syncCheckedValue();\n  this.checkStrictly && this.calculateCheckedNodePaths();\n}\n```\n添加了上面的’add this line‘4行代码，问题完美解决。\n#### 5.生成lib文件夹\n```javascript\nnpm run dist\n```\n就会生成一个lib文件夹，这部分是我们调试用的，刚克隆下来没有run dist之前是没有lib文件夹的，我修改完源码之后,运行run dist 后将生产的lib文件夹拷贝到项目中的node_modules中的element-ui文件夹中去，效果OK。\n\n### 如何将npm包发布到npm上\n#### 1.首先注册一个npm账号密码\nnpm 官网：https://www.npmjs.com/\n#### 2.修改原element-ui的文件名为自己的包名字\n需要修改里面的config.js文件里面的名字和package.json里面的包名就可以了，我修改了之后上传后结果是报了40多个路径错误，全局全词匹配到element-ui之后进行全局替换为我设置的包名\n#### 3.npm init\n```javascript\nnpm init \n```\n#### 4.登录自己的账号\n```javascript\nnpm login \n```\n依次根据提示输入username、password、e-mail其他的都可以敲回车完事（记得改element文件夹中package.json文件中的包名和版本号啊）。\n需要强调的是包名不能重复，不然npm会给你报一堆乱七八糟的错误。\n#### 5.上传npm包\n```javascript\nnpm publish\n```\n#### 6.修改自己项目的配置\n到项目中将项目中的package.json中的dependencies中的：\"element-ui\": \"^2.4.11\"修改为：\"你的包名\": \"^你的版本号\"。\n然后进行依赖安装：npm install\n启动项目，效果OK。","source":"_posts/修改element源码如何部署代码打包.md","raw":"---\ntitle: 修改element源码，发布属于自己的element包，实现自定义并修改element源码的bug，来实现线上使用自己的包来打包文件\ncategories: gc-end\ndate: 2020-07-30 12:01:26\n---\n我们在项目中，在采用element框架的时候，框架本身也是有bug的或者不符合我们产品需求需要我们改动的，但是，如果是本地打包完上传到服务器的话，可以修改本地的element源码，如果是服务器打包的话，那我们就得自己发一个npm的包来进行打包了。\n### 案例：修改element Cascader 级联选择器，清空数据，下拉框仍然回显最后选择的数据的问题\n\n<!-- more -->\n\n修改前的效果：\n![blockchain](https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/npm-1.png)\n修改后的效果：\n![blockchain](https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/npm-2.png)\n\n### 修改源代码\n#### 1.首先把elementUI的项目从git上克隆下来\n```javascript\ngit clone https://github.com/ElemeFE/element.git\n```\n#### 2.然后进入element文件夹\n```javascript\ncd element\n```\n#### 3.安装相关的依赖\n```javascript\nnpm install\n```\n#### 4.修改源码，我修改的部分在packages里面的 cascader-panel.vue 文件，\n```javascript\nclearCheckedNodes() {\n  const { config, leafOnly } = this;\n  const { multiple, emitPath } = config;\n  if (multiple) {\n    this.getCheckedNodes(leafOnly)\n      .filter(node => !node.isDisabled)\n      .forEach(node => node.doCheck(false));\n    this.calculateMultiCheckedValue();\n  } else {\n    this.checkedValue = emitPath ? [] : null;\n    this.activePath = []; // add this line\n    this.calculateCheckedNodePaths(); // add this line\n    this.syncActivePath(); // add this line\n  }\n}\n\nvalue() {\n  this.clearCheckedNodes(); // add this line\n  this.syncCheckedValue();\n  this.checkStrictly && this.calculateCheckedNodePaths();\n}\n```\n添加了上面的’add this line‘4行代码，问题完美解决。\n#### 5.生成lib文件夹\n```javascript\nnpm run dist\n```\n就会生成一个lib文件夹，这部分是我们调试用的，刚克隆下来没有run dist之前是没有lib文件夹的，我修改完源码之后,运行run dist 后将生产的lib文件夹拷贝到项目中的node_modules中的element-ui文件夹中去，效果OK。\n\n### 如何将npm包发布到npm上\n#### 1.首先注册一个npm账号密码\nnpm 官网：https://www.npmjs.com/\n#### 2.修改原element-ui的文件名为自己的包名字\n需要修改里面的config.js文件里面的名字和package.json里面的包名就可以了，我修改了之后上传后结果是报了40多个路径错误，全局全词匹配到element-ui之后进行全局替换为我设置的包名\n#### 3.npm init\n```javascript\nnpm init \n```\n#### 4.登录自己的账号\n```javascript\nnpm login \n```\n依次根据提示输入username、password、e-mail其他的都可以敲回车完事（记得改element文件夹中package.json文件中的包名和版本号啊）。\n需要强调的是包名不能重复，不然npm会给你报一堆乱七八糟的错误。\n#### 5.上传npm包\n```javascript\nnpm publish\n```\n#### 6.修改自己项目的配置\n到项目中将项目中的package.json中的dependencies中的：\"element-ui\": \"^2.4.11\"修改为：\"你的包名\": \"^你的版本号\"。\n然后进行依赖安装：npm install\n启动项目，效果OK。","slug":"修改element源码如何部署代码打包","published":1,"updated":"2020-08-04T10:10:47.864Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdr00y6a002ie7zcpvud4rqm","content":"<p>我们在项目中，在采用element框架的时候，框架本身也是有bug的或者不符合我们产品需求需要我们改动的，但是，如果是本地打包完上传到服务器的话，可以修改本地的element源码，如果是服务器打包的话，那我们就得自己发一个npm的包来进行打包了。</p>\n<h3 id=\"案例：修改element-Cascader-级联选择器，清空数据，下拉框仍然回显最后选择的数据的问题\"><a href=\"#案例：修改element-Cascader-级联选择器，清空数据，下拉框仍然回显最后选择的数据的问题\" class=\"headerlink\" title=\"案例：修改element Cascader 级联选择器，清空数据，下拉框仍然回显最后选择的数据的问题\"></a>案例：修改element Cascader 级联选择器，清空数据，下拉框仍然回显最后选择的数据的问题</h3><a id=\"more\"></a>\n<p>修改前的效果：<br><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/npm-1.png\" alt=\"blockchain\"><br>修改后的效果：<br><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/npm-2.png\" alt=\"blockchain\"></p>\n<h3 id=\"修改源代码\"><a href=\"#修改源代码\" class=\"headerlink\" title=\"修改源代码\"></a>修改源代码</h3><h4 id=\"1-首先把elementUI的项目从git上克隆下来\"><a href=\"#1-首先把elementUI的项目从git上克隆下来\" class=\"headerlink\" title=\"1.首先把elementUI的项目从git上克隆下来\"></a>1.首先把elementUI的项目从git上克隆下来</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https:<span class=\"comment\">//github.com/ElemeFE/element.git</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"2-然后进入element文件夹\"><a href=\"#2-然后进入element文件夹\" class=\"headerlink\" title=\"2.然后进入element文件夹\"></a>2.然后进入element文件夹</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd element</span><br></pre></td></tr></table></figure>\n<h4 id=\"3-安装相关的依赖\"><a href=\"#3-安装相关的依赖\" class=\"headerlink\" title=\"3.安装相关的依赖\"></a>3.安装相关的依赖</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\n<h4 id=\"4-修改源码，我修改的部分在packages里面的-cascader-panel-vue-文件，\"><a href=\"#4-修改源码，我修改的部分在packages里面的-cascader-panel-vue-文件，\" class=\"headerlink\" title=\"4.修改源码，我修改的部分在packages里面的 cascader-panel.vue 文件，\"></a>4.修改源码，我修改的部分在packages里面的 cascader-panel.vue 文件，</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">clearCheckedNodes() &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> &#123; config, leafOnly &#125; = <span class=\"keyword\">this</span>;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> &#123; multiple, emitPath &#125; = config;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (multiple) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.getCheckedNodes(leafOnly)</span><br><span class=\"line\">      .filter(<span class=\"function\"><span class=\"params\">node</span> =&gt;</span> !node.isDisabled)</span><br><span class=\"line\">      .forEach(<span class=\"function\"><span class=\"params\">node</span> =&gt;</span> node.doCheck(<span class=\"literal\">false</span>));</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.calculateMultiCheckedValue();</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.checkedValue = emitPath ? [] : <span class=\"literal\">null</span>;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.activePath = []; <span class=\"comment\">// add this line</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.calculateCheckedNodePaths(); <span class=\"comment\">// add this line</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.syncActivePath(); <span class=\"comment\">// add this line</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">value() &#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.clearCheckedNodes(); <span class=\"comment\">// add this line</span></span><br><span class=\"line\">  <span class=\"keyword\">this</span>.syncCheckedValue();</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.checkStrictly &amp;&amp; <span class=\"keyword\">this</span>.calculateCheckedNodePaths();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>添加了上面的’add this line‘4行代码，问题完美解决。</p>\n<h4 id=\"5-生成lib文件夹\"><a href=\"#5-生成lib文件夹\" class=\"headerlink\" title=\"5.生成lib文件夹\"></a>5.生成lib文件夹</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm run dist</span><br></pre></td></tr></table></figure>\n<p>就会生成一个lib文件夹，这部分是我们调试用的，刚克隆下来没有run dist之前是没有lib文件夹的，我修改完源码之后,运行run dist 后将生产的lib文件夹拷贝到项目中的node_modules中的element-ui文件夹中去，效果OK。</p>\n<h3 id=\"如何将npm包发布到npm上\"><a href=\"#如何将npm包发布到npm上\" class=\"headerlink\" title=\"如何将npm包发布到npm上\"></a>如何将npm包发布到npm上</h3><h4 id=\"1-首先注册一个npm账号密码\"><a href=\"#1-首先注册一个npm账号密码\" class=\"headerlink\" title=\"1.首先注册一个npm账号密码\"></a>1.首先注册一个npm账号密码</h4><p>npm 官网：<a href=\"https://www.npmjs.com/\" target=\"_blank\" rel=\"noopener\">https://www.npmjs.com/</a></p>\n<h4 id=\"2-修改原element-ui的文件名为自己的包名字\"><a href=\"#2-修改原element-ui的文件名为自己的包名字\" class=\"headerlink\" title=\"2.修改原element-ui的文件名为自己的包名字\"></a>2.修改原element-ui的文件名为自己的包名字</h4><p>需要修改里面的config.js文件里面的名字和package.json里面的包名就可以了，我修改了之后上传后结果是报了40多个路径错误，全局全词匹配到element-ui之后进行全局替换为我设置的包名</p>\n<h4 id=\"3-npm-init\"><a href=\"#3-npm-init\" class=\"headerlink\" title=\"3.npm init\"></a>3.npm init</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm init</span><br></pre></td></tr></table></figure>\n<h4 id=\"4-登录自己的账号\"><a href=\"#4-登录自己的账号\" class=\"headerlink\" title=\"4.登录自己的账号\"></a>4.登录自己的账号</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm login</span><br></pre></td></tr></table></figure>\n<p>依次根据提示输入username、password、e-mail其他的都可以敲回车完事（记得改element文件夹中package.json文件中的包名和版本号啊）。<br>需要强调的是包名不能重复，不然npm会给你报一堆乱七八糟的错误。</p>\n<h4 id=\"5-上传npm包\"><a href=\"#5-上传npm包\" class=\"headerlink\" title=\"5.上传npm包\"></a>5.上传npm包</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm publish</span><br></pre></td></tr></table></figure>\n<h4 id=\"6-修改自己项目的配置\"><a href=\"#6-修改自己项目的配置\" class=\"headerlink\" title=\"6.修改自己项目的配置\"></a>6.修改自己项目的配置</h4><p>到项目中将项目中的package.json中的dependencies中的：”element-ui”: “^2.4.11”修改为：”你的包名”: “^你的版本号”。<br>然后进行依赖安装：npm install<br>启动项目，效果OK。</p>\n","site":{"data":{}},"excerpt":"<p>我们在项目中，在采用element框架的时候，框架本身也是有bug的或者不符合我们产品需求需要我们改动的，但是，如果是本地打包完上传到服务器的话，可以修改本地的element源码，如果是服务器打包的话，那我们就得自己发一个npm的包来进行打包了。</p>\n<h3 id=\"案例：修改element-Cascader-级联选择器，清空数据，下拉框仍然回显最后选择的数据的问题\"><a href=\"#案例：修改element-Cascader-级联选择器，清空数据，下拉框仍然回显最后选择的数据的问题\" class=\"headerlink\" title=\"案例：修改element Cascader 级联选择器，清空数据，下拉框仍然回显最后选择的数据的问题\"></a>案例：修改element Cascader 级联选择器，清空数据，下拉框仍然回显最后选择的数据的问题</h3>","more":"<p>修改前的效果：<br><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/npm-1.png\" alt=\"blockchain\"><br>修改后的效果：<br><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/npm-2.png\" alt=\"blockchain\"></p>\n<h3 id=\"修改源代码\"><a href=\"#修改源代码\" class=\"headerlink\" title=\"修改源代码\"></a>修改源代码</h3><h4 id=\"1-首先把elementUI的项目从git上克隆下来\"><a href=\"#1-首先把elementUI的项目从git上克隆下来\" class=\"headerlink\" title=\"1.首先把elementUI的项目从git上克隆下来\"></a>1.首先把elementUI的项目从git上克隆下来</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https:<span class=\"comment\">//github.com/ElemeFE/element.git</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"2-然后进入element文件夹\"><a href=\"#2-然后进入element文件夹\" class=\"headerlink\" title=\"2.然后进入element文件夹\"></a>2.然后进入element文件夹</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd element</span><br></pre></td></tr></table></figure>\n<h4 id=\"3-安装相关的依赖\"><a href=\"#3-安装相关的依赖\" class=\"headerlink\" title=\"3.安装相关的依赖\"></a>3.安装相关的依赖</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\n<h4 id=\"4-修改源码，我修改的部分在packages里面的-cascader-panel-vue-文件，\"><a href=\"#4-修改源码，我修改的部分在packages里面的-cascader-panel-vue-文件，\" class=\"headerlink\" title=\"4.修改源码，我修改的部分在packages里面的 cascader-panel.vue 文件，\"></a>4.修改源码，我修改的部分在packages里面的 cascader-panel.vue 文件，</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">clearCheckedNodes() &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> &#123; config, leafOnly &#125; = <span class=\"keyword\">this</span>;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> &#123; multiple, emitPath &#125; = config;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (multiple) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.getCheckedNodes(leafOnly)</span><br><span class=\"line\">      .filter(<span class=\"function\"><span class=\"params\">node</span> =&gt;</span> !node.isDisabled)</span><br><span class=\"line\">      .forEach(<span class=\"function\"><span class=\"params\">node</span> =&gt;</span> node.doCheck(<span class=\"literal\">false</span>));</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.calculateMultiCheckedValue();</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.checkedValue = emitPath ? [] : <span class=\"literal\">null</span>;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.activePath = []; <span class=\"comment\">// add this line</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.calculateCheckedNodePaths(); <span class=\"comment\">// add this line</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.syncActivePath(); <span class=\"comment\">// add this line</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">value() &#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.clearCheckedNodes(); <span class=\"comment\">// add this line</span></span><br><span class=\"line\">  <span class=\"keyword\">this</span>.syncCheckedValue();</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.checkStrictly &amp;&amp; <span class=\"keyword\">this</span>.calculateCheckedNodePaths();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>添加了上面的’add this line‘4行代码，问题完美解决。</p>\n<h4 id=\"5-生成lib文件夹\"><a href=\"#5-生成lib文件夹\" class=\"headerlink\" title=\"5.生成lib文件夹\"></a>5.生成lib文件夹</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm run dist</span><br></pre></td></tr></table></figure>\n<p>就会生成一个lib文件夹，这部分是我们调试用的，刚克隆下来没有run dist之前是没有lib文件夹的，我修改完源码之后,运行run dist 后将生产的lib文件夹拷贝到项目中的node_modules中的element-ui文件夹中去，效果OK。</p>\n<h3 id=\"如何将npm包发布到npm上\"><a href=\"#如何将npm包发布到npm上\" class=\"headerlink\" title=\"如何将npm包发布到npm上\"></a>如何将npm包发布到npm上</h3><h4 id=\"1-首先注册一个npm账号密码\"><a href=\"#1-首先注册一个npm账号密码\" class=\"headerlink\" title=\"1.首先注册一个npm账号密码\"></a>1.首先注册一个npm账号密码</h4><p>npm 官网：<a href=\"https://www.npmjs.com/\" target=\"_blank\" rel=\"noopener\">https://www.npmjs.com/</a></p>\n<h4 id=\"2-修改原element-ui的文件名为自己的包名字\"><a href=\"#2-修改原element-ui的文件名为自己的包名字\" class=\"headerlink\" title=\"2.修改原element-ui的文件名为自己的包名字\"></a>2.修改原element-ui的文件名为自己的包名字</h4><p>需要修改里面的config.js文件里面的名字和package.json里面的包名就可以了，我修改了之后上传后结果是报了40多个路径错误，全局全词匹配到element-ui之后进行全局替换为我设置的包名</p>\n<h4 id=\"3-npm-init\"><a href=\"#3-npm-init\" class=\"headerlink\" title=\"3.npm init\"></a>3.npm init</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm init</span><br></pre></td></tr></table></figure>\n<h4 id=\"4-登录自己的账号\"><a href=\"#4-登录自己的账号\" class=\"headerlink\" title=\"4.登录自己的账号\"></a>4.登录自己的账号</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm login</span><br></pre></td></tr></table></figure>\n<p>依次根据提示输入username、password、e-mail其他的都可以敲回车完事（记得改element文件夹中package.json文件中的包名和版本号啊）。<br>需要强调的是包名不能重复，不然npm会给你报一堆乱七八糟的错误。</p>\n<h4 id=\"5-上传npm包\"><a href=\"#5-上传npm包\" class=\"headerlink\" title=\"5.上传npm包\"></a>5.上传npm包</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm publish</span><br></pre></td></tr></table></figure>\n<h4 id=\"6-修改自己项目的配置\"><a href=\"#6-修改自己项目的配置\" class=\"headerlink\" title=\"6.修改自己项目的配置\"></a>6.修改自己项目的配置</h4><p>到项目中将项目中的package.json中的dependencies中的：”element-ui”: “^2.4.11”修改为：”你的包名”: “^你的版本号”。<br>然后进行依赖安装：npm install<br>启动项目，效果OK。</p>"},{"title":"红皮书第六章-面向对象的设计程序","date":"2020-08-04T02:10:43.000Z","_content":"### 属性类型\n#### 数据属性(Object.defineProperty())\n1) [[Configurable]]: 表示能否通过delete删除属性，从而重新定义属性，，默认值为true    \n2) [[Enumerable]]: 表示能否通过for-in循环返回属性，，默认值为true    \n3) [[Writable]]: 表示能否修改属性的值，，默认值为true    \n4) [[Value]]: 包含这个属性的值，默认值为undefined    \n\n> 修改对象属性的默认特性，必须使用Object.defineProperty()方法。\n\n<!-- more -->\n```javascript\nvar person = {}\nObject.defineProperty(person, 'name', {\n  writable: false,\n  value: 'ceshi'\n})\nconsole.log(person.name) // ceshi\nperson.name = \"xiugai\"\nconsole.log(person.name) // ceshi\n```\n#### 访问器属性(getter 和 setter函数)   \n访问器属性不包含数据值，他们包含一对getter 和 setter函数，在读取访问器属性值得时候，会调用getter函数，在写入访问器属性的时候，调用setter函数。    \n\n1) [[Configurable]]: 表示能否通过delete删除属性，从而重新定义属性，，默认值为true    \n2) [[Enumerable]]: 表示能否通过for-in循环返回属性，，默认值为true    \n3) [[Get]]: 在读取属性的时调用的函数，默认值为undefined  \n4) [[Set]]: 在写入属性的时调用的函数，默认值为undefined   \n\n> 访问器属性不能直接定义，必须使用Object.defineProperty()方法来定义。\n\n```javascript\nvar book = {\n  _year: 2004,\n  edition: 1\n}\nObject.defineProperty(book, 'year', {\n  get: function(){\n    return this._year\n  },\n  set: function (newValue) {\n    if (newValue > 2004) {\n      this._year = newValue;\n      this.edition += newValue - 2004;\n    }\n  }\n})\nbook.year = 2005;\nconsole.log(book.edition) // 2\nconsole.log(book._year) // 2005\nconsole.log(book.year) // 2005\n```\n> 不一定同时指定getter和setter函数，只指定getter函数，意味着属性是不能写的。   \n\n#### 定义多个属性(Object.defineProperties())\n由于定义对象多个属性的可能性很大，所以ECMCscript5又定义了defineProperties()方法，利用这个方法可以通过描述符定义多个属性。\n```javascript\nvar book = {}\nObject.defineProperties(book, {\n  _year: {\n    value: 2004\n  },\n  edition: {\n    value: 1\n  },\n  year: {\n    get: function() {\n      return this._year\n    },\n    set: function (newValue) {\n      if (newValue > 2004) {\n        this._year = newValue;\n        this.edition += newValue - 2004;\n      }\n    }\n  }\n})\n```\n#### 读取属性的特性(Object.getOwnPropertyDescriptor())\n```javascript\nvar book = {}\nObject.defineProperties(book, {\n  _year: {\n    value: 2004\n  },\n  edition: {\n    value: 1\n  },\n  year: {\n    get: function() {\n      return this._year\n    },\n    set: function (newValue) {\n      if (newValue > 2004) {\n        this._year = newValue;\n        this.edition += newValue - 2004;\n      }\n    }\n  }\n})\nvar descriptor = Object.getOwnPropertyDescriptor(book, \"_year\")\nconsole.log(descriptor.value) // 2004\nconsole.log(descriptor.configurable) // false\nconsole.log(typeof descriptor.get) //undefined\nvar descriptor1 = Object.getOwnPropertyDescriptor(book, \"year\")\nconsole.log(descriptor1.value) //undefined\nconsole.log(descriptor1.enumerable) //false\nconsole.log(typeof descriptor1.get) //function\n```\n### 创建对象\n已知的创建对象，有构造函数和字面量来创建单个对象，但是用同一个接口来创建多个对象的话，就会产生大量重复的代码，为解决这个问题，人们开始使用工厂模式的一种变体。    \n#### 工厂模式\n```javascript\nfunction createPerson(name, age, job){\n  var o = new Object();\n  o.name = name;\n  o.age = age;\n  o.job = job;\n  o.sayName = function (){\n    console.log(o.name)\n  };\n  return o;\n}\nvar person1 = createPerson('a', 29, 'teacher')\nvar person2 = createPerson('b', 19, 'doctor')\n```\n> 工厂模式解决了创建对象产生大量重复代码的问题，但是没有解决对象识别的问题（即怎么知道一个对象的类型），这个方法构造函数模式解决了这个问题。\n\n#### 构造函数模式\n```javascript\nfunction Person(name, age, job){\n  this.name = name;\n  this.age = age;\n  this.job = job;\n  this.sayName = function (){\n    console.log(this.name)\n  };\n}\nvar person1 = new Person('a', 29, 'teacher')\nvar person2 = new Person('b', 19, 'doctor')\nconsole.log(person1.constructor == Person) // true\nconsole.log(person2.constructor == Person) // true\nconsole.log(person1 instanceof Object) // true\nconsole.log(person1 instanceof Person) // true\n```\n> 1.构造函数名第一个字母是大写的，这个是用来区分普通函数。\n> 2.创建自定义的构造函数意味着将来可以将它的实例标识作为一种特定的类型。  \n\n##### 将构造函数当做函数\n```javascript\n// 作为构造函数\nvar person1 = new Person('a', 29, 'teacher')\nperson1.sayName() // a\n// 作为普通函数\nPerson('a',  29, 'teacher')\nwindow.sayName() // a\n// 在另一个对象的作用域中调用\nvar o = new Object()\nPerson.call(o, 'a', 29, 'teacher')\no.sayName() // a\n```\n##### 构造函数的问题\n构造函数的主要问题，就是每一个实例，都重新创建了一次构造函数的方法，比如下方例子\n```javascript\nvar person1 = new Person('a', 29, 'teacher')\nvar person2 = new Person('b', 19, 'doctor')\nconsole.log(person1.sayName == person2.sayName) // false\n```\n通过把函数定义到对象的外部，可以解决这个问题。\n```javascript\nfunction Person(name, age, job){\n  this.name = name;\n  this.age = age;\n  this.job = job;\n  this.sayName = sayName\n}\nfunction sayName(){\n  console.log(this.name)\n};\nvar person1 = new Person('a', 29, 'teacher')\nvar person2 = new Person('b', 19, 'doctor')\nconsole.log(person1.sayName == person2.sayName) // true\n```\n> 将函数放到对象的外部，也就是全局环境中，this.sayName就相当于一个指针，person1,person2实例sayName指针指向了同一个方法，就实现了每一个实例不需要再去创建每一个方法，但是这样有一个坏处就是所有的方法放到全局作用域中，一定程度上污染了全局作用域，好在这个问题可以用原型模式来解决。\n\n#### 原型模式\n我们创建的每个函数都有一个 prototype (原型)属性,这个属性是一个指针,指向一个对象,而这个对象的用途是包含可以由特定类型的所有实例共享的属性和方法。如果按照字面意思来理解,那么 prototype就是通过调用构造函数而创建的那个对象实例的原型对象。使用原烈对象的好处是可以让所有对象实例共享它所包含的属性和方法。换句话说,不必在构造函数中定义对象实例的信息,而是可以将这些信息直接添加到原型对象中,如下面的例子所示。\n```javascript\nfunction Person(){}\nPerson.prototype.name = 'Nicholas'\nPerson.prototype.age = 29\nPerson.prototype.job = 'software Engineer'\nPerson.prototype.sayName = function() {\n  console.log(this.name)\n}\nvar person1 = new Person()\nvar person2 = new Person()\nconsole.log(person1.sayName === person2.sayName) // true\n```\n##### 理解原型对象\n![blockchain](https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/hps/5/2.png)    \n\n图6-1展示了 Person构造函数、Person的原型属性以及Person现有的两个实例之间的关系。在此, Pereon.prototype指向了原型对象,而 Person.prototype. constructor又指回了Person。原型对象中除了包含constructor属性之外,还包括后来添加的其他属性。Person的每个实例person1和pereon2都包含一个内部属性,该属性仅仅指向了Person.prototype；换句话说, 它们与构造函数没有直接的关系。此外,要格外注意的是,虽然这两个实例都不包含属性和方法,但我们却可以调用person1.sayName()。这是通过查找对象属性的过程来实现的。   \n\n###### getPrototypeOf()：获取对象的原型\n```javascript\nconsole.log(Object.getPrototypeOf(person1) == Person.prototype) // true\nconsole.log(Object.getPrototypeOf(person1).name) // Nicholas\n```\n第一行代码说明getPrototypeOf()获取到了对象的原型，第二行代码取到了对象原型的name属性，使用Object.getPrototypeOf()方便的取到了对象的原型，这在利用原型实现继承是非常重要的。    \n\n```javascript\nvar person1 = new Person()\nvar person2 = new Person()\nperson1.name = 'Greg'\nconsole.log(person1.name) // Greg\nconsole.log(person2.name) // Nicholas\nperson1.name = null\nconsole.log(person1.name) // null\ndelete person1.name\nconsole.log(person1.name) // Nicholas\n```\n访问person1的name的时候，解析器发现person1实例上面有name属性'Greg'，而访问person2的name的时候，实例上面没有发现name属性，就继续访问person的原型构造函数Person，发现在原型上面有name属性'Nicholas',说明我们在给原型实例添加相同属性名字的时候，在访问此实例的时候阻止向下继续访问原型的相同属性，而不会修改原型相同属性的属性值。    \n如果使用delete，就会完全删除实例上面的属性，从而解析器继续访问原型上面的属性。    \n###### hasOwnProperty(): 返回指定属性是否存在于实例中，存在于实例就返回true，否在返回false。\n```javascript\nvar person1 = new Person()\nvar person2 = new Person()\nconsole.log(person1.hasOwnProperty('name')) // false\nperson1.name = 'Greg'\nconsole.log(person1.hasOwnProperty('name')) // true\ndelete person1.name\nconsole.log(person1.hasOwnProperty('name')) // false\n```\n##### 原型与in操作符\n###### 在单独使用的时候，in操作符会通过对象访问指定的属性，能访问到就返回true,不管改属性是实例上面的还是原型上面。\n```javascript\nvar person1 = new Person()\nvar person2 = new Person()\nconsole.log('name' in person1) // true\nperson1.name = 'Greg'\nconsole.log('name' in person1) // true\nconsole.log('name' in person2) // true\n```\n```javascript\nfunction hasPrototypeProperty(object, name) {\n  return !object.hasOwnProperty(name) && (name in object)\n}\nvar person1 = new Person()\nconsole.log(hasPrototypeProperty(person1, 'name')) // true\nperson1.name = 'Greg'\nconsole.log(hasPrototypeProperty(person1, 'name')) // false\n```\n由于in操作符通过对象能访问到就返回true，并且hasOwnProperty(attr)只要返回true，就说明当前属性在实例上面，取反就说明不在实例上面，两个条件同时符合，就说明当前属性在原型上面。    \n###### for-in 循环返回的是能通过对象访问到的所有可以枚举的属性，不管是实例上面的还是原型上面的。\n###### Object.keys()返回的是实例上面的属性的数组。\n```javascript\nfunction Person(){}\nPerson.prototype.name = 'Nicholas'\nPerson.prototype.age = 29\nPerson.prototype.job = 'software Engineer'\nPerson.prototype.sayName = function() {\n  console.log(this.name)\n}\nvar person1 = new Person()\nperson1.sex = 'man'\nfor (var attr in person1) {\n  console.log(attr) // sex name age job sayName\n}\nconsole.log(Object.keys(person1)) // [\"sex\"]\n```\n##### 更简单的原型语法\n```javascript\nfunction Person(){}\nPerson.prototype = {\n  name : 'Nicholas',\n  age : 29,\n  job : 'software Engineer',\n  sayName : function() {\n    console.log(this.name)\n  }\n}\n```\n此种语法看起来比上一种感觉书写起来更简单，同时这个和上面还是有一定的差异性的：\n```javascript\nvar firend = new Person()\nconsole.log(firend instanceof Object) // true\nconsole.log(firend instanceof Person) // true\nconsole.log(firend.constructor == Person) // false\nconsole.log(firend.constructor == Object) // true\n```\n上面的代码能看到，用这种字面量的对象赋值给函数的原型，检测它的实例，是等于Object和Person的，但是实例的constructor却等于Object，不等于Person了，前面我们提过，没声明一个函数，同时也会创建一个prototype，并自动获取constructor，但是我们使用字面量这种方式，其实是重写了他的prototype，因此constructor重新指向了这个对象，那么他的constructor也就是Object，而不是Person，如果constructor你比较在意，可以使用如下方式重新指定：\n```javascript\nfunction Person(){}\nPerson.prototype = {\n  name : 'Nicholas',\n  age : 29,\n  job : 'software Engineer',\n  sayName : function() {\n    console.log(this.name)\n  }\n}\nObject.defineProperty(Person.prototype, 'constructor',{\n  enumerable: false,\n  value: person\n})\n```\n##### 原型的动态性\n由于在原型中在找值的过程是一次搜索,因此我们对原型对象所做的任何修改都使够立即从实例上反映出来———即使是先创建了实例后修改原型也照样如此,请看下面的例子。\n```javascript\n// 案例1\nfunction Person(){}\nvar friend = new Person()\nPerson.prototype.name = 'Nicholas'\nPerson.prototype.age = 29\nPerson.prototype.job = 'software Engineer'\nPerson.prototype.sayName = function() {\n  console.log(this.name)\n}\nfriend.sayName() //Nicholas\n```\n以上代码先创建了Person的一个实例,并将其保存在friend,然后添加了一个方法\n方法sayName。即使person实例是在添加新方法之前创建的,但它任然可\n以访同这个新方法。其原因可以归结为实例与原型之间的松散连接关系,当我们调用friend.sayName()时，首先会在实例中搜索名为sayName的属性,在没找到的情况下,会继续技索原。.因为实例与原型之间的连接只不过是一个指针，而非一个副本,因此就可以在原型中找到新的sayName属性并返回保存在那里的函数。\n尽管可以随时为原型添加属性性和方法,并且修改能够立即在所有对象实例中反映出来,但如果是重写整个原型对象,那情况就不一样了。我们知道，调用构造函数会为实例添加一个指向最初原型的[[Prototype]]指针，而把原型修改为另一个对象，就等于切断了构造函数与最初原型之间的联系。\n\n> 实例中的指针仅指向原型,而不指向构造函数。看下面的例子。\n\n```javascript\n// 案例2\nfunction Person(){}\nvar friend = new Person()\nPerson.prototype = {\n  name : 'Nicholas',\n  age : 29,\n  job : 'software Engineer',\n  sayName : function() {\n    console.log(this.name)\n  }\n}\nfriend.sayName() //Uncaught TypeError: friend.sayName is not a function\n```\n![blockchain](https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/hps/6/1.png) \n\n##### 原生对象的原型\n```javascript\nString.prototype.startsWith = function(text) {\n  returnthis.indexOf(text) == 0;\n}\nvar msg = \"Hello word\"\nconsole.log(msg.startsWith('Hello')) // true\n```\n> 给原生对象添加方法理论上是可行的，但是不推荐这样做，这样做无意中修改了原生对象方法，造成方法的混乱和污染。\n\n##### 原型对象的问题\n```javascript\nfunction Person(){}\nvar friend = new Person()\nPerson.prototype = {\n  name : 'Nicholas',\n  age : 29,\n  job : 'software Engineer',\n  friends: ['a','b','c'],\n  sayName : function() {\n    console.log(this.name)\n  }\n}\nvar person1 = new Person()\nvar person2 = new Person()\nperson1.friends.push('d')\nconsole.log(person1.friends) // [\"a\", \"b\", \"c\", \"d\"]\nconsole.log(person2.friends) // [\"a\", \"b\", \"c\", \"d\"]\n```\n#### 组合使用构造函数模式和原型模式\n创建自定义类型的最常见方式,就是组合使用构造甬致模式与原型模式。构造函数模式于定义实例属性,而原型模式用于定义方法和共享的属性。结果,每个实例都会有自己的一份实例属性的副本,但同时又共享着对方方法的引用,最大限度地节省了内存。另外,这种混成模式还支持向构造函数传递参数;可谓是集两种模式之长。\n```javascript\nfunction Person(name, age, job) {\n  this.name = name\n  this.age = age\n  this.job = job\n  this.firends = ['a', 'b']\n}\nPerson.prototype = {\n  constructor: Person,\n  sayName: function() {\n    console.logh(this.name)\n  }\n}\nvar person1 = new Person('Nicholas', 29, 'software Engineer')\nvar person2 = new Person('Nicholas1', 27, 'doctor')\nperson1.firends.push('c')\nconsole.log(person1.firends)\nconsole.log(person2.firends)\n```\n在这个例子中,实例属性都是在构造函数中定义的,而由所有实例共享的属性 constructor和方法sayName ()则是在原型中定义的。而修改了person.friends(向其中添加一个新字符申),并不会影响到 person2.triends,因为它们分别可引用了不同的数组。\n这种构造函数与原型混成的模式,是目前在 ECMAScript中使用最广泛、认同度最高的一种创建自定义类型的方法,可以说,这是用来定义引用类型的一种默认模式。\n#### 动态原型模式\n动态原型模式解决的问题是：有OO语言（面向对象）的经验开发者来说，看见独立的构造函数和原型时，会感到非常的困惑。这种模式，把所有信息封装到函数中，而通过在函数中初始化原型（必要的情况下）,保持了同时使用构造函数和原型的好处，换句话说，就是和上一个模式没什么区别，就是换了一种写法。\n```javascript\nfunction Person(name, age, job) {\n  this.name = name\n  this.age = age\n  this.job = job\n  this.firends = ['a', 'b']\n  if (typeof this.sayName != 'function') {\n    Person.prototype.sayName = function() {\n      console.log(this.name)\n    }\n  }\n}\nvar person1 = new Person('Nicholas', 29, 'software Engineer')\nperson1.firends.push('c')\nvar person2 = new Person('Nicholas1', 27, 'doctor')\nperson1.sayName()\nconsole.log(person1.sayName === person2.sayName) // true\nconsole.log(person1.firends) // [\"a\", \"b\", \"c\"]\nconsole.log(person2.firends) // [\"a\", \"b\"]\n```\n> 在使用动态模式的时候，千万不能使用对象重写函数的原型，前面说过，这样重写的话，就会切断所有实例与新原型之间的关系。\n\n#### 寄生构造函数模式\n```javascript\nfunction SpecialArray(){\n    var values = new Array();\n    values.push.apply(values, arguments);\n    values.toPipedString = function(){\n        return this.join(\"|\");\n    }\n    return values;\n}\nvar a = new SpecialArray(2,6,8,9,4);\na.toPipedString();\nvar b = SpecialArray(2,6,8,9,4);\nb.toPipedString();\n```\n此模式个人感觉和工厂模式没有什么大的区别，仅个人观点，也觉得没有什么大的用处，知道听说过这个概念得了。\n#### 稳妥构造函数模式\n> 道格拉斯·克罗克福德发明了JavaScript中稳妥对象（durable objects）这一概念。\n所谓稳妥是指没有公共属性，而且其方法也不引用this的对象。\n稳妥构造函数遵循与寄生构造函数类似的模式，但有两点不同：一是新创建对象的实例方法不引用this，二是不使用new操作符调用构造函数。\n\n```javascript\nfunction Person(name,age,job){\n    //创建要返回的对象\n    var o=new Object();\n    //可以在这里定义私有变量和函数\n    //添加方法\n    o.sayName=function(){\n      alert(name);\n    }\n    //返回对象\n    return o;\n}\nvar friend=Person(\"Nicholas\",29,\"Software Engineer\");\nfriend.sayName();//\"Nicholas\"\n```\n##### 稳妥构造函数模式特点\n1.函数会返回的对象，通过对象的方法我们可以访问或修改内部数据。\n2.不可以通过为函数添加方法来访问、修改函数的内部数据。\n\n> 以这种模式创建的对象中，除了使用sayName()方法之外，没有其他办法访问name的值。即使有其他代码会给这个对象添加方法或数据成员，但也不可能有别的方法访问传入到构造函数中的原始数据。稳妥构造函数模式提供的这种安全性，使得它非常适合在某些安全执行环境提供的环境下使用。\n\n这个模式具体了解，请访问：https://blog.csdn.net/maomaolaoshi/article/details/73928094\n\n### 继承\nECMAScript的继承，主要是用原型链来实现的。\n#### 原型链\nECMAScript中描述了原型链的概念,并将原型链作为实现维承的主要方法。其基本思想是利用原型让一个引用类型继承另一个引用类型的属性和方法。简单回顾一下构造函数、原型和实例的关系:每个构造函数都有一个原型对象,原型对象都包含一个指向构造函数的指针,而实例都包含一个指向原型对象的内部指针。那么,假如我们让原型对象等于另一个类型的实例,结果会怎么样呢?显然,此时的原型对象将包含一个指向另一个原型的指针,相应地,另一个原型中也包含着一个指向另一个构造函数的指针。假如另一个原型又是另一个类型的实例,那么上述关系依然成立,如此层层递进,就构成了实例与原型的链条。这就是所谓原型链的基本概念。\n```javascript\nfunction SuperType(){\n  this.property = true;\n}\nSuperType.prototype.getSuperValue = function() {\n  return this.property;\n}\nfunction SubType() {\n  this.subproperty = false;\n}\nSubType.prototype = new SuperType()\nSubType.prototype.getSubValue = function() {\n  return this.subproperty;\n}\nvar instance = new SubType();\nconsole.log(instance.getSuperValue()) // true\nconsole.log(instance.getSubValue()) // false\n```\n以上代码定义了两个类型: BuperType和SubTye,每个类型分别有一个属性和一个方法。它们的主要区别是subype继承了superType,而维承是通过创建Superlype的实例,并将该实例赋给subrype,prototype实现的,实现的本质是重写原型对象,代之以一个新类型的实例。换句话说,1来存在于super'ype的实例中的所有属性和方法,现在也存在于subType. prototype中了。在确立了维承关系之后,我们给subrype, prototype添加了一个方法,这样就在维承了superType的属性和方法的基础上义添加了一个新方法,这个例子中的实例以及构造函数和原型之间的关系如图6-4所示。\n\n![blockchain](https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/hps/6/2.png) \n在上面的代码中,我们没有使用subType认提供的原重,而是给它换了一个新原型:这个新原型就是Supertype的实例。于是,新原型不仅具有作为一个supertype的实例所拥有的全部属性和方法,而且其内部还有一个指针,指向了 Supertype 的原型。最终结果就是这样的;instance指向subype的原型,Subtype的原型又指向supertype的原型。getSuperValue()方法仍然还在Supertype.prototype 中,但property则位于subType.prototype中。这是因为property是一\n个实例属性、而 getsuperValue()则是一个原型方法。既然 Subrype.prototype 现在是 supertype的实例,那么 property 当然就位于该实例中了。此外,要注意instance.constructor现在指向的是SuperType,这是因为原来subrype.prototype中的constructor被重写了的缘故。    \n\n通过实现原型链,本质上扩展了本章前面介绍的原型搜索机制。读者大概还记得,当以读取模式访问一个实例属性时,首先会在实例中搜索该属性,如果没有找到该属性,则会继续搜索实例的原型。在通过原型链实现继承的情况下,搜索过程就得以沿着原型链继续向上,就拿上面的例子来说,调用Instance.getSuperVaiue()会经历三个搜索步骤:1)搜索实例;2)搜索 Subtype.prototype3)搜索 Supertype.prototype, 最后一步才会找到该方法。在找不到属性或方法的情况下,搜索过总是要一环一环地前行到原型做末端才会停下来。\n\n\n\n","source":"_posts/红皮书第六章-面向对象的设计程序.md","raw":"---\ntitle: 红皮书第六章-面向对象的设计程序\ncategories: jc-end\ndate: 2020-08-04 10:10:43\n---\n### 属性类型\n#### 数据属性(Object.defineProperty())\n1) [[Configurable]]: 表示能否通过delete删除属性，从而重新定义属性，，默认值为true    \n2) [[Enumerable]]: 表示能否通过for-in循环返回属性，，默认值为true    \n3) [[Writable]]: 表示能否修改属性的值，，默认值为true    \n4) [[Value]]: 包含这个属性的值，默认值为undefined    \n\n> 修改对象属性的默认特性，必须使用Object.defineProperty()方法。\n\n<!-- more -->\n```javascript\nvar person = {}\nObject.defineProperty(person, 'name', {\n  writable: false,\n  value: 'ceshi'\n})\nconsole.log(person.name) // ceshi\nperson.name = \"xiugai\"\nconsole.log(person.name) // ceshi\n```\n#### 访问器属性(getter 和 setter函数)   \n访问器属性不包含数据值，他们包含一对getter 和 setter函数，在读取访问器属性值得时候，会调用getter函数，在写入访问器属性的时候，调用setter函数。    \n\n1) [[Configurable]]: 表示能否通过delete删除属性，从而重新定义属性，，默认值为true    \n2) [[Enumerable]]: 表示能否通过for-in循环返回属性，，默认值为true    \n3) [[Get]]: 在读取属性的时调用的函数，默认值为undefined  \n4) [[Set]]: 在写入属性的时调用的函数，默认值为undefined   \n\n> 访问器属性不能直接定义，必须使用Object.defineProperty()方法来定义。\n\n```javascript\nvar book = {\n  _year: 2004,\n  edition: 1\n}\nObject.defineProperty(book, 'year', {\n  get: function(){\n    return this._year\n  },\n  set: function (newValue) {\n    if (newValue > 2004) {\n      this._year = newValue;\n      this.edition += newValue - 2004;\n    }\n  }\n})\nbook.year = 2005;\nconsole.log(book.edition) // 2\nconsole.log(book._year) // 2005\nconsole.log(book.year) // 2005\n```\n> 不一定同时指定getter和setter函数，只指定getter函数，意味着属性是不能写的。   \n\n#### 定义多个属性(Object.defineProperties())\n由于定义对象多个属性的可能性很大，所以ECMCscript5又定义了defineProperties()方法，利用这个方法可以通过描述符定义多个属性。\n```javascript\nvar book = {}\nObject.defineProperties(book, {\n  _year: {\n    value: 2004\n  },\n  edition: {\n    value: 1\n  },\n  year: {\n    get: function() {\n      return this._year\n    },\n    set: function (newValue) {\n      if (newValue > 2004) {\n        this._year = newValue;\n        this.edition += newValue - 2004;\n      }\n    }\n  }\n})\n```\n#### 读取属性的特性(Object.getOwnPropertyDescriptor())\n```javascript\nvar book = {}\nObject.defineProperties(book, {\n  _year: {\n    value: 2004\n  },\n  edition: {\n    value: 1\n  },\n  year: {\n    get: function() {\n      return this._year\n    },\n    set: function (newValue) {\n      if (newValue > 2004) {\n        this._year = newValue;\n        this.edition += newValue - 2004;\n      }\n    }\n  }\n})\nvar descriptor = Object.getOwnPropertyDescriptor(book, \"_year\")\nconsole.log(descriptor.value) // 2004\nconsole.log(descriptor.configurable) // false\nconsole.log(typeof descriptor.get) //undefined\nvar descriptor1 = Object.getOwnPropertyDescriptor(book, \"year\")\nconsole.log(descriptor1.value) //undefined\nconsole.log(descriptor1.enumerable) //false\nconsole.log(typeof descriptor1.get) //function\n```\n### 创建对象\n已知的创建对象，有构造函数和字面量来创建单个对象，但是用同一个接口来创建多个对象的话，就会产生大量重复的代码，为解决这个问题，人们开始使用工厂模式的一种变体。    \n#### 工厂模式\n```javascript\nfunction createPerson(name, age, job){\n  var o = new Object();\n  o.name = name;\n  o.age = age;\n  o.job = job;\n  o.sayName = function (){\n    console.log(o.name)\n  };\n  return o;\n}\nvar person1 = createPerson('a', 29, 'teacher')\nvar person2 = createPerson('b', 19, 'doctor')\n```\n> 工厂模式解决了创建对象产生大量重复代码的问题，但是没有解决对象识别的问题（即怎么知道一个对象的类型），这个方法构造函数模式解决了这个问题。\n\n#### 构造函数模式\n```javascript\nfunction Person(name, age, job){\n  this.name = name;\n  this.age = age;\n  this.job = job;\n  this.sayName = function (){\n    console.log(this.name)\n  };\n}\nvar person1 = new Person('a', 29, 'teacher')\nvar person2 = new Person('b', 19, 'doctor')\nconsole.log(person1.constructor == Person) // true\nconsole.log(person2.constructor == Person) // true\nconsole.log(person1 instanceof Object) // true\nconsole.log(person1 instanceof Person) // true\n```\n> 1.构造函数名第一个字母是大写的，这个是用来区分普通函数。\n> 2.创建自定义的构造函数意味着将来可以将它的实例标识作为一种特定的类型。  \n\n##### 将构造函数当做函数\n```javascript\n// 作为构造函数\nvar person1 = new Person('a', 29, 'teacher')\nperson1.sayName() // a\n// 作为普通函数\nPerson('a',  29, 'teacher')\nwindow.sayName() // a\n// 在另一个对象的作用域中调用\nvar o = new Object()\nPerson.call(o, 'a', 29, 'teacher')\no.sayName() // a\n```\n##### 构造函数的问题\n构造函数的主要问题，就是每一个实例，都重新创建了一次构造函数的方法，比如下方例子\n```javascript\nvar person1 = new Person('a', 29, 'teacher')\nvar person2 = new Person('b', 19, 'doctor')\nconsole.log(person1.sayName == person2.sayName) // false\n```\n通过把函数定义到对象的外部，可以解决这个问题。\n```javascript\nfunction Person(name, age, job){\n  this.name = name;\n  this.age = age;\n  this.job = job;\n  this.sayName = sayName\n}\nfunction sayName(){\n  console.log(this.name)\n};\nvar person1 = new Person('a', 29, 'teacher')\nvar person2 = new Person('b', 19, 'doctor')\nconsole.log(person1.sayName == person2.sayName) // true\n```\n> 将函数放到对象的外部，也就是全局环境中，this.sayName就相当于一个指针，person1,person2实例sayName指针指向了同一个方法，就实现了每一个实例不需要再去创建每一个方法，但是这样有一个坏处就是所有的方法放到全局作用域中，一定程度上污染了全局作用域，好在这个问题可以用原型模式来解决。\n\n#### 原型模式\n我们创建的每个函数都有一个 prototype (原型)属性,这个属性是一个指针,指向一个对象,而这个对象的用途是包含可以由特定类型的所有实例共享的属性和方法。如果按照字面意思来理解,那么 prototype就是通过调用构造函数而创建的那个对象实例的原型对象。使用原烈对象的好处是可以让所有对象实例共享它所包含的属性和方法。换句话说,不必在构造函数中定义对象实例的信息,而是可以将这些信息直接添加到原型对象中,如下面的例子所示。\n```javascript\nfunction Person(){}\nPerson.prototype.name = 'Nicholas'\nPerson.prototype.age = 29\nPerson.prototype.job = 'software Engineer'\nPerson.prototype.sayName = function() {\n  console.log(this.name)\n}\nvar person1 = new Person()\nvar person2 = new Person()\nconsole.log(person1.sayName === person2.sayName) // true\n```\n##### 理解原型对象\n![blockchain](https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/hps/5/2.png)    \n\n图6-1展示了 Person构造函数、Person的原型属性以及Person现有的两个实例之间的关系。在此, Pereon.prototype指向了原型对象,而 Person.prototype. constructor又指回了Person。原型对象中除了包含constructor属性之外,还包括后来添加的其他属性。Person的每个实例person1和pereon2都包含一个内部属性,该属性仅仅指向了Person.prototype；换句话说, 它们与构造函数没有直接的关系。此外,要格外注意的是,虽然这两个实例都不包含属性和方法,但我们却可以调用person1.sayName()。这是通过查找对象属性的过程来实现的。   \n\n###### getPrototypeOf()：获取对象的原型\n```javascript\nconsole.log(Object.getPrototypeOf(person1) == Person.prototype) // true\nconsole.log(Object.getPrototypeOf(person1).name) // Nicholas\n```\n第一行代码说明getPrototypeOf()获取到了对象的原型，第二行代码取到了对象原型的name属性，使用Object.getPrototypeOf()方便的取到了对象的原型，这在利用原型实现继承是非常重要的。    \n\n```javascript\nvar person1 = new Person()\nvar person2 = new Person()\nperson1.name = 'Greg'\nconsole.log(person1.name) // Greg\nconsole.log(person2.name) // Nicholas\nperson1.name = null\nconsole.log(person1.name) // null\ndelete person1.name\nconsole.log(person1.name) // Nicholas\n```\n访问person1的name的时候，解析器发现person1实例上面有name属性'Greg'，而访问person2的name的时候，实例上面没有发现name属性，就继续访问person的原型构造函数Person，发现在原型上面有name属性'Nicholas',说明我们在给原型实例添加相同属性名字的时候，在访问此实例的时候阻止向下继续访问原型的相同属性，而不会修改原型相同属性的属性值。    \n如果使用delete，就会完全删除实例上面的属性，从而解析器继续访问原型上面的属性。    \n###### hasOwnProperty(): 返回指定属性是否存在于实例中，存在于实例就返回true，否在返回false。\n```javascript\nvar person1 = new Person()\nvar person2 = new Person()\nconsole.log(person1.hasOwnProperty('name')) // false\nperson1.name = 'Greg'\nconsole.log(person1.hasOwnProperty('name')) // true\ndelete person1.name\nconsole.log(person1.hasOwnProperty('name')) // false\n```\n##### 原型与in操作符\n###### 在单独使用的时候，in操作符会通过对象访问指定的属性，能访问到就返回true,不管改属性是实例上面的还是原型上面。\n```javascript\nvar person1 = new Person()\nvar person2 = new Person()\nconsole.log('name' in person1) // true\nperson1.name = 'Greg'\nconsole.log('name' in person1) // true\nconsole.log('name' in person2) // true\n```\n```javascript\nfunction hasPrototypeProperty(object, name) {\n  return !object.hasOwnProperty(name) && (name in object)\n}\nvar person1 = new Person()\nconsole.log(hasPrototypeProperty(person1, 'name')) // true\nperson1.name = 'Greg'\nconsole.log(hasPrototypeProperty(person1, 'name')) // false\n```\n由于in操作符通过对象能访问到就返回true，并且hasOwnProperty(attr)只要返回true，就说明当前属性在实例上面，取反就说明不在实例上面，两个条件同时符合，就说明当前属性在原型上面。    \n###### for-in 循环返回的是能通过对象访问到的所有可以枚举的属性，不管是实例上面的还是原型上面的。\n###### Object.keys()返回的是实例上面的属性的数组。\n```javascript\nfunction Person(){}\nPerson.prototype.name = 'Nicholas'\nPerson.prototype.age = 29\nPerson.prototype.job = 'software Engineer'\nPerson.prototype.sayName = function() {\n  console.log(this.name)\n}\nvar person1 = new Person()\nperson1.sex = 'man'\nfor (var attr in person1) {\n  console.log(attr) // sex name age job sayName\n}\nconsole.log(Object.keys(person1)) // [\"sex\"]\n```\n##### 更简单的原型语法\n```javascript\nfunction Person(){}\nPerson.prototype = {\n  name : 'Nicholas',\n  age : 29,\n  job : 'software Engineer',\n  sayName : function() {\n    console.log(this.name)\n  }\n}\n```\n此种语法看起来比上一种感觉书写起来更简单，同时这个和上面还是有一定的差异性的：\n```javascript\nvar firend = new Person()\nconsole.log(firend instanceof Object) // true\nconsole.log(firend instanceof Person) // true\nconsole.log(firend.constructor == Person) // false\nconsole.log(firend.constructor == Object) // true\n```\n上面的代码能看到，用这种字面量的对象赋值给函数的原型，检测它的实例，是等于Object和Person的，但是实例的constructor却等于Object，不等于Person了，前面我们提过，没声明一个函数，同时也会创建一个prototype，并自动获取constructor，但是我们使用字面量这种方式，其实是重写了他的prototype，因此constructor重新指向了这个对象，那么他的constructor也就是Object，而不是Person，如果constructor你比较在意，可以使用如下方式重新指定：\n```javascript\nfunction Person(){}\nPerson.prototype = {\n  name : 'Nicholas',\n  age : 29,\n  job : 'software Engineer',\n  sayName : function() {\n    console.log(this.name)\n  }\n}\nObject.defineProperty(Person.prototype, 'constructor',{\n  enumerable: false,\n  value: person\n})\n```\n##### 原型的动态性\n由于在原型中在找值的过程是一次搜索,因此我们对原型对象所做的任何修改都使够立即从实例上反映出来———即使是先创建了实例后修改原型也照样如此,请看下面的例子。\n```javascript\n// 案例1\nfunction Person(){}\nvar friend = new Person()\nPerson.prototype.name = 'Nicholas'\nPerson.prototype.age = 29\nPerson.prototype.job = 'software Engineer'\nPerson.prototype.sayName = function() {\n  console.log(this.name)\n}\nfriend.sayName() //Nicholas\n```\n以上代码先创建了Person的一个实例,并将其保存在friend,然后添加了一个方法\n方法sayName。即使person实例是在添加新方法之前创建的,但它任然可\n以访同这个新方法。其原因可以归结为实例与原型之间的松散连接关系,当我们调用friend.sayName()时，首先会在实例中搜索名为sayName的属性,在没找到的情况下,会继续技索原。.因为实例与原型之间的连接只不过是一个指针，而非一个副本,因此就可以在原型中找到新的sayName属性并返回保存在那里的函数。\n尽管可以随时为原型添加属性性和方法,并且修改能够立即在所有对象实例中反映出来,但如果是重写整个原型对象,那情况就不一样了。我们知道，调用构造函数会为实例添加一个指向最初原型的[[Prototype]]指针，而把原型修改为另一个对象，就等于切断了构造函数与最初原型之间的联系。\n\n> 实例中的指针仅指向原型,而不指向构造函数。看下面的例子。\n\n```javascript\n// 案例2\nfunction Person(){}\nvar friend = new Person()\nPerson.prototype = {\n  name : 'Nicholas',\n  age : 29,\n  job : 'software Engineer',\n  sayName : function() {\n    console.log(this.name)\n  }\n}\nfriend.sayName() //Uncaught TypeError: friend.sayName is not a function\n```\n![blockchain](https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/hps/6/1.png) \n\n##### 原生对象的原型\n```javascript\nString.prototype.startsWith = function(text) {\n  returnthis.indexOf(text) == 0;\n}\nvar msg = \"Hello word\"\nconsole.log(msg.startsWith('Hello')) // true\n```\n> 给原生对象添加方法理论上是可行的，但是不推荐这样做，这样做无意中修改了原生对象方法，造成方法的混乱和污染。\n\n##### 原型对象的问题\n```javascript\nfunction Person(){}\nvar friend = new Person()\nPerson.prototype = {\n  name : 'Nicholas',\n  age : 29,\n  job : 'software Engineer',\n  friends: ['a','b','c'],\n  sayName : function() {\n    console.log(this.name)\n  }\n}\nvar person1 = new Person()\nvar person2 = new Person()\nperson1.friends.push('d')\nconsole.log(person1.friends) // [\"a\", \"b\", \"c\", \"d\"]\nconsole.log(person2.friends) // [\"a\", \"b\", \"c\", \"d\"]\n```\n#### 组合使用构造函数模式和原型模式\n创建自定义类型的最常见方式,就是组合使用构造甬致模式与原型模式。构造函数模式于定义实例属性,而原型模式用于定义方法和共享的属性。结果,每个实例都会有自己的一份实例属性的副本,但同时又共享着对方方法的引用,最大限度地节省了内存。另外,这种混成模式还支持向构造函数传递参数;可谓是集两种模式之长。\n```javascript\nfunction Person(name, age, job) {\n  this.name = name\n  this.age = age\n  this.job = job\n  this.firends = ['a', 'b']\n}\nPerson.prototype = {\n  constructor: Person,\n  sayName: function() {\n    console.logh(this.name)\n  }\n}\nvar person1 = new Person('Nicholas', 29, 'software Engineer')\nvar person2 = new Person('Nicholas1', 27, 'doctor')\nperson1.firends.push('c')\nconsole.log(person1.firends)\nconsole.log(person2.firends)\n```\n在这个例子中,实例属性都是在构造函数中定义的,而由所有实例共享的属性 constructor和方法sayName ()则是在原型中定义的。而修改了person.friends(向其中添加一个新字符申),并不会影响到 person2.triends,因为它们分别可引用了不同的数组。\n这种构造函数与原型混成的模式,是目前在 ECMAScript中使用最广泛、认同度最高的一种创建自定义类型的方法,可以说,这是用来定义引用类型的一种默认模式。\n#### 动态原型模式\n动态原型模式解决的问题是：有OO语言（面向对象）的经验开发者来说，看见独立的构造函数和原型时，会感到非常的困惑。这种模式，把所有信息封装到函数中，而通过在函数中初始化原型（必要的情况下）,保持了同时使用构造函数和原型的好处，换句话说，就是和上一个模式没什么区别，就是换了一种写法。\n```javascript\nfunction Person(name, age, job) {\n  this.name = name\n  this.age = age\n  this.job = job\n  this.firends = ['a', 'b']\n  if (typeof this.sayName != 'function') {\n    Person.prototype.sayName = function() {\n      console.log(this.name)\n    }\n  }\n}\nvar person1 = new Person('Nicholas', 29, 'software Engineer')\nperson1.firends.push('c')\nvar person2 = new Person('Nicholas1', 27, 'doctor')\nperson1.sayName()\nconsole.log(person1.sayName === person2.sayName) // true\nconsole.log(person1.firends) // [\"a\", \"b\", \"c\"]\nconsole.log(person2.firends) // [\"a\", \"b\"]\n```\n> 在使用动态模式的时候，千万不能使用对象重写函数的原型，前面说过，这样重写的话，就会切断所有实例与新原型之间的关系。\n\n#### 寄生构造函数模式\n```javascript\nfunction SpecialArray(){\n    var values = new Array();\n    values.push.apply(values, arguments);\n    values.toPipedString = function(){\n        return this.join(\"|\");\n    }\n    return values;\n}\nvar a = new SpecialArray(2,6,8,9,4);\na.toPipedString();\nvar b = SpecialArray(2,6,8,9,4);\nb.toPipedString();\n```\n此模式个人感觉和工厂模式没有什么大的区别，仅个人观点，也觉得没有什么大的用处，知道听说过这个概念得了。\n#### 稳妥构造函数模式\n> 道格拉斯·克罗克福德发明了JavaScript中稳妥对象（durable objects）这一概念。\n所谓稳妥是指没有公共属性，而且其方法也不引用this的对象。\n稳妥构造函数遵循与寄生构造函数类似的模式，但有两点不同：一是新创建对象的实例方法不引用this，二是不使用new操作符调用构造函数。\n\n```javascript\nfunction Person(name,age,job){\n    //创建要返回的对象\n    var o=new Object();\n    //可以在这里定义私有变量和函数\n    //添加方法\n    o.sayName=function(){\n      alert(name);\n    }\n    //返回对象\n    return o;\n}\nvar friend=Person(\"Nicholas\",29,\"Software Engineer\");\nfriend.sayName();//\"Nicholas\"\n```\n##### 稳妥构造函数模式特点\n1.函数会返回的对象，通过对象的方法我们可以访问或修改内部数据。\n2.不可以通过为函数添加方法来访问、修改函数的内部数据。\n\n> 以这种模式创建的对象中，除了使用sayName()方法之外，没有其他办法访问name的值。即使有其他代码会给这个对象添加方法或数据成员，但也不可能有别的方法访问传入到构造函数中的原始数据。稳妥构造函数模式提供的这种安全性，使得它非常适合在某些安全执行环境提供的环境下使用。\n\n这个模式具体了解，请访问：https://blog.csdn.net/maomaolaoshi/article/details/73928094\n\n### 继承\nECMAScript的继承，主要是用原型链来实现的。\n#### 原型链\nECMAScript中描述了原型链的概念,并将原型链作为实现维承的主要方法。其基本思想是利用原型让一个引用类型继承另一个引用类型的属性和方法。简单回顾一下构造函数、原型和实例的关系:每个构造函数都有一个原型对象,原型对象都包含一个指向构造函数的指针,而实例都包含一个指向原型对象的内部指针。那么,假如我们让原型对象等于另一个类型的实例,结果会怎么样呢?显然,此时的原型对象将包含一个指向另一个原型的指针,相应地,另一个原型中也包含着一个指向另一个构造函数的指针。假如另一个原型又是另一个类型的实例,那么上述关系依然成立,如此层层递进,就构成了实例与原型的链条。这就是所谓原型链的基本概念。\n```javascript\nfunction SuperType(){\n  this.property = true;\n}\nSuperType.prototype.getSuperValue = function() {\n  return this.property;\n}\nfunction SubType() {\n  this.subproperty = false;\n}\nSubType.prototype = new SuperType()\nSubType.prototype.getSubValue = function() {\n  return this.subproperty;\n}\nvar instance = new SubType();\nconsole.log(instance.getSuperValue()) // true\nconsole.log(instance.getSubValue()) // false\n```\n以上代码定义了两个类型: BuperType和SubTye,每个类型分别有一个属性和一个方法。它们的主要区别是subype继承了superType,而维承是通过创建Superlype的实例,并将该实例赋给subrype,prototype实现的,实现的本质是重写原型对象,代之以一个新类型的实例。换句话说,1来存在于super'ype的实例中的所有属性和方法,现在也存在于subType. prototype中了。在确立了维承关系之后,我们给subrype, prototype添加了一个方法,这样就在维承了superType的属性和方法的基础上义添加了一个新方法,这个例子中的实例以及构造函数和原型之间的关系如图6-4所示。\n\n![blockchain](https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/hps/6/2.png) \n在上面的代码中,我们没有使用subType认提供的原重,而是给它换了一个新原型:这个新原型就是Supertype的实例。于是,新原型不仅具有作为一个supertype的实例所拥有的全部属性和方法,而且其内部还有一个指针,指向了 Supertype 的原型。最终结果就是这样的;instance指向subype的原型,Subtype的原型又指向supertype的原型。getSuperValue()方法仍然还在Supertype.prototype 中,但property则位于subType.prototype中。这是因为property是一\n个实例属性、而 getsuperValue()则是一个原型方法。既然 Subrype.prototype 现在是 supertype的实例,那么 property 当然就位于该实例中了。此外,要注意instance.constructor现在指向的是SuperType,这是因为原来subrype.prototype中的constructor被重写了的缘故。    \n\n通过实现原型链,本质上扩展了本章前面介绍的原型搜索机制。读者大概还记得,当以读取模式访问一个实例属性时,首先会在实例中搜索该属性,如果没有找到该属性,则会继续搜索实例的原型。在通过原型链实现继承的情况下,搜索过程就得以沿着原型链继续向上,就拿上面的例子来说,调用Instance.getSuperVaiue()会经历三个搜索步骤:1)搜索实例;2)搜索 Subtype.prototype3)搜索 Supertype.prototype, 最后一步才会找到该方法。在找不到属性或方法的情况下,搜索过总是要一环一环地前行到原型做末端才会停下来。\n\n\n\n","slug":"红皮书第六章-面向对象的设计程序","published":1,"updated":"2020-08-12T06:34:22.854Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdr00y6b002me7zc5qnou7xj","content":"<h3 id=\"属性类型\"><a href=\"#属性类型\" class=\"headerlink\" title=\"属性类型\"></a>属性类型</h3><h4 id=\"数据属性-Object-defineProperty\"><a href=\"#数据属性-Object-defineProperty\" class=\"headerlink\" title=\"数据属性(Object.defineProperty())\"></a>数据属性(Object.defineProperty())</h4><p>1) [[Configurable]]: 表示能否通过delete删除属性，从而重新定义属性，，默认值为true<br>2) [[Enumerable]]: 表示能否通过for-in循环返回属性，，默认值为true<br>3) [[Writable]]: 表示能否修改属性的值，，默认值为true<br>4) [[Value]]: 包含这个属性的值，默认值为undefined    </p>\n<blockquote>\n<p>修改对象属性的默认特性，必须使用Object.defineProperty()方法。</p>\n</blockquote>\n<a id=\"more\"></a>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> person = &#123;&#125;</span><br><span class=\"line\"><span class=\"built_in\">Object</span>.defineProperty(person, <span class=\"string\">'name'</span>, &#123;</span><br><span class=\"line\">  writable: <span class=\"literal\">false</span>,</span><br><span class=\"line\">  value: <span class=\"string\">'ceshi'</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(person.name) <span class=\"comment\">// ceshi</span></span><br><span class=\"line\">person.name = <span class=\"string\">\"xiugai\"</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(person.name) <span class=\"comment\">// ceshi</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"访问器属性-getter-和-setter函数\"><a href=\"#访问器属性-getter-和-setter函数\" class=\"headerlink\" title=\"访问器属性(getter 和 setter函数)\"></a>访问器属性(getter 和 setter函数)</h4><p>访问器属性不包含数据值，他们包含一对getter 和 setter函数，在读取访问器属性值得时候，会调用getter函数，在写入访问器属性的时候，调用setter函数。    </p>\n<p>1) [[Configurable]]: 表示能否通过delete删除属性，从而重新定义属性，，默认值为true<br>2) [[Enumerable]]: 表示能否通过for-in循环返回属性，，默认值为true<br>3) [[Get]]: 在读取属性的时调用的函数，默认值为undefined<br>4) [[Set]]: 在写入属性的时调用的函数，默认值为undefined   </p>\n<blockquote>\n<p>访问器属性不能直接定义，必须使用Object.defineProperty()方法来定义。</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> book = &#123;</span><br><span class=\"line\">  _year: <span class=\"number\">2004</span>,</span><br><span class=\"line\">  edition: <span class=\"number\">1</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">Object</span>.defineProperty(book, <span class=\"string\">'year'</span>, &#123;</span><br><span class=\"line\">  <span class=\"keyword\">get</span>: function()&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>._year</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"keyword\">set</span>: function (newValue) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (newValue &gt; <span class=\"number\">2004</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>._year = newValue;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.edition += newValue - <span class=\"number\">2004</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">book.year = <span class=\"number\">2005</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(book.edition) <span class=\"comment\">// 2</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(book._year) <span class=\"comment\">// 2005</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(book.year) <span class=\"comment\">// 2005</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>不一定同时指定getter和setter函数，只指定getter函数，意味着属性是不能写的。   </p>\n</blockquote>\n<h4 id=\"定义多个属性-Object-defineProperties\"><a href=\"#定义多个属性-Object-defineProperties\" class=\"headerlink\" title=\"定义多个属性(Object.defineProperties())\"></a>定义多个属性(Object.defineProperties())</h4><p>由于定义对象多个属性的可能性很大，所以ECMCscript5又定义了defineProperties()方法，利用这个方法可以通过描述符定义多个属性。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> book = &#123;&#125;</span><br><span class=\"line\"><span class=\"built_in\">Object</span>.defineProperties(book, &#123;</span><br><span class=\"line\">  _year: &#123;</span><br><span class=\"line\">    value: <span class=\"number\">2004</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  edition: &#123;</span><br><span class=\"line\">    value: <span class=\"number\">1</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  year: &#123;</span><br><span class=\"line\">    <span class=\"keyword\">get</span>: function() &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>._year</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"keyword\">set</span>: function (newValue) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (newValue &gt; <span class=\"number\">2004</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>._year = newValue;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.edition += newValue - <span class=\"number\">2004</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"读取属性的特性-Object-getOwnPropertyDescriptor\"><a href=\"#读取属性的特性-Object-getOwnPropertyDescriptor\" class=\"headerlink\" title=\"读取属性的特性(Object.getOwnPropertyDescriptor())\"></a>读取属性的特性(Object.getOwnPropertyDescriptor())</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> book = &#123;&#125;</span><br><span class=\"line\"><span class=\"built_in\">Object</span>.defineProperties(book, &#123;</span><br><span class=\"line\">  _year: &#123;</span><br><span class=\"line\">    value: <span class=\"number\">2004</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  edition: &#123;</span><br><span class=\"line\">    value: <span class=\"number\">1</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  year: &#123;</span><br><span class=\"line\">    <span class=\"keyword\">get</span>: function() &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>._year</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"keyword\">set</span>: function (newValue) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (newValue &gt; <span class=\"number\">2004</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>._year = newValue;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.edition += newValue - <span class=\"number\">2004</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"keyword\">var</span> descriptor = <span class=\"built_in\">Object</span>.getOwnPropertyDescriptor(book, <span class=\"string\">\"_year\"</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(descriptor.value) <span class=\"comment\">// 2004</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(descriptor.configurable) <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"keyword\">typeof</span> descriptor.get) <span class=\"comment\">//undefined</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> descriptor1 = <span class=\"built_in\">Object</span>.getOwnPropertyDescriptor(book, <span class=\"string\">\"year\"</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(descriptor1.value) <span class=\"comment\">//undefined</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(descriptor1.enumerable) <span class=\"comment\">//false</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"keyword\">typeof</span> descriptor1.get) <span class=\"comment\">//function</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"创建对象\"><a href=\"#创建对象\" class=\"headerlink\" title=\"创建对象\"></a>创建对象</h3><p>已知的创建对象，有构造函数和字面量来创建单个对象，但是用同一个接口来创建多个对象的话，就会产生大量重复的代码，为解决这个问题，人们开始使用工厂模式的一种变体。    </p>\n<h4 id=\"工厂模式\"><a href=\"#工厂模式\" class=\"headerlink\" title=\"工厂模式\"></a>工厂模式</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">createPerson</span>(<span class=\"params\">name, age, job</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> o = <span class=\"keyword\">new</span> <span class=\"built_in\">Object</span>();</span><br><span class=\"line\">  o.name = name;</span><br><span class=\"line\">  o.age = age;</span><br><span class=\"line\">  o.job = job;</span><br><span class=\"line\">  o.sayName = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(o.name)</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> o;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> person1 = createPerson(<span class=\"string\">'a'</span>, <span class=\"number\">29</span>, <span class=\"string\">'teacher'</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> person2 = createPerson(<span class=\"string\">'b'</span>, <span class=\"number\">19</span>, <span class=\"string\">'doctor'</span>)</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>工厂模式解决了创建对象产生大量重复代码的问题，但是没有解决对象识别的问题（即怎么知道一个对象的类型），这个方法构造函数模式解决了这个问题。</p>\n</blockquote>\n<h4 id=\"构造函数模式\"><a href=\"#构造函数模式\" class=\"headerlink\" title=\"构造函数模式\"></a>构造函数模式</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Person</span>(<span class=\"params\">name, age, job</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.age = age;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.job = job;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.sayName = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.name)</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> person1 = <span class=\"keyword\">new</span> Person(<span class=\"string\">'a'</span>, <span class=\"number\">29</span>, <span class=\"string\">'teacher'</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> person2 = <span class=\"keyword\">new</span> Person(<span class=\"string\">'b'</span>, <span class=\"number\">19</span>, <span class=\"string\">'doctor'</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(person1.constructor == Person) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(person2.constructor == Person) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(person1 <span class=\"keyword\">instanceof</span> <span class=\"built_in\">Object</span>) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(person1 <span class=\"keyword\">instanceof</span> Person) <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>1.构造函数名第一个字母是大写的，这个是用来区分普通函数。<br>2.创建自定义的构造函数意味着将来可以将它的实例标识作为一种特定的类型。  </p>\n</blockquote>\n<h5 id=\"将构造函数当做函数\"><a href=\"#将构造函数当做函数\" class=\"headerlink\" title=\"将构造函数当做函数\"></a>将构造函数当做函数</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 作为构造函数</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> person1 = <span class=\"keyword\">new</span> Person(<span class=\"string\">'a'</span>, <span class=\"number\">29</span>, <span class=\"string\">'teacher'</span>)</span><br><span class=\"line\">person1.sayName() <span class=\"comment\">// a</span></span><br><span class=\"line\"><span class=\"comment\">// 作为普通函数</span></span><br><span class=\"line\">Person(<span class=\"string\">'a'</span>,  <span class=\"number\">29</span>, <span class=\"string\">'teacher'</span>)</span><br><span class=\"line\"><span class=\"built_in\">window</span>.sayName() <span class=\"comment\">// a</span></span><br><span class=\"line\"><span class=\"comment\">// 在另一个对象的作用域中调用</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> o = <span class=\"keyword\">new</span> <span class=\"built_in\">Object</span>()</span><br><span class=\"line\">Person.call(o, <span class=\"string\">'a'</span>, <span class=\"number\">29</span>, <span class=\"string\">'teacher'</span>)</span><br><span class=\"line\">o.sayName() <span class=\"comment\">// a</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"构造函数的问题\"><a href=\"#构造函数的问题\" class=\"headerlink\" title=\"构造函数的问题\"></a>构造函数的问题</h5><p>构造函数的主要问题，就是每一个实例，都重新创建了一次构造函数的方法，比如下方例子<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> person1 = <span class=\"keyword\">new</span> Person(<span class=\"string\">'a'</span>, <span class=\"number\">29</span>, <span class=\"string\">'teacher'</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> person2 = <span class=\"keyword\">new</span> Person(<span class=\"string\">'b'</span>, <span class=\"number\">19</span>, <span class=\"string\">'doctor'</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(person1.sayName == person2.sayName) <span class=\"comment\">// false</span></span><br></pre></td></tr></table></figure></p>\n<p>通过把函数定义到对象的外部，可以解决这个问题。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Person</span>(<span class=\"params\">name, age, job</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.age = age;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.job = job;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.sayName = sayName</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">sayName</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.name)</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> person1 = <span class=\"keyword\">new</span> Person(<span class=\"string\">'a'</span>, <span class=\"number\">29</span>, <span class=\"string\">'teacher'</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> person2 = <span class=\"keyword\">new</span> Person(<span class=\"string\">'b'</span>, <span class=\"number\">19</span>, <span class=\"string\">'doctor'</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(person1.sayName == person2.sayName) <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>将函数放到对象的外部，也就是全局环境中，this.sayName就相当于一个指针，person1,person2实例sayName指针指向了同一个方法，就实现了每一个实例不需要再去创建每一个方法，但是这样有一个坏处就是所有的方法放到全局作用域中，一定程度上污染了全局作用域，好在这个问题可以用原型模式来解决。</p>\n</blockquote>\n<h4 id=\"原型模式\"><a href=\"#原型模式\" class=\"headerlink\" title=\"原型模式\"></a>原型模式</h4><p>我们创建的每个函数都有一个 prototype (原型)属性,这个属性是一个指针,指向一个对象,而这个对象的用途是包含可以由特定类型的所有实例共享的属性和方法。如果按照字面意思来理解,那么 prototype就是通过调用构造函数而创建的那个对象实例的原型对象。使用原烈对象的好处是可以让所有对象实例共享它所包含的属性和方法。换句话说,不必在构造函数中定义对象实例的信息,而是可以将这些信息直接添加到原型对象中,如下面的例子所示。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Person</span>(<span class=\"params\"></span>)</span>&#123;&#125;</span><br><span class=\"line\">Person.prototype.name = <span class=\"string\">'Nicholas'</span></span><br><span class=\"line\">Person.prototype.age = <span class=\"number\">29</span></span><br><span class=\"line\">Person.prototype.job = <span class=\"string\">'software Engineer'</span></span><br><span class=\"line\">Person.prototype.sayName = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.name)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> person1 = <span class=\"keyword\">new</span> Person()</span><br><span class=\"line\"><span class=\"keyword\">var</span> person2 = <span class=\"keyword\">new</span> Person()</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(person1.sayName === person2.sayName) <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure></p>\n<h5 id=\"理解原型对象\"><a href=\"#理解原型对象\" class=\"headerlink\" title=\"理解原型对象\"></a>理解原型对象</h5><p><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/hps/5/2.png\" alt=\"blockchain\">    </p>\n<p>图6-1展示了 Person构造函数、Person的原型属性以及Person现有的两个实例之间的关系。在此, Pereon.prototype指向了原型对象,而 Person.prototype. constructor又指回了Person。原型对象中除了包含constructor属性之外,还包括后来添加的其他属性。Person的每个实例person1和pereon2都包含一个内部属性,该属性仅仅指向了Person.prototype；换句话说, 它们与构造函数没有直接的关系。此外,要格外注意的是,虽然这两个实例都不包含属性和方法,但我们却可以调用person1.sayName()。这是通过查找对象属性的过程来实现的。   </p>\n<h6 id=\"getPrototypeOf-：获取对象的原型\"><a href=\"#getPrototypeOf-：获取对象的原型\" class=\"headerlink\" title=\"getPrototypeOf()：获取对象的原型\"></a>getPrototypeOf()：获取对象的原型</h6><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">Object</span>.getPrototypeOf(person1) == Person.prototype) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">Object</span>.getPrototypeOf(person1).name) <span class=\"comment\">// Nicholas</span></span><br></pre></td></tr></table></figure>\n<p>第一行代码说明getPrototypeOf()获取到了对象的原型，第二行代码取到了对象原型的name属性，使用Object.getPrototypeOf()方便的取到了对象的原型，这在利用原型实现继承是非常重要的。    </p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> person1 = <span class=\"keyword\">new</span> Person()</span><br><span class=\"line\"><span class=\"keyword\">var</span> person2 = <span class=\"keyword\">new</span> Person()</span><br><span class=\"line\">person1.name = <span class=\"string\">'Greg'</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(person1.name) <span class=\"comment\">// Greg</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(person2.name) <span class=\"comment\">// Nicholas</span></span><br><span class=\"line\">person1.name = <span class=\"literal\">null</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(person1.name) <span class=\"comment\">// null</span></span><br><span class=\"line\"><span class=\"keyword\">delete</span> person1.name</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(person1.name) <span class=\"comment\">// Nicholas</span></span><br></pre></td></tr></table></figure>\n<p>访问person1的name的时候，解析器发现person1实例上面有name属性’Greg’，而访问person2的name的时候，实例上面没有发现name属性，就继续访问person的原型构造函数Person，发现在原型上面有name属性’Nicholas’,说明我们在给原型实例添加相同属性名字的时候，在访问此实例的时候阻止向下继续访问原型的相同属性，而不会修改原型相同属性的属性值。<br>如果使用delete，就会完全删除实例上面的属性，从而解析器继续访问原型上面的属性。    </p>\n<h6 id=\"hasOwnProperty-返回指定属性是否存在于实例中，存在于实例就返回true，否在返回false。\"><a href=\"#hasOwnProperty-返回指定属性是否存在于实例中，存在于实例就返回true，否在返回false。\" class=\"headerlink\" title=\"hasOwnProperty(): 返回指定属性是否存在于实例中，存在于实例就返回true，否在返回false。\"></a>hasOwnProperty(): 返回指定属性是否存在于实例中，存在于实例就返回true，否在返回false。</h6><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> person1 = <span class=\"keyword\">new</span> Person()</span><br><span class=\"line\"><span class=\"keyword\">var</span> person2 = <span class=\"keyword\">new</span> Person()</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(person1.hasOwnProperty(<span class=\"string\">'name'</span>)) <span class=\"comment\">// false</span></span><br><span class=\"line\">person1.name = <span class=\"string\">'Greg'</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(person1.hasOwnProperty(<span class=\"string\">'name'</span>)) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"keyword\">delete</span> person1.name</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(person1.hasOwnProperty(<span class=\"string\">'name'</span>)) <span class=\"comment\">// false</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"原型与in操作符\"><a href=\"#原型与in操作符\" class=\"headerlink\" title=\"原型与in操作符\"></a>原型与in操作符</h5><h6 id=\"在单独使用的时候，in操作符会通过对象访问指定的属性，能访问到就返回true-不管改属性是实例上面的还是原型上面。\"><a href=\"#在单独使用的时候，in操作符会通过对象访问指定的属性，能访问到就返回true-不管改属性是实例上面的还是原型上面。\" class=\"headerlink\" title=\"在单独使用的时候，in操作符会通过对象访问指定的属性，能访问到就返回true,不管改属性是实例上面的还是原型上面。\"></a>在单独使用的时候，in操作符会通过对象访问指定的属性，能访问到就返回true,不管改属性是实例上面的还是原型上面。</h6><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> person1 = <span class=\"keyword\">new</span> Person()</span><br><span class=\"line\"><span class=\"keyword\">var</span> person2 = <span class=\"keyword\">new</span> Person()</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">'name'</span> <span class=\"keyword\">in</span> person1) <span class=\"comment\">// true</span></span><br><span class=\"line\">person1.name = <span class=\"string\">'Greg'</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">'name'</span> <span class=\"keyword\">in</span> person1) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">'name'</span> <span class=\"keyword\">in</span> person2) <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">hasPrototypeProperty</span>(<span class=\"params\">object, name</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> !object.hasOwnProperty(name) &amp;&amp; (name <span class=\"keyword\">in</span> object)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> person1 = <span class=\"keyword\">new</span> Person()</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(hasPrototypeProperty(person1, <span class=\"string\">'name'</span>)) <span class=\"comment\">// true</span></span><br><span class=\"line\">person1.name = <span class=\"string\">'Greg'</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(hasPrototypeProperty(person1, <span class=\"string\">'name'</span>)) <span class=\"comment\">// false</span></span><br></pre></td></tr></table></figure>\n<p>由于in操作符通过对象能访问到就返回true，并且hasOwnProperty(attr)只要返回true，就说明当前属性在实例上面，取反就说明不在实例上面，两个条件同时符合，就说明当前属性在原型上面。    </p>\n<h6 id=\"for-in-循环返回的是能通过对象访问到的所有可以枚举的属性，不管是实例上面的还是原型上面的。\"><a href=\"#for-in-循环返回的是能通过对象访问到的所有可以枚举的属性，不管是实例上面的还是原型上面的。\" class=\"headerlink\" title=\"for-in 循环返回的是能通过对象访问到的所有可以枚举的属性，不管是实例上面的还是原型上面的。\"></a>for-in 循环返回的是能通过对象访问到的所有可以枚举的属性，不管是实例上面的还是原型上面的。</h6><h6 id=\"Object-keys-返回的是实例上面的属性的数组。\"><a href=\"#Object-keys-返回的是实例上面的属性的数组。\" class=\"headerlink\" title=\"Object.keys()返回的是实例上面的属性的数组。\"></a>Object.keys()返回的是实例上面的属性的数组。</h6><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Person</span>(<span class=\"params\"></span>)</span>&#123;&#125;</span><br><span class=\"line\">Person.prototype.name = <span class=\"string\">'Nicholas'</span></span><br><span class=\"line\">Person.prototype.age = <span class=\"number\">29</span></span><br><span class=\"line\">Person.prototype.job = <span class=\"string\">'software Engineer'</span></span><br><span class=\"line\">Person.prototype.sayName = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.name)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> person1 = <span class=\"keyword\">new</span> Person()</span><br><span class=\"line\">person1.sex = <span class=\"string\">'man'</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> attr <span class=\"keyword\">in</span> person1) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(attr) <span class=\"comment\">// sex name age job sayName</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">Object</span>.keys(person1)) <span class=\"comment\">// [\"sex\"]</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"更简单的原型语法\"><a href=\"#更简单的原型语法\" class=\"headerlink\" title=\"更简单的原型语法\"></a>更简单的原型语法</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Person</span>(<span class=\"params\"></span>)</span>&#123;&#125;</span><br><span class=\"line\">Person.prototype = &#123;</span><br><span class=\"line\">  name : <span class=\"string\">'Nicholas'</span>,</span><br><span class=\"line\">  age : <span class=\"number\">29</span>,</span><br><span class=\"line\">  job : <span class=\"string\">'software Engineer'</span>,</span><br><span class=\"line\">  sayName : <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.name)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>此种语法看起来比上一种感觉书写起来更简单，同时这个和上面还是有一定的差异性的：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> firend = <span class=\"keyword\">new</span> Person()</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(firend <span class=\"keyword\">instanceof</span> <span class=\"built_in\">Object</span>) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(firend <span class=\"keyword\">instanceof</span> Person) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(firend.constructor == Person) <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(firend.constructor == <span class=\"built_in\">Object</span>) <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure></p>\n<p>上面的代码能看到，用这种字面量的对象赋值给函数的原型，检测它的实例，是等于Object和Person的，但是实例的constructor却等于Object，不等于Person了，前面我们提过，没声明一个函数，同时也会创建一个prototype，并自动获取constructor，但是我们使用字面量这种方式，其实是重写了他的prototype，因此constructor重新指向了这个对象，那么他的constructor也就是Object，而不是Person，如果constructor你比较在意，可以使用如下方式重新指定：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Person</span>(<span class=\"params\"></span>)</span>&#123;&#125;</span><br><span class=\"line\">Person.prototype = &#123;</span><br><span class=\"line\">  name : <span class=\"string\">'Nicholas'</span>,</span><br><span class=\"line\">  age : <span class=\"number\">29</span>,</span><br><span class=\"line\">  job : <span class=\"string\">'software Engineer'</span>,</span><br><span class=\"line\">  sayName : <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.name)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">Object</span>.defineProperty(Person.prototype, <span class=\"string\">'constructor'</span>,&#123;</span><br><span class=\"line\">  enumerable: <span class=\"literal\">false</span>,</span><br><span class=\"line\">  value: person</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"原型的动态性\"><a href=\"#原型的动态性\" class=\"headerlink\" title=\"原型的动态性\"></a>原型的动态性</h5><p>由于在原型中在找值的过程是一次搜索,因此我们对原型对象所做的任何修改都使够立即从实例上反映出来———即使是先创建了实例后修改原型也照样如此,请看下面的例子。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 案例1</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Person</span>(<span class=\"params\"></span>)</span>&#123;&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> friend = <span class=\"keyword\">new</span> Person()</span><br><span class=\"line\">Person.prototype.name = <span class=\"string\">'Nicholas'</span></span><br><span class=\"line\">Person.prototype.age = <span class=\"number\">29</span></span><br><span class=\"line\">Person.prototype.job = <span class=\"string\">'software Engineer'</span></span><br><span class=\"line\">Person.prototype.sayName = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.name)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">friend.sayName() <span class=\"comment\">//Nicholas</span></span><br></pre></td></tr></table></figure></p>\n<p>以上代码先创建了Person的一个实例,并将其保存在friend,然后添加了一个方法<br>方法sayName。即使person实例是在添加新方法之前创建的,但它任然可<br>以访同这个新方法。其原因可以归结为实例与原型之间的松散连接关系,当我们调用friend.sayName()时，首先会在实例中搜索名为sayName的属性,在没找到的情况下,会继续技索原。.因为实例与原型之间的连接只不过是一个指针，而非一个副本,因此就可以在原型中找到新的sayName属性并返回保存在那里的函数。<br>尽管可以随时为原型添加属性性和方法,并且修改能够立即在所有对象实例中反映出来,但如果是重写整个原型对象,那情况就不一样了。我们知道，调用构造函数会为实例添加一个指向最初原型的[[Prototype]]指针，而把原型修改为另一个对象，就等于切断了构造函数与最初原型之间的联系。</p>\n<blockquote>\n<p>实例中的指针仅指向原型,而不指向构造函数。看下面的例子。</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 案例2</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Person</span>(<span class=\"params\"></span>)</span>&#123;&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> friend = <span class=\"keyword\">new</span> Person()</span><br><span class=\"line\">Person.prototype = &#123;</span><br><span class=\"line\">  name : <span class=\"string\">'Nicholas'</span>,</span><br><span class=\"line\">  age : <span class=\"number\">29</span>,</span><br><span class=\"line\">  job : <span class=\"string\">'software Engineer'</span>,</span><br><span class=\"line\">  sayName : <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.name)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">friend.sayName() <span class=\"comment\">//Uncaught TypeError: friend.sayName is not a function</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/hps/6/1.png\" alt=\"blockchain\"> </p>\n<h5 id=\"原生对象的原型\"><a href=\"#原生对象的原型\" class=\"headerlink\" title=\"原生对象的原型\"></a>原生对象的原型</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">String</span>.prototype.startsWith = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">text</span>) </span>&#123;</span><br><span class=\"line\">  returnthis.indexOf(text) == <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> msg = <span class=\"string\">\"Hello word\"</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(msg.startsWith(<span class=\"string\">'Hello'</span>)) <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>给原生对象添加方法理论上是可行的，但是不推荐这样做，这样做无意中修改了原生对象方法，造成方法的混乱和污染。</p>\n</blockquote>\n<h5 id=\"原型对象的问题\"><a href=\"#原型对象的问题\" class=\"headerlink\" title=\"原型对象的问题\"></a>原型对象的问题</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Person</span>(<span class=\"params\"></span>)</span>&#123;&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> friend = <span class=\"keyword\">new</span> Person()</span><br><span class=\"line\">Person.prototype = &#123;</span><br><span class=\"line\">  name : <span class=\"string\">'Nicholas'</span>,</span><br><span class=\"line\">  age : <span class=\"number\">29</span>,</span><br><span class=\"line\">  job : <span class=\"string\">'software Engineer'</span>,</span><br><span class=\"line\">  friends: [<span class=\"string\">'a'</span>,<span class=\"string\">'b'</span>,<span class=\"string\">'c'</span>],</span><br><span class=\"line\">  sayName : <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.name)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> person1 = <span class=\"keyword\">new</span> Person()</span><br><span class=\"line\"><span class=\"keyword\">var</span> person2 = <span class=\"keyword\">new</span> Person()</span><br><span class=\"line\">person1.friends.push(<span class=\"string\">'d'</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(person1.friends) <span class=\"comment\">// [\"a\", \"b\", \"c\", \"d\"]</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(person2.friends) <span class=\"comment\">// [\"a\", \"b\", \"c\", \"d\"]</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"组合使用构造函数模式和原型模式\"><a href=\"#组合使用构造函数模式和原型模式\" class=\"headerlink\" title=\"组合使用构造函数模式和原型模式\"></a>组合使用构造函数模式和原型模式</h4><p>创建自定义类型的最常见方式,就是组合使用构造甬致模式与原型模式。构造函数模式于定义实例属性,而原型模式用于定义方法和共享的属性。结果,每个实例都会有自己的一份实例属性的副本,但同时又共享着对方方法的引用,最大限度地节省了内存。另外,这种混成模式还支持向构造函数传递参数;可谓是集两种模式之长。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Person</span>(<span class=\"params\">name, age, job</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.name = name</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.age = age</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.job = job</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.firends = [<span class=\"string\">'a'</span>, <span class=\"string\">'b'</span>]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">Person.prototype = &#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>: Person,</span><br><span class=\"line\">  sayName: function() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.logh(<span class=\"keyword\">this</span>.name)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> person1 = <span class=\"keyword\">new</span> Person(<span class=\"string\">'Nicholas'</span>, <span class=\"number\">29</span>, <span class=\"string\">'software Engineer'</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> person2 = <span class=\"keyword\">new</span> Person(<span class=\"string\">'Nicholas1'</span>, <span class=\"number\">27</span>, <span class=\"string\">'doctor'</span>)</span><br><span class=\"line\">person1.firends.push(<span class=\"string\">'c'</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(person1.firends)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(person2.firends)</span><br></pre></td></tr></table></figure></p>\n<p>在这个例子中,实例属性都是在构造函数中定义的,而由所有实例共享的属性 constructor和方法sayName ()则是在原型中定义的。而修改了person.friends(向其中添加一个新字符申),并不会影响到 person2.triends,因为它们分别可引用了不同的数组。<br>这种构造函数与原型混成的模式,是目前在 ECMAScript中使用最广泛、认同度最高的一种创建自定义类型的方法,可以说,这是用来定义引用类型的一种默认模式。</p>\n<h4 id=\"动态原型模式\"><a href=\"#动态原型模式\" class=\"headerlink\" title=\"动态原型模式\"></a>动态原型模式</h4><p>动态原型模式解决的问题是：有OO语言（面向对象）的经验开发者来说，看见独立的构造函数和原型时，会感到非常的困惑。这种模式，把所有信息封装到函数中，而通过在函数中初始化原型（必要的情况下）,保持了同时使用构造函数和原型的好处，换句话说，就是和上一个模式没什么区别，就是换了一种写法。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Person</span>(<span class=\"params\">name, age, job</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.name = name</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.age = age</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.job = job</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.firends = [<span class=\"string\">'a'</span>, <span class=\"string\">'b'</span>]</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> <span class=\"keyword\">this</span>.sayName != <span class=\"string\">'function'</span>) &#123;</span><br><span class=\"line\">    Person.prototype.sayName = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.name)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> person1 = <span class=\"keyword\">new</span> Person(<span class=\"string\">'Nicholas'</span>, <span class=\"number\">29</span>, <span class=\"string\">'software Engineer'</span>)</span><br><span class=\"line\">person1.firends.push(<span class=\"string\">'c'</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> person2 = <span class=\"keyword\">new</span> Person(<span class=\"string\">'Nicholas1'</span>, <span class=\"number\">27</span>, <span class=\"string\">'doctor'</span>)</span><br><span class=\"line\">person1.sayName()</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(person1.sayName === person2.sayName) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(person1.firends) <span class=\"comment\">// [\"a\", \"b\", \"c\"]</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(person2.firends) <span class=\"comment\">// [\"a\", \"b\"]</span></span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>在使用动态模式的时候，千万不能使用对象重写函数的原型，前面说过，这样重写的话，就会切断所有实例与新原型之间的关系。</p>\n</blockquote>\n<h4 id=\"寄生构造函数模式\"><a href=\"#寄生构造函数模式\" class=\"headerlink\" title=\"寄生构造函数模式\"></a>寄生构造函数模式</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">SpecialArray</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> values = <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>();</span><br><span class=\"line\">    values.push.apply(values, <span class=\"built_in\">arguments</span>);</span><br><span class=\"line\">    values.toPipedString = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.join(<span class=\"string\">\"|\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> values;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"keyword\">new</span> SpecialArray(<span class=\"number\">2</span>,<span class=\"number\">6</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>,<span class=\"number\">4</span>);</span><br><span class=\"line\">a.toPipedString();</span><br><span class=\"line\"><span class=\"keyword\">var</span> b = SpecialArray(<span class=\"number\">2</span>,<span class=\"number\">6</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>,<span class=\"number\">4</span>);</span><br><span class=\"line\">b.toPipedString();</span><br></pre></td></tr></table></figure>\n<p>此模式个人感觉和工厂模式没有什么大的区别，仅个人观点，也觉得没有什么大的用处，知道听说过这个概念得了。</p>\n<h4 id=\"稳妥构造函数模式\"><a href=\"#稳妥构造函数模式\" class=\"headerlink\" title=\"稳妥构造函数模式\"></a>稳妥构造函数模式</h4><blockquote>\n<p>道格拉斯·克罗克福德发明了JavaScript中稳妥对象（durable objects）这一概念。<br>所谓稳妥是指没有公共属性，而且其方法也不引用this的对象。<br>稳妥构造函数遵循与寄生构造函数类似的模式，但有两点不同：一是新创建对象的实例方法不引用this，二是不使用new操作符调用构造函数。</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Person</span>(<span class=\"params\">name,age,job</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//创建要返回的对象</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> o=<span class=\"keyword\">new</span> <span class=\"built_in\">Object</span>();</span><br><span class=\"line\">    <span class=\"comment\">//可以在这里定义私有变量和函数</span></span><br><span class=\"line\">    <span class=\"comment\">//添加方法</span></span><br><span class=\"line\">    o.sayName=<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">      alert(name);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//返回对象</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> o;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> friend=Person(<span class=\"string\">\"Nicholas\"</span>,<span class=\"number\">29</span>,<span class=\"string\">\"Software Engineer\"</span>);</span><br><span class=\"line\">friend.sayName();<span class=\"comment\">//\"Nicholas\"</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"稳妥构造函数模式特点\"><a href=\"#稳妥构造函数模式特点\" class=\"headerlink\" title=\"稳妥构造函数模式特点\"></a>稳妥构造函数模式特点</h5><p>1.函数会返回的对象，通过对象的方法我们可以访问或修改内部数据。<br>2.不可以通过为函数添加方法来访问、修改函数的内部数据。</p>\n<blockquote>\n<p>以这种模式创建的对象中，除了使用sayName()方法之外，没有其他办法访问name的值。即使有其他代码会给这个对象添加方法或数据成员，但也不可能有别的方法访问传入到构造函数中的原始数据。稳妥构造函数模式提供的这种安全性，使得它非常适合在某些安全执行环境提供的环境下使用。</p>\n</blockquote>\n<p>这个模式具体了解，请访问：<a href=\"https://blog.csdn.net/maomaolaoshi/article/details/73928094\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/maomaolaoshi/article/details/73928094</a></p>\n<h3 id=\"继承\"><a href=\"#继承\" class=\"headerlink\" title=\"继承\"></a>继承</h3><p>ECMAScript的继承，主要是用原型链来实现的。</p>\n<h4 id=\"原型链\"><a href=\"#原型链\" class=\"headerlink\" title=\"原型链\"></a>原型链</h4><p>ECMAScript中描述了原型链的概念,并将原型链作为实现维承的主要方法。其基本思想是利用原型让一个引用类型继承另一个引用类型的属性和方法。简单回顾一下构造函数、原型和实例的关系:每个构造函数都有一个原型对象,原型对象都包含一个指向构造函数的指针,而实例都包含一个指向原型对象的内部指针。那么,假如我们让原型对象等于另一个类型的实例,结果会怎么样呢?显然,此时的原型对象将包含一个指向另一个原型的指针,相应地,另一个原型中也包含着一个指向另一个构造函数的指针。假如另一个原型又是另一个类型的实例,那么上述关系依然成立,如此层层递进,就构成了实例与原型的链条。这就是所谓原型链的基本概念。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">SuperType</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.property = <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">SuperType.prototype.getSuperValue = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.property;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">SubType</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.subproperty = <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">SubType.prototype = <span class=\"keyword\">new</span> SuperType()</span><br><span class=\"line\">SubType.prototype.getSubValue = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.subproperty;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> instance = <span class=\"keyword\">new</span> SubType();</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(instance.getSuperValue()) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(instance.getSubValue()) <span class=\"comment\">// false</span></span><br></pre></td></tr></table></figure></p>\n<p>以上代码定义了两个类型: BuperType和SubTye,每个类型分别有一个属性和一个方法。它们的主要区别是subype继承了superType,而维承是通过创建Superlype的实例,并将该实例赋给subrype,prototype实现的,实现的本质是重写原型对象,代之以一个新类型的实例。换句话说,1来存在于super’ype的实例中的所有属性和方法,现在也存在于subType. prototype中了。在确立了维承关系之后,我们给subrype, prototype添加了一个方法,这样就在维承了superType的属性和方法的基础上义添加了一个新方法,这个例子中的实例以及构造函数和原型之间的关系如图6-4所示。</p>\n<p><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/hps/6/2.png\" alt=\"blockchain\"><br>在上面的代码中,我们没有使用subType认提供的原重,而是给它换了一个新原型:这个新原型就是Supertype的实例。于是,新原型不仅具有作为一个supertype的实例所拥有的全部属性和方法,而且其内部还有一个指针,指向了 Supertype 的原型。最终结果就是这样的;instance指向subype的原型,Subtype的原型又指向supertype的原型。getSuperValue()方法仍然还在Supertype.prototype 中,但property则位于subType.prototype中。这是因为property是一<br>个实例属性、而 getsuperValue()则是一个原型方法。既然 Subrype.prototype 现在是 supertype的实例,那么 property 当然就位于该实例中了。此外,要注意instance.constructor现在指向的是SuperType,这是因为原来subrype.prototype中的constructor被重写了的缘故。    </p>\n<p>通过实现原型链,本质上扩展了本章前面介绍的原型搜索机制。读者大概还记得,当以读取模式访问一个实例属性时,首先会在实例中搜索该属性,如果没有找到该属性,则会继续搜索实例的原型。在通过原型链实现继承的情况下,搜索过程就得以沿着原型链继续向上,就拿上面的例子来说,调用Instance.getSuperVaiue()会经历三个搜索步骤:1)搜索实例;2)搜索 Subtype.prototype3)搜索 Supertype.prototype, 最后一步才会找到该方法。在找不到属性或方法的情况下,搜索过总是要一环一环地前行到原型做末端才会停下来。</p>\n","site":{"data":{}},"excerpt":"<h3 id=\"属性类型\"><a href=\"#属性类型\" class=\"headerlink\" title=\"属性类型\"></a>属性类型</h3><h4 id=\"数据属性-Object-defineProperty\"><a href=\"#数据属性-Object-defineProperty\" class=\"headerlink\" title=\"数据属性(Object.defineProperty())\"></a>数据属性(Object.defineProperty())</h4><p>1) [[Configurable]]: 表示能否通过delete删除属性，从而重新定义属性，，默认值为true<br>2) [[Enumerable]]: 表示能否通过for-in循环返回属性，，默认值为true<br>3) [[Writable]]: 表示能否修改属性的值，，默认值为true<br>4) [[Value]]: 包含这个属性的值，默认值为undefined    </p>\n<blockquote>\n<p>修改对象属性的默认特性，必须使用Object.defineProperty()方法。</p>\n</blockquote>","more":"<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> person = &#123;&#125;</span><br><span class=\"line\"><span class=\"built_in\">Object</span>.defineProperty(person, <span class=\"string\">'name'</span>, &#123;</span><br><span class=\"line\">  writable: <span class=\"literal\">false</span>,</span><br><span class=\"line\">  value: <span class=\"string\">'ceshi'</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(person.name) <span class=\"comment\">// ceshi</span></span><br><span class=\"line\">person.name = <span class=\"string\">\"xiugai\"</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(person.name) <span class=\"comment\">// ceshi</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"访问器属性-getter-和-setter函数\"><a href=\"#访问器属性-getter-和-setter函数\" class=\"headerlink\" title=\"访问器属性(getter 和 setter函数)\"></a>访问器属性(getter 和 setter函数)</h4><p>访问器属性不包含数据值，他们包含一对getter 和 setter函数，在读取访问器属性值得时候，会调用getter函数，在写入访问器属性的时候，调用setter函数。    </p>\n<p>1) [[Configurable]]: 表示能否通过delete删除属性，从而重新定义属性，，默认值为true<br>2) [[Enumerable]]: 表示能否通过for-in循环返回属性，，默认值为true<br>3) [[Get]]: 在读取属性的时调用的函数，默认值为undefined<br>4) [[Set]]: 在写入属性的时调用的函数，默认值为undefined   </p>\n<blockquote>\n<p>访问器属性不能直接定义，必须使用Object.defineProperty()方法来定义。</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> book = &#123;</span><br><span class=\"line\">  _year: <span class=\"number\">2004</span>,</span><br><span class=\"line\">  edition: <span class=\"number\">1</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">Object</span>.defineProperty(book, <span class=\"string\">'year'</span>, &#123;</span><br><span class=\"line\">  <span class=\"keyword\">get</span>: function()&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>._year</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"keyword\">set</span>: function (newValue) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (newValue &gt; <span class=\"number\">2004</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>._year = newValue;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.edition += newValue - <span class=\"number\">2004</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">book.year = <span class=\"number\">2005</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(book.edition) <span class=\"comment\">// 2</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(book._year) <span class=\"comment\">// 2005</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(book.year) <span class=\"comment\">// 2005</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>不一定同时指定getter和setter函数，只指定getter函数，意味着属性是不能写的。   </p>\n</blockquote>\n<h4 id=\"定义多个属性-Object-defineProperties\"><a href=\"#定义多个属性-Object-defineProperties\" class=\"headerlink\" title=\"定义多个属性(Object.defineProperties())\"></a>定义多个属性(Object.defineProperties())</h4><p>由于定义对象多个属性的可能性很大，所以ECMCscript5又定义了defineProperties()方法，利用这个方法可以通过描述符定义多个属性。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> book = &#123;&#125;</span><br><span class=\"line\"><span class=\"built_in\">Object</span>.defineProperties(book, &#123;</span><br><span class=\"line\">  _year: &#123;</span><br><span class=\"line\">    value: <span class=\"number\">2004</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  edition: &#123;</span><br><span class=\"line\">    value: <span class=\"number\">1</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  year: &#123;</span><br><span class=\"line\">    <span class=\"keyword\">get</span>: function() &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>._year</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"keyword\">set</span>: function (newValue) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (newValue &gt; <span class=\"number\">2004</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>._year = newValue;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.edition += newValue - <span class=\"number\">2004</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"读取属性的特性-Object-getOwnPropertyDescriptor\"><a href=\"#读取属性的特性-Object-getOwnPropertyDescriptor\" class=\"headerlink\" title=\"读取属性的特性(Object.getOwnPropertyDescriptor())\"></a>读取属性的特性(Object.getOwnPropertyDescriptor())</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> book = &#123;&#125;</span><br><span class=\"line\"><span class=\"built_in\">Object</span>.defineProperties(book, &#123;</span><br><span class=\"line\">  _year: &#123;</span><br><span class=\"line\">    value: <span class=\"number\">2004</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  edition: &#123;</span><br><span class=\"line\">    value: <span class=\"number\">1</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  year: &#123;</span><br><span class=\"line\">    <span class=\"keyword\">get</span>: function() &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>._year</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"keyword\">set</span>: function (newValue) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (newValue &gt; <span class=\"number\">2004</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>._year = newValue;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.edition += newValue - <span class=\"number\">2004</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"keyword\">var</span> descriptor = <span class=\"built_in\">Object</span>.getOwnPropertyDescriptor(book, <span class=\"string\">\"_year\"</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(descriptor.value) <span class=\"comment\">// 2004</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(descriptor.configurable) <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"keyword\">typeof</span> descriptor.get) <span class=\"comment\">//undefined</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> descriptor1 = <span class=\"built_in\">Object</span>.getOwnPropertyDescriptor(book, <span class=\"string\">\"year\"</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(descriptor1.value) <span class=\"comment\">//undefined</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(descriptor1.enumerable) <span class=\"comment\">//false</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"keyword\">typeof</span> descriptor1.get) <span class=\"comment\">//function</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"创建对象\"><a href=\"#创建对象\" class=\"headerlink\" title=\"创建对象\"></a>创建对象</h3><p>已知的创建对象，有构造函数和字面量来创建单个对象，但是用同一个接口来创建多个对象的话，就会产生大量重复的代码，为解决这个问题，人们开始使用工厂模式的一种变体。    </p>\n<h4 id=\"工厂模式\"><a href=\"#工厂模式\" class=\"headerlink\" title=\"工厂模式\"></a>工厂模式</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">createPerson</span>(<span class=\"params\">name, age, job</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> o = <span class=\"keyword\">new</span> <span class=\"built_in\">Object</span>();</span><br><span class=\"line\">  o.name = name;</span><br><span class=\"line\">  o.age = age;</span><br><span class=\"line\">  o.job = job;</span><br><span class=\"line\">  o.sayName = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(o.name)</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> o;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> person1 = createPerson(<span class=\"string\">'a'</span>, <span class=\"number\">29</span>, <span class=\"string\">'teacher'</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> person2 = createPerson(<span class=\"string\">'b'</span>, <span class=\"number\">19</span>, <span class=\"string\">'doctor'</span>)</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>工厂模式解决了创建对象产生大量重复代码的问题，但是没有解决对象识别的问题（即怎么知道一个对象的类型），这个方法构造函数模式解决了这个问题。</p>\n</blockquote>\n<h4 id=\"构造函数模式\"><a href=\"#构造函数模式\" class=\"headerlink\" title=\"构造函数模式\"></a>构造函数模式</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Person</span>(<span class=\"params\">name, age, job</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.age = age;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.job = job;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.sayName = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.name)</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> person1 = <span class=\"keyword\">new</span> Person(<span class=\"string\">'a'</span>, <span class=\"number\">29</span>, <span class=\"string\">'teacher'</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> person2 = <span class=\"keyword\">new</span> Person(<span class=\"string\">'b'</span>, <span class=\"number\">19</span>, <span class=\"string\">'doctor'</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(person1.constructor == Person) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(person2.constructor == Person) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(person1 <span class=\"keyword\">instanceof</span> <span class=\"built_in\">Object</span>) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(person1 <span class=\"keyword\">instanceof</span> Person) <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>1.构造函数名第一个字母是大写的，这个是用来区分普通函数。<br>2.创建自定义的构造函数意味着将来可以将它的实例标识作为一种特定的类型。  </p>\n</blockquote>\n<h5 id=\"将构造函数当做函数\"><a href=\"#将构造函数当做函数\" class=\"headerlink\" title=\"将构造函数当做函数\"></a>将构造函数当做函数</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 作为构造函数</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> person1 = <span class=\"keyword\">new</span> Person(<span class=\"string\">'a'</span>, <span class=\"number\">29</span>, <span class=\"string\">'teacher'</span>)</span><br><span class=\"line\">person1.sayName() <span class=\"comment\">// a</span></span><br><span class=\"line\"><span class=\"comment\">// 作为普通函数</span></span><br><span class=\"line\">Person(<span class=\"string\">'a'</span>,  <span class=\"number\">29</span>, <span class=\"string\">'teacher'</span>)</span><br><span class=\"line\"><span class=\"built_in\">window</span>.sayName() <span class=\"comment\">// a</span></span><br><span class=\"line\"><span class=\"comment\">// 在另一个对象的作用域中调用</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> o = <span class=\"keyword\">new</span> <span class=\"built_in\">Object</span>()</span><br><span class=\"line\">Person.call(o, <span class=\"string\">'a'</span>, <span class=\"number\">29</span>, <span class=\"string\">'teacher'</span>)</span><br><span class=\"line\">o.sayName() <span class=\"comment\">// a</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"构造函数的问题\"><a href=\"#构造函数的问题\" class=\"headerlink\" title=\"构造函数的问题\"></a>构造函数的问题</h5><p>构造函数的主要问题，就是每一个实例，都重新创建了一次构造函数的方法，比如下方例子<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> person1 = <span class=\"keyword\">new</span> Person(<span class=\"string\">'a'</span>, <span class=\"number\">29</span>, <span class=\"string\">'teacher'</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> person2 = <span class=\"keyword\">new</span> Person(<span class=\"string\">'b'</span>, <span class=\"number\">19</span>, <span class=\"string\">'doctor'</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(person1.sayName == person2.sayName) <span class=\"comment\">// false</span></span><br></pre></td></tr></table></figure></p>\n<p>通过把函数定义到对象的外部，可以解决这个问题。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Person</span>(<span class=\"params\">name, age, job</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.age = age;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.job = job;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.sayName = sayName</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">sayName</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.name)</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> person1 = <span class=\"keyword\">new</span> Person(<span class=\"string\">'a'</span>, <span class=\"number\">29</span>, <span class=\"string\">'teacher'</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> person2 = <span class=\"keyword\">new</span> Person(<span class=\"string\">'b'</span>, <span class=\"number\">19</span>, <span class=\"string\">'doctor'</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(person1.sayName == person2.sayName) <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>将函数放到对象的外部，也就是全局环境中，this.sayName就相当于一个指针，person1,person2实例sayName指针指向了同一个方法，就实现了每一个实例不需要再去创建每一个方法，但是这样有一个坏处就是所有的方法放到全局作用域中，一定程度上污染了全局作用域，好在这个问题可以用原型模式来解决。</p>\n</blockquote>\n<h4 id=\"原型模式\"><a href=\"#原型模式\" class=\"headerlink\" title=\"原型模式\"></a>原型模式</h4><p>我们创建的每个函数都有一个 prototype (原型)属性,这个属性是一个指针,指向一个对象,而这个对象的用途是包含可以由特定类型的所有实例共享的属性和方法。如果按照字面意思来理解,那么 prototype就是通过调用构造函数而创建的那个对象实例的原型对象。使用原烈对象的好处是可以让所有对象实例共享它所包含的属性和方法。换句话说,不必在构造函数中定义对象实例的信息,而是可以将这些信息直接添加到原型对象中,如下面的例子所示。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Person</span>(<span class=\"params\"></span>)</span>&#123;&#125;</span><br><span class=\"line\">Person.prototype.name = <span class=\"string\">'Nicholas'</span></span><br><span class=\"line\">Person.prototype.age = <span class=\"number\">29</span></span><br><span class=\"line\">Person.prototype.job = <span class=\"string\">'software Engineer'</span></span><br><span class=\"line\">Person.prototype.sayName = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.name)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> person1 = <span class=\"keyword\">new</span> Person()</span><br><span class=\"line\"><span class=\"keyword\">var</span> person2 = <span class=\"keyword\">new</span> Person()</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(person1.sayName === person2.sayName) <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure></p>\n<h5 id=\"理解原型对象\"><a href=\"#理解原型对象\" class=\"headerlink\" title=\"理解原型对象\"></a>理解原型对象</h5><p><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/hps/5/2.png\" alt=\"blockchain\">    </p>\n<p>图6-1展示了 Person构造函数、Person的原型属性以及Person现有的两个实例之间的关系。在此, Pereon.prototype指向了原型对象,而 Person.prototype. constructor又指回了Person。原型对象中除了包含constructor属性之外,还包括后来添加的其他属性。Person的每个实例person1和pereon2都包含一个内部属性,该属性仅仅指向了Person.prototype；换句话说, 它们与构造函数没有直接的关系。此外,要格外注意的是,虽然这两个实例都不包含属性和方法,但我们却可以调用person1.sayName()。这是通过查找对象属性的过程来实现的。   </p>\n<h6 id=\"getPrototypeOf-：获取对象的原型\"><a href=\"#getPrototypeOf-：获取对象的原型\" class=\"headerlink\" title=\"getPrototypeOf()：获取对象的原型\"></a>getPrototypeOf()：获取对象的原型</h6><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">Object</span>.getPrototypeOf(person1) == Person.prototype) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">Object</span>.getPrototypeOf(person1).name) <span class=\"comment\">// Nicholas</span></span><br></pre></td></tr></table></figure>\n<p>第一行代码说明getPrototypeOf()获取到了对象的原型，第二行代码取到了对象原型的name属性，使用Object.getPrototypeOf()方便的取到了对象的原型，这在利用原型实现继承是非常重要的。    </p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> person1 = <span class=\"keyword\">new</span> Person()</span><br><span class=\"line\"><span class=\"keyword\">var</span> person2 = <span class=\"keyword\">new</span> Person()</span><br><span class=\"line\">person1.name = <span class=\"string\">'Greg'</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(person1.name) <span class=\"comment\">// Greg</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(person2.name) <span class=\"comment\">// Nicholas</span></span><br><span class=\"line\">person1.name = <span class=\"literal\">null</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(person1.name) <span class=\"comment\">// null</span></span><br><span class=\"line\"><span class=\"keyword\">delete</span> person1.name</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(person1.name) <span class=\"comment\">// Nicholas</span></span><br></pre></td></tr></table></figure>\n<p>访问person1的name的时候，解析器发现person1实例上面有name属性’Greg’，而访问person2的name的时候，实例上面没有发现name属性，就继续访问person的原型构造函数Person，发现在原型上面有name属性’Nicholas’,说明我们在给原型实例添加相同属性名字的时候，在访问此实例的时候阻止向下继续访问原型的相同属性，而不会修改原型相同属性的属性值。<br>如果使用delete，就会完全删除实例上面的属性，从而解析器继续访问原型上面的属性。    </p>\n<h6 id=\"hasOwnProperty-返回指定属性是否存在于实例中，存在于实例就返回true，否在返回false。\"><a href=\"#hasOwnProperty-返回指定属性是否存在于实例中，存在于实例就返回true，否在返回false。\" class=\"headerlink\" title=\"hasOwnProperty(): 返回指定属性是否存在于实例中，存在于实例就返回true，否在返回false。\"></a>hasOwnProperty(): 返回指定属性是否存在于实例中，存在于实例就返回true，否在返回false。</h6><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> person1 = <span class=\"keyword\">new</span> Person()</span><br><span class=\"line\"><span class=\"keyword\">var</span> person2 = <span class=\"keyword\">new</span> Person()</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(person1.hasOwnProperty(<span class=\"string\">'name'</span>)) <span class=\"comment\">// false</span></span><br><span class=\"line\">person1.name = <span class=\"string\">'Greg'</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(person1.hasOwnProperty(<span class=\"string\">'name'</span>)) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"keyword\">delete</span> person1.name</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(person1.hasOwnProperty(<span class=\"string\">'name'</span>)) <span class=\"comment\">// false</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"原型与in操作符\"><a href=\"#原型与in操作符\" class=\"headerlink\" title=\"原型与in操作符\"></a>原型与in操作符</h5><h6 id=\"在单独使用的时候，in操作符会通过对象访问指定的属性，能访问到就返回true-不管改属性是实例上面的还是原型上面。\"><a href=\"#在单独使用的时候，in操作符会通过对象访问指定的属性，能访问到就返回true-不管改属性是实例上面的还是原型上面。\" class=\"headerlink\" title=\"在单独使用的时候，in操作符会通过对象访问指定的属性，能访问到就返回true,不管改属性是实例上面的还是原型上面。\"></a>在单独使用的时候，in操作符会通过对象访问指定的属性，能访问到就返回true,不管改属性是实例上面的还是原型上面。</h6><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> person1 = <span class=\"keyword\">new</span> Person()</span><br><span class=\"line\"><span class=\"keyword\">var</span> person2 = <span class=\"keyword\">new</span> Person()</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">'name'</span> <span class=\"keyword\">in</span> person1) <span class=\"comment\">// true</span></span><br><span class=\"line\">person1.name = <span class=\"string\">'Greg'</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">'name'</span> <span class=\"keyword\">in</span> person1) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">'name'</span> <span class=\"keyword\">in</span> person2) <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">hasPrototypeProperty</span>(<span class=\"params\">object, name</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> !object.hasOwnProperty(name) &amp;&amp; (name <span class=\"keyword\">in</span> object)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> person1 = <span class=\"keyword\">new</span> Person()</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(hasPrototypeProperty(person1, <span class=\"string\">'name'</span>)) <span class=\"comment\">// true</span></span><br><span class=\"line\">person1.name = <span class=\"string\">'Greg'</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(hasPrototypeProperty(person1, <span class=\"string\">'name'</span>)) <span class=\"comment\">// false</span></span><br></pre></td></tr></table></figure>\n<p>由于in操作符通过对象能访问到就返回true，并且hasOwnProperty(attr)只要返回true，就说明当前属性在实例上面，取反就说明不在实例上面，两个条件同时符合，就说明当前属性在原型上面。    </p>\n<h6 id=\"for-in-循环返回的是能通过对象访问到的所有可以枚举的属性，不管是实例上面的还是原型上面的。\"><a href=\"#for-in-循环返回的是能通过对象访问到的所有可以枚举的属性，不管是实例上面的还是原型上面的。\" class=\"headerlink\" title=\"for-in 循环返回的是能通过对象访问到的所有可以枚举的属性，不管是实例上面的还是原型上面的。\"></a>for-in 循环返回的是能通过对象访问到的所有可以枚举的属性，不管是实例上面的还是原型上面的。</h6><h6 id=\"Object-keys-返回的是实例上面的属性的数组。\"><a href=\"#Object-keys-返回的是实例上面的属性的数组。\" class=\"headerlink\" title=\"Object.keys()返回的是实例上面的属性的数组。\"></a>Object.keys()返回的是实例上面的属性的数组。</h6><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Person</span>(<span class=\"params\"></span>)</span>&#123;&#125;</span><br><span class=\"line\">Person.prototype.name = <span class=\"string\">'Nicholas'</span></span><br><span class=\"line\">Person.prototype.age = <span class=\"number\">29</span></span><br><span class=\"line\">Person.prototype.job = <span class=\"string\">'software Engineer'</span></span><br><span class=\"line\">Person.prototype.sayName = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.name)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> person1 = <span class=\"keyword\">new</span> Person()</span><br><span class=\"line\">person1.sex = <span class=\"string\">'man'</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> attr <span class=\"keyword\">in</span> person1) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(attr) <span class=\"comment\">// sex name age job sayName</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">Object</span>.keys(person1)) <span class=\"comment\">// [\"sex\"]</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"更简单的原型语法\"><a href=\"#更简单的原型语法\" class=\"headerlink\" title=\"更简单的原型语法\"></a>更简单的原型语法</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Person</span>(<span class=\"params\"></span>)</span>&#123;&#125;</span><br><span class=\"line\">Person.prototype = &#123;</span><br><span class=\"line\">  name : <span class=\"string\">'Nicholas'</span>,</span><br><span class=\"line\">  age : <span class=\"number\">29</span>,</span><br><span class=\"line\">  job : <span class=\"string\">'software Engineer'</span>,</span><br><span class=\"line\">  sayName : <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.name)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>此种语法看起来比上一种感觉书写起来更简单，同时这个和上面还是有一定的差异性的：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> firend = <span class=\"keyword\">new</span> Person()</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(firend <span class=\"keyword\">instanceof</span> <span class=\"built_in\">Object</span>) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(firend <span class=\"keyword\">instanceof</span> Person) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(firend.constructor == Person) <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(firend.constructor == <span class=\"built_in\">Object</span>) <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure></p>\n<p>上面的代码能看到，用这种字面量的对象赋值给函数的原型，检测它的实例，是等于Object和Person的，但是实例的constructor却等于Object，不等于Person了，前面我们提过，没声明一个函数，同时也会创建一个prototype，并自动获取constructor，但是我们使用字面量这种方式，其实是重写了他的prototype，因此constructor重新指向了这个对象，那么他的constructor也就是Object，而不是Person，如果constructor你比较在意，可以使用如下方式重新指定：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Person</span>(<span class=\"params\"></span>)</span>&#123;&#125;</span><br><span class=\"line\">Person.prototype = &#123;</span><br><span class=\"line\">  name : <span class=\"string\">'Nicholas'</span>,</span><br><span class=\"line\">  age : <span class=\"number\">29</span>,</span><br><span class=\"line\">  job : <span class=\"string\">'software Engineer'</span>,</span><br><span class=\"line\">  sayName : <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.name)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">Object</span>.defineProperty(Person.prototype, <span class=\"string\">'constructor'</span>,&#123;</span><br><span class=\"line\">  enumerable: <span class=\"literal\">false</span>,</span><br><span class=\"line\">  value: person</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"原型的动态性\"><a href=\"#原型的动态性\" class=\"headerlink\" title=\"原型的动态性\"></a>原型的动态性</h5><p>由于在原型中在找值的过程是一次搜索,因此我们对原型对象所做的任何修改都使够立即从实例上反映出来———即使是先创建了实例后修改原型也照样如此,请看下面的例子。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 案例1</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Person</span>(<span class=\"params\"></span>)</span>&#123;&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> friend = <span class=\"keyword\">new</span> Person()</span><br><span class=\"line\">Person.prototype.name = <span class=\"string\">'Nicholas'</span></span><br><span class=\"line\">Person.prototype.age = <span class=\"number\">29</span></span><br><span class=\"line\">Person.prototype.job = <span class=\"string\">'software Engineer'</span></span><br><span class=\"line\">Person.prototype.sayName = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.name)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">friend.sayName() <span class=\"comment\">//Nicholas</span></span><br></pre></td></tr></table></figure></p>\n<p>以上代码先创建了Person的一个实例,并将其保存在friend,然后添加了一个方法<br>方法sayName。即使person实例是在添加新方法之前创建的,但它任然可<br>以访同这个新方法。其原因可以归结为实例与原型之间的松散连接关系,当我们调用friend.sayName()时，首先会在实例中搜索名为sayName的属性,在没找到的情况下,会继续技索原。.因为实例与原型之间的连接只不过是一个指针，而非一个副本,因此就可以在原型中找到新的sayName属性并返回保存在那里的函数。<br>尽管可以随时为原型添加属性性和方法,并且修改能够立即在所有对象实例中反映出来,但如果是重写整个原型对象,那情况就不一样了。我们知道，调用构造函数会为实例添加一个指向最初原型的[[Prototype]]指针，而把原型修改为另一个对象，就等于切断了构造函数与最初原型之间的联系。</p>\n<blockquote>\n<p>实例中的指针仅指向原型,而不指向构造函数。看下面的例子。</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 案例2</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Person</span>(<span class=\"params\"></span>)</span>&#123;&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> friend = <span class=\"keyword\">new</span> Person()</span><br><span class=\"line\">Person.prototype = &#123;</span><br><span class=\"line\">  name : <span class=\"string\">'Nicholas'</span>,</span><br><span class=\"line\">  age : <span class=\"number\">29</span>,</span><br><span class=\"line\">  job : <span class=\"string\">'software Engineer'</span>,</span><br><span class=\"line\">  sayName : <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.name)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">friend.sayName() <span class=\"comment\">//Uncaught TypeError: friend.sayName is not a function</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/hps/6/1.png\" alt=\"blockchain\"> </p>\n<h5 id=\"原生对象的原型\"><a href=\"#原生对象的原型\" class=\"headerlink\" title=\"原生对象的原型\"></a>原生对象的原型</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">String</span>.prototype.startsWith = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">text</span>) </span>&#123;</span><br><span class=\"line\">  returnthis.indexOf(text) == <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> msg = <span class=\"string\">\"Hello word\"</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(msg.startsWith(<span class=\"string\">'Hello'</span>)) <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>给原生对象添加方法理论上是可行的，但是不推荐这样做，这样做无意中修改了原生对象方法，造成方法的混乱和污染。</p>\n</blockquote>\n<h5 id=\"原型对象的问题\"><a href=\"#原型对象的问题\" class=\"headerlink\" title=\"原型对象的问题\"></a>原型对象的问题</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Person</span>(<span class=\"params\"></span>)</span>&#123;&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> friend = <span class=\"keyword\">new</span> Person()</span><br><span class=\"line\">Person.prototype = &#123;</span><br><span class=\"line\">  name : <span class=\"string\">'Nicholas'</span>,</span><br><span class=\"line\">  age : <span class=\"number\">29</span>,</span><br><span class=\"line\">  job : <span class=\"string\">'software Engineer'</span>,</span><br><span class=\"line\">  friends: [<span class=\"string\">'a'</span>,<span class=\"string\">'b'</span>,<span class=\"string\">'c'</span>],</span><br><span class=\"line\">  sayName : <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.name)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> person1 = <span class=\"keyword\">new</span> Person()</span><br><span class=\"line\"><span class=\"keyword\">var</span> person2 = <span class=\"keyword\">new</span> Person()</span><br><span class=\"line\">person1.friends.push(<span class=\"string\">'d'</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(person1.friends) <span class=\"comment\">// [\"a\", \"b\", \"c\", \"d\"]</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(person2.friends) <span class=\"comment\">// [\"a\", \"b\", \"c\", \"d\"]</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"组合使用构造函数模式和原型模式\"><a href=\"#组合使用构造函数模式和原型模式\" class=\"headerlink\" title=\"组合使用构造函数模式和原型模式\"></a>组合使用构造函数模式和原型模式</h4><p>创建自定义类型的最常见方式,就是组合使用构造甬致模式与原型模式。构造函数模式于定义实例属性,而原型模式用于定义方法和共享的属性。结果,每个实例都会有自己的一份实例属性的副本,但同时又共享着对方方法的引用,最大限度地节省了内存。另外,这种混成模式还支持向构造函数传递参数;可谓是集两种模式之长。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Person</span>(<span class=\"params\">name, age, job</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.name = name</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.age = age</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.job = job</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.firends = [<span class=\"string\">'a'</span>, <span class=\"string\">'b'</span>]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">Person.prototype = &#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>: Person,</span><br><span class=\"line\">  sayName: function() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.logh(<span class=\"keyword\">this</span>.name)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> person1 = <span class=\"keyword\">new</span> Person(<span class=\"string\">'Nicholas'</span>, <span class=\"number\">29</span>, <span class=\"string\">'software Engineer'</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> person2 = <span class=\"keyword\">new</span> Person(<span class=\"string\">'Nicholas1'</span>, <span class=\"number\">27</span>, <span class=\"string\">'doctor'</span>)</span><br><span class=\"line\">person1.firends.push(<span class=\"string\">'c'</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(person1.firends)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(person2.firends)</span><br></pre></td></tr></table></figure></p>\n<p>在这个例子中,实例属性都是在构造函数中定义的,而由所有实例共享的属性 constructor和方法sayName ()则是在原型中定义的。而修改了person.friends(向其中添加一个新字符申),并不会影响到 person2.triends,因为它们分别可引用了不同的数组。<br>这种构造函数与原型混成的模式,是目前在 ECMAScript中使用最广泛、认同度最高的一种创建自定义类型的方法,可以说,这是用来定义引用类型的一种默认模式。</p>\n<h4 id=\"动态原型模式\"><a href=\"#动态原型模式\" class=\"headerlink\" title=\"动态原型模式\"></a>动态原型模式</h4><p>动态原型模式解决的问题是：有OO语言（面向对象）的经验开发者来说，看见独立的构造函数和原型时，会感到非常的困惑。这种模式，把所有信息封装到函数中，而通过在函数中初始化原型（必要的情况下）,保持了同时使用构造函数和原型的好处，换句话说，就是和上一个模式没什么区别，就是换了一种写法。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Person</span>(<span class=\"params\">name, age, job</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.name = name</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.age = age</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.job = job</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.firends = [<span class=\"string\">'a'</span>, <span class=\"string\">'b'</span>]</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> <span class=\"keyword\">this</span>.sayName != <span class=\"string\">'function'</span>) &#123;</span><br><span class=\"line\">    Person.prototype.sayName = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.name)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> person1 = <span class=\"keyword\">new</span> Person(<span class=\"string\">'Nicholas'</span>, <span class=\"number\">29</span>, <span class=\"string\">'software Engineer'</span>)</span><br><span class=\"line\">person1.firends.push(<span class=\"string\">'c'</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> person2 = <span class=\"keyword\">new</span> Person(<span class=\"string\">'Nicholas1'</span>, <span class=\"number\">27</span>, <span class=\"string\">'doctor'</span>)</span><br><span class=\"line\">person1.sayName()</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(person1.sayName === person2.sayName) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(person1.firends) <span class=\"comment\">// [\"a\", \"b\", \"c\"]</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(person2.firends) <span class=\"comment\">// [\"a\", \"b\"]</span></span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>在使用动态模式的时候，千万不能使用对象重写函数的原型，前面说过，这样重写的话，就会切断所有实例与新原型之间的关系。</p>\n</blockquote>\n<h4 id=\"寄生构造函数模式\"><a href=\"#寄生构造函数模式\" class=\"headerlink\" title=\"寄生构造函数模式\"></a>寄生构造函数模式</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">SpecialArray</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> values = <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>();</span><br><span class=\"line\">    values.push.apply(values, <span class=\"built_in\">arguments</span>);</span><br><span class=\"line\">    values.toPipedString = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.join(<span class=\"string\">\"|\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> values;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"keyword\">new</span> SpecialArray(<span class=\"number\">2</span>,<span class=\"number\">6</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>,<span class=\"number\">4</span>);</span><br><span class=\"line\">a.toPipedString();</span><br><span class=\"line\"><span class=\"keyword\">var</span> b = SpecialArray(<span class=\"number\">2</span>,<span class=\"number\">6</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>,<span class=\"number\">4</span>);</span><br><span class=\"line\">b.toPipedString();</span><br></pre></td></tr></table></figure>\n<p>此模式个人感觉和工厂模式没有什么大的区别，仅个人观点，也觉得没有什么大的用处，知道听说过这个概念得了。</p>\n<h4 id=\"稳妥构造函数模式\"><a href=\"#稳妥构造函数模式\" class=\"headerlink\" title=\"稳妥构造函数模式\"></a>稳妥构造函数模式</h4><blockquote>\n<p>道格拉斯·克罗克福德发明了JavaScript中稳妥对象（durable objects）这一概念。<br>所谓稳妥是指没有公共属性，而且其方法也不引用this的对象。<br>稳妥构造函数遵循与寄生构造函数类似的模式，但有两点不同：一是新创建对象的实例方法不引用this，二是不使用new操作符调用构造函数。</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Person</span>(<span class=\"params\">name,age,job</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//创建要返回的对象</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> o=<span class=\"keyword\">new</span> <span class=\"built_in\">Object</span>();</span><br><span class=\"line\">    <span class=\"comment\">//可以在这里定义私有变量和函数</span></span><br><span class=\"line\">    <span class=\"comment\">//添加方法</span></span><br><span class=\"line\">    o.sayName=<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">      alert(name);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//返回对象</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> o;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> friend=Person(<span class=\"string\">\"Nicholas\"</span>,<span class=\"number\">29</span>,<span class=\"string\">\"Software Engineer\"</span>);</span><br><span class=\"line\">friend.sayName();<span class=\"comment\">//\"Nicholas\"</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"稳妥构造函数模式特点\"><a href=\"#稳妥构造函数模式特点\" class=\"headerlink\" title=\"稳妥构造函数模式特点\"></a>稳妥构造函数模式特点</h5><p>1.函数会返回的对象，通过对象的方法我们可以访问或修改内部数据。<br>2.不可以通过为函数添加方法来访问、修改函数的内部数据。</p>\n<blockquote>\n<p>以这种模式创建的对象中，除了使用sayName()方法之外，没有其他办法访问name的值。即使有其他代码会给这个对象添加方法或数据成员，但也不可能有别的方法访问传入到构造函数中的原始数据。稳妥构造函数模式提供的这种安全性，使得它非常适合在某些安全执行环境提供的环境下使用。</p>\n</blockquote>\n<p>这个模式具体了解，请访问：<a href=\"https://blog.csdn.net/maomaolaoshi/article/details/73928094\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/maomaolaoshi/article/details/73928094</a></p>\n<h3 id=\"继承\"><a href=\"#继承\" class=\"headerlink\" title=\"继承\"></a>继承</h3><p>ECMAScript的继承，主要是用原型链来实现的。</p>\n<h4 id=\"原型链\"><a href=\"#原型链\" class=\"headerlink\" title=\"原型链\"></a>原型链</h4><p>ECMAScript中描述了原型链的概念,并将原型链作为实现维承的主要方法。其基本思想是利用原型让一个引用类型继承另一个引用类型的属性和方法。简单回顾一下构造函数、原型和实例的关系:每个构造函数都有一个原型对象,原型对象都包含一个指向构造函数的指针,而实例都包含一个指向原型对象的内部指针。那么,假如我们让原型对象等于另一个类型的实例,结果会怎么样呢?显然,此时的原型对象将包含一个指向另一个原型的指针,相应地,另一个原型中也包含着一个指向另一个构造函数的指针。假如另一个原型又是另一个类型的实例,那么上述关系依然成立,如此层层递进,就构成了实例与原型的链条。这就是所谓原型链的基本概念。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">SuperType</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.property = <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">SuperType.prototype.getSuperValue = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.property;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">SubType</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.subproperty = <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">SubType.prototype = <span class=\"keyword\">new</span> SuperType()</span><br><span class=\"line\">SubType.prototype.getSubValue = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.subproperty;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> instance = <span class=\"keyword\">new</span> SubType();</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(instance.getSuperValue()) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(instance.getSubValue()) <span class=\"comment\">// false</span></span><br></pre></td></tr></table></figure></p>\n<p>以上代码定义了两个类型: BuperType和SubTye,每个类型分别有一个属性和一个方法。它们的主要区别是subype继承了superType,而维承是通过创建Superlype的实例,并将该实例赋给subrype,prototype实现的,实现的本质是重写原型对象,代之以一个新类型的实例。换句话说,1来存在于super’ype的实例中的所有属性和方法,现在也存在于subType. prototype中了。在确立了维承关系之后,我们给subrype, prototype添加了一个方法,这样就在维承了superType的属性和方法的基础上义添加了一个新方法,这个例子中的实例以及构造函数和原型之间的关系如图6-4所示。</p>\n<p><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/hps/6/2.png\" alt=\"blockchain\"><br>在上面的代码中,我们没有使用subType认提供的原重,而是给它换了一个新原型:这个新原型就是Supertype的实例。于是,新原型不仅具有作为一个supertype的实例所拥有的全部属性和方法,而且其内部还有一个指针,指向了 Supertype 的原型。最终结果就是这样的;instance指向subype的原型,Subtype的原型又指向supertype的原型。getSuperValue()方法仍然还在Supertype.prototype 中,但property则位于subType.prototype中。这是因为property是一<br>个实例属性、而 getsuperValue()则是一个原型方法。既然 Subrype.prototype 现在是 supertype的实例,那么 property 当然就位于该实例中了。此外,要注意instance.constructor现在指向的是SuperType,这是因为原来subrype.prototype中的constructor被重写了的缘故。    </p>\n<p>通过实现原型链,本质上扩展了本章前面介绍的原型搜索机制。读者大概还记得,当以读取模式访问一个实例属性时,首先会在实例中搜索该属性,如果没有找到该属性,则会继续搜索实例的原型。在通过原型链实现继承的情况下,搜索过程就得以沿着原型链继续向上,就拿上面的例子来说,调用Instance.getSuperVaiue()会经历三个搜索步骤:1)搜索实例;2)搜索 Subtype.prototype3)搜索 Supertype.prototype, 最后一步才会找到该方法。在找不到属性或方法的情况下,搜索过总是要一环一环地前行到原型做末端才会停下来。</p>"},{"title":"红皮书第五章-引用类型","date":"2020-08-03T09:31:01.000Z","_content":"[红皮书第五章-引用类型-字符窜数组常用易混淆方法总结](https://www.songyanbin.com/2020/07/02/%E5%AD%97%E7%AC%A6%E7%AA%9C%E6%95%B0%E7%BB%84%E5%B8%B8%E7%94%A8%E6%98%93%E6%B7%B7%E6%B7%86%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93/)  ( 6/24 )  \n\n### global 对象\n#### 1.url编码方法\nencodeURI()和encodeURIComponent()可以对浏览器url进行编码，以便浏览器更好的解读。\n<!-- more -->\n```javascript\nvar url = 'http://www.baidu.com/illent value.html#start'\nencodeURL(url) // http://www.baidu.com/illent%20value.html#start\nencodeURLComponent(url) // http%3A%2F%2Fwww.baidu.com%2Fillent%20value.html%23start\n```\n> 一般来说，我们平常常用的是encodeURLComponent 方法，应为我们主要是对参数进行编码，而很少对基础url域名进行编码。\n\n相对以上的解码方法为：decodeURI()和decodeURIComponent()    \n\n#### 2.eval()\neval() 就相当于一个完整的ecscript解析器\n```javascript\neval('alert(123)')\n```\n页面直接就会弹出alert框，显示123   \n\n> eval 不会有变量提升，应为解析的时候，里面的内容是字符串，同时使用它的时候要谨慎，可能有用户恶意输入威胁你的站点或应用程序安全的代码。    \n\n#### 3.Math对象\n##### min()和max()方法\n```javascript\nvar max = Math.max(3,2,23,100)\nconsole.log(max) // 100\n\nvar arr = [3,2,23,100]\nvar maxNum = Math.max.apply(Math, arr)\nconsole.log(maxNum) // 100\n```\n#### 舍入方法\n1.Math.ceil() 执行向上舍入\n2.Math.floor() 执行向下舍入\n3.Math.round() 标准的四舍五入\n```javascript\nconsole.log(Math.ceil(25.9)) // 26\nconsole.log(Math.ceil(25.5)) // 26\nconsole.log(Math.ceil(25.1)) // 26\n\nconsole.log(Math.floor(25.9)) // 25\nconsole.log(Math.floor(25.5)) // 25\nconsole.log(Math.floor(25.1)) // 25\n\nconsole.log(Math.round(25.9)) // 26\nconsole.log(Math.round(25.5)) // 26\nconsole.log(Math.round(25.1)) // 25\n```\n\n#### random()：返回介于0到1之间的随机数\n\n#### 其他方法\n![blockchain](https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/hps/5/1.png)\n\n### 小结\n对象在JavaScript中被称为引用类型的值,而且有一些内置的引用类型可以用来创建特定的对象，现简要总结如下:    \n口 引用类型与传统面向对象程序设计中的类相似,但实现不同;\n口 object是一个基础类型,其他所有类型都从object继承了基本的行为;\n口 Array类型是一组值的有序列表,同时还提供了操作和转换这些值的功能;\n口 Date类型提供了有关日期和时间的信息,包括当前日期和时间以及相关的计算功能O;\n口 RegExp类型是ECMAScript支持正则表达式的一个接口,提供了最基本的和一些高级正则表达式功能。\n    函数实际上是Function类型的实例,因此函数也是对象;而这一点正是JavasScript最有特色的地方。由于函数也是对象,所以函数也拥有方法,可以用来增强其行为。    \n\n    因为有了基本包装类型,所以JavaScript中的基本类型值可以被当作对象来访问。三种1型分别是: Boolean, Number和stxing。以下是它们共同的特征:    \n\n口 每个包装类型都映射到同名的基本类型;\n口 在读取模式下访问基本类型值时,就会创建对应的基本包装类型的一个对象,从而方便了解数据操作;\n口 操作基本类型值的语句一经执行完毕,就会立即销毁新创建的包装对象。    \n\n在所有代码执行之前,作用域中就已经存在两个内置对象:G1obal和Math在大多数ECMAScript实现中都不能直接访问Global对象;不过, Web浏览器实现了承担该角色的window对象量和函数都是G1obal对象的属性。Math对象提供了很多属性和方法,用于辅助完成复杂的数学计算任务。\n","source":"_posts/红皮书第五章-引用类型.md","raw":"---\ntitle: 红皮书第五章-引用类型\ncategories: jc-end\ndate: 2020-08-03 17:31:01\n---\n[红皮书第五章-引用类型-字符窜数组常用易混淆方法总结](https://www.songyanbin.com/2020/07/02/%E5%AD%97%E7%AC%A6%E7%AA%9C%E6%95%B0%E7%BB%84%E5%B8%B8%E7%94%A8%E6%98%93%E6%B7%B7%E6%B7%86%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93/)  ( 6/24 )  \n\n### global 对象\n#### 1.url编码方法\nencodeURI()和encodeURIComponent()可以对浏览器url进行编码，以便浏览器更好的解读。\n<!-- more -->\n```javascript\nvar url = 'http://www.baidu.com/illent value.html#start'\nencodeURL(url) // http://www.baidu.com/illent%20value.html#start\nencodeURLComponent(url) // http%3A%2F%2Fwww.baidu.com%2Fillent%20value.html%23start\n```\n> 一般来说，我们平常常用的是encodeURLComponent 方法，应为我们主要是对参数进行编码，而很少对基础url域名进行编码。\n\n相对以上的解码方法为：decodeURI()和decodeURIComponent()    \n\n#### 2.eval()\neval() 就相当于一个完整的ecscript解析器\n```javascript\neval('alert(123)')\n```\n页面直接就会弹出alert框，显示123   \n\n> eval 不会有变量提升，应为解析的时候，里面的内容是字符串，同时使用它的时候要谨慎，可能有用户恶意输入威胁你的站点或应用程序安全的代码。    \n\n#### 3.Math对象\n##### min()和max()方法\n```javascript\nvar max = Math.max(3,2,23,100)\nconsole.log(max) // 100\n\nvar arr = [3,2,23,100]\nvar maxNum = Math.max.apply(Math, arr)\nconsole.log(maxNum) // 100\n```\n#### 舍入方法\n1.Math.ceil() 执行向上舍入\n2.Math.floor() 执行向下舍入\n3.Math.round() 标准的四舍五入\n```javascript\nconsole.log(Math.ceil(25.9)) // 26\nconsole.log(Math.ceil(25.5)) // 26\nconsole.log(Math.ceil(25.1)) // 26\n\nconsole.log(Math.floor(25.9)) // 25\nconsole.log(Math.floor(25.5)) // 25\nconsole.log(Math.floor(25.1)) // 25\n\nconsole.log(Math.round(25.9)) // 26\nconsole.log(Math.round(25.5)) // 26\nconsole.log(Math.round(25.1)) // 25\n```\n\n#### random()：返回介于0到1之间的随机数\n\n#### 其他方法\n![blockchain](https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/hps/5/1.png)\n\n### 小结\n对象在JavaScript中被称为引用类型的值,而且有一些内置的引用类型可以用来创建特定的对象，现简要总结如下:    \n口 引用类型与传统面向对象程序设计中的类相似,但实现不同;\n口 object是一个基础类型,其他所有类型都从object继承了基本的行为;\n口 Array类型是一组值的有序列表,同时还提供了操作和转换这些值的功能;\n口 Date类型提供了有关日期和时间的信息,包括当前日期和时间以及相关的计算功能O;\n口 RegExp类型是ECMAScript支持正则表达式的一个接口,提供了最基本的和一些高级正则表达式功能。\n    函数实际上是Function类型的实例,因此函数也是对象;而这一点正是JavasScript最有特色的地方。由于函数也是对象,所以函数也拥有方法,可以用来增强其行为。    \n\n    因为有了基本包装类型,所以JavaScript中的基本类型值可以被当作对象来访问。三种1型分别是: Boolean, Number和stxing。以下是它们共同的特征:    \n\n口 每个包装类型都映射到同名的基本类型;\n口 在读取模式下访问基本类型值时,就会创建对应的基本包装类型的一个对象,从而方便了解数据操作;\n口 操作基本类型值的语句一经执行完毕,就会立即销毁新创建的包装对象。    \n\n在所有代码执行之前,作用域中就已经存在两个内置对象:G1obal和Math在大多数ECMAScript实现中都不能直接访问Global对象;不过, Web浏览器实现了承担该角色的window对象量和函数都是G1obal对象的属性。Math对象提供了很多属性和方法,用于辅助完成复杂的数学计算任务。\n","slug":"红皮书第五章-引用类型","published":1,"updated":"2020-08-04T02:09:09.314Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdr00y6c002oe7zcdhbe1jc7","content":"<p><a href=\"https://www.songyanbin.com/2020/07/02/%E5%AD%97%E7%AC%A6%E7%AA%9C%E6%95%B0%E7%BB%84%E5%B8%B8%E7%94%A8%E6%98%93%E6%B7%B7%E6%B7%86%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93/\">红皮书第五章-引用类型-字符窜数组常用易混淆方法总结</a>  ( 6/24 )  </p>\n<h3 id=\"global-对象\"><a href=\"#global-对象\" class=\"headerlink\" title=\"global 对象\"></a>global 对象</h3><h4 id=\"1-url编码方法\"><a href=\"#1-url编码方法\" class=\"headerlink\" title=\"1.url编码方法\"></a>1.url编码方法</h4><p>encodeURI()和encodeURIComponent()可以对浏览器url进行编码，以便浏览器更好的解读。<br><a id=\"more\"></a><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> url = <span class=\"string\">'http://www.baidu.com/illent value.html#start'</span></span><br><span class=\"line\">encodeURL(url) <span class=\"comment\">// http://www.baidu.com/illent%20value.html#start</span></span><br><span class=\"line\">encodeURLComponent(url) <span class=\"comment\">// http%3A%2F%2Fwww.baidu.com%2Fillent%20value.html%23start</span></span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>一般来说，我们平常常用的是encodeURLComponent 方法，应为我们主要是对参数进行编码，而很少对基础url域名进行编码。</p>\n</blockquote>\n<p>相对以上的解码方法为：decodeURI()和decodeURIComponent()    </p>\n<h4 id=\"2-eval\"><a href=\"#2-eval\" class=\"headerlink\" title=\"2.eval()\"></a>2.eval()</h4><p>eval() 就相当于一个完整的ecscript解析器<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">eval</span>(<span class=\"string\">'alert(123)'</span>)</span><br></pre></td></tr></table></figure></p>\n<p>页面直接就会弹出alert框，显示123   </p>\n<blockquote>\n<p>eval 不会有变量提升，应为解析的时候，里面的内容是字符串，同时使用它的时候要谨慎，可能有用户恶意输入威胁你的站点或应用程序安全的代码。    </p>\n</blockquote>\n<h4 id=\"3-Math对象\"><a href=\"#3-Math对象\" class=\"headerlink\" title=\"3.Math对象\"></a>3.Math对象</h4><h5 id=\"min-和max-方法\"><a href=\"#min-和max-方法\" class=\"headerlink\" title=\"min()和max()方法\"></a>min()和max()方法</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> max = <span class=\"built_in\">Math</span>.max(<span class=\"number\">3</span>,<span class=\"number\">2</span>,<span class=\"number\">23</span>,<span class=\"number\">100</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(max) <span class=\"comment\">// 100</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">3</span>,<span class=\"number\">2</span>,<span class=\"number\">23</span>,<span class=\"number\">100</span>]</span><br><span class=\"line\"><span class=\"keyword\">var</span> maxNum = <span class=\"built_in\">Math</span>.max.apply(<span class=\"built_in\">Math</span>, arr)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(maxNum) <span class=\"comment\">// 100</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"舍入方法\"><a href=\"#舍入方法\" class=\"headerlink\" title=\"舍入方法\"></a>舍入方法</h4><p>1.Math.ceil() 执行向上舍入<br>2.Math.floor() 执行向下舍入<br>3.Math.round() 标准的四舍五入<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">Math</span>.ceil(<span class=\"number\">25.9</span>)) <span class=\"comment\">// 26</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">Math</span>.ceil(<span class=\"number\">25.5</span>)) <span class=\"comment\">// 26</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">Math</span>.ceil(<span class=\"number\">25.1</span>)) <span class=\"comment\">// 26</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">Math</span>.floor(<span class=\"number\">25.9</span>)) <span class=\"comment\">// 25</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">Math</span>.floor(<span class=\"number\">25.5</span>)) <span class=\"comment\">// 25</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">Math</span>.floor(<span class=\"number\">25.1</span>)) <span class=\"comment\">// 25</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">Math</span>.round(<span class=\"number\">25.9</span>)) <span class=\"comment\">// 26</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">Math</span>.round(<span class=\"number\">25.5</span>)) <span class=\"comment\">// 26</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">Math</span>.round(<span class=\"number\">25.1</span>)) <span class=\"comment\">// 25</span></span><br></pre></td></tr></table></figure></p>\n<h4 id=\"random-：返回介于0到1之间的随机数\"><a href=\"#random-：返回介于0到1之间的随机数\" class=\"headerlink\" title=\"random()：返回介于0到1之间的随机数\"></a>random()：返回介于0到1之间的随机数</h4><h4 id=\"其他方法\"><a href=\"#其他方法\" class=\"headerlink\" title=\"其他方法\"></a>其他方法</h4><p><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/hps/5/1.png\" alt=\"blockchain\"></p>\n<h3 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h3><p>对象在JavaScript中被称为引用类型的值,而且有一些内置的引用类型可以用来创建特定的对象，现简要总结如下:<br>口 引用类型与传统面向对象程序设计中的类相似,但实现不同;<br>口 object是一个基础类型,其他所有类型都从object继承了基本的行为;<br>口 Array类型是一组值的有序列表,同时还提供了操作和转换这些值的功能;<br>口 Date类型提供了有关日期和时间的信息,包括当前日期和时间以及相关的计算功能O;<br>口 RegExp类型是ECMAScript支持正则表达式的一个接口,提供了最基本的和一些高级正则表达式功能。<br>    函数实际上是Function类型的实例,因此函数也是对象;而这一点正是JavasScript最有特色的地方。由于函数也是对象,所以函数也拥有方法,可以用来增强其行为。    </p>\n<pre><code>因为有了基本包装类型,所以JavaScript中的基本类型值可以被当作对象来访问。三种1型分别是: Boolean, Number和stxing。以下是它们共同的特征:    \n</code></pre><p>口 每个包装类型都映射到同名的基本类型;<br>口 在读取模式下访问基本类型值时,就会创建对应的基本包装类型的一个对象,从而方便了解数据操作;<br>口 操作基本类型值的语句一经执行完毕,就会立即销毁新创建的包装对象。    </p>\n<p>在所有代码执行之前,作用域中就已经存在两个内置对象:G1obal和Math在大多数ECMAScript实现中都不能直接访问Global对象;不过, Web浏览器实现了承担该角色的window对象量和函数都是G1obal对象的属性。Math对象提供了很多属性和方法,用于辅助完成复杂的数学计算任务。</p>\n","site":{"data":{}},"excerpt":"<p><a href=\"https://www.songyanbin.com/2020/07/02/%E5%AD%97%E7%AC%A6%E7%AA%9C%E6%95%B0%E7%BB%84%E5%B8%B8%E7%94%A8%E6%98%93%E6%B7%B7%E6%B7%86%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93/\">红皮书第五章-引用类型-字符窜数组常用易混淆方法总结</a>  ( 6/24 )  </p>\n<h3 id=\"global-对象\"><a href=\"#global-对象\" class=\"headerlink\" title=\"global 对象\"></a>global 对象</h3><h4 id=\"1-url编码方法\"><a href=\"#1-url编码方法\" class=\"headerlink\" title=\"1.url编码方法\"></a>1.url编码方法</h4><p>encodeURI()和encodeURIComponent()可以对浏览器url进行编码，以便浏览器更好的解读。<br>","more":"<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> url = <span class=\"string\">'http://www.baidu.com/illent value.html#start'</span></span><br><span class=\"line\">encodeURL(url) <span class=\"comment\">// http://www.baidu.com/illent%20value.html#start</span></span><br><span class=\"line\">encodeURLComponent(url) <span class=\"comment\">// http%3A%2F%2Fwww.baidu.com%2Fillent%20value.html%23start</span></span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>一般来说，我们平常常用的是encodeURLComponent 方法，应为我们主要是对参数进行编码，而很少对基础url域名进行编码。</p>\n</blockquote>\n<p>相对以上的解码方法为：decodeURI()和decodeURIComponent()    </p>\n<h4 id=\"2-eval\"><a href=\"#2-eval\" class=\"headerlink\" title=\"2.eval()\"></a>2.eval()</h4><p>eval() 就相当于一个完整的ecscript解析器<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">eval</span>(<span class=\"string\">'alert(123)'</span>)</span><br></pre></td></tr></table></figure></p>\n<p>页面直接就会弹出alert框，显示123   </p>\n<blockquote>\n<p>eval 不会有变量提升，应为解析的时候，里面的内容是字符串，同时使用它的时候要谨慎，可能有用户恶意输入威胁你的站点或应用程序安全的代码。    </p>\n</blockquote>\n<h4 id=\"3-Math对象\"><a href=\"#3-Math对象\" class=\"headerlink\" title=\"3.Math对象\"></a>3.Math对象</h4><h5 id=\"min-和max-方法\"><a href=\"#min-和max-方法\" class=\"headerlink\" title=\"min()和max()方法\"></a>min()和max()方法</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> max = <span class=\"built_in\">Math</span>.max(<span class=\"number\">3</span>,<span class=\"number\">2</span>,<span class=\"number\">23</span>,<span class=\"number\">100</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(max) <span class=\"comment\">// 100</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">3</span>,<span class=\"number\">2</span>,<span class=\"number\">23</span>,<span class=\"number\">100</span>]</span><br><span class=\"line\"><span class=\"keyword\">var</span> maxNum = <span class=\"built_in\">Math</span>.max.apply(<span class=\"built_in\">Math</span>, arr)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(maxNum) <span class=\"comment\">// 100</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"舍入方法\"><a href=\"#舍入方法\" class=\"headerlink\" title=\"舍入方法\"></a>舍入方法</h4><p>1.Math.ceil() 执行向上舍入<br>2.Math.floor() 执行向下舍入<br>3.Math.round() 标准的四舍五入<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">Math</span>.ceil(<span class=\"number\">25.9</span>)) <span class=\"comment\">// 26</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">Math</span>.ceil(<span class=\"number\">25.5</span>)) <span class=\"comment\">// 26</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">Math</span>.ceil(<span class=\"number\">25.1</span>)) <span class=\"comment\">// 26</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">Math</span>.floor(<span class=\"number\">25.9</span>)) <span class=\"comment\">// 25</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">Math</span>.floor(<span class=\"number\">25.5</span>)) <span class=\"comment\">// 25</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">Math</span>.floor(<span class=\"number\">25.1</span>)) <span class=\"comment\">// 25</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">Math</span>.round(<span class=\"number\">25.9</span>)) <span class=\"comment\">// 26</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">Math</span>.round(<span class=\"number\">25.5</span>)) <span class=\"comment\">// 26</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">Math</span>.round(<span class=\"number\">25.1</span>)) <span class=\"comment\">// 25</span></span><br></pre></td></tr></table></figure></p>\n<h4 id=\"random-：返回介于0到1之间的随机数\"><a href=\"#random-：返回介于0到1之间的随机数\" class=\"headerlink\" title=\"random()：返回介于0到1之间的随机数\"></a>random()：返回介于0到1之间的随机数</h4><h4 id=\"其他方法\"><a href=\"#其他方法\" class=\"headerlink\" title=\"其他方法\"></a>其他方法</h4><p><img src=\"https://raw.githubusercontent.com/xiaosongread/github-xiaosongread-hexo/master/img-folder/hps/5/1.png\" alt=\"blockchain\"></p>\n<h3 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h3><p>对象在JavaScript中被称为引用类型的值,而且有一些内置的引用类型可以用来创建特定的对象，现简要总结如下:<br>口 引用类型与传统面向对象程序设计中的类相似,但实现不同;<br>口 object是一个基础类型,其他所有类型都从object继承了基本的行为;<br>口 Array类型是一组值的有序列表,同时还提供了操作和转换这些值的功能;<br>口 Date类型提供了有关日期和时间的信息,包括当前日期和时间以及相关的计算功能O;<br>口 RegExp类型是ECMAScript支持正则表达式的一个接口,提供了最基本的和一些高级正则表达式功能。<br>    函数实际上是Function类型的实例,因此函数也是对象;而这一点正是JavasScript最有特色的地方。由于函数也是对象,所以函数也拥有方法,可以用来增强其行为。    </p>\n<pre><code>因为有了基本包装类型,所以JavaScript中的基本类型值可以被当作对象来访问。三种1型分别是: Boolean, Number和stxing。以下是它们共同的特征:    \n</code></pre><p>口 每个包装类型都映射到同名的基本类型;<br>口 在读取模式下访问基本类型值时,就会创建对应的基本包装类型的一个对象,从而方便了解数据操作;<br>口 操作基本类型值的语句一经执行完毕,就会立即销毁新创建的包装对象。    </p>\n<p>在所有代码执行之前,作用域中就已经存在两个内置对象:G1obal和Math在大多数ECMAScript实现中都不能直接访问Global对象;不过, Web浏览器实现了承担该角色的window对象量和函数都是G1obal对象的属性。Math对象提供了很多属性和方法,用于辅助完成复杂的数学计算任务。</p>"},{"title":"字符窜数组常用易混淆方法总结","date":"2020-07-02T07:25:11.000Z","_content":"## 字符窜\n### substring(start开始位置的索引,end结束位置索引) 截取的位置不包含结束位置的字符,只写一个参数表示从开始位置截取到最后\n```javascript\nvar str='abcdefg'; \nstr.substring(1) //得到bcdefg  \nstr.substring(1,3) //得到bc\n```\n> 输入负值时将负值变为0，哪个较小作为开始位置\n\n<!-- more -->\n\n```javascript\nvar str='abcdefg';\nstr.substing(-1,1) =>str.substring(0,1) //a\nstr.substring(1,-2) =>str.substring(0,1) //a\n```\n### 2.slice(start开始位置索引，end结束位置索引) 基本和substring相似,区别在参数为负数。\n```javascript\nvar str='abcdefg';\nstr.slice(1)  //bcdefg      \nstr.substring(1,3) // bc\n```\n\n> 输入负值时 值与字符串的长度相加\n\n```javascript\nvar str='abcdefg';\nstr.slice(-1) =>str.slice(6) //g\nstr.slice(1,-2) =>str.slice(1,5) //bcde\nstr.slice(-2,-1)=>str.slice(5,6) //f\n```\n> 输入值绝对值大于字符串的长度时变为 0\n\n```javascript\nvar str='abcdefg';\nstr.slice(-22) =>str.substring(0) //abcdefg\n```\n\n> 第二个参数绝对值大于字符串的长度时，返回''\n\n```javascript\nvar str='abcdefg';\nstr.slice(22) =>str.substring(0) //''\n```\n\n### 3.substr(start开始位置索引,end需要返回的字符个数)\n```javascript\nvar str='abcdefg';\nstr.substr(1) //bcdefg      \nstr.substr(1,1) //b\n```\n\n> 输入负值时 start参数与字符串的长度相加 ,end为负时参数变为0\n```javascript\nvar str='abcdefg';\nstr.substr(-1) =>str.substr(6)//g        \nstr.substr(-2,-3) // ''\n```\n\n### 4.charAt(index) 方法返回指定索引位置处的字符。如果超出有效范围(0与字符串长度减一)的索引值返回空字符串.\n```javascript\nvar str='abcdefg';\nstr.charAt(2) // c\n```\n\n### 5.indexOf(string) 返回String对象内第一次出现子字符串位置。如果没有找到子字符串，则返回-1。\n```javascript\nvar str='abcdefga' \nstr.indexOf('a') // 0 str.indexOf('h') //-1\n```\n\n### 6.lastIndexOf(string) 倒叙查找,\n```javascript\nvar str='abcdefga' \nstr.lastIndexOf('a') // 7\n```\n\n### 字符串转化数组\n#### split(str) 将字符串以参数分割为数组\n```javascript\nvar str='abcadeafg' \nstr.split('a') //[\"\", \"bc\", \"de\", \"fg\"]\n```\n\n### 1.toLowerCase方法返回一个字符串，该字符串中的字母被转换成小写。\n```javascript\nvar a = 'ASD'\nvar b = a.toLowerCase()\nconsole.log(a,b) // ASD asd\n```\n\n### 2.toUpperCase方法返回一个字符串，该字符串中的所有字母都被转换为大写字母。\n\n### 3.match() – 方法可在字符串内检索指定的值，或找到一个或多个正则表达式的匹配\n```javascript\nvar str=\"Hello world!\"\nstr.match(\"world\")\nstr.match(\"World\")\nstr.match(\"worlld\")\nstr.match(\"world!\")\n// ['world'] null null ['world!']\n```\n\n```javascript\nvar str=\"1 plus 2 equal 3\"\nvar b = str.match(/\\d+/g)\n// [\"1\", \"2\", \"3\"]\n```\n\n### 4.search 方法返回与正则表达式查找内容匹配的第一个字符串的位置。\n```javascript\nvar str=\"Visit Runoob!\"; \nvar n=str.search(\"Runoob\");\n// 6\nvar str=\"Mr. Blue has a blue house\";\ndocument.write(str.search(/blue/i)); // 执行一次忽略大小写的检索:\n// 4\n```\n\n### 5.replace 用来查找匹配一个正则表达式的字符串，然后使用新字符串代替匹配。\n```javascript\nvar text = \"javascript Tutorial\";\nvar a = text.replace(/javascript/i, \"JavaScript\");\nconsole.log(text, a) // javascript Tutorial   JavaScript Tutorial\n```\n\n## 数组\n### 1.slice(start,end)：方法可从已有数组中返回选定的元素，返回一个新数组，包含从start到end（不包含该元素）的数组元素\n> 该方法不会改变原有数组\n\n```javascript\nvar a = [1,2,3,4,5]\nvar b = a.slice(0,1)\nconsole.log(a,b)\n// [1, 2, 3, 4, 5] [1]\n```\n\n> 同时slice(start,end)可以作用于字符串的切割\n\n```javascript\nvar a = 'asdzxc123'\nvar b = a.slice(0,3)\nconsole.log(a, b)\n// asdzxc123 asd\n```\n\n### 2.splice（index,howmany,item1,...itemX）：该方法向或者从数组中添加或者删除项目，返回被删除的项目。（该方法会改变原数组）\n\n> index参数：必须，整数，规定添加或者删除的位置，使用负数，从数组尾部规定位置。   \nhowmany参数：必须，要删除的数量，如果为0，则不删除项目。   \ntem1,...itemX参数：可选，向数组添加的新项目。\n\n```javascript\nvar c = [1,2,3,4,5]\nvar d = c.splice(0,4)\nconsole.log(c,d)\n// [5] [1,2,3,4]\n```\n\n```javascript\nvar a = [1,2,3,4]\nvar b = a.splice(1,0,'a')\nconsole.log(a,b)\n// [1, \"a\", 2, 3, 4] []\n```\n\n方法名|功能|demo|结果\n---|:--:|:--:|:--:\npush|添加到(最后) 返回添加后的数组|var a = [1,2,3];var b = a.push(4);console.log(a,b)|[1, 2, 3, 4] 4\nunshift|添加到(最前面) 返回添加后的数组|var a = [1,2,3];var b = a.unshift(4);console.log(a,b)|[4, 1, 2, 3] 4\npop|删除(最后一项) 返回处理后的数组|var a = [1,2,3];var b = a.pop();console.log(a,b)|[1, 2] 3\nshift|删除（从前面） 返回处理后的数组|var a = [1,2,3];var b = a.shift();console.log(a,b)|[2, 3] 1\n\n## 数组转化字符窜\n### join 数组转化为字符串\n\n```javascript\nvar arr=[1,2,3,4,5]\nstr=arr.join('--');\nconsole.log(str); // 1--2--3--4--5 以join内的参数切割数组\nconsole.log(arr); // [1,2,3,4,5]  原数组未变\n```\n\n### concat 数组合并\n### every();对数组中的每一项运行给定函数,如果该函数对每一项都返回true,则返回true\n### snome ();对数组中的每一项运行给定函数,如果该函数对任一项返回 true,则返true\n### filter();对数组组中的每一项运行给定函数,返回该函数会返回 true 的项组成的数组\n### forEach();对数组中的每一项运行给定函数。这个方法没有返回值。\n### map();对数组中的每—项运行始定函数,返回每次函数调用的结果组成的数组。\n### arr.forEach(item,index,array){} 遍历，循环 类似jquery的each\n### map方法 映射 用法和forEach类似\n```javascript\nvar men=[\n    {'name':1,'age':12},\n    {'name':2,'age':22},\n    {'name':3,'age':33}\n];\nage=men.map(function(item){\n    return item.age;\n})\n//[12, 22, 33]\n```\n\n### arr.sort 排序\n```javascript\nvar arr=[1,2,22,11,33,3,5,4];\nconsole.log(arr.sort()) // [1,11,2,22,3,33,4,5]\n```\n> 默认情况下sort方法是按ascii字母顺序排序的，而非我们认为是按数字大小排序    \n\n```javascript\nvar a = [1,1,10,2,4,9,5,3]\nfunction compare(v1,v2) {\nif (v1>v2) {\n    return 1\n} else if(v1<v2) {\n    return -1\n} else if (v1===v2){\n    return 0\n}\n}\nvar b = a.sort(compare)\nconsole.log(b) // [1, 1, 2, 3, 4, 5, 9, 10]\n\nvar a = [1,1,10,2,4,9,5,3]\nfunction compare(v1, v2){\nreturn v2-v1\n}\nvar b = a.sort(compare)\nconsole.log(b) // [10, 9, 5, 4, 3, 2, 1, 1]\n\nvar a = [1,1,10,2,4,9,5,3]\nfunction compare(v1, v2){\nreturn v1-v2\n}\nvar b = a.sort(compare)\nconsole.log(b) // [1, 1, 2, 3, 4, 5, 9, 10]\n```\n### reduce 可以用来执行求数组所有值得总和\n```javascript\nvar a = [1,2,3,4,5]\nvar sum = a.reduce(function(prev, cur, index, array){\n    return prev + cur\n})\nconsole.log(sum) // 15\n```\n> reduce和reduceRight的唯一区别是，一个是从第一个开始加，第二个是从最后一项开始计算加，其余无任何区别\n\n\n","source":"_posts/字符窜数组常用易混淆方法总结.md","raw":"---\ntitle: 字符窜数组常用易混淆方法总结\ncategories: js-end\ndate: 2020-07-02 15:25:11\n---\n## 字符窜\n### substring(start开始位置的索引,end结束位置索引) 截取的位置不包含结束位置的字符,只写一个参数表示从开始位置截取到最后\n```javascript\nvar str='abcdefg'; \nstr.substring(1) //得到bcdefg  \nstr.substring(1,3) //得到bc\n```\n> 输入负值时将负值变为0，哪个较小作为开始位置\n\n<!-- more -->\n\n```javascript\nvar str='abcdefg';\nstr.substing(-1,1) =>str.substring(0,1) //a\nstr.substring(1,-2) =>str.substring(0,1) //a\n```\n### 2.slice(start开始位置索引，end结束位置索引) 基本和substring相似,区别在参数为负数。\n```javascript\nvar str='abcdefg';\nstr.slice(1)  //bcdefg      \nstr.substring(1,3) // bc\n```\n\n> 输入负值时 值与字符串的长度相加\n\n```javascript\nvar str='abcdefg';\nstr.slice(-1) =>str.slice(6) //g\nstr.slice(1,-2) =>str.slice(1,5) //bcde\nstr.slice(-2,-1)=>str.slice(5,6) //f\n```\n> 输入值绝对值大于字符串的长度时变为 0\n\n```javascript\nvar str='abcdefg';\nstr.slice(-22) =>str.substring(0) //abcdefg\n```\n\n> 第二个参数绝对值大于字符串的长度时，返回''\n\n```javascript\nvar str='abcdefg';\nstr.slice(22) =>str.substring(0) //''\n```\n\n### 3.substr(start开始位置索引,end需要返回的字符个数)\n```javascript\nvar str='abcdefg';\nstr.substr(1) //bcdefg      \nstr.substr(1,1) //b\n```\n\n> 输入负值时 start参数与字符串的长度相加 ,end为负时参数变为0\n```javascript\nvar str='abcdefg';\nstr.substr(-1) =>str.substr(6)//g        \nstr.substr(-2,-3) // ''\n```\n\n### 4.charAt(index) 方法返回指定索引位置处的字符。如果超出有效范围(0与字符串长度减一)的索引值返回空字符串.\n```javascript\nvar str='abcdefg';\nstr.charAt(2) // c\n```\n\n### 5.indexOf(string) 返回String对象内第一次出现子字符串位置。如果没有找到子字符串，则返回-1。\n```javascript\nvar str='abcdefga' \nstr.indexOf('a') // 0 str.indexOf('h') //-1\n```\n\n### 6.lastIndexOf(string) 倒叙查找,\n```javascript\nvar str='abcdefga' \nstr.lastIndexOf('a') // 7\n```\n\n### 字符串转化数组\n#### split(str) 将字符串以参数分割为数组\n```javascript\nvar str='abcadeafg' \nstr.split('a') //[\"\", \"bc\", \"de\", \"fg\"]\n```\n\n### 1.toLowerCase方法返回一个字符串，该字符串中的字母被转换成小写。\n```javascript\nvar a = 'ASD'\nvar b = a.toLowerCase()\nconsole.log(a,b) // ASD asd\n```\n\n### 2.toUpperCase方法返回一个字符串，该字符串中的所有字母都被转换为大写字母。\n\n### 3.match() – 方法可在字符串内检索指定的值，或找到一个或多个正则表达式的匹配\n```javascript\nvar str=\"Hello world!\"\nstr.match(\"world\")\nstr.match(\"World\")\nstr.match(\"worlld\")\nstr.match(\"world!\")\n// ['world'] null null ['world!']\n```\n\n```javascript\nvar str=\"1 plus 2 equal 3\"\nvar b = str.match(/\\d+/g)\n// [\"1\", \"2\", \"3\"]\n```\n\n### 4.search 方法返回与正则表达式查找内容匹配的第一个字符串的位置。\n```javascript\nvar str=\"Visit Runoob!\"; \nvar n=str.search(\"Runoob\");\n// 6\nvar str=\"Mr. Blue has a blue house\";\ndocument.write(str.search(/blue/i)); // 执行一次忽略大小写的检索:\n// 4\n```\n\n### 5.replace 用来查找匹配一个正则表达式的字符串，然后使用新字符串代替匹配。\n```javascript\nvar text = \"javascript Tutorial\";\nvar a = text.replace(/javascript/i, \"JavaScript\");\nconsole.log(text, a) // javascript Tutorial   JavaScript Tutorial\n```\n\n## 数组\n### 1.slice(start,end)：方法可从已有数组中返回选定的元素，返回一个新数组，包含从start到end（不包含该元素）的数组元素\n> 该方法不会改变原有数组\n\n```javascript\nvar a = [1,2,3,4,5]\nvar b = a.slice(0,1)\nconsole.log(a,b)\n// [1, 2, 3, 4, 5] [1]\n```\n\n> 同时slice(start,end)可以作用于字符串的切割\n\n```javascript\nvar a = 'asdzxc123'\nvar b = a.slice(0,3)\nconsole.log(a, b)\n// asdzxc123 asd\n```\n\n### 2.splice（index,howmany,item1,...itemX）：该方法向或者从数组中添加或者删除项目，返回被删除的项目。（该方法会改变原数组）\n\n> index参数：必须，整数，规定添加或者删除的位置，使用负数，从数组尾部规定位置。   \nhowmany参数：必须，要删除的数量，如果为0，则不删除项目。   \ntem1,...itemX参数：可选，向数组添加的新项目。\n\n```javascript\nvar c = [1,2,3,4,5]\nvar d = c.splice(0,4)\nconsole.log(c,d)\n// [5] [1,2,3,4]\n```\n\n```javascript\nvar a = [1,2,3,4]\nvar b = a.splice(1,0,'a')\nconsole.log(a,b)\n// [1, \"a\", 2, 3, 4] []\n```\n\n方法名|功能|demo|结果\n---|:--:|:--:|:--:\npush|添加到(最后) 返回添加后的数组|var a = [1,2,3];var b = a.push(4);console.log(a,b)|[1, 2, 3, 4] 4\nunshift|添加到(最前面) 返回添加后的数组|var a = [1,2,3];var b = a.unshift(4);console.log(a,b)|[4, 1, 2, 3] 4\npop|删除(最后一项) 返回处理后的数组|var a = [1,2,3];var b = a.pop();console.log(a,b)|[1, 2] 3\nshift|删除（从前面） 返回处理后的数组|var a = [1,2,3];var b = a.shift();console.log(a,b)|[2, 3] 1\n\n## 数组转化字符窜\n### join 数组转化为字符串\n\n```javascript\nvar arr=[1,2,3,4,5]\nstr=arr.join('--');\nconsole.log(str); // 1--2--3--4--5 以join内的参数切割数组\nconsole.log(arr); // [1,2,3,4,5]  原数组未变\n```\n\n### concat 数组合并\n### every();对数组中的每一项运行给定函数,如果该函数对每一项都返回true,则返回true\n### snome ();对数组中的每一项运行给定函数,如果该函数对任一项返回 true,则返true\n### filter();对数组组中的每一项运行给定函数,返回该函数会返回 true 的项组成的数组\n### forEach();对数组中的每一项运行给定函数。这个方法没有返回值。\n### map();对数组中的每—项运行始定函数,返回每次函数调用的结果组成的数组。\n### arr.forEach(item,index,array){} 遍历，循环 类似jquery的each\n### map方法 映射 用法和forEach类似\n```javascript\nvar men=[\n    {'name':1,'age':12},\n    {'name':2,'age':22},\n    {'name':3,'age':33}\n];\nage=men.map(function(item){\n    return item.age;\n})\n//[12, 22, 33]\n```\n\n### arr.sort 排序\n```javascript\nvar arr=[1,2,22,11,33,3,5,4];\nconsole.log(arr.sort()) // [1,11,2,22,3,33,4,5]\n```\n> 默认情况下sort方法是按ascii字母顺序排序的，而非我们认为是按数字大小排序    \n\n```javascript\nvar a = [1,1,10,2,4,9,5,3]\nfunction compare(v1,v2) {\nif (v1>v2) {\n    return 1\n} else if(v1<v2) {\n    return -1\n} else if (v1===v2){\n    return 0\n}\n}\nvar b = a.sort(compare)\nconsole.log(b) // [1, 1, 2, 3, 4, 5, 9, 10]\n\nvar a = [1,1,10,2,4,9,5,3]\nfunction compare(v1, v2){\nreturn v2-v1\n}\nvar b = a.sort(compare)\nconsole.log(b) // [10, 9, 5, 4, 3, 2, 1, 1]\n\nvar a = [1,1,10,2,4,9,5,3]\nfunction compare(v1, v2){\nreturn v1-v2\n}\nvar b = a.sort(compare)\nconsole.log(b) // [1, 1, 2, 3, 4, 5, 9, 10]\n```\n### reduce 可以用来执行求数组所有值得总和\n```javascript\nvar a = [1,2,3,4,5]\nvar sum = a.reduce(function(prev, cur, index, array){\n    return prev + cur\n})\nconsole.log(sum) // 15\n```\n> reduce和reduceRight的唯一区别是，一个是从第一个开始加，第二个是从最后一项开始计算加，其余无任何区别\n\n\n","slug":"字符窜数组常用易混淆方法总结","published":1,"updated":"2020-07-28T03:27:11.029Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdr00y6e002te7zcgzp29c1a","content":"<h2 id=\"字符窜\"><a href=\"#字符窜\" class=\"headerlink\" title=\"字符窜\"></a>字符窜</h2><h3 id=\"substring-start开始位置的索引-end结束位置索引-截取的位置不包含结束位置的字符-只写一个参数表示从开始位置截取到最后\"><a href=\"#substring-start开始位置的索引-end结束位置索引-截取的位置不包含结束位置的字符-只写一个参数表示从开始位置截取到最后\" class=\"headerlink\" title=\"substring(start开始位置的索引,end结束位置索引) 截取的位置不包含结束位置的字符,只写一个参数表示从开始位置截取到最后\"></a>substring(start开始位置的索引,end结束位置索引) 截取的位置不包含结束位置的字符,只写一个参数表示从开始位置截取到最后</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str=<span class=\"string\">'abcdefg'</span>; </span><br><span class=\"line\">str.substring(<span class=\"number\">1</span>) <span class=\"comment\">//得到bcdefg  </span></span><br><span class=\"line\">str.substring(<span class=\"number\">1</span>,<span class=\"number\">3</span>) <span class=\"comment\">//得到bc</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>输入负值时将负值变为0，哪个较小作为开始位置</p>\n</blockquote>\n<a id=\"more\"></a>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str=<span class=\"string\">'abcdefg'</span>;</span><br><span class=\"line\">str.substing(<span class=\"number\">-1</span>,<span class=\"number\">1</span>) =&gt;str.substring(<span class=\"number\">0</span>,<span class=\"number\">1</span>) <span class=\"comment\">//a</span></span><br><span class=\"line\">str.substring(<span class=\"number\">1</span>,<span class=\"number\">-2</span>) =&gt;str.substring(<span class=\"number\">0</span>,<span class=\"number\">1</span>) <span class=\"comment\">//a</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"2-slice-start开始位置索引，end结束位置索引-基本和substring相似-区别在参数为负数。\"><a href=\"#2-slice-start开始位置索引，end结束位置索引-基本和substring相似-区别在参数为负数。\" class=\"headerlink\" title=\"2.slice(start开始位置索引，end结束位置索引) 基本和substring相似,区别在参数为负数。\"></a>2.slice(start开始位置索引，end结束位置索引) 基本和substring相似,区别在参数为负数。</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str=<span class=\"string\">'abcdefg'</span>;</span><br><span class=\"line\">str.slice(<span class=\"number\">1</span>)  <span class=\"comment\">//bcdefg      </span></span><br><span class=\"line\">str.substring(<span class=\"number\">1</span>,<span class=\"number\">3</span>) <span class=\"comment\">// bc</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>输入负值时 值与字符串的长度相加</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str=<span class=\"string\">'abcdefg'</span>;</span><br><span class=\"line\">str.slice(<span class=\"number\">-1</span>) =&gt;str.slice(<span class=\"number\">6</span>) <span class=\"comment\">//g</span></span><br><span class=\"line\">str.slice(<span class=\"number\">1</span>,<span class=\"number\">-2</span>) =&gt;str.slice(<span class=\"number\">1</span>,<span class=\"number\">5</span>) <span class=\"comment\">//bcde</span></span><br><span class=\"line\">str.slice(<span class=\"number\">-2</span>,<span class=\"number\">-1</span>)=&gt;str.slice(<span class=\"number\">5</span>,<span class=\"number\">6</span>) <span class=\"comment\">//f</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>输入值绝对值大于字符串的长度时变为 0</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str=<span class=\"string\">'abcdefg'</span>;</span><br><span class=\"line\">str.slice(<span class=\"number\">-22</span>) =&gt;str.substring(<span class=\"number\">0</span>) <span class=\"comment\">//abcdefg</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>第二个参数绝对值大于字符串的长度时，返回’’</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str=<span class=\"string\">'abcdefg'</span>;</span><br><span class=\"line\">str.slice(<span class=\"number\">22</span>) =&gt;str.substring(<span class=\"number\">0</span>) <span class=\"comment\">//''</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"3-substr-start开始位置索引-end需要返回的字符个数\"><a href=\"#3-substr-start开始位置索引-end需要返回的字符个数\" class=\"headerlink\" title=\"3.substr(start开始位置索引,end需要返回的字符个数)\"></a>3.substr(start开始位置索引,end需要返回的字符个数)</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str=<span class=\"string\">'abcdefg'</span>;</span><br><span class=\"line\">str.substr(<span class=\"number\">1</span>) <span class=\"comment\">//bcdefg      </span></span><br><span class=\"line\">str.substr(<span class=\"number\">1</span>,<span class=\"number\">1</span>) <span class=\"comment\">//b</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>输入负值时 start参数与字符串的长度相加 ,end为负时参数变为0<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str=<span class=\"string\">'abcdefg'</span>;</span><br><span class=\"line\">str.substr(<span class=\"number\">-1</span>) =&gt;str.substr(<span class=\"number\">6</span>)<span class=\"comment\">//g        </span></span><br><span class=\"line\">str.substr(<span class=\"number\">-2</span>,<span class=\"number\">-3</span>) <span class=\"comment\">// ''</span></span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<h3 id=\"4-charAt-index-方法返回指定索引位置处的字符。如果超出有效范围-0与字符串长度减一-的索引值返回空字符串\"><a href=\"#4-charAt-index-方法返回指定索引位置处的字符。如果超出有效范围-0与字符串长度减一-的索引值返回空字符串\" class=\"headerlink\" title=\"4.charAt(index) 方法返回指定索引位置处的字符。如果超出有效范围(0与字符串长度减一)的索引值返回空字符串.\"></a>4.charAt(index) 方法返回指定索引位置处的字符。如果超出有效范围(0与字符串长度减一)的索引值返回空字符串.</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str=<span class=\"string\">'abcdefg'</span>;</span><br><span class=\"line\">str.charAt(<span class=\"number\">2</span>) <span class=\"comment\">// c</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"5-indexOf-string-返回String对象内第一次出现子字符串位置。如果没有找到子字符串，则返回-1。\"><a href=\"#5-indexOf-string-返回String对象内第一次出现子字符串位置。如果没有找到子字符串，则返回-1。\" class=\"headerlink\" title=\"5.indexOf(string) 返回String对象内第一次出现子字符串位置。如果没有找到子字符串，则返回-1。\"></a>5.indexOf(string) 返回String对象内第一次出现子字符串位置。如果没有找到子字符串，则返回-1。</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str=<span class=\"string\">'abcdefga'</span> </span><br><span class=\"line\">str.indexOf(<span class=\"string\">'a'</span>) <span class=\"comment\">// 0 str.indexOf('h') //-1</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"6-lastIndexOf-string-倒叙查找\"><a href=\"#6-lastIndexOf-string-倒叙查找\" class=\"headerlink\" title=\"6.lastIndexOf(string) 倒叙查找,\"></a>6.lastIndexOf(string) 倒叙查找,</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str=<span class=\"string\">'abcdefga'</span> </span><br><span class=\"line\">str.lastIndexOf(<span class=\"string\">'a'</span>) <span class=\"comment\">// 7</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"字符串转化数组\"><a href=\"#字符串转化数组\" class=\"headerlink\" title=\"字符串转化数组\"></a>字符串转化数组</h3><h4 id=\"split-str-将字符串以参数分割为数组\"><a href=\"#split-str-将字符串以参数分割为数组\" class=\"headerlink\" title=\"split(str) 将字符串以参数分割为数组\"></a>split(str) 将字符串以参数分割为数组</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str=<span class=\"string\">'abcadeafg'</span> </span><br><span class=\"line\">str.split(<span class=\"string\">'a'</span>) <span class=\"comment\">//[\"\", \"bc\", \"de\", \"fg\"]</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"1-toLowerCase方法返回一个字符串，该字符串中的字母被转换成小写。\"><a href=\"#1-toLowerCase方法返回一个字符串，该字符串中的字母被转换成小写。\" class=\"headerlink\" title=\"1.toLowerCase方法返回一个字符串，该字符串中的字母被转换成小写。\"></a>1.toLowerCase方法返回一个字符串，该字符串中的字母被转换成小写。</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"string\">'ASD'</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> b = a.toLowerCase()</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a,b) <span class=\"comment\">// ASD asd</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"2-toUpperCase方法返回一个字符串，该字符串中的所有字母都被转换为大写字母。\"><a href=\"#2-toUpperCase方法返回一个字符串，该字符串中的所有字母都被转换为大写字母。\" class=\"headerlink\" title=\"2.toUpperCase方法返回一个字符串，该字符串中的所有字母都被转换为大写字母。\"></a>2.toUpperCase方法返回一个字符串，该字符串中的所有字母都被转换为大写字母。</h3><h3 id=\"3-match-–-方法可在字符串内检索指定的值，或找到一个或多个正则表达式的匹配\"><a href=\"#3-match-–-方法可在字符串内检索指定的值，或找到一个或多个正则表达式的匹配\" class=\"headerlink\" title=\"3.match() – 方法可在字符串内检索指定的值，或找到一个或多个正则表达式的匹配\"></a>3.match() – 方法可在字符串内检索指定的值，或找到一个或多个正则表达式的匹配</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str=<span class=\"string\">\"Hello world!\"</span></span><br><span class=\"line\">str.match(<span class=\"string\">\"world\"</span>)</span><br><span class=\"line\">str.match(<span class=\"string\">\"World\"</span>)</span><br><span class=\"line\">str.match(<span class=\"string\">\"worlld\"</span>)</span><br><span class=\"line\">str.match(<span class=\"string\">\"world!\"</span>)</span><br><span class=\"line\"><span class=\"comment\">// ['world'] null null ['world!']</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str=<span class=\"string\">\"1 plus 2 equal 3\"</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> b = str.match(<span class=\"regexp\">/\\d+/g</span>)</span><br><span class=\"line\"><span class=\"comment\">// [\"1\", \"2\", \"3\"]</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"4-search-方法返回与正则表达式查找内容匹配的第一个字符串的位置。\"><a href=\"#4-search-方法返回与正则表达式查找内容匹配的第一个字符串的位置。\" class=\"headerlink\" title=\"4.search 方法返回与正则表达式查找内容匹配的第一个字符串的位置。\"></a>4.search 方法返回与正则表达式查找内容匹配的第一个字符串的位置。</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str=<span class=\"string\">\"Visit Runoob!\"</span>; </span><br><span class=\"line\"><span class=\"keyword\">var</span> n=str.search(<span class=\"string\">\"Runoob\"</span>);</span><br><span class=\"line\"><span class=\"comment\">// 6</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> str=<span class=\"string\">\"Mr. Blue has a blue house\"</span>;</span><br><span class=\"line\"><span class=\"built_in\">document</span>.write(str.search(<span class=\"regexp\">/blue/i</span>)); <span class=\"comment\">// 执行一次忽略大小写的检索:</span></span><br><span class=\"line\"><span class=\"comment\">// 4</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"5-replace-用来查找匹配一个正则表达式的字符串，然后使用新字符串代替匹配。\"><a href=\"#5-replace-用来查找匹配一个正则表达式的字符串，然后使用新字符串代替匹配。\" class=\"headerlink\" title=\"5.replace 用来查找匹配一个正则表达式的字符串，然后使用新字符串代替匹配。\"></a>5.replace 用来查找匹配一个正则表达式的字符串，然后使用新字符串代替匹配。</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> text = <span class=\"string\">\"javascript Tutorial\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> a = text.replace(<span class=\"regexp\">/javascript/i</span>, <span class=\"string\">\"JavaScript\"</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(text, a) <span class=\"comment\">// javascript Tutorial   JavaScript Tutorial</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"数组\"><a href=\"#数组\" class=\"headerlink\" title=\"数组\"></a>数组</h2><h3 id=\"1-slice-start-end-：方法可从已有数组中返回选定的元素，返回一个新数组，包含从start到end（不包含该元素）的数组元素\"><a href=\"#1-slice-start-end-：方法可从已有数组中返回选定的元素，返回一个新数组，包含从start到end（不包含该元素）的数组元素\" class=\"headerlink\" title=\"1.slice(start,end)：方法可从已有数组中返回选定的元素，返回一个新数组，包含从start到end（不包含该元素）的数组元素\"></a>1.slice(start,end)：方法可从已有数组中返回选定的元素，返回一个新数组，包含从start到end（不包含该元素）的数组元素</h3><blockquote>\n<p>该方法不会改变原有数组</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>]</span><br><span class=\"line\"><span class=\"keyword\">var</span> b = a.slice(<span class=\"number\">0</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a,b)</span><br><span class=\"line\"><span class=\"comment\">// [1, 2, 3, 4, 5] [1]</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>同时slice(start,end)可以作用于字符串的切割</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"string\">'asdzxc123'</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> b = a.slice(<span class=\"number\">0</span>,<span class=\"number\">3</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a, b)</span><br><span class=\"line\"><span class=\"comment\">// asdzxc123 asd</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"2-splice（index-howmany-item1-…itemX）：该方法向或者从数组中添加或者删除项目，返回被删除的项目。（该方法会改变原数组）\"><a href=\"#2-splice（index-howmany-item1-…itemX）：该方法向或者从数组中添加或者删除项目，返回被删除的项目。（该方法会改变原数组）\" class=\"headerlink\" title=\"2.splice（index,howmany,item1,…itemX）：该方法向或者从数组中添加或者删除项目，返回被删除的项目。（该方法会改变原数组）\"></a>2.splice（index,howmany,item1,…itemX）：该方法向或者从数组中添加或者删除项目，返回被删除的项目。（该方法会改变原数组）</h3><blockquote>\n<p>index参数：必须，整数，规定添加或者删除的位置，使用负数，从数组尾部规定位置。<br>howmany参数：必须，要删除的数量，如果为0，则不删除项目。<br>tem1,…itemX参数：可选，向数组添加的新项目。</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> c = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>]</span><br><span class=\"line\"><span class=\"keyword\">var</span> d = c.splice(<span class=\"number\">0</span>,<span class=\"number\">4</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(c,d)</span><br><span class=\"line\"><span class=\"comment\">// [5] [1,2,3,4]</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>]</span><br><span class=\"line\"><span class=\"keyword\">var</span> b = a.splice(<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"string\">'a'</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a,b)</span><br><span class=\"line\"><span class=\"comment\">// [1, \"a\", 2, 3, 4] []</span></span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>方法名</th>\n<th style=\"text-align:center\">功能</th>\n<th style=\"text-align:center\">demo</th>\n<th style=\"text-align:center\">结果</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>push</td>\n<td style=\"text-align:center\">添加到(最后) 返回添加后的数组</td>\n<td style=\"text-align:center\">var a = [1,2,3];var b = a.push(4);console.log(a,b)</td>\n<td style=\"text-align:center\">[1, 2, 3, 4] 4</td>\n</tr>\n<tr>\n<td>unshift</td>\n<td style=\"text-align:center\">添加到(最前面) 返回添加后的数组</td>\n<td style=\"text-align:center\">var a = [1,2,3];var b = a.unshift(4);console.log(a,b)</td>\n<td style=\"text-align:center\">[4, 1, 2, 3] 4</td>\n</tr>\n<tr>\n<td>pop</td>\n<td style=\"text-align:center\">删除(最后一项) 返回处理后的数组</td>\n<td style=\"text-align:center\">var a = [1,2,3];var b = a.pop();console.log(a,b)</td>\n<td style=\"text-align:center\">[1, 2] 3</td>\n</tr>\n<tr>\n<td>shift</td>\n<td style=\"text-align:center\">删除（从前面） 返回处理后的数组</td>\n<td style=\"text-align:center\">var a = [1,2,3];var b = a.shift();console.log(a,b)</td>\n<td style=\"text-align:center\">[2, 3] 1</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"数组转化字符窜\"><a href=\"#数组转化字符窜\" class=\"headerlink\" title=\"数组转化字符窜\"></a>数组转化字符窜</h2><h3 id=\"join-数组转化为字符串\"><a href=\"#join-数组转化为字符串\" class=\"headerlink\" title=\"join 数组转化为字符串\"></a>join 数组转化为字符串</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr=[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>]</span><br><span class=\"line\">str=arr.join(<span class=\"string\">'--'</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(str); <span class=\"comment\">// 1--2--3--4--5 以join内的参数切割数组</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr); <span class=\"comment\">// [1,2,3,4,5]  原数组未变</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"concat-数组合并\"><a href=\"#concat-数组合并\" class=\"headerlink\" title=\"concat 数组合并\"></a>concat 数组合并</h3><h3 id=\"every-对数组中的每一项运行给定函数-如果该函数对每一项都返回true-则返回true\"><a href=\"#every-对数组中的每一项运行给定函数-如果该函数对每一项都返回true-则返回true\" class=\"headerlink\" title=\"every();对数组中的每一项运行给定函数,如果该函数对每一项都返回true,则返回true\"></a>every();对数组中的每一项运行给定函数,如果该函数对每一项都返回true,则返回true</h3><h3 id=\"snome-对数组中的每一项运行给定函数-如果该函数对任一项返回-true-则返true\"><a href=\"#snome-对数组中的每一项运行给定函数-如果该函数对任一项返回-true-则返true\" class=\"headerlink\" title=\"snome ();对数组中的每一项运行给定函数,如果该函数对任一项返回 true,则返true\"></a>snome ();对数组中的每一项运行给定函数,如果该函数对任一项返回 true,则返true</h3><h3 id=\"filter-对数组组中的每一项运行给定函数-返回该函数会返回-true-的项组成的数组\"><a href=\"#filter-对数组组中的每一项运行给定函数-返回该函数会返回-true-的项组成的数组\" class=\"headerlink\" title=\"filter();对数组组中的每一项运行给定函数,返回该函数会返回 true 的项组成的数组\"></a>filter();对数组组中的每一项运行给定函数,返回该函数会返回 true 的项组成的数组</h3><h3 id=\"forEach-对数组中的每一项运行给定函数。这个方法没有返回值。\"><a href=\"#forEach-对数组中的每一项运行给定函数。这个方法没有返回值。\" class=\"headerlink\" title=\"forEach();对数组中的每一项运行给定函数。这个方法没有返回值。\"></a>forEach();对数组中的每一项运行给定函数。这个方法没有返回值。</h3><h3 id=\"map-对数组中的每—项运行始定函数-返回每次函数调用的结果组成的数组。\"><a href=\"#map-对数组中的每—项运行始定函数-返回每次函数调用的结果组成的数组。\" class=\"headerlink\" title=\"map();对数组中的每—项运行始定函数,返回每次函数调用的结果组成的数组。\"></a>map();对数组中的每—项运行始定函数,返回每次函数调用的结果组成的数组。</h3><h3 id=\"arr-forEach-item-index-array-遍历，循环-类似jquery的each\"><a href=\"#arr-forEach-item-index-array-遍历，循环-类似jquery的each\" class=\"headerlink\" title=\"arr.forEach(item,index,array){} 遍历，循环 类似jquery的each\"></a>arr.forEach(item,index,array){} 遍历，循环 类似jquery的each</h3><h3 id=\"map方法-映射-用法和forEach类似\"><a href=\"#map方法-映射-用法和forEach类似\" class=\"headerlink\" title=\"map方法 映射 用法和forEach类似\"></a>map方法 映射 用法和forEach类似</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> men=[</span><br><span class=\"line\">    &#123;<span class=\"string\">'name'</span>:<span class=\"number\">1</span>,<span class=\"string\">'age'</span>:<span class=\"number\">12</span>&#125;,</span><br><span class=\"line\">    &#123;<span class=\"string\">'name'</span>:<span class=\"number\">2</span>,<span class=\"string\">'age'</span>:<span class=\"number\">22</span>&#125;,</span><br><span class=\"line\">    &#123;<span class=\"string\">'name'</span>:<span class=\"number\">3</span>,<span class=\"string\">'age'</span>:<span class=\"number\">33</span>&#125;</span><br><span class=\"line\">];</span><br><span class=\"line\">age=men.map(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">item</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> item.age;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"comment\">//[12, 22, 33]</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"arr-sort-排序\"><a href=\"#arr-sort-排序\" class=\"headerlink\" title=\"arr.sort 排序\"></a>arr.sort 排序</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr=[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">22</span>,<span class=\"number\">11</span>,<span class=\"number\">33</span>,<span class=\"number\">3</span>,<span class=\"number\">5</span>,<span class=\"number\">4</span>];</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr.sort()) <span class=\"comment\">// [1,11,2,22,3,33,4,5]</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>默认情况下sort方法是按ascii字母顺序排序的，而非我们认为是按数字大小排序    </p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = [<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">10</span>,<span class=\"number\">2</span>,<span class=\"number\">4</span>,<span class=\"number\">9</span>,<span class=\"number\">5</span>,<span class=\"number\">3</span>]</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">compare</span>(<span class=\"params\">v1,v2</span>) </span>&#123;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (v1&gt;v2) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">1</span></span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(v1&lt;v2) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">-1</span></span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (v1===v2)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> b = a.sort(compare)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(b) <span class=\"comment\">// [1, 1, 2, 3, 4, 5, 9, 10]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = [<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">10</span>,<span class=\"number\">2</span>,<span class=\"number\">4</span>,<span class=\"number\">9</span>,<span class=\"number\">5</span>,<span class=\"number\">3</span>]</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">compare</span>(<span class=\"params\">v1, v2</span>)</span>&#123;</span><br><span class=\"line\"><span class=\"keyword\">return</span> v2-v1</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> b = a.sort(compare)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(b) <span class=\"comment\">// [10, 9, 5, 4, 3, 2, 1, 1]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = [<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">10</span>,<span class=\"number\">2</span>,<span class=\"number\">4</span>,<span class=\"number\">9</span>,<span class=\"number\">5</span>,<span class=\"number\">3</span>]</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">compare</span>(<span class=\"params\">v1, v2</span>)</span>&#123;</span><br><span class=\"line\"><span class=\"keyword\">return</span> v1-v2</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> b = a.sort(compare)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(b) <span class=\"comment\">// [1, 1, 2, 3, 4, 5, 9, 10]</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"reduce-可以用来执行求数组所有值得总和\"><a href=\"#reduce-可以用来执行求数组所有值得总和\" class=\"headerlink\" title=\"reduce 可以用来执行求数组所有值得总和\"></a>reduce 可以用来执行求数组所有值得总和</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>]</span><br><span class=\"line\"><span class=\"keyword\">var</span> sum = a.reduce(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">prev, cur, index, array</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> prev + cur</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(sum) <span class=\"comment\">// 15</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>reduce和reduceRight的唯一区别是，一个是从第一个开始加，第二个是从最后一项开始计算加，其余无任何区别</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<h2 id=\"字符窜\"><a href=\"#字符窜\" class=\"headerlink\" title=\"字符窜\"></a>字符窜</h2><h3 id=\"substring-start开始位置的索引-end结束位置索引-截取的位置不包含结束位置的字符-只写一个参数表示从开始位置截取到最后\"><a href=\"#substring-start开始位置的索引-end结束位置索引-截取的位置不包含结束位置的字符-只写一个参数表示从开始位置截取到最后\" class=\"headerlink\" title=\"substring(start开始位置的索引,end结束位置索引) 截取的位置不包含结束位置的字符,只写一个参数表示从开始位置截取到最后\"></a>substring(start开始位置的索引,end结束位置索引) 截取的位置不包含结束位置的字符,只写一个参数表示从开始位置截取到最后</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str=<span class=\"string\">'abcdefg'</span>; </span><br><span class=\"line\">str.substring(<span class=\"number\">1</span>) <span class=\"comment\">//得到bcdefg  </span></span><br><span class=\"line\">str.substring(<span class=\"number\">1</span>,<span class=\"number\">3</span>) <span class=\"comment\">//得到bc</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>输入负值时将负值变为0，哪个较小作为开始位置</p>\n</blockquote>","more":"<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str=<span class=\"string\">'abcdefg'</span>;</span><br><span class=\"line\">str.substing(<span class=\"number\">-1</span>,<span class=\"number\">1</span>) =&gt;str.substring(<span class=\"number\">0</span>,<span class=\"number\">1</span>) <span class=\"comment\">//a</span></span><br><span class=\"line\">str.substring(<span class=\"number\">1</span>,<span class=\"number\">-2</span>) =&gt;str.substring(<span class=\"number\">0</span>,<span class=\"number\">1</span>) <span class=\"comment\">//a</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"2-slice-start开始位置索引，end结束位置索引-基本和substring相似-区别在参数为负数。\"><a href=\"#2-slice-start开始位置索引，end结束位置索引-基本和substring相似-区别在参数为负数。\" class=\"headerlink\" title=\"2.slice(start开始位置索引，end结束位置索引) 基本和substring相似,区别在参数为负数。\"></a>2.slice(start开始位置索引，end结束位置索引) 基本和substring相似,区别在参数为负数。</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str=<span class=\"string\">'abcdefg'</span>;</span><br><span class=\"line\">str.slice(<span class=\"number\">1</span>)  <span class=\"comment\">//bcdefg      </span></span><br><span class=\"line\">str.substring(<span class=\"number\">1</span>,<span class=\"number\">3</span>) <span class=\"comment\">// bc</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>输入负值时 值与字符串的长度相加</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str=<span class=\"string\">'abcdefg'</span>;</span><br><span class=\"line\">str.slice(<span class=\"number\">-1</span>) =&gt;str.slice(<span class=\"number\">6</span>) <span class=\"comment\">//g</span></span><br><span class=\"line\">str.slice(<span class=\"number\">1</span>,<span class=\"number\">-2</span>) =&gt;str.slice(<span class=\"number\">1</span>,<span class=\"number\">5</span>) <span class=\"comment\">//bcde</span></span><br><span class=\"line\">str.slice(<span class=\"number\">-2</span>,<span class=\"number\">-1</span>)=&gt;str.slice(<span class=\"number\">5</span>,<span class=\"number\">6</span>) <span class=\"comment\">//f</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>输入值绝对值大于字符串的长度时变为 0</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str=<span class=\"string\">'abcdefg'</span>;</span><br><span class=\"line\">str.slice(<span class=\"number\">-22</span>) =&gt;str.substring(<span class=\"number\">0</span>) <span class=\"comment\">//abcdefg</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>第二个参数绝对值大于字符串的长度时，返回’’</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str=<span class=\"string\">'abcdefg'</span>;</span><br><span class=\"line\">str.slice(<span class=\"number\">22</span>) =&gt;str.substring(<span class=\"number\">0</span>) <span class=\"comment\">//''</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"3-substr-start开始位置索引-end需要返回的字符个数\"><a href=\"#3-substr-start开始位置索引-end需要返回的字符个数\" class=\"headerlink\" title=\"3.substr(start开始位置索引,end需要返回的字符个数)\"></a>3.substr(start开始位置索引,end需要返回的字符个数)</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str=<span class=\"string\">'abcdefg'</span>;</span><br><span class=\"line\">str.substr(<span class=\"number\">1</span>) <span class=\"comment\">//bcdefg      </span></span><br><span class=\"line\">str.substr(<span class=\"number\">1</span>,<span class=\"number\">1</span>) <span class=\"comment\">//b</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>输入负值时 start参数与字符串的长度相加 ,end为负时参数变为0<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str=<span class=\"string\">'abcdefg'</span>;</span><br><span class=\"line\">str.substr(<span class=\"number\">-1</span>) =&gt;str.substr(<span class=\"number\">6</span>)<span class=\"comment\">//g        </span></span><br><span class=\"line\">str.substr(<span class=\"number\">-2</span>,<span class=\"number\">-3</span>) <span class=\"comment\">// ''</span></span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<h3 id=\"4-charAt-index-方法返回指定索引位置处的字符。如果超出有效范围-0与字符串长度减一-的索引值返回空字符串\"><a href=\"#4-charAt-index-方法返回指定索引位置处的字符。如果超出有效范围-0与字符串长度减一-的索引值返回空字符串\" class=\"headerlink\" title=\"4.charAt(index) 方法返回指定索引位置处的字符。如果超出有效范围(0与字符串长度减一)的索引值返回空字符串.\"></a>4.charAt(index) 方法返回指定索引位置处的字符。如果超出有效范围(0与字符串长度减一)的索引值返回空字符串.</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str=<span class=\"string\">'abcdefg'</span>;</span><br><span class=\"line\">str.charAt(<span class=\"number\">2</span>) <span class=\"comment\">// c</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"5-indexOf-string-返回String对象内第一次出现子字符串位置。如果没有找到子字符串，则返回-1。\"><a href=\"#5-indexOf-string-返回String对象内第一次出现子字符串位置。如果没有找到子字符串，则返回-1。\" class=\"headerlink\" title=\"5.indexOf(string) 返回String对象内第一次出现子字符串位置。如果没有找到子字符串，则返回-1。\"></a>5.indexOf(string) 返回String对象内第一次出现子字符串位置。如果没有找到子字符串，则返回-1。</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str=<span class=\"string\">'abcdefga'</span> </span><br><span class=\"line\">str.indexOf(<span class=\"string\">'a'</span>) <span class=\"comment\">// 0 str.indexOf('h') //-1</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"6-lastIndexOf-string-倒叙查找\"><a href=\"#6-lastIndexOf-string-倒叙查找\" class=\"headerlink\" title=\"6.lastIndexOf(string) 倒叙查找,\"></a>6.lastIndexOf(string) 倒叙查找,</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str=<span class=\"string\">'abcdefga'</span> </span><br><span class=\"line\">str.lastIndexOf(<span class=\"string\">'a'</span>) <span class=\"comment\">// 7</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"字符串转化数组\"><a href=\"#字符串转化数组\" class=\"headerlink\" title=\"字符串转化数组\"></a>字符串转化数组</h3><h4 id=\"split-str-将字符串以参数分割为数组\"><a href=\"#split-str-将字符串以参数分割为数组\" class=\"headerlink\" title=\"split(str) 将字符串以参数分割为数组\"></a>split(str) 将字符串以参数分割为数组</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str=<span class=\"string\">'abcadeafg'</span> </span><br><span class=\"line\">str.split(<span class=\"string\">'a'</span>) <span class=\"comment\">//[\"\", \"bc\", \"de\", \"fg\"]</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"1-toLowerCase方法返回一个字符串，该字符串中的字母被转换成小写。\"><a href=\"#1-toLowerCase方法返回一个字符串，该字符串中的字母被转换成小写。\" class=\"headerlink\" title=\"1.toLowerCase方法返回一个字符串，该字符串中的字母被转换成小写。\"></a>1.toLowerCase方法返回一个字符串，该字符串中的字母被转换成小写。</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"string\">'ASD'</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> b = a.toLowerCase()</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a,b) <span class=\"comment\">// ASD asd</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"2-toUpperCase方法返回一个字符串，该字符串中的所有字母都被转换为大写字母。\"><a href=\"#2-toUpperCase方法返回一个字符串，该字符串中的所有字母都被转换为大写字母。\" class=\"headerlink\" title=\"2.toUpperCase方法返回一个字符串，该字符串中的所有字母都被转换为大写字母。\"></a>2.toUpperCase方法返回一个字符串，该字符串中的所有字母都被转换为大写字母。</h3><h3 id=\"3-match-–-方法可在字符串内检索指定的值，或找到一个或多个正则表达式的匹配\"><a href=\"#3-match-–-方法可在字符串内检索指定的值，或找到一个或多个正则表达式的匹配\" class=\"headerlink\" title=\"3.match() – 方法可在字符串内检索指定的值，或找到一个或多个正则表达式的匹配\"></a>3.match() – 方法可在字符串内检索指定的值，或找到一个或多个正则表达式的匹配</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str=<span class=\"string\">\"Hello world!\"</span></span><br><span class=\"line\">str.match(<span class=\"string\">\"world\"</span>)</span><br><span class=\"line\">str.match(<span class=\"string\">\"World\"</span>)</span><br><span class=\"line\">str.match(<span class=\"string\">\"worlld\"</span>)</span><br><span class=\"line\">str.match(<span class=\"string\">\"world!\"</span>)</span><br><span class=\"line\"><span class=\"comment\">// ['world'] null null ['world!']</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str=<span class=\"string\">\"1 plus 2 equal 3\"</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> b = str.match(<span class=\"regexp\">/\\d+/g</span>)</span><br><span class=\"line\"><span class=\"comment\">// [\"1\", \"2\", \"3\"]</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"4-search-方法返回与正则表达式查找内容匹配的第一个字符串的位置。\"><a href=\"#4-search-方法返回与正则表达式查找内容匹配的第一个字符串的位置。\" class=\"headerlink\" title=\"4.search 方法返回与正则表达式查找内容匹配的第一个字符串的位置。\"></a>4.search 方法返回与正则表达式查找内容匹配的第一个字符串的位置。</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str=<span class=\"string\">\"Visit Runoob!\"</span>; </span><br><span class=\"line\"><span class=\"keyword\">var</span> n=str.search(<span class=\"string\">\"Runoob\"</span>);</span><br><span class=\"line\"><span class=\"comment\">// 6</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> str=<span class=\"string\">\"Mr. Blue has a blue house\"</span>;</span><br><span class=\"line\"><span class=\"built_in\">document</span>.write(str.search(<span class=\"regexp\">/blue/i</span>)); <span class=\"comment\">// 执行一次忽略大小写的检索:</span></span><br><span class=\"line\"><span class=\"comment\">// 4</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"5-replace-用来查找匹配一个正则表达式的字符串，然后使用新字符串代替匹配。\"><a href=\"#5-replace-用来查找匹配一个正则表达式的字符串，然后使用新字符串代替匹配。\" class=\"headerlink\" title=\"5.replace 用来查找匹配一个正则表达式的字符串，然后使用新字符串代替匹配。\"></a>5.replace 用来查找匹配一个正则表达式的字符串，然后使用新字符串代替匹配。</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> text = <span class=\"string\">\"javascript Tutorial\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> a = text.replace(<span class=\"regexp\">/javascript/i</span>, <span class=\"string\">\"JavaScript\"</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(text, a) <span class=\"comment\">// javascript Tutorial   JavaScript Tutorial</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"数组\"><a href=\"#数组\" class=\"headerlink\" title=\"数组\"></a>数组</h2><h3 id=\"1-slice-start-end-：方法可从已有数组中返回选定的元素，返回一个新数组，包含从start到end（不包含该元素）的数组元素\"><a href=\"#1-slice-start-end-：方法可从已有数组中返回选定的元素，返回一个新数组，包含从start到end（不包含该元素）的数组元素\" class=\"headerlink\" title=\"1.slice(start,end)：方法可从已有数组中返回选定的元素，返回一个新数组，包含从start到end（不包含该元素）的数组元素\"></a>1.slice(start,end)：方法可从已有数组中返回选定的元素，返回一个新数组，包含从start到end（不包含该元素）的数组元素</h3><blockquote>\n<p>该方法不会改变原有数组</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>]</span><br><span class=\"line\"><span class=\"keyword\">var</span> b = a.slice(<span class=\"number\">0</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a,b)</span><br><span class=\"line\"><span class=\"comment\">// [1, 2, 3, 4, 5] [1]</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>同时slice(start,end)可以作用于字符串的切割</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"string\">'asdzxc123'</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> b = a.slice(<span class=\"number\">0</span>,<span class=\"number\">3</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a, b)</span><br><span class=\"line\"><span class=\"comment\">// asdzxc123 asd</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"2-splice（index-howmany-item1-…itemX）：该方法向或者从数组中添加或者删除项目，返回被删除的项目。（该方法会改变原数组）\"><a href=\"#2-splice（index-howmany-item1-…itemX）：该方法向或者从数组中添加或者删除项目，返回被删除的项目。（该方法会改变原数组）\" class=\"headerlink\" title=\"2.splice（index,howmany,item1,…itemX）：该方法向或者从数组中添加或者删除项目，返回被删除的项目。（该方法会改变原数组）\"></a>2.splice（index,howmany,item1,…itemX）：该方法向或者从数组中添加或者删除项目，返回被删除的项目。（该方法会改变原数组）</h3><blockquote>\n<p>index参数：必须，整数，规定添加或者删除的位置，使用负数，从数组尾部规定位置。<br>howmany参数：必须，要删除的数量，如果为0，则不删除项目。<br>tem1,…itemX参数：可选，向数组添加的新项目。</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> c = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>]</span><br><span class=\"line\"><span class=\"keyword\">var</span> d = c.splice(<span class=\"number\">0</span>,<span class=\"number\">4</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(c,d)</span><br><span class=\"line\"><span class=\"comment\">// [5] [1,2,3,4]</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>]</span><br><span class=\"line\"><span class=\"keyword\">var</span> b = a.splice(<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"string\">'a'</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a,b)</span><br><span class=\"line\"><span class=\"comment\">// [1, \"a\", 2, 3, 4] []</span></span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>方法名</th>\n<th style=\"text-align:center\">功能</th>\n<th style=\"text-align:center\">demo</th>\n<th style=\"text-align:center\">结果</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>push</td>\n<td style=\"text-align:center\">添加到(最后) 返回添加后的数组</td>\n<td style=\"text-align:center\">var a = [1,2,3];var b = a.push(4);console.log(a,b)</td>\n<td style=\"text-align:center\">[1, 2, 3, 4] 4</td>\n</tr>\n<tr>\n<td>unshift</td>\n<td style=\"text-align:center\">添加到(最前面) 返回添加后的数组</td>\n<td style=\"text-align:center\">var a = [1,2,3];var b = a.unshift(4);console.log(a,b)</td>\n<td style=\"text-align:center\">[4, 1, 2, 3] 4</td>\n</tr>\n<tr>\n<td>pop</td>\n<td style=\"text-align:center\">删除(最后一项) 返回处理后的数组</td>\n<td style=\"text-align:center\">var a = [1,2,3];var b = a.pop();console.log(a,b)</td>\n<td style=\"text-align:center\">[1, 2] 3</td>\n</tr>\n<tr>\n<td>shift</td>\n<td style=\"text-align:center\">删除（从前面） 返回处理后的数组</td>\n<td style=\"text-align:center\">var a = [1,2,3];var b = a.shift();console.log(a,b)</td>\n<td style=\"text-align:center\">[2, 3] 1</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"数组转化字符窜\"><a href=\"#数组转化字符窜\" class=\"headerlink\" title=\"数组转化字符窜\"></a>数组转化字符窜</h2><h3 id=\"join-数组转化为字符串\"><a href=\"#join-数组转化为字符串\" class=\"headerlink\" title=\"join 数组转化为字符串\"></a>join 数组转化为字符串</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr=[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>]</span><br><span class=\"line\">str=arr.join(<span class=\"string\">'--'</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(str); <span class=\"comment\">// 1--2--3--4--5 以join内的参数切割数组</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr); <span class=\"comment\">// [1,2,3,4,5]  原数组未变</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"concat-数组合并\"><a href=\"#concat-数组合并\" class=\"headerlink\" title=\"concat 数组合并\"></a>concat 数组合并</h3><h3 id=\"every-对数组中的每一项运行给定函数-如果该函数对每一项都返回true-则返回true\"><a href=\"#every-对数组中的每一项运行给定函数-如果该函数对每一项都返回true-则返回true\" class=\"headerlink\" title=\"every();对数组中的每一项运行给定函数,如果该函数对每一项都返回true,则返回true\"></a>every();对数组中的每一项运行给定函数,如果该函数对每一项都返回true,则返回true</h3><h3 id=\"snome-对数组中的每一项运行给定函数-如果该函数对任一项返回-true-则返true\"><a href=\"#snome-对数组中的每一项运行给定函数-如果该函数对任一项返回-true-则返true\" class=\"headerlink\" title=\"snome ();对数组中的每一项运行给定函数,如果该函数对任一项返回 true,则返true\"></a>snome ();对数组中的每一项运行给定函数,如果该函数对任一项返回 true,则返true</h3><h3 id=\"filter-对数组组中的每一项运行给定函数-返回该函数会返回-true-的项组成的数组\"><a href=\"#filter-对数组组中的每一项运行给定函数-返回该函数会返回-true-的项组成的数组\" class=\"headerlink\" title=\"filter();对数组组中的每一项运行给定函数,返回该函数会返回 true 的项组成的数组\"></a>filter();对数组组中的每一项运行给定函数,返回该函数会返回 true 的项组成的数组</h3><h3 id=\"forEach-对数组中的每一项运行给定函数。这个方法没有返回值。\"><a href=\"#forEach-对数组中的每一项运行给定函数。这个方法没有返回值。\" class=\"headerlink\" title=\"forEach();对数组中的每一项运行给定函数。这个方法没有返回值。\"></a>forEach();对数组中的每一项运行给定函数。这个方法没有返回值。</h3><h3 id=\"map-对数组中的每—项运行始定函数-返回每次函数调用的结果组成的数组。\"><a href=\"#map-对数组中的每—项运行始定函数-返回每次函数调用的结果组成的数组。\" class=\"headerlink\" title=\"map();对数组中的每—项运行始定函数,返回每次函数调用的结果组成的数组。\"></a>map();对数组中的每—项运行始定函数,返回每次函数调用的结果组成的数组。</h3><h3 id=\"arr-forEach-item-index-array-遍历，循环-类似jquery的each\"><a href=\"#arr-forEach-item-index-array-遍历，循环-类似jquery的each\" class=\"headerlink\" title=\"arr.forEach(item,index,array){} 遍历，循环 类似jquery的each\"></a>arr.forEach(item,index,array){} 遍历，循环 类似jquery的each</h3><h3 id=\"map方法-映射-用法和forEach类似\"><a href=\"#map方法-映射-用法和forEach类似\" class=\"headerlink\" title=\"map方法 映射 用法和forEach类似\"></a>map方法 映射 用法和forEach类似</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> men=[</span><br><span class=\"line\">    &#123;<span class=\"string\">'name'</span>:<span class=\"number\">1</span>,<span class=\"string\">'age'</span>:<span class=\"number\">12</span>&#125;,</span><br><span class=\"line\">    &#123;<span class=\"string\">'name'</span>:<span class=\"number\">2</span>,<span class=\"string\">'age'</span>:<span class=\"number\">22</span>&#125;,</span><br><span class=\"line\">    &#123;<span class=\"string\">'name'</span>:<span class=\"number\">3</span>,<span class=\"string\">'age'</span>:<span class=\"number\">33</span>&#125;</span><br><span class=\"line\">];</span><br><span class=\"line\">age=men.map(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">item</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> item.age;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"comment\">//[12, 22, 33]</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"arr-sort-排序\"><a href=\"#arr-sort-排序\" class=\"headerlink\" title=\"arr.sort 排序\"></a>arr.sort 排序</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr=[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">22</span>,<span class=\"number\">11</span>,<span class=\"number\">33</span>,<span class=\"number\">3</span>,<span class=\"number\">5</span>,<span class=\"number\">4</span>];</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr.sort()) <span class=\"comment\">// [1,11,2,22,3,33,4,5]</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>默认情况下sort方法是按ascii字母顺序排序的，而非我们认为是按数字大小排序    </p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = [<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">10</span>,<span class=\"number\">2</span>,<span class=\"number\">4</span>,<span class=\"number\">9</span>,<span class=\"number\">5</span>,<span class=\"number\">3</span>]</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">compare</span>(<span class=\"params\">v1,v2</span>) </span>&#123;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (v1&gt;v2) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">1</span></span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(v1&lt;v2) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">-1</span></span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (v1===v2)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> b = a.sort(compare)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(b) <span class=\"comment\">// [1, 1, 2, 3, 4, 5, 9, 10]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = [<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">10</span>,<span class=\"number\">2</span>,<span class=\"number\">4</span>,<span class=\"number\">9</span>,<span class=\"number\">5</span>,<span class=\"number\">3</span>]</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">compare</span>(<span class=\"params\">v1, v2</span>)</span>&#123;</span><br><span class=\"line\"><span class=\"keyword\">return</span> v2-v1</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> b = a.sort(compare)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(b) <span class=\"comment\">// [10, 9, 5, 4, 3, 2, 1, 1]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = [<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">10</span>,<span class=\"number\">2</span>,<span class=\"number\">4</span>,<span class=\"number\">9</span>,<span class=\"number\">5</span>,<span class=\"number\">3</span>]</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">compare</span>(<span class=\"params\">v1, v2</span>)</span>&#123;</span><br><span class=\"line\"><span class=\"keyword\">return</span> v1-v2</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> b = a.sort(compare)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(b) <span class=\"comment\">// [1, 1, 2, 3, 4, 5, 9, 10]</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"reduce-可以用来执行求数组所有值得总和\"><a href=\"#reduce-可以用来执行求数组所有值得总和\" class=\"headerlink\" title=\"reduce 可以用来执行求数组所有值得总和\"></a>reduce 可以用来执行求数组所有值得总和</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>]</span><br><span class=\"line\"><span class=\"keyword\">var</span> sum = a.reduce(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">prev, cur, index, array</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> prev + cur</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(sum) <span class=\"comment\">// 15</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>reduce和reduceRight的唯一区别是，一个是从第一个开始加，第二个是从最后一项开始计算加，其余无任何区别</p>\n</blockquote>"}],"PostAsset":[],"PostCategory":[{"post_id":"ckdr00y4w0000e7zca6rqibe1","category_id":"ckdr00y510004e7zc71p4rl5r","_id":"ckdr00y5e000fe7zcabgpd0gm"},{"post_id":"ckdr00y59000ce7zc4gs5m74y","category_id":"ckdr00y510004e7zc71p4rl5r","_id":"ckdr00y5i000ke7zclvx61h9r"},{"post_id":"ckdr00y4z0002e7zcmclstp2n","category_id":"ckdr00y510004e7zc71p4rl5r","_id":"ckdr00y5k000oe7zcevflpo34"},{"post_id":"ckdr00y5c000de7zci40mwjak","category_id":"ckdr00y510004e7zc71p4rl5r","_id":"ckdr00y5l000re7zcmt5ovksq"},{"post_id":"ckdr00y530006e7zchmd9sq91","category_id":"ckdr00y5e000ee7zc6md9oyyl","_id":"ckdr00y5n000ve7zc70n4wl5n"},{"post_id":"ckdr00y5j000ne7zc188wl5cp","category_id":"ckdr00y5i000le7zcbwd68zba","_id":"ckdr00y5o000ye7zc6vmaxyfn"},{"post_id":"ckdr00y540007e7zcihyu4tyl","category_id":"ckdr00y5i000le7zcbwd68zba","_id":"ckdr00y5p0011e7zcwu0eg8hy"},{"post_id":"ckdr00y5k000qe7zcpv5oz83j","category_id":"ckdr00y5i000le7zcbwd68zba","_id":"ckdr00y5r0015e7zcc07dy467"},{"post_id":"ckdr00y5m000ue7zcvuuqcm40","category_id":"ckdr00y5i000le7zcbwd68zba","_id":"ckdr00y5t0018e7zct2vz2dbg"},{"post_id":"ckdr00y550008e7zcrvw09fff","category_id":"ckdr00y5e000ee7zc6md9oyyl","_id":"ckdr00y5u001be7zcy2bgs0q5"},{"post_id":"ckdr00y5p0010e7zct82lvu5f","category_id":"ckdr00y5i000le7zcbwd68zba","_id":"ckdr00y5v001ee7zc24f58ax9"},{"post_id":"ckdr00y5f000he7zcive6yzit","category_id":"ckdr00y5i000le7zcbwd68zba","_id":"ckdr00y5w001he7zcathddac4"},{"post_id":"ckdr00y5q0014e7zcl43qel6f","category_id":"ckdr00y510004e7zc71p4rl5r","_id":"ckdr00y5x001ke7zc0bofv01q"},{"post_id":"ckdr00y5s0017e7zcuqekn6dt","category_id":"ckdr00y5i000le7zcbwd68zba","_id":"ckdr00y5y001ne7zcenjhjyp3"},{"post_id":"ckdr00y5n000xe7zcvaml3ub8","category_id":"ckdr00y5s0016e7zcv3lqxtny","_id":"ckdr00y5z001qe7zc27qr2gvf"},{"post_id":"ckdr00y5t001ae7zcq290z4mn","category_id":"ckdr00y5i000le7zcbwd68zba","_id":"ckdr00y61001se7zctsbxhkqx"},{"post_id":"ckdr00y5u001de7zcis6do270","category_id":"ckdr00y5i000le7zcbwd68zba","_id":"ckdr00y62001we7zc4xapujps"},{"post_id":"ckdr00y5v001ge7zcolj1olsi","category_id":"ckdr00y5e000ee7zc6md9oyyl","_id":"ckdr00y63001ye7zc8h5xnaqx"},{"post_id":"ckdr00y5x001je7zczzr8xom6","category_id":"ckdr00y510004e7zc71p4rl5r","_id":"ckdr00y640021e7zclleearen"},{"post_id":"ckdr00y5y001me7zcie9z2hfp","category_id":"ckdr00y5i000le7zcbwd68zba","_id":"ckdr00y650024e7zc2ycr0ail"},{"post_id":"ckdr00y5z001pe7zc2un52hwy","category_id":"ckdr00y5i000le7zcbwd68zba","_id":"ckdr00y660028e7zcz34316la"},{"post_id":"ckdr00y60001re7zc9ongolhe","category_id":"ckdr00y510004e7zc71p4rl5r","_id":"ckdr00y67002be7zc2f9p3yhi"},{"post_id":"ckdr00y61001ve7zcqt93bzjm","category_id":"ckdr00y510004e7zc71p4rl5r","_id":"ckdr00y68002ee7zcbw0tdf18"},{"post_id":"ckdr00y62001xe7zcthdif5xd","category_id":"ckdr00y5e000ee7zc6md9oyyl","_id":"ckdr00y69002he7zccrch7too"},{"post_id":"ckdr00y630020e7zcgh7joc3u","category_id":"ckdr00y5i000le7zcbwd68zba","_id":"ckdr00y6a002je7zcj41y6j2l"},{"post_id":"ckdr00y640023e7zczjnsnhqf","category_id":"ckdr00y510004e7zc71p4rl5r","_id":"ckdr00y6c002ne7zcwg1j9c36"},{"post_id":"ckdr00y660027e7zc4jvl7y5y","category_id":"ckdr00y5i000le7zcbwd68zba","_id":"ckdr00y6d002pe7zctjjdn1jn"},{"post_id":"ckdr00y67002ae7zcwhjg8wis","category_id":"ckdr00y510004e7zc71p4rl5r","_id":"ckdr00y6e002ue7zcligusbnw"},{"post_id":"ckdr00y68002de7zc97kqiwwe","category_id":"ckdr00y510004e7zc71p4rl5r","_id":"ckdr00y6f002ve7zchpwpm23f"},{"post_id":"ckdr00y69002ge7zcugnqmo0q","category_id":"ckdr00y510004e7zc71p4rl5r","_id":"ckdr00y6f002ye7zcx5hcefej"},{"post_id":"ckdr00y6a002ie7zcpvud4rqm","category_id":"ckdr00y5i000le7zcbwd68zba","_id":"ckdr00y6g0030e7zcloengk8h"},{"post_id":"ckdr00y6e002te7zcgzp29c1a","category_id":"ckdr00y510004e7zc71p4rl5r","_id":"ckdr00y6g0032e7zc0dl0eand"},{"post_id":"ckdr00y6b002me7zc5qnou7xj","category_id":"ckdr00y6d002re7zcuwckoykk","_id":"ckdr00y6g0034e7zc375nlzx8"},{"post_id":"ckdr00y6c002oe7zcdhbe1jc7","category_id":"ckdr00y6d002re7zcuwckoykk","_id":"ckdr00y6h0036e7zcd68ijb6t"}],"PostTag":[{"post_id":"ckdr00y4w0000e7zca6rqibe1","tag_id":"ckdr00y530005e7zcp09t5x3m","_id":"ckdr00y59000be7zc8ptedbb4"},{"post_id":"ckdr00y4z0002e7zcmclstp2n","tag_id":"ckdr00y56000ae7zc8tmb86xt","_id":"ckdr00y5g000ie7zctxnry47k"},{"post_id":"ckdr00y530006e7zchmd9sq91","tag_id":"ckdr00y5f000ge7zc46r2tl1k","_id":"ckdr00y5k000pe7zcmxz28p4n"},{"post_id":"ckdr00y540007e7zcihyu4tyl","tag_id":"ckdr00y5i000me7zceq8fkxoe","_id":"ckdr00y5n000we7zc9scr2bs3"},{"post_id":"ckdr00y550008e7zcrvw09fff","tag_id":"ckdr00y5m000te7zcsjxwyayw","_id":"ckdr00y5q0013e7zcwb6p5l3v"},{"post_id":"ckdr00y59000ce7zc4gs5m74y","tag_id":"ckdr00y5q0012e7zcj0eal93u","_id":"ckdr00y5u001ce7zcgq0zzxyq"},{"post_id":"ckdr00y5c000de7zci40mwjak","tag_id":"ckdr00y5t0019e7zcp511plkx","_id":"ckdr00y5w001ie7zc396hxi28"},{"post_id":"ckdr00y5f000he7zcive6yzit","tag_id":"ckdr00y5v001fe7zclgbo4cf2","_id":"ckdr00y5z001oe7zcpak1mbc1"},{"post_id":"ckdr00y5h000je7zc907iawi0","tag_id":"ckdr00y5x001le7zccsi2uf3i","_id":"ckdr00y61001ue7zc836x3bds"},{"post_id":"ckdr00y5j000ne7zc188wl5cp","tag_id":"ckdr00y61001te7zc8pn98f7n","_id":"ckdr00y640022e7zcuiimthyc"},{"post_id":"ckdr00y62001xe7zcthdif5xd","tag_id":"ckdr00y5m000te7zcsjxwyayw","_id":"ckdr00y650025e7zcdwiwgbu3"},{"post_id":"ckdr00y5k000qe7zcpv5oz83j","tag_id":"ckdr00y63001ze7zcv9n8ywz3","_id":"ckdr00y660029e7zccx2yox0x"},{"post_id":"ckdr00y5m000ue7zcvuuqcm40","tag_id":"ckdr00y650026e7zcbr2axs5b","_id":"ckdr00y69002fe7zcoco34znf"},{"post_id":"ckdr00y5n000xe7zcvaml3ub8","tag_id":"ckdr00y68002ce7zcjowhvmuv","_id":"ckdr00y6b002le7zcch0kwh2n"},{"post_id":"ckdr00y5p0010e7zct82lvu5f","tag_id":"ckdr00y61001te7zc8pn98f7n","_id":"ckdr00y6d002se7zcii815nie"},{"post_id":"ckdr00y5q0014e7zcl43qel6f","tag_id":"ckdr00y6d002qe7zcpygwpu8p","_id":"ckdr00y6f002ze7zc4ai4ohdm"},{"post_id":"ckdr00y5s0017e7zcuqekn6dt","tag_id":"ckdr00y6f002we7zc5v3sx56y","_id":"ckdr00y6g0033e7zcitf6swcs"},{"post_id":"ckdr00y5t001ae7zcq290z4mn","tag_id":"ckdr00y61001te7zc8pn98f7n","_id":"ckdr00y6h0037e7zcs47rcjsn"},{"post_id":"ckdr00y5u001de7zcis6do270","tag_id":"ckdr00y6h0035e7zchibz8rty","_id":"ckdr00y6h0039e7zc14hcldpt"},{"post_id":"ckdr00y5v001ge7zcolj1olsi","tag_id":"ckdr00y6h0038e7zcdkffok40","_id":"ckdr00y6i003be7zcsgovo8jf"},{"post_id":"ckdr00y5x001je7zczzr8xom6","tag_id":"ckdr00y6i003ae7zcp14mbbtp","_id":"ckdr00y6i003de7zc24paps8x"},{"post_id":"ckdr00y5y001me7zcie9z2hfp","tag_id":"ckdr00y6i003ce7zcvtogg94y","_id":"ckdr00y6j003fe7zctqo6p85v"},{"post_id":"ckdr00y5z001pe7zc2un52hwy","tag_id":"ckdr00y6i003ee7zc8qxrw72u","_id":"ckdr00y6k003he7zcgsirrq8f"},{"post_id":"ckdr00y60001re7zc9ongolhe","tag_id":"ckdr00y6j003ge7zcbodxew0t","_id":"ckdr00y6k003je7zc0d8wezi1"},{"post_id":"ckdr00y61001ve7zcqt93bzjm","tag_id":"ckdr00y6k003ie7zc3zc7dzbs","_id":"ckdr00y6k003le7zcupzfof30"},{"post_id":"ckdr00y630020e7zcgh7joc3u","tag_id":"ckdr00y6k003ke7zcrp2e72c1","_id":"ckdr00y6l003ne7zcjvr196p7"},{"post_id":"ckdr00y660027e7zc4jvl7y5y","tag_id":"ckdr00y6k003me7zc3sorn3wb","_id":"ckdr00y6l003pe7zc5hvmapgg"},{"post_id":"ckdr00y67002ae7zcwhjg8wis","tag_id":"ckdr00y6l003oe7zcp7wxstwj","_id":"ckdr00y6l003re7zcfryrwz9p"},{"post_id":"ckdr00y68002de7zc97kqiwwe","tag_id":"ckdr00y6l003qe7zcka9rv9s9","_id":"ckdr00y6m003te7zcosovhjhv"},{"post_id":"ckdr00y69002ge7zcugnqmo0q","tag_id":"ckdr00y6f002we7zc5v3sx56y","_id":"ckdr00y6m003ue7zclzrnxa8v"}],"Tag":[{"name":"ES6 Iterators","_id":"ckdr00y530005e7zcp09t5x3m"},{"name":"js","_id":"ckdr00y56000ae7zc8tmb86xt"},{"name":"css3 clip","_id":"ckdr00y5f000ge7zc46r2tl1k"},{"name":"vue react webpack","_id":"ckdr00y5i000me7zceq8fkxoe"},{"name":"css3","_id":"ckdr00y5m000te7zcsjxwyayw"},{"name":"深浅拷贝","_id":"ckdr00y5q0012e7zcj0eal93u"},{"name":"focus preventScroll 滚动","_id":"ckdr00y5t0019e7zcp511plkx"},{"name":"GitBook","_id":"ckdr00y5v001fe7zclgbo4cf2"},{"name":"vue js","_id":"ckdr00y5x001le7zccsi2uf3i"},{"name":"git","_id":"ckdr00y61001te7zc8pn98f7n"},{"name":"react","_id":"ckdr00y63001ze7zcv9n8ywz3"},{"name":"github hexo","_id":"ckdr00y650026e7zcbr2axs5b"},{"name":"html ruby","_id":"ckdr00y68002ce7zcjowhvmuv"},{"name":"js replace","_id":"ckdr00y6d002qe7zcpygwpu8p"},{"name":"微信小程序 canvas","_id":"ckdr00y6f002we7zc5v3sx56y"},{"name":"npm webpack es6","_id":"ckdr00y6h0035e7zchibz8rty"},{"name":"css","_id":"ckdr00y6h0038e7zcdkffok40"},{"name":"js import require","_id":"ckdr00y6i003ae7zcp14mbbtp"},{"name":"vue 组件","_id":"ckdr00y6i003ce7zcvtogg94y"},{"name":"js vConsole","_id":"ckdr00y6i003ee7zc8qxrw72u"},{"name":"node","_id":"ckdr00y6j003ge7zcbodxew0t"},{"name":"js 正则","_id":"ckdr00y6k003ie7zc3zc7dzbs"},{"name":"vue router","_id":"ckdr00y6k003ke7zcrp2e72c1"},{"name":"vuex","_id":"ckdr00y6k003me7zc3sorn3wb"},{"name":"box-shadow","_id":"ckdr00y6l003oe7zcp7wxstwj"},{"name":"小程序 css2 git","_id":"ckdr00y6l003qe7zcka9rv9s9"}]}}